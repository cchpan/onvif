/* soapH.h
   Generated by gSOAP 2.8.28 from onvif.h

gSOAP XML Web services tools
Copyright (C) 2000-2016, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);
SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fbase(int, int);
SOAP_FMAC3 void SOAP_FMAC4 soap_finsert(struct soap*, int, int, void*, size_t, const void*, void**);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( ((data) ? (soap_default_byte(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_byte(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IANA_IfTypes
#define SOAP_TYPE_tt__IANA_IfTypes (896)
#endif

#define soap_default_tt__IANA_IfTypes(soap, a) soap_default_int(soap, a)


#define soap_tt__IANA_IfTypes2s soap_int2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IANA_IfTypes(struct soap*, const char*, int, const int *, const char*);

#define soap_s2tt__IANA_IfTypes soap_s2int

SOAP_FMAC3 int * SOAP_FMAC4 soap_in_tt__IANA_IfTypes(struct soap*, const char*, int *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__IANA_IfTypes(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_tt__IANA_IfTypes
#define soap_write_tt__IANA_IfTypes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__IANA_IfTypes(soap, data, "tt:IANA-IfTypes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_tt__IANA_IfTypes(struct soap*, int *, const char*, const char*);

#ifndef soap_read_tt__IANA_IfTypes
#define soap_read_tt__IANA_IfTypes(soap, data) ( ((data) ? (soap_default_tt__IANA_IfTypes(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IANA_IfTypes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( ((data) ? (soap_default_int(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_int(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__duration
#define SOAP_TYPE_xsd__duration (70)
#endif
SOAP_FMAC1 void SOAP_FMAC2 soap_default_xsd__duration(struct soap*, LONG64 *);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_xsd__duration2s(struct soap*, LONG64);
SOAP_FMAC1 int SOAP_FMAC2 soap_out_xsd__duration(struct soap*, const char*, int, const LONG64 *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2xsd__duration(struct soap*, const char*, LONG64 *);
SOAP_FMAC1 LONG64 * SOAP_FMAC2 soap_in_xsd__duration(struct soap*, const char*, LONG64 *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__duration(struct soap*, const LONG64 *, const char*, const char*);

#ifndef soap_write_xsd__duration
#define soap_write_xsd__duration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_xsd__duration(soap, data, "xsd:duration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 LONG64 * SOAP_FMAC4 soap_get_xsd__duration(struct soap*, LONG64 *, const char*, const char*);

#ifndef soap_read_xsd__duration
#define soap_read_xsd__duration(soap, data) ( ((data) ? (soap_default_xsd__duration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__duration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_float
#define SOAP_TYPE_float (978)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_float(struct soap*, float *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_float(struct soap*, const char*, int, const float *, const char*);
SOAP_FMAC3 float * SOAP_FMAC4 soap_in_float(struct soap*, const char*, float *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_float(struct soap*, const float *, const char*, const char*);

#ifndef soap_write_float
#define soap_write_float(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_float(soap, data, "float", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 float * SOAP_FMAC4 soap_get_float(struct soap*, float *, const char*, const char*);

#ifndef soap_read_float
#define soap_read_float(soap, data) ( ((data) ? (soap_default_float(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_float(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_double
#define SOAP_TYPE_double (1238)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_double(struct soap*, double *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_double(struct soap*, const char*, double *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_double(struct soap*, const double *, const char*, const char*);

#ifndef soap_write_double
#define soap_write_double(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_double(soap, data, "double", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 double * SOAP_FMAC4 soap_get_double(struct soap*, double *, const char*, const char*);

#ifndef soap_read_double
#define soap_read_double(soap, data) ( ((data) ? (soap_default_double(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_double(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_unsignedByte
#define SOAP_TYPE_unsignedByte (13)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedByte(struct soap*, unsigned char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_unsignedByte(struct soap*, const char*, unsigned char *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#ifndef soap_write_unsignedByte
#define soap_write_unsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_unsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_unsignedByte(struct soap*, unsigned char *, const char*, const char*);

#ifndef soap_read_unsignedByte
#define soap_read_unsignedByte(soap, data) ( ((data) ? (soap_default_unsignedByte(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_unsignedByte(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_unsignedInt
#define SOAP_TYPE_unsignedInt (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedInt(struct soap*, unsigned int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_write_unsignedInt
#define soap_write_unsignedInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_unsignedInt(soap, data, "unsignedInt", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

#ifndef soap_read_unsignedInt
#define soap_read_unsignedInt(soap, data) ( ((data) ? (soap_default_unsignedInt(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_unsignedInt(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

/* _wsa5__RetryAfter is a typedef synonym for ULONG64 */

#ifndef SOAP_TYPE__wsa5__RetryAfter
#define SOAP_TYPE__wsa5__RetryAfter (39)
#endif

#define soap_default__wsa5__RetryAfter(soap, a) soap_default_ULONG64(soap, a)


#define soap__wsa5__RetryAfter2s soap_ULONG642s


#define soap_out__wsa5__RetryAfter soap_out_ULONG64


#define soap_s2_wsa5__RetryAfter soap_s2ULONG64


#define soap_in__wsa5__RetryAfter soap_in_ULONG64


#define soap_put__wsa5__RetryAfter soap_put_ULONG64


#define soap_write__wsa5__RetryAfter soap_write_ULONG64


#define soap_get__wsa5__RetryAfter soap_get_ULONG64


#define soap_read__wsa5__RetryAfter soap_read_ULONG64


#ifndef SOAP_TYPE_ULONG64
#define SOAP_TYPE_ULONG64 (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ULONG64(struct soap*, ULONG64 *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ULONG64(struct soap*, const char*, int, const ULONG64 *, const char*);
SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_in_ULONG64(struct soap*, const char*, ULONG64 *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_ULONG64(struct soap*, const ULONG64 *, const char*, const char*);

#ifndef soap_write_ULONG64
#define soap_write_ULONG64(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_ULONG64(soap, data, "unsignedLong", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 ULONG64 * SOAP_FMAC4 soap_get_ULONG64(struct soap*, ULONG64 *, const char*, const char*);

#ifndef soap_read_ULONG64
#define soap_read_ULONG64(soap, data) ( ((data) ? (soap_default_ULONG64(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_ULONG64(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_dateTime
#define SOAP_TYPE_dateTime (1065)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_dateTime(struct soap*, time_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_dateTime(struct soap*, const char*, int, const time_t *, const char*);
SOAP_FMAC3 time_t * SOAP_FMAC4 soap_in_dateTime(struct soap*, const char*, time_t *, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_dateTime(struct soap*, const time_t *, const char*, const char*);

#ifndef soap_write_dateTime
#define soap_write_dateTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_dateTime(soap, data, "dateTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 time_t * SOAP_FMAC4 soap_get_dateTime(struct soap*, time_t *, const char*, const char*);

#ifndef soap_read_dateTime
#define soap_read_dateTime(soap, data) ( ((data) ? (soap_default_dateTime(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_dateTime(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (968)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

#ifndef soap_write_bool
#define soap_write_bool(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_bool(soap, data, "boolean", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

#ifndef soap_read_bool
#define soap_read_bool(soap, data) ( ((data) ? (soap_default_bool(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_bool(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__MoveStatus
#define SOAP_TYPE_tt__MoveStatus (959)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__MoveStatus(struct soap*, enum tt__MoveStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MoveStatus(struct soap*, const char*, int, const enum tt__MoveStatus *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__MoveStatus2s(struct soap*, enum tt__MoveStatus);
SOAP_FMAC3 enum tt__MoveStatus * SOAP_FMAC4 soap_in_tt__MoveStatus(struct soap*, const char*, enum tt__MoveStatus *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__MoveStatus(struct soap*, const char*, enum tt__MoveStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__MoveStatus(struct soap*, const enum tt__MoveStatus *, const char*, const char*);

#ifndef soap_write_tt__MoveStatus
#define soap_write_tt__MoveStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__MoveStatus(soap, data, "tt:MoveStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__MoveStatus * SOAP_FMAC4 soap_get_tt__MoveStatus(struct soap*, enum tt__MoveStatus *, const char*, const char*);

#ifndef soap_read_tt__MoveStatus
#define soap_read_tt__MoveStatus(soap, data) ( ((data) ? (soap_default_tt__MoveStatus(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MoveStatus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__OSDType
#define SOAP_TYPE_tt__OSDType (958)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__OSDType(struct soap*, enum tt__OSDType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDType(struct soap*, const char*, int, const enum tt__OSDType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__OSDType2s(struct soap*, enum tt__OSDType);
SOAP_FMAC3 enum tt__OSDType * SOAP_FMAC4 soap_in_tt__OSDType(struct soap*, const char*, enum tt__OSDType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__OSDType(struct soap*, const char*, enum tt__OSDType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__OSDType(struct soap*, const enum tt__OSDType *, const char*, const char*);

#ifndef soap_write_tt__OSDType
#define soap_write_tt__OSDType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__OSDType(soap, data, "tt:OSDType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__OSDType * SOAP_FMAC4 soap_get_tt__OSDType(struct soap*, enum tt__OSDType *, const char*, const char*);

#ifndef soap_read_tt__OSDType
#define soap_read_tt__OSDType(soap, data) ( ((data) ? (soap_default_tt__OSDType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__OSDType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ModeOfOperation
#define SOAP_TYPE_tt__ModeOfOperation (956)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__ModeOfOperation(struct soap*, enum tt__ModeOfOperation *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ModeOfOperation(struct soap*, const char*, int, const enum tt__ModeOfOperation *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__ModeOfOperation2s(struct soap*, enum tt__ModeOfOperation);
SOAP_FMAC3 enum tt__ModeOfOperation * SOAP_FMAC4 soap_in_tt__ModeOfOperation(struct soap*, const char*, enum tt__ModeOfOperation *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__ModeOfOperation(struct soap*, const char*, enum tt__ModeOfOperation *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ModeOfOperation(struct soap*, const enum tt__ModeOfOperation *, const char*, const char*);

#ifndef soap_write_tt__ModeOfOperation
#define soap_write_tt__ModeOfOperation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__ModeOfOperation(soap, data, "tt:ModeOfOperation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__ModeOfOperation * SOAP_FMAC4 soap_get_tt__ModeOfOperation(struct soap*, enum tt__ModeOfOperation *, const char*, const char*);

#ifndef soap_read_tt__ModeOfOperation
#define soap_read_tt__ModeOfOperation(soap, data) ( ((data) ? (soap_default_tt__ModeOfOperation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ModeOfOperation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__TrackType
#define SOAP_TYPE_tt__TrackType (953)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__TrackType(struct soap*, enum tt__TrackType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__TrackType(struct soap*, const char*, int, const enum tt__TrackType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__TrackType2s(struct soap*, enum tt__TrackType);
SOAP_FMAC3 enum tt__TrackType * SOAP_FMAC4 soap_in_tt__TrackType(struct soap*, const char*, enum tt__TrackType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__TrackType(struct soap*, const char*, enum tt__TrackType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__TrackType(struct soap*, const enum tt__TrackType *, const char*, const char*);

#ifndef soap_write_tt__TrackType
#define soap_write_tt__TrackType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__TrackType(soap, data, "tt:TrackType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__TrackType * SOAP_FMAC4 soap_get_tt__TrackType(struct soap*, enum tt__TrackType *, const char*, const char*);

#ifndef soap_read_tt__TrackType
#define soap_read_tt__TrackType(soap, data) ( ((data) ? (soap_default_tt__TrackType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__TrackType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RecordingStatus
#define SOAP_TYPE_tt__RecordingStatus (952)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__RecordingStatus(struct soap*, enum tt__RecordingStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingStatus(struct soap*, const char*, int, const enum tt__RecordingStatus *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__RecordingStatus2s(struct soap*, enum tt__RecordingStatus);
SOAP_FMAC3 enum tt__RecordingStatus * SOAP_FMAC4 soap_in_tt__RecordingStatus(struct soap*, const char*, enum tt__RecordingStatus *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__RecordingStatus(struct soap*, const char*, enum tt__RecordingStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__RecordingStatus(struct soap*, const enum tt__RecordingStatus *, const char*, const char*);

#ifndef soap_write_tt__RecordingStatus
#define soap_write_tt__RecordingStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__RecordingStatus(soap, data, "tt:RecordingStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__RecordingStatus * SOAP_FMAC4 soap_get_tt__RecordingStatus(struct soap*, enum tt__RecordingStatus *, const char*, const char*);

#ifndef soap_read_tt__RecordingStatus
#define soap_read_tt__RecordingStatus(soap, data) ( ((data) ? (soap_default_tt__RecordingStatus(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RecordingStatus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SearchState
#define SOAP_TYPE_tt__SearchState (951)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__SearchState(struct soap*, enum tt__SearchState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SearchState(struct soap*, const char*, int, const enum tt__SearchState *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__SearchState2s(struct soap*, enum tt__SearchState);
SOAP_FMAC3 enum tt__SearchState * SOAP_FMAC4 soap_in_tt__SearchState(struct soap*, const char*, enum tt__SearchState *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__SearchState(struct soap*, const char*, enum tt__SearchState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__SearchState(struct soap*, const enum tt__SearchState *, const char*, const char*);

#ifndef soap_write_tt__SearchState
#define soap_write_tt__SearchState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__SearchState(soap, data, "tt:SearchState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__SearchState * SOAP_FMAC4 soap_get_tt__SearchState(struct soap*, enum tt__SearchState *, const char*, const char*);

#ifndef soap_read_tt__SearchState
#define soap_read_tt__SearchState(soap, data) ( ((data) ? (soap_default_tt__SearchState(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__SearchState(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ReceiverState
#define SOAP_TYPE_tt__ReceiverState (948)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__ReceiverState(struct soap*, enum tt__ReceiverState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ReceiverState(struct soap*, const char*, int, const enum tt__ReceiverState *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__ReceiverState2s(struct soap*, enum tt__ReceiverState);
SOAP_FMAC3 enum tt__ReceiverState * SOAP_FMAC4 soap_in_tt__ReceiverState(struct soap*, const char*, enum tt__ReceiverState *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__ReceiverState(struct soap*, const char*, enum tt__ReceiverState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ReceiverState(struct soap*, const enum tt__ReceiverState *, const char*, const char*);

#ifndef soap_write_tt__ReceiverState
#define soap_write_tt__ReceiverState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__ReceiverState(soap, data, "tt:ReceiverState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__ReceiverState * SOAP_FMAC4 soap_get_tt__ReceiverState(struct soap*, enum tt__ReceiverState *, const char*, const char*);

#ifndef soap_read_tt__ReceiverState
#define soap_read_tt__ReceiverState(soap, data) ( ((data) ? (soap_default_tt__ReceiverState(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ReceiverState(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ReceiverMode
#define SOAP_TYPE_tt__ReceiverMode (947)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__ReceiverMode(struct soap*, enum tt__ReceiverMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ReceiverMode(struct soap*, const char*, int, const enum tt__ReceiverMode *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__ReceiverMode2s(struct soap*, enum tt__ReceiverMode);
SOAP_FMAC3 enum tt__ReceiverMode * SOAP_FMAC4 soap_in_tt__ReceiverMode(struct soap*, const char*, enum tt__ReceiverMode *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__ReceiverMode(struct soap*, const char*, enum tt__ReceiverMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ReceiverMode(struct soap*, const enum tt__ReceiverMode *, const char*, const char*);

#ifndef soap_write_tt__ReceiverMode
#define soap_write_tt__ReceiverMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__ReceiverMode(soap, data, "tt:ReceiverMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__ReceiverMode * SOAP_FMAC4 soap_get_tt__ReceiverMode(struct soap*, enum tt__ReceiverMode *, const char*, const char*);

#ifndef soap_read_tt__ReceiverMode
#define soap_read_tt__ReceiverMode(soap, data) ( ((data) ? (soap_default_tt__ReceiverMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ReceiverMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Direction
#define SOAP_TYPE_tt__Direction (946)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__Direction(struct soap*, enum tt__Direction *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Direction(struct soap*, const char*, int, const enum tt__Direction *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__Direction2s(struct soap*, enum tt__Direction);
SOAP_FMAC3 enum tt__Direction * SOAP_FMAC4 soap_in_tt__Direction(struct soap*, const char*, enum tt__Direction *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__Direction(struct soap*, const char*, enum tt__Direction *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Direction(struct soap*, const enum tt__Direction *, const char*, const char*);

#ifndef soap_write_tt__Direction
#define soap_write_tt__Direction(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__Direction(soap, data, "tt:Direction", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__Direction * SOAP_FMAC4 soap_get_tt__Direction(struct soap*, enum tt__Direction *, const char*, const char*);

#ifndef soap_read_tt__Direction
#define soap_read_tt__Direction(soap, data) ( ((data) ? (soap_default_tt__Direction(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Direction(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PropertyOperation
#define SOAP_TYPE_tt__PropertyOperation (945)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__PropertyOperation(struct soap*, enum tt__PropertyOperation *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PropertyOperation(struct soap*, const char*, int, const enum tt__PropertyOperation *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__PropertyOperation2s(struct soap*, enum tt__PropertyOperation);
SOAP_FMAC3 enum tt__PropertyOperation * SOAP_FMAC4 soap_in_tt__PropertyOperation(struct soap*, const char*, enum tt__PropertyOperation *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__PropertyOperation(struct soap*, const char*, enum tt__PropertyOperation *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__PropertyOperation(struct soap*, const enum tt__PropertyOperation *, const char*, const char*);

#ifndef soap_write_tt__PropertyOperation
#define soap_write_tt__PropertyOperation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__PropertyOperation(soap, data, "tt:PropertyOperation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__PropertyOperation * SOAP_FMAC4 soap_get_tt__PropertyOperation(struct soap*, enum tt__PropertyOperation *, const char*, const char*);

#ifndef soap_read_tt__PropertyOperation
#define soap_read_tt__PropertyOperation(soap, data) ( ((data) ? (soap_default_tt__PropertyOperation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PropertyOperation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__DefoggingMode
#define SOAP_TYPE_tt__DefoggingMode (943)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__DefoggingMode(struct soap*, enum tt__DefoggingMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DefoggingMode(struct soap*, const char*, int, const enum tt__DefoggingMode *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__DefoggingMode2s(struct soap*, enum tt__DefoggingMode);
SOAP_FMAC3 enum tt__DefoggingMode * SOAP_FMAC4 soap_in_tt__DefoggingMode(struct soap*, const char*, enum tt__DefoggingMode *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__DefoggingMode(struct soap*, const char*, enum tt__DefoggingMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__DefoggingMode(struct soap*, const enum tt__DefoggingMode *, const char*, const char*);

#ifndef soap_write_tt__DefoggingMode
#define soap_write_tt__DefoggingMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__DefoggingMode(soap, data, "tt:DefoggingMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__DefoggingMode * SOAP_FMAC4 soap_get_tt__DefoggingMode(struct soap*, enum tt__DefoggingMode *, const char*, const char*);

#ifndef soap_read_tt__DefoggingMode
#define soap_read_tt__DefoggingMode(soap, data) ( ((data) ? (soap_default_tt__DefoggingMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__DefoggingMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ToneCompensationMode
#define SOAP_TYPE_tt__ToneCompensationMode (942)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__ToneCompensationMode(struct soap*, enum tt__ToneCompensationMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ToneCompensationMode(struct soap*, const char*, int, const enum tt__ToneCompensationMode *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__ToneCompensationMode2s(struct soap*, enum tt__ToneCompensationMode);
SOAP_FMAC3 enum tt__ToneCompensationMode * SOAP_FMAC4 soap_in_tt__ToneCompensationMode(struct soap*, const char*, enum tt__ToneCompensationMode *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__ToneCompensationMode(struct soap*, const char*, enum tt__ToneCompensationMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ToneCompensationMode(struct soap*, const enum tt__ToneCompensationMode *, const char*, const char*);

#ifndef soap_write_tt__ToneCompensationMode
#define soap_write_tt__ToneCompensationMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__ToneCompensationMode(soap, data, "tt:ToneCompensationMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__ToneCompensationMode * SOAP_FMAC4 soap_get_tt__ToneCompensationMode(struct soap*, enum tt__ToneCompensationMode *, const char*, const char*);

#ifndef soap_read_tt__ToneCompensationMode
#define soap_read_tt__ToneCompensationMode(soap, data) ( ((data) ? (soap_default_tt__ToneCompensationMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ToneCompensationMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IrCutFilterAutoBoundaryType
#define SOAP_TYPE_tt__IrCutFilterAutoBoundaryType (941)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__IrCutFilterAutoBoundaryType(struct soap*, enum tt__IrCutFilterAutoBoundaryType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IrCutFilterAutoBoundaryType(struct soap*, const char*, int, const enum tt__IrCutFilterAutoBoundaryType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__IrCutFilterAutoBoundaryType2s(struct soap*, enum tt__IrCutFilterAutoBoundaryType);
SOAP_FMAC3 enum tt__IrCutFilterAutoBoundaryType * SOAP_FMAC4 soap_in_tt__IrCutFilterAutoBoundaryType(struct soap*, const char*, enum tt__IrCutFilterAutoBoundaryType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__IrCutFilterAutoBoundaryType(struct soap*, const char*, enum tt__IrCutFilterAutoBoundaryType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__IrCutFilterAutoBoundaryType(struct soap*, const enum tt__IrCutFilterAutoBoundaryType *, const char*, const char*);

#ifndef soap_write_tt__IrCutFilterAutoBoundaryType
#define soap_write_tt__IrCutFilterAutoBoundaryType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__IrCutFilterAutoBoundaryType(soap, data, "tt:IrCutFilterAutoBoundaryType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__IrCutFilterAutoBoundaryType * SOAP_FMAC4 soap_get_tt__IrCutFilterAutoBoundaryType(struct soap*, enum tt__IrCutFilterAutoBoundaryType *, const char*, const char*);

#ifndef soap_read_tt__IrCutFilterAutoBoundaryType
#define soap_read_tt__IrCutFilterAutoBoundaryType(soap, data) ( ((data) ? (soap_default_tt__IrCutFilterAutoBoundaryType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IrCutFilterAutoBoundaryType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ImageStabilizationMode
#define SOAP_TYPE_tt__ImageStabilizationMode (940)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__ImageStabilizationMode(struct soap*, enum tt__ImageStabilizationMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImageStabilizationMode(struct soap*, const char*, int, const enum tt__ImageStabilizationMode *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__ImageStabilizationMode2s(struct soap*, enum tt__ImageStabilizationMode);
SOAP_FMAC3 enum tt__ImageStabilizationMode * SOAP_FMAC4 soap_in_tt__ImageStabilizationMode(struct soap*, const char*, enum tt__ImageStabilizationMode *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__ImageStabilizationMode(struct soap*, const char*, enum tt__ImageStabilizationMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ImageStabilizationMode(struct soap*, const enum tt__ImageStabilizationMode *, const char*, const char*);

#ifndef soap_write_tt__ImageStabilizationMode
#define soap_write_tt__ImageStabilizationMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__ImageStabilizationMode(soap, data, "tt:ImageStabilizationMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__ImageStabilizationMode * SOAP_FMAC4 soap_get_tt__ImageStabilizationMode(struct soap*, enum tt__ImageStabilizationMode *, const char*, const char*);

#ifndef soap_read_tt__ImageStabilizationMode
#define soap_read_tt__ImageStabilizationMode(soap, data) ( ((data) ? (soap_default_tt__ImageStabilizationMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ImageStabilizationMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IrCutFilterMode
#define SOAP_TYPE_tt__IrCutFilterMode (939)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__IrCutFilterMode(struct soap*, enum tt__IrCutFilterMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IrCutFilterMode(struct soap*, const char*, int, const enum tt__IrCutFilterMode *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__IrCutFilterMode2s(struct soap*, enum tt__IrCutFilterMode);
SOAP_FMAC3 enum tt__IrCutFilterMode * SOAP_FMAC4 soap_in_tt__IrCutFilterMode(struct soap*, const char*, enum tt__IrCutFilterMode *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__IrCutFilterMode(struct soap*, const char*, enum tt__IrCutFilterMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__IrCutFilterMode(struct soap*, const enum tt__IrCutFilterMode *, const char*, const char*);

#ifndef soap_write_tt__IrCutFilterMode
#define soap_write_tt__IrCutFilterMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__IrCutFilterMode(soap, data, "tt:IrCutFilterMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__IrCutFilterMode * SOAP_FMAC4 soap_get_tt__IrCutFilterMode(struct soap*, enum tt__IrCutFilterMode *, const char*, const char*);

#ifndef soap_read_tt__IrCutFilterMode
#define soap_read_tt__IrCutFilterMode(soap, data) ( ((data) ? (soap_default_tt__IrCutFilterMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IrCutFilterMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__WhiteBalanceMode
#define SOAP_TYPE_tt__WhiteBalanceMode (938)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__WhiteBalanceMode(struct soap*, enum tt__WhiteBalanceMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__WhiteBalanceMode(struct soap*, const char*, int, const enum tt__WhiteBalanceMode *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__WhiteBalanceMode2s(struct soap*, enum tt__WhiteBalanceMode);
SOAP_FMAC3 enum tt__WhiteBalanceMode * SOAP_FMAC4 soap_in_tt__WhiteBalanceMode(struct soap*, const char*, enum tt__WhiteBalanceMode *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__WhiteBalanceMode(struct soap*, const char*, enum tt__WhiteBalanceMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__WhiteBalanceMode(struct soap*, const enum tt__WhiteBalanceMode *, const char*, const char*);

#ifndef soap_write_tt__WhiteBalanceMode
#define soap_write_tt__WhiteBalanceMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__WhiteBalanceMode(soap, data, "tt:WhiteBalanceMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__WhiteBalanceMode * SOAP_FMAC4 soap_get_tt__WhiteBalanceMode(struct soap*, enum tt__WhiteBalanceMode *, const char*, const char*);

#ifndef soap_read_tt__WhiteBalanceMode
#define soap_read_tt__WhiteBalanceMode(soap, data) ( ((data) ? (soap_default_tt__WhiteBalanceMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__WhiteBalanceMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Enabled
#define SOAP_TYPE_tt__Enabled (937)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__Enabled(struct soap*, enum tt__Enabled *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Enabled(struct soap*, const char*, int, const enum tt__Enabled *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__Enabled2s(struct soap*, enum tt__Enabled);
SOAP_FMAC3 enum tt__Enabled * SOAP_FMAC4 soap_in_tt__Enabled(struct soap*, const char*, enum tt__Enabled *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__Enabled(struct soap*, const char*, enum tt__Enabled *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Enabled(struct soap*, const enum tt__Enabled *, const char*, const char*);

#ifndef soap_write_tt__Enabled
#define soap_write_tt__Enabled(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__Enabled(soap, data, "tt:Enabled", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__Enabled * SOAP_FMAC4 soap_get_tt__Enabled(struct soap*, enum tt__Enabled *, const char*, const char*);

#ifndef soap_read_tt__Enabled
#define soap_read_tt__Enabled(soap, data) ( ((data) ? (soap_default_tt__Enabled(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Enabled(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ExposureMode
#define SOAP_TYPE_tt__ExposureMode (936)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__ExposureMode(struct soap*, enum tt__ExposureMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ExposureMode(struct soap*, const char*, int, const enum tt__ExposureMode *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__ExposureMode2s(struct soap*, enum tt__ExposureMode);
SOAP_FMAC3 enum tt__ExposureMode * SOAP_FMAC4 soap_in_tt__ExposureMode(struct soap*, const char*, enum tt__ExposureMode *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__ExposureMode(struct soap*, const char*, enum tt__ExposureMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ExposureMode(struct soap*, const enum tt__ExposureMode *, const char*, const char*);

#ifndef soap_write_tt__ExposureMode
#define soap_write_tt__ExposureMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__ExposureMode(soap, data, "tt:ExposureMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__ExposureMode * SOAP_FMAC4 soap_get_tt__ExposureMode(struct soap*, enum tt__ExposureMode *, const char*, const char*);

#ifndef soap_read_tt__ExposureMode
#define soap_read_tt__ExposureMode(soap, data) ( ((data) ? (soap_default_tt__ExposureMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ExposureMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ExposurePriority
#define SOAP_TYPE_tt__ExposurePriority (935)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__ExposurePriority(struct soap*, enum tt__ExposurePriority *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ExposurePriority(struct soap*, const char*, int, const enum tt__ExposurePriority *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__ExposurePriority2s(struct soap*, enum tt__ExposurePriority);
SOAP_FMAC3 enum tt__ExposurePriority * SOAP_FMAC4 soap_in_tt__ExposurePriority(struct soap*, const char*, enum tt__ExposurePriority *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__ExposurePriority(struct soap*, const char*, enum tt__ExposurePriority *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ExposurePriority(struct soap*, const enum tt__ExposurePriority *, const char*, const char*);

#ifndef soap_write_tt__ExposurePriority
#define soap_write_tt__ExposurePriority(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__ExposurePriority(soap, data, "tt:ExposurePriority", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__ExposurePriority * SOAP_FMAC4 soap_get_tt__ExposurePriority(struct soap*, enum tt__ExposurePriority *, const char*, const char*);

#ifndef soap_read_tt__ExposurePriority
#define soap_read_tt__ExposurePriority(soap, data) ( ((data) ? (soap_default_tt__ExposurePriority(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ExposurePriority(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__BacklightCompensationMode
#define SOAP_TYPE_tt__BacklightCompensationMode (934)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__BacklightCompensationMode(struct soap*, enum tt__BacklightCompensationMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__BacklightCompensationMode(struct soap*, const char*, int, const enum tt__BacklightCompensationMode *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__BacklightCompensationMode2s(struct soap*, enum tt__BacklightCompensationMode);
SOAP_FMAC3 enum tt__BacklightCompensationMode * SOAP_FMAC4 soap_in_tt__BacklightCompensationMode(struct soap*, const char*, enum tt__BacklightCompensationMode *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__BacklightCompensationMode(struct soap*, const char*, enum tt__BacklightCompensationMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__BacklightCompensationMode(struct soap*, const enum tt__BacklightCompensationMode *, const char*, const char*);

#ifndef soap_write_tt__BacklightCompensationMode
#define soap_write_tt__BacklightCompensationMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__BacklightCompensationMode(soap, data, "tt:BacklightCompensationMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__BacklightCompensationMode * SOAP_FMAC4 soap_get_tt__BacklightCompensationMode(struct soap*, enum tt__BacklightCompensationMode *, const char*, const char*);

#ifndef soap_read_tt__BacklightCompensationMode
#define soap_read_tt__BacklightCompensationMode(soap, data) ( ((data) ? (soap_default_tt__BacklightCompensationMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__BacklightCompensationMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__WideDynamicMode
#define SOAP_TYPE_tt__WideDynamicMode (933)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__WideDynamicMode(struct soap*, enum tt__WideDynamicMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__WideDynamicMode(struct soap*, const char*, int, const enum tt__WideDynamicMode *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__WideDynamicMode2s(struct soap*, enum tt__WideDynamicMode);
SOAP_FMAC3 enum tt__WideDynamicMode * SOAP_FMAC4 soap_in_tt__WideDynamicMode(struct soap*, const char*, enum tt__WideDynamicMode *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__WideDynamicMode(struct soap*, const char*, enum tt__WideDynamicMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__WideDynamicMode(struct soap*, const enum tt__WideDynamicMode *, const char*, const char*);

#ifndef soap_write_tt__WideDynamicMode
#define soap_write_tt__WideDynamicMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__WideDynamicMode(soap, data, "tt:WideDynamicMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__WideDynamicMode * SOAP_FMAC4 soap_get_tt__WideDynamicMode(struct soap*, enum tt__WideDynamicMode *, const char*, const char*);

#ifndef soap_read_tt__WideDynamicMode
#define soap_read_tt__WideDynamicMode(soap, data) ( ((data) ? (soap_default_tt__WideDynamicMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__WideDynamicMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AutoFocusMode
#define SOAP_TYPE_tt__AutoFocusMode (932)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__AutoFocusMode(struct soap*, enum tt__AutoFocusMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AutoFocusMode(struct soap*, const char*, int, const enum tt__AutoFocusMode *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__AutoFocusMode2s(struct soap*, enum tt__AutoFocusMode);
SOAP_FMAC3 enum tt__AutoFocusMode * SOAP_FMAC4 soap_in_tt__AutoFocusMode(struct soap*, const char*, enum tt__AutoFocusMode *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__AutoFocusMode(struct soap*, const char*, enum tt__AutoFocusMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__AutoFocusMode(struct soap*, const enum tt__AutoFocusMode *, const char*, const char*);

#ifndef soap_write_tt__AutoFocusMode
#define soap_write_tt__AutoFocusMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__AutoFocusMode(soap, data, "tt:AutoFocusMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__AutoFocusMode * SOAP_FMAC4 soap_get_tt__AutoFocusMode(struct soap*, enum tt__AutoFocusMode *, const char*, const char*);

#ifndef soap_read_tt__AutoFocusMode
#define soap_read_tt__AutoFocusMode(soap, data) ( ((data) ? (soap_default_tt__AutoFocusMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AutoFocusMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZPresetTourOperation
#define SOAP_TYPE_tt__PTZPresetTourOperation (931)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__PTZPresetTourOperation(struct soap*, enum tt__PTZPresetTourOperation *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourOperation(struct soap*, const char*, int, const enum tt__PTZPresetTourOperation *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__PTZPresetTourOperation2s(struct soap*, enum tt__PTZPresetTourOperation);
SOAP_FMAC3 enum tt__PTZPresetTourOperation * SOAP_FMAC4 soap_in_tt__PTZPresetTourOperation(struct soap*, const char*, enum tt__PTZPresetTourOperation *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__PTZPresetTourOperation(struct soap*, const char*, enum tt__PTZPresetTourOperation *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__PTZPresetTourOperation(struct soap*, const enum tt__PTZPresetTourOperation *, const char*, const char*);

#ifndef soap_write_tt__PTZPresetTourOperation
#define soap_write_tt__PTZPresetTourOperation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__PTZPresetTourOperation(soap, data, "tt:PTZPresetTourOperation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__PTZPresetTourOperation * SOAP_FMAC4 soap_get_tt__PTZPresetTourOperation(struct soap*, enum tt__PTZPresetTourOperation *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourOperation
#define soap_read_tt__PTZPresetTourOperation(soap, data) ( ((data) ? (soap_default_tt__PTZPresetTourOperation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourOperation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZPresetTourDirection
#define SOAP_TYPE_tt__PTZPresetTourDirection (930)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__PTZPresetTourDirection(struct soap*, enum tt__PTZPresetTourDirection *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourDirection(struct soap*, const char*, int, const enum tt__PTZPresetTourDirection *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__PTZPresetTourDirection2s(struct soap*, enum tt__PTZPresetTourDirection);
SOAP_FMAC3 enum tt__PTZPresetTourDirection * SOAP_FMAC4 soap_in_tt__PTZPresetTourDirection(struct soap*, const char*, enum tt__PTZPresetTourDirection *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__PTZPresetTourDirection(struct soap*, const char*, enum tt__PTZPresetTourDirection *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__PTZPresetTourDirection(struct soap*, const enum tt__PTZPresetTourDirection *, const char*, const char*);

#ifndef soap_write_tt__PTZPresetTourDirection
#define soap_write_tt__PTZPresetTourDirection(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__PTZPresetTourDirection(soap, data, "tt:PTZPresetTourDirection", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__PTZPresetTourDirection * SOAP_FMAC4 soap_get_tt__PTZPresetTourDirection(struct soap*, enum tt__PTZPresetTourDirection *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourDirection
#define soap_read_tt__PTZPresetTourDirection(soap, data) ( ((data) ? (soap_default_tt__PTZPresetTourDirection(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourDirection(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZPresetTourState
#define SOAP_TYPE_tt__PTZPresetTourState (929)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__PTZPresetTourState(struct soap*, enum tt__PTZPresetTourState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourState(struct soap*, const char*, int, const enum tt__PTZPresetTourState *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__PTZPresetTourState2s(struct soap*, enum tt__PTZPresetTourState);
SOAP_FMAC3 enum tt__PTZPresetTourState * SOAP_FMAC4 soap_in_tt__PTZPresetTourState(struct soap*, const char*, enum tt__PTZPresetTourState *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__PTZPresetTourState(struct soap*, const char*, enum tt__PTZPresetTourState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__PTZPresetTourState(struct soap*, const enum tt__PTZPresetTourState *, const char*, const char*);

#ifndef soap_write_tt__PTZPresetTourState
#define soap_write_tt__PTZPresetTourState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__PTZPresetTourState(soap, data, "tt:PTZPresetTourState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__PTZPresetTourState * SOAP_FMAC4 soap_get_tt__PTZPresetTourState(struct soap*, enum tt__PTZPresetTourState *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourState
#define soap_read_tt__PTZPresetTourState(soap, data) ( ((data) ? (soap_default_tt__PTZPresetTourState(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourState(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ReverseMode
#define SOAP_TYPE_tt__ReverseMode (927)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__ReverseMode(struct soap*, enum tt__ReverseMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ReverseMode(struct soap*, const char*, int, const enum tt__ReverseMode *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__ReverseMode2s(struct soap*, enum tt__ReverseMode);
SOAP_FMAC3 enum tt__ReverseMode * SOAP_FMAC4 soap_in_tt__ReverseMode(struct soap*, const char*, enum tt__ReverseMode *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__ReverseMode(struct soap*, const char*, enum tt__ReverseMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ReverseMode(struct soap*, const enum tt__ReverseMode *, const char*, const char*);

#ifndef soap_write_tt__ReverseMode
#define soap_write_tt__ReverseMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__ReverseMode(soap, data, "tt:ReverseMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__ReverseMode * SOAP_FMAC4 soap_get_tt__ReverseMode(struct soap*, enum tt__ReverseMode *, const char*, const char*);

#ifndef soap_read_tt__ReverseMode
#define soap_read_tt__ReverseMode(soap, data) ( ((data) ? (soap_default_tt__ReverseMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ReverseMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__EFlipMode
#define SOAP_TYPE_tt__EFlipMode (926)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__EFlipMode(struct soap*, enum tt__EFlipMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__EFlipMode(struct soap*, const char*, int, const enum tt__EFlipMode *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__EFlipMode2s(struct soap*, enum tt__EFlipMode);
SOAP_FMAC3 enum tt__EFlipMode * SOAP_FMAC4 soap_in_tt__EFlipMode(struct soap*, const char*, enum tt__EFlipMode *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__EFlipMode(struct soap*, const char*, enum tt__EFlipMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__EFlipMode(struct soap*, const enum tt__EFlipMode *, const char*, const char*);

#ifndef soap_write_tt__EFlipMode
#define soap_write_tt__EFlipMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__EFlipMode(soap, data, "tt:EFlipMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__EFlipMode * SOAP_FMAC4 soap_get_tt__EFlipMode(struct soap*, enum tt__EFlipMode *, const char*, const char*);

#ifndef soap_read_tt__EFlipMode
#define soap_read_tt__EFlipMode(soap, data) ( ((data) ? (soap_default_tt__EFlipMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__EFlipMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__DigitalIdleState
#define SOAP_TYPE_tt__DigitalIdleState (925)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__DigitalIdleState(struct soap*, enum tt__DigitalIdleState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DigitalIdleState(struct soap*, const char*, int, const enum tt__DigitalIdleState *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__DigitalIdleState2s(struct soap*, enum tt__DigitalIdleState);
SOAP_FMAC3 enum tt__DigitalIdleState * SOAP_FMAC4 soap_in_tt__DigitalIdleState(struct soap*, const char*, enum tt__DigitalIdleState *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__DigitalIdleState(struct soap*, const char*, enum tt__DigitalIdleState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__DigitalIdleState(struct soap*, const enum tt__DigitalIdleState *, const char*, const char*);

#ifndef soap_write_tt__DigitalIdleState
#define soap_write_tt__DigitalIdleState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__DigitalIdleState(soap, data, "tt:DigitalIdleState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__DigitalIdleState * SOAP_FMAC4 soap_get_tt__DigitalIdleState(struct soap*, enum tt__DigitalIdleState *, const char*, const char*);

#ifndef soap_read_tt__DigitalIdleState
#define soap_read_tt__DigitalIdleState(soap, data) ( ((data) ? (soap_default_tt__DigitalIdleState(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__DigitalIdleState(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RelayMode
#define SOAP_TYPE_tt__RelayMode (924)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__RelayMode(struct soap*, enum tt__RelayMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RelayMode(struct soap*, const char*, int, const enum tt__RelayMode *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__RelayMode2s(struct soap*, enum tt__RelayMode);
SOAP_FMAC3 enum tt__RelayMode * SOAP_FMAC4 soap_in_tt__RelayMode(struct soap*, const char*, enum tt__RelayMode *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__RelayMode(struct soap*, const char*, enum tt__RelayMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__RelayMode(struct soap*, const enum tt__RelayMode *, const char*, const char*);

#ifndef soap_write_tt__RelayMode
#define soap_write_tt__RelayMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__RelayMode(soap, data, "tt:RelayMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__RelayMode * SOAP_FMAC4 soap_get_tt__RelayMode(struct soap*, enum tt__RelayMode *, const char*, const char*);

#ifndef soap_read_tt__RelayMode
#define soap_read_tt__RelayMode(soap, data) ( ((data) ? (soap_default_tt__RelayMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RelayMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RelayIdleState
#define SOAP_TYPE_tt__RelayIdleState (923)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__RelayIdleState(struct soap*, enum tt__RelayIdleState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RelayIdleState(struct soap*, const char*, int, const enum tt__RelayIdleState *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__RelayIdleState2s(struct soap*, enum tt__RelayIdleState);
SOAP_FMAC3 enum tt__RelayIdleState * SOAP_FMAC4 soap_in_tt__RelayIdleState(struct soap*, const char*, enum tt__RelayIdleState *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__RelayIdleState(struct soap*, const char*, enum tt__RelayIdleState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__RelayIdleState(struct soap*, const enum tt__RelayIdleState *, const char*, const char*);

#ifndef soap_write_tt__RelayIdleState
#define soap_write_tt__RelayIdleState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__RelayIdleState(soap, data, "tt:RelayIdleState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__RelayIdleState * SOAP_FMAC4 soap_get_tt__RelayIdleState(struct soap*, enum tt__RelayIdleState *, const char*, const char*);

#ifndef soap_read_tt__RelayIdleState
#define soap_read_tt__RelayIdleState(soap, data) ( ((data) ? (soap_default_tt__RelayIdleState(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RelayIdleState(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RelayLogicalState
#define SOAP_TYPE_tt__RelayLogicalState (922)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__RelayLogicalState(struct soap*, enum tt__RelayLogicalState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RelayLogicalState(struct soap*, const char*, int, const enum tt__RelayLogicalState *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__RelayLogicalState2s(struct soap*, enum tt__RelayLogicalState);
SOAP_FMAC3 enum tt__RelayLogicalState * SOAP_FMAC4 soap_in_tt__RelayLogicalState(struct soap*, const char*, enum tt__RelayLogicalState *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__RelayLogicalState(struct soap*, const char*, enum tt__RelayLogicalState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__RelayLogicalState(struct soap*, const enum tt__RelayLogicalState *, const char*, const char*);

#ifndef soap_write_tt__RelayLogicalState
#define soap_write_tt__RelayLogicalState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__RelayLogicalState(soap, data, "tt:RelayLogicalState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__RelayLogicalState * SOAP_FMAC4 soap_get_tt__RelayLogicalState(struct soap*, enum tt__RelayLogicalState *, const char*, const char*);

#ifndef soap_read_tt__RelayLogicalState
#define soap_read_tt__RelayLogicalState(soap, data) ( ((data) ? (soap_default_tt__RelayLogicalState(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RelayLogicalState(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__UserLevel
#define SOAP_TYPE_tt__UserLevel (921)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__UserLevel(struct soap*, enum tt__UserLevel *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__UserLevel(struct soap*, const char*, int, const enum tt__UserLevel *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__UserLevel2s(struct soap*, enum tt__UserLevel);
SOAP_FMAC3 enum tt__UserLevel * SOAP_FMAC4 soap_in_tt__UserLevel(struct soap*, const char*, enum tt__UserLevel *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__UserLevel(struct soap*, const char*, enum tt__UserLevel *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__UserLevel(struct soap*, const enum tt__UserLevel *, const char*, const char*);

#ifndef soap_write_tt__UserLevel
#define soap_write_tt__UserLevel(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__UserLevel(soap, data, "tt:UserLevel", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__UserLevel * SOAP_FMAC4 soap_get_tt__UserLevel(struct soap*, enum tt__UserLevel *, const char*, const char*);

#ifndef soap_read_tt__UserLevel
#define soap_read_tt__UserLevel(soap, data) ( ((data) ? (soap_default_tt__UserLevel(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__UserLevel(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Entity
#define SOAP_TYPE_tt__Entity (920)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__Entity(struct soap*, enum tt__Entity *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Entity(struct soap*, const char*, int, const enum tt__Entity *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__Entity2s(struct soap*, enum tt__Entity);
SOAP_FMAC3 enum tt__Entity * SOAP_FMAC4 soap_in_tt__Entity(struct soap*, const char*, enum tt__Entity *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__Entity(struct soap*, const char*, enum tt__Entity *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Entity(struct soap*, const enum tt__Entity *, const char*, const char*);

#ifndef soap_write_tt__Entity
#define soap_write_tt__Entity(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__Entity(soap, data, "tt:Entity", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__Entity * SOAP_FMAC4 soap_get_tt__Entity(struct soap*, enum tt__Entity *, const char*, const char*);

#ifndef soap_read_tt__Entity
#define soap_read_tt__Entity(soap, data) ( ((data) ? (soap_default_tt__Entity(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Entity(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SetDateTimeType
#define SOAP_TYPE_tt__SetDateTimeType (919)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__SetDateTimeType(struct soap*, enum tt__SetDateTimeType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SetDateTimeType(struct soap*, const char*, int, const enum tt__SetDateTimeType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__SetDateTimeType2s(struct soap*, enum tt__SetDateTimeType);
SOAP_FMAC3 enum tt__SetDateTimeType * SOAP_FMAC4 soap_in_tt__SetDateTimeType(struct soap*, const char*, enum tt__SetDateTimeType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__SetDateTimeType(struct soap*, const char*, enum tt__SetDateTimeType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__SetDateTimeType(struct soap*, const enum tt__SetDateTimeType *, const char*, const char*);

#ifndef soap_write_tt__SetDateTimeType
#define soap_write_tt__SetDateTimeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__SetDateTimeType(soap, data, "tt:SetDateTimeType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__SetDateTimeType * SOAP_FMAC4 soap_get_tt__SetDateTimeType(struct soap*, enum tt__SetDateTimeType *, const char*, const char*);

#ifndef soap_read_tt__SetDateTimeType
#define soap_read_tt__SetDateTimeType(soap, data) ( ((data) ? (soap_default_tt__SetDateTimeType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__SetDateTimeType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__FactoryDefaultType
#define SOAP_TYPE_tt__FactoryDefaultType (918)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__FactoryDefaultType(struct soap*, enum tt__FactoryDefaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FactoryDefaultType(struct soap*, const char*, int, const enum tt__FactoryDefaultType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__FactoryDefaultType2s(struct soap*, enum tt__FactoryDefaultType);
SOAP_FMAC3 enum tt__FactoryDefaultType * SOAP_FMAC4 soap_in_tt__FactoryDefaultType(struct soap*, const char*, enum tt__FactoryDefaultType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__FactoryDefaultType(struct soap*, const char*, enum tt__FactoryDefaultType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__FactoryDefaultType(struct soap*, const enum tt__FactoryDefaultType *, const char*, const char*);

#ifndef soap_write_tt__FactoryDefaultType
#define soap_write_tt__FactoryDefaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__FactoryDefaultType(soap, data, "tt:FactoryDefaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__FactoryDefaultType * SOAP_FMAC4 soap_get_tt__FactoryDefaultType(struct soap*, enum tt__FactoryDefaultType *, const char*, const char*);

#ifndef soap_read_tt__FactoryDefaultType
#define soap_read_tt__FactoryDefaultType(soap, data) ( ((data) ? (soap_default_tt__FactoryDefaultType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__FactoryDefaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SystemLogType
#define SOAP_TYPE_tt__SystemLogType (917)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__SystemLogType(struct soap*, enum tt__SystemLogType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SystemLogType(struct soap*, const char*, int, const enum tt__SystemLogType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__SystemLogType2s(struct soap*, enum tt__SystemLogType);
SOAP_FMAC3 enum tt__SystemLogType * SOAP_FMAC4 soap_in_tt__SystemLogType(struct soap*, const char*, enum tt__SystemLogType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__SystemLogType(struct soap*, const char*, enum tt__SystemLogType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__SystemLogType(struct soap*, const enum tt__SystemLogType *, const char*, const char*);

#ifndef soap_write_tt__SystemLogType
#define soap_write_tt__SystemLogType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__SystemLogType(soap, data, "tt:SystemLogType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__SystemLogType * SOAP_FMAC4 soap_get_tt__SystemLogType(struct soap*, enum tt__SystemLogType *, const char*, const char*);

#ifndef soap_read_tt__SystemLogType
#define soap_read_tt__SystemLogType(soap, data) ( ((data) ? (soap_default_tt__SystemLogType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__SystemLogType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__CapabilityCategory
#define SOAP_TYPE_tt__CapabilityCategory (916)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__CapabilityCategory(struct soap*, enum tt__CapabilityCategory *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__CapabilityCategory(struct soap*, const char*, int, const enum tt__CapabilityCategory *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__CapabilityCategory2s(struct soap*, enum tt__CapabilityCategory);
SOAP_FMAC3 enum tt__CapabilityCategory * SOAP_FMAC4 soap_in_tt__CapabilityCategory(struct soap*, const char*, enum tt__CapabilityCategory *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__CapabilityCategory(struct soap*, const char*, enum tt__CapabilityCategory *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__CapabilityCategory(struct soap*, const enum tt__CapabilityCategory *, const char*, const char*);

#ifndef soap_write_tt__CapabilityCategory
#define soap_write_tt__CapabilityCategory(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__CapabilityCategory(soap, data, "tt:CapabilityCategory", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__CapabilityCategory * SOAP_FMAC4 soap_get_tt__CapabilityCategory(struct soap*, enum tt__CapabilityCategory *, const char*, const char*);

#ifndef soap_read_tt__CapabilityCategory
#define soap_read_tt__CapabilityCategory(soap, data) ( ((data) ? (soap_default_tt__CapabilityCategory(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__CapabilityCategory(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Dot11AuthAndMangementSuite
#define SOAP_TYPE_tt__Dot11AuthAndMangementSuite (915)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__Dot11AuthAndMangementSuite(struct soap*, enum tt__Dot11AuthAndMangementSuite *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11AuthAndMangementSuite(struct soap*, const char*, int, const enum tt__Dot11AuthAndMangementSuite *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__Dot11AuthAndMangementSuite2s(struct soap*, enum tt__Dot11AuthAndMangementSuite);
SOAP_FMAC3 enum tt__Dot11AuthAndMangementSuite * SOAP_FMAC4 soap_in_tt__Dot11AuthAndMangementSuite(struct soap*, const char*, enum tt__Dot11AuthAndMangementSuite *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__Dot11AuthAndMangementSuite(struct soap*, const char*, enum tt__Dot11AuthAndMangementSuite *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Dot11AuthAndMangementSuite(struct soap*, const enum tt__Dot11AuthAndMangementSuite *, const char*, const char*);

#ifndef soap_write_tt__Dot11AuthAndMangementSuite
#define soap_write_tt__Dot11AuthAndMangementSuite(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__Dot11AuthAndMangementSuite(soap, data, "tt:Dot11AuthAndMangementSuite", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__Dot11AuthAndMangementSuite * SOAP_FMAC4 soap_get_tt__Dot11AuthAndMangementSuite(struct soap*, enum tt__Dot11AuthAndMangementSuite *, const char*, const char*);

#ifndef soap_read_tt__Dot11AuthAndMangementSuite
#define soap_read_tt__Dot11AuthAndMangementSuite(soap, data) ( ((data) ? (soap_default_tt__Dot11AuthAndMangementSuite(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Dot11AuthAndMangementSuite(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Dot11SignalStrength
#define SOAP_TYPE_tt__Dot11SignalStrength (914)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__Dot11SignalStrength(struct soap*, enum tt__Dot11SignalStrength *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11SignalStrength(struct soap*, const char*, int, const enum tt__Dot11SignalStrength *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__Dot11SignalStrength2s(struct soap*, enum tt__Dot11SignalStrength);
SOAP_FMAC3 enum tt__Dot11SignalStrength * SOAP_FMAC4 soap_in_tt__Dot11SignalStrength(struct soap*, const char*, enum tt__Dot11SignalStrength *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__Dot11SignalStrength(struct soap*, const char*, enum tt__Dot11SignalStrength *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Dot11SignalStrength(struct soap*, const enum tt__Dot11SignalStrength *, const char*, const char*);

#ifndef soap_write_tt__Dot11SignalStrength
#define soap_write_tt__Dot11SignalStrength(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__Dot11SignalStrength(soap, data, "tt:Dot11SignalStrength", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__Dot11SignalStrength * SOAP_FMAC4 soap_get_tt__Dot11SignalStrength(struct soap*, enum tt__Dot11SignalStrength *, const char*, const char*);

#ifndef soap_read_tt__Dot11SignalStrength
#define soap_read_tt__Dot11SignalStrength(soap, data) ( ((data) ? (soap_default_tt__Dot11SignalStrength(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Dot11SignalStrength(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Dot11Cipher
#define SOAP_TYPE_tt__Dot11Cipher (911)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__Dot11Cipher(struct soap*, enum tt__Dot11Cipher *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11Cipher(struct soap*, const char*, int, const enum tt__Dot11Cipher *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__Dot11Cipher2s(struct soap*, enum tt__Dot11Cipher);
SOAP_FMAC3 enum tt__Dot11Cipher * SOAP_FMAC4 soap_in_tt__Dot11Cipher(struct soap*, const char*, enum tt__Dot11Cipher *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__Dot11Cipher(struct soap*, const char*, enum tt__Dot11Cipher *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Dot11Cipher(struct soap*, const enum tt__Dot11Cipher *, const char*, const char*);

#ifndef soap_write_tt__Dot11Cipher
#define soap_write_tt__Dot11Cipher(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__Dot11Cipher(soap, data, "tt:Dot11Cipher", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__Dot11Cipher * SOAP_FMAC4 soap_get_tt__Dot11Cipher(struct soap*, enum tt__Dot11Cipher *, const char*, const char*);

#ifndef soap_read_tt__Dot11Cipher
#define soap_read_tt__Dot11Cipher(soap, data) ( ((data) ? (soap_default_tt__Dot11Cipher(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Dot11Cipher(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Dot11SecurityMode
#define SOAP_TYPE_tt__Dot11SecurityMode (910)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__Dot11SecurityMode(struct soap*, enum tt__Dot11SecurityMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11SecurityMode(struct soap*, const char*, int, const enum tt__Dot11SecurityMode *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__Dot11SecurityMode2s(struct soap*, enum tt__Dot11SecurityMode);
SOAP_FMAC3 enum tt__Dot11SecurityMode * SOAP_FMAC4 soap_in_tt__Dot11SecurityMode(struct soap*, const char*, enum tt__Dot11SecurityMode *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__Dot11SecurityMode(struct soap*, const char*, enum tt__Dot11SecurityMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Dot11SecurityMode(struct soap*, const enum tt__Dot11SecurityMode *, const char*, const char*);

#ifndef soap_write_tt__Dot11SecurityMode
#define soap_write_tt__Dot11SecurityMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__Dot11SecurityMode(soap, data, "tt:Dot11SecurityMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__Dot11SecurityMode * SOAP_FMAC4 soap_get_tt__Dot11SecurityMode(struct soap*, enum tt__Dot11SecurityMode *, const char*, const char*);

#ifndef soap_read_tt__Dot11SecurityMode
#define soap_read_tt__Dot11SecurityMode(soap, data) ( ((data) ? (soap_default_tt__Dot11SecurityMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Dot11SecurityMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Dot11StationMode
#define SOAP_TYPE_tt__Dot11StationMode (909)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__Dot11StationMode(struct soap*, enum tt__Dot11StationMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11StationMode(struct soap*, const char*, int, const enum tt__Dot11StationMode *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__Dot11StationMode2s(struct soap*, enum tt__Dot11StationMode);
SOAP_FMAC3 enum tt__Dot11StationMode * SOAP_FMAC4 soap_in_tt__Dot11StationMode(struct soap*, const char*, enum tt__Dot11StationMode *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__Dot11StationMode(struct soap*, const char*, enum tt__Dot11StationMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Dot11StationMode(struct soap*, const enum tt__Dot11StationMode *, const char*, const char*);

#ifndef soap_write_tt__Dot11StationMode
#define soap_write_tt__Dot11StationMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__Dot11StationMode(soap, data, "tt:Dot11StationMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__Dot11StationMode * SOAP_FMAC4 soap_get_tt__Dot11StationMode(struct soap*, enum tt__Dot11StationMode *, const char*, const char*);

#ifndef soap_read_tt__Dot11StationMode
#define soap_read_tt__Dot11StationMode(soap, data) ( ((data) ? (soap_default_tt__Dot11StationMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Dot11StationMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__DynamicDNSType
#define SOAP_TYPE_tt__DynamicDNSType (907)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__DynamicDNSType(struct soap*, enum tt__DynamicDNSType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DynamicDNSType(struct soap*, const char*, int, const enum tt__DynamicDNSType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__DynamicDNSType2s(struct soap*, enum tt__DynamicDNSType);
SOAP_FMAC3 enum tt__DynamicDNSType * SOAP_FMAC4 soap_in_tt__DynamicDNSType(struct soap*, const char*, enum tt__DynamicDNSType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__DynamicDNSType(struct soap*, const char*, enum tt__DynamicDNSType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__DynamicDNSType(struct soap*, const enum tt__DynamicDNSType *, const char*, const char*);

#ifndef soap_write_tt__DynamicDNSType
#define soap_write_tt__DynamicDNSType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__DynamicDNSType(soap, data, "tt:DynamicDNSType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__DynamicDNSType * SOAP_FMAC4 soap_get_tt__DynamicDNSType(struct soap*, enum tt__DynamicDNSType *, const char*, const char*);

#ifndef soap_read_tt__DynamicDNSType
#define soap_read_tt__DynamicDNSType(soap, data) ( ((data) ? (soap_default_tt__DynamicDNSType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__DynamicDNSType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IPAddressFilterType
#define SOAP_TYPE_tt__IPAddressFilterType (906)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__IPAddressFilterType(struct soap*, enum tt__IPAddressFilterType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPAddressFilterType(struct soap*, const char*, int, const enum tt__IPAddressFilterType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__IPAddressFilterType2s(struct soap*, enum tt__IPAddressFilterType);
SOAP_FMAC3 enum tt__IPAddressFilterType * SOAP_FMAC4 soap_in_tt__IPAddressFilterType(struct soap*, const char*, enum tt__IPAddressFilterType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__IPAddressFilterType(struct soap*, const char*, enum tt__IPAddressFilterType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__IPAddressFilterType(struct soap*, const enum tt__IPAddressFilterType *, const char*, const char*);

#ifndef soap_write_tt__IPAddressFilterType
#define soap_write_tt__IPAddressFilterType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__IPAddressFilterType(soap, data, "tt:IPAddressFilterType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__IPAddressFilterType * SOAP_FMAC4 soap_get_tt__IPAddressFilterType(struct soap*, enum tt__IPAddressFilterType *, const char*, const char*);

#ifndef soap_read_tt__IPAddressFilterType
#define soap_read_tt__IPAddressFilterType(soap, data) ( ((data) ? (soap_default_tt__IPAddressFilterType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IPAddressFilterType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IPType
#define SOAP_TYPE_tt__IPType (903)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__IPType(struct soap*, enum tt__IPType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPType(struct soap*, const char*, int, const enum tt__IPType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__IPType2s(struct soap*, enum tt__IPType);
SOAP_FMAC3 enum tt__IPType * SOAP_FMAC4 soap_in_tt__IPType(struct soap*, const char*, enum tt__IPType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__IPType(struct soap*, const char*, enum tt__IPType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__IPType(struct soap*, const enum tt__IPType *, const char*, const char*);

#ifndef soap_write_tt__IPType
#define soap_write_tt__IPType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__IPType(soap, data, "tt:IPType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__IPType * SOAP_FMAC4 soap_get_tt__IPType(struct soap*, enum tt__IPType *, const char*, const char*);

#ifndef soap_read_tt__IPType
#define soap_read_tt__IPType(soap, data) ( ((data) ? (soap_default_tt__IPType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IPType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__NetworkHostType
#define SOAP_TYPE_tt__NetworkHostType (899)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__NetworkHostType(struct soap*, enum tt__NetworkHostType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkHostType(struct soap*, const char*, int, const enum tt__NetworkHostType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__NetworkHostType2s(struct soap*, enum tt__NetworkHostType);
SOAP_FMAC3 enum tt__NetworkHostType * SOAP_FMAC4 soap_in_tt__NetworkHostType(struct soap*, const char*, enum tt__NetworkHostType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__NetworkHostType(struct soap*, const char*, enum tt__NetworkHostType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__NetworkHostType(struct soap*, const enum tt__NetworkHostType *, const char*, const char*);

#ifndef soap_write_tt__NetworkHostType
#define soap_write_tt__NetworkHostType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__NetworkHostType(soap, data, "tt:NetworkHostType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__NetworkHostType * SOAP_FMAC4 soap_get_tt__NetworkHostType(struct soap*, enum tt__NetworkHostType *, const char*, const char*);

#ifndef soap_read_tt__NetworkHostType
#define soap_read_tt__NetworkHostType(soap, data) ( ((data) ? (soap_default_tt__NetworkHostType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__NetworkHostType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__NetworkProtocolType
#define SOAP_TYPE_tt__NetworkProtocolType (898)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__NetworkProtocolType(struct soap*, enum tt__NetworkProtocolType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkProtocolType(struct soap*, const char*, int, const enum tt__NetworkProtocolType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__NetworkProtocolType2s(struct soap*, enum tt__NetworkProtocolType);
SOAP_FMAC3 enum tt__NetworkProtocolType * SOAP_FMAC4 soap_in_tt__NetworkProtocolType(struct soap*, const char*, enum tt__NetworkProtocolType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__NetworkProtocolType(struct soap*, const char*, enum tt__NetworkProtocolType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__NetworkProtocolType(struct soap*, const enum tt__NetworkProtocolType *, const char*, const char*);

#ifndef soap_write_tt__NetworkProtocolType
#define soap_write_tt__NetworkProtocolType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__NetworkProtocolType(soap, data, "tt:NetworkProtocolType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__NetworkProtocolType * SOAP_FMAC4 soap_get_tt__NetworkProtocolType(struct soap*, enum tt__NetworkProtocolType *, const char*, const char*);

#ifndef soap_read_tt__NetworkProtocolType
#define soap_read_tt__NetworkProtocolType(soap, data) ( ((data) ? (soap_default_tt__NetworkProtocolType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__NetworkProtocolType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IPv6DHCPConfiguration
#define SOAP_TYPE_tt__IPv6DHCPConfiguration (897)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__IPv6DHCPConfiguration(struct soap*, enum tt__IPv6DHCPConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPv6DHCPConfiguration(struct soap*, const char*, int, const enum tt__IPv6DHCPConfiguration *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__IPv6DHCPConfiguration2s(struct soap*, enum tt__IPv6DHCPConfiguration);
SOAP_FMAC3 enum tt__IPv6DHCPConfiguration * SOAP_FMAC4 soap_in_tt__IPv6DHCPConfiguration(struct soap*, const char*, enum tt__IPv6DHCPConfiguration *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__IPv6DHCPConfiguration(struct soap*, const char*, enum tt__IPv6DHCPConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__IPv6DHCPConfiguration(struct soap*, const enum tt__IPv6DHCPConfiguration *, const char*, const char*);

#ifndef soap_write_tt__IPv6DHCPConfiguration
#define soap_write_tt__IPv6DHCPConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__IPv6DHCPConfiguration(soap, data, "tt:IPv6DHCPConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__IPv6DHCPConfiguration * SOAP_FMAC4 soap_get_tt__IPv6DHCPConfiguration(struct soap*, enum tt__IPv6DHCPConfiguration *, const char*, const char*);

#ifndef soap_read_tt__IPv6DHCPConfiguration
#define soap_read_tt__IPv6DHCPConfiguration(soap, data) ( ((data) ? (soap_default_tt__IPv6DHCPConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IPv6DHCPConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Duplex
#define SOAP_TYPE_tt__Duplex (895)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__Duplex(struct soap*, enum tt__Duplex *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Duplex(struct soap*, const char*, int, const enum tt__Duplex *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__Duplex2s(struct soap*, enum tt__Duplex);
SOAP_FMAC3 enum tt__Duplex * SOAP_FMAC4 soap_in_tt__Duplex(struct soap*, const char*, enum tt__Duplex *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__Duplex(struct soap*, const char*, enum tt__Duplex *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Duplex(struct soap*, const enum tt__Duplex *, const char*, const char*);

#ifndef soap_write_tt__Duplex
#define soap_write_tt__Duplex(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__Duplex(soap, data, "tt:Duplex", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__Duplex * SOAP_FMAC4 soap_get_tt__Duplex(struct soap*, enum tt__Duplex *, const char*, const char*);

#ifndef soap_read_tt__Duplex
#define soap_read_tt__Duplex(soap, data) ( ((data) ? (soap_default_tt__Duplex(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Duplex(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__DiscoveryMode
#define SOAP_TYPE_tt__DiscoveryMode (893)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__DiscoveryMode(struct soap*, enum tt__DiscoveryMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DiscoveryMode(struct soap*, const char*, int, const enum tt__DiscoveryMode *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__DiscoveryMode2s(struct soap*, enum tt__DiscoveryMode);
SOAP_FMAC3 enum tt__DiscoveryMode * SOAP_FMAC4 soap_in_tt__DiscoveryMode(struct soap*, const char*, enum tt__DiscoveryMode *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__DiscoveryMode(struct soap*, const char*, enum tt__DiscoveryMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__DiscoveryMode(struct soap*, const enum tt__DiscoveryMode *, const char*, const char*);

#ifndef soap_write_tt__DiscoveryMode
#define soap_write_tt__DiscoveryMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__DiscoveryMode(soap, data, "tt:DiscoveryMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__DiscoveryMode * SOAP_FMAC4 soap_get_tt__DiscoveryMode(struct soap*, enum tt__DiscoveryMode *, const char*, const char*);

#ifndef soap_read_tt__DiscoveryMode
#define soap_read_tt__DiscoveryMode(soap, data) ( ((data) ? (soap_default_tt__DiscoveryMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__DiscoveryMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ScopeDefinition
#define SOAP_TYPE_tt__ScopeDefinition (892)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__ScopeDefinition(struct soap*, enum tt__ScopeDefinition *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ScopeDefinition(struct soap*, const char*, int, const enum tt__ScopeDefinition *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__ScopeDefinition2s(struct soap*, enum tt__ScopeDefinition);
SOAP_FMAC3 enum tt__ScopeDefinition * SOAP_FMAC4 soap_in_tt__ScopeDefinition(struct soap*, const char*, enum tt__ScopeDefinition *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__ScopeDefinition(struct soap*, const char*, enum tt__ScopeDefinition *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ScopeDefinition(struct soap*, const enum tt__ScopeDefinition *, const char*, const char*);

#ifndef soap_write_tt__ScopeDefinition
#define soap_write_tt__ScopeDefinition(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__ScopeDefinition(soap, data, "tt:ScopeDefinition", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__ScopeDefinition * SOAP_FMAC4 soap_get_tt__ScopeDefinition(struct soap*, enum tt__ScopeDefinition *, const char*, const char*);

#ifndef soap_read_tt__ScopeDefinition
#define soap_read_tt__ScopeDefinition(soap, data) ( ((data) ? (soap_default_tt__ScopeDefinition(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ScopeDefinition(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__TransportProtocol
#define SOAP_TYPE_tt__TransportProtocol (891)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__TransportProtocol(struct soap*, enum tt__TransportProtocol *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__TransportProtocol(struct soap*, const char*, int, const enum tt__TransportProtocol *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__TransportProtocol2s(struct soap*, enum tt__TransportProtocol);
SOAP_FMAC3 enum tt__TransportProtocol * SOAP_FMAC4 soap_in_tt__TransportProtocol(struct soap*, const char*, enum tt__TransportProtocol *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__TransportProtocol(struct soap*, const char*, enum tt__TransportProtocol *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__TransportProtocol(struct soap*, const enum tt__TransportProtocol *, const char*, const char*);

#ifndef soap_write_tt__TransportProtocol
#define soap_write_tt__TransportProtocol(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__TransportProtocol(soap, data, "tt:TransportProtocol", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__TransportProtocol * SOAP_FMAC4 soap_get_tt__TransportProtocol(struct soap*, enum tt__TransportProtocol *, const char*, const char*);

#ifndef soap_read_tt__TransportProtocol
#define soap_read_tt__TransportProtocol(soap, data) ( ((data) ? (soap_default_tt__TransportProtocol(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__TransportProtocol(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__StreamType
#define SOAP_TYPE_tt__StreamType (890)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__StreamType(struct soap*, enum tt__StreamType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__StreamType(struct soap*, const char*, int, const enum tt__StreamType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__StreamType2s(struct soap*, enum tt__StreamType);
SOAP_FMAC3 enum tt__StreamType * SOAP_FMAC4 soap_in_tt__StreamType(struct soap*, const char*, enum tt__StreamType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__StreamType(struct soap*, const char*, enum tt__StreamType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__StreamType(struct soap*, const enum tt__StreamType *, const char*, const char*);

#ifndef soap_write_tt__StreamType
#define soap_write_tt__StreamType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__StreamType(soap, data, "tt:StreamType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__StreamType * SOAP_FMAC4 soap_get_tt__StreamType(struct soap*, enum tt__StreamType *, const char*, const char*);

#ifndef soap_read_tt__StreamType
#define soap_read_tt__StreamType(soap, data) ( ((data) ? (soap_default_tt__StreamType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__StreamType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__MetadataCompressionType
#define SOAP_TYPE_tt__MetadataCompressionType (889)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__MetadataCompressionType(struct soap*, enum tt__MetadataCompressionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MetadataCompressionType(struct soap*, const char*, int, const enum tt__MetadataCompressionType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__MetadataCompressionType2s(struct soap*, enum tt__MetadataCompressionType);
SOAP_FMAC3 enum tt__MetadataCompressionType * SOAP_FMAC4 soap_in_tt__MetadataCompressionType(struct soap*, const char*, enum tt__MetadataCompressionType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__MetadataCompressionType(struct soap*, const char*, enum tt__MetadataCompressionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__MetadataCompressionType(struct soap*, const enum tt__MetadataCompressionType *, const char*, const char*);

#ifndef soap_write_tt__MetadataCompressionType
#define soap_write_tt__MetadataCompressionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__MetadataCompressionType(soap, data, "tt:MetadataCompressionType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__MetadataCompressionType * SOAP_FMAC4 soap_get_tt__MetadataCompressionType(struct soap*, enum tt__MetadataCompressionType *, const char*, const char*);

#ifndef soap_read_tt__MetadataCompressionType
#define soap_read_tt__MetadataCompressionType(soap, data) ( ((data) ? (soap_default_tt__MetadataCompressionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MetadataCompressionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AudioEncodingMimeNames
#define SOAP_TYPE_tt__AudioEncodingMimeNames (888)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__AudioEncodingMimeNames(struct soap*, enum tt__AudioEncodingMimeNames *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioEncodingMimeNames(struct soap*, const char*, int, const enum tt__AudioEncodingMimeNames *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__AudioEncodingMimeNames2s(struct soap*, enum tt__AudioEncodingMimeNames);
SOAP_FMAC3 enum tt__AudioEncodingMimeNames * SOAP_FMAC4 soap_in_tt__AudioEncodingMimeNames(struct soap*, const char*, enum tt__AudioEncodingMimeNames *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__AudioEncodingMimeNames(struct soap*, const char*, enum tt__AudioEncodingMimeNames *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__AudioEncodingMimeNames(struct soap*, const enum tt__AudioEncodingMimeNames *, const char*, const char*);

#ifndef soap_write_tt__AudioEncodingMimeNames
#define soap_write_tt__AudioEncodingMimeNames(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__AudioEncodingMimeNames(soap, data, "tt:AudioEncodingMimeNames", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__AudioEncodingMimeNames * SOAP_FMAC4 soap_get_tt__AudioEncodingMimeNames(struct soap*, enum tt__AudioEncodingMimeNames *, const char*, const char*);

#ifndef soap_read_tt__AudioEncodingMimeNames
#define soap_read_tt__AudioEncodingMimeNames(soap, data) ( ((data) ? (soap_default_tt__AudioEncodingMimeNames(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AudioEncodingMimeNames(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AudioEncoding
#define SOAP_TYPE_tt__AudioEncoding (887)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__AudioEncoding(struct soap*, enum tt__AudioEncoding *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioEncoding(struct soap*, const char*, int, const enum tt__AudioEncoding *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__AudioEncoding2s(struct soap*, enum tt__AudioEncoding);
SOAP_FMAC3 enum tt__AudioEncoding * SOAP_FMAC4 soap_in_tt__AudioEncoding(struct soap*, const char*, enum tt__AudioEncoding *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__AudioEncoding(struct soap*, const char*, enum tt__AudioEncoding *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__AudioEncoding(struct soap*, const enum tt__AudioEncoding *, const char*, const char*);

#ifndef soap_write_tt__AudioEncoding
#define soap_write_tt__AudioEncoding(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__AudioEncoding(soap, data, "tt:AudioEncoding", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__AudioEncoding * SOAP_FMAC4 soap_get_tt__AudioEncoding(struct soap*, enum tt__AudioEncoding *, const char*, const char*);

#ifndef soap_read_tt__AudioEncoding
#define soap_read_tt__AudioEncoding(soap, data) ( ((data) ? (soap_default_tt__AudioEncoding(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AudioEncoding(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoEncodingProfiles
#define SOAP_TYPE_tt__VideoEncodingProfiles (886)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__VideoEncodingProfiles(struct soap*, enum tt__VideoEncodingProfiles *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoEncodingProfiles(struct soap*, const char*, int, const enum tt__VideoEncodingProfiles *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__VideoEncodingProfiles2s(struct soap*, enum tt__VideoEncodingProfiles);
SOAP_FMAC3 enum tt__VideoEncodingProfiles * SOAP_FMAC4 soap_in_tt__VideoEncodingProfiles(struct soap*, const char*, enum tt__VideoEncodingProfiles *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__VideoEncodingProfiles(struct soap*, const char*, enum tt__VideoEncodingProfiles *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__VideoEncodingProfiles(struct soap*, const enum tt__VideoEncodingProfiles *, const char*, const char*);

#ifndef soap_write_tt__VideoEncodingProfiles
#define soap_write_tt__VideoEncodingProfiles(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__VideoEncodingProfiles(soap, data, "tt:VideoEncodingProfiles", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__VideoEncodingProfiles * SOAP_FMAC4 soap_get_tt__VideoEncodingProfiles(struct soap*, enum tt__VideoEncodingProfiles *, const char*, const char*);

#ifndef soap_read_tt__VideoEncodingProfiles
#define soap_read_tt__VideoEncodingProfiles(soap, data) ( ((data) ? (soap_default_tt__VideoEncodingProfiles(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoEncodingProfiles(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoEncodingMimeNames
#define SOAP_TYPE_tt__VideoEncodingMimeNames (885)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__VideoEncodingMimeNames(struct soap*, enum tt__VideoEncodingMimeNames *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoEncodingMimeNames(struct soap*, const char*, int, const enum tt__VideoEncodingMimeNames *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__VideoEncodingMimeNames2s(struct soap*, enum tt__VideoEncodingMimeNames);
SOAP_FMAC3 enum tt__VideoEncodingMimeNames * SOAP_FMAC4 soap_in_tt__VideoEncodingMimeNames(struct soap*, const char*, enum tt__VideoEncodingMimeNames *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__VideoEncodingMimeNames(struct soap*, const char*, enum tt__VideoEncodingMimeNames *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__VideoEncodingMimeNames(struct soap*, const enum tt__VideoEncodingMimeNames *, const char*, const char*);

#ifndef soap_write_tt__VideoEncodingMimeNames
#define soap_write_tt__VideoEncodingMimeNames(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__VideoEncodingMimeNames(soap, data, "tt:VideoEncodingMimeNames", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__VideoEncodingMimeNames * SOAP_FMAC4 soap_get_tt__VideoEncodingMimeNames(struct soap*, enum tt__VideoEncodingMimeNames *, const char*, const char*);

#ifndef soap_read_tt__VideoEncodingMimeNames
#define soap_read_tt__VideoEncodingMimeNames(soap, data) ( ((data) ? (soap_default_tt__VideoEncodingMimeNames(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoEncodingMimeNames(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__H264Profile
#define SOAP_TYPE_tt__H264Profile (884)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__H264Profile(struct soap*, enum tt__H264Profile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__H264Profile(struct soap*, const char*, int, const enum tt__H264Profile *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__H264Profile2s(struct soap*, enum tt__H264Profile);
SOAP_FMAC3 enum tt__H264Profile * SOAP_FMAC4 soap_in_tt__H264Profile(struct soap*, const char*, enum tt__H264Profile *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__H264Profile(struct soap*, const char*, enum tt__H264Profile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__H264Profile(struct soap*, const enum tt__H264Profile *, const char*, const char*);

#ifndef soap_write_tt__H264Profile
#define soap_write_tt__H264Profile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__H264Profile(soap, data, "tt:H264Profile", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__H264Profile * SOAP_FMAC4 soap_get_tt__H264Profile(struct soap*, enum tt__H264Profile *, const char*, const char*);

#ifndef soap_read_tt__H264Profile
#define soap_read_tt__H264Profile(soap, data) ( ((data) ? (soap_default_tt__H264Profile(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__H264Profile(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Mpeg4Profile
#define SOAP_TYPE_tt__Mpeg4Profile (883)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__Mpeg4Profile(struct soap*, enum tt__Mpeg4Profile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Mpeg4Profile(struct soap*, const char*, int, const enum tt__Mpeg4Profile *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__Mpeg4Profile2s(struct soap*, enum tt__Mpeg4Profile);
SOAP_FMAC3 enum tt__Mpeg4Profile * SOAP_FMAC4 soap_in_tt__Mpeg4Profile(struct soap*, const char*, enum tt__Mpeg4Profile *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__Mpeg4Profile(struct soap*, const char*, enum tt__Mpeg4Profile *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Mpeg4Profile(struct soap*, const enum tt__Mpeg4Profile *, const char*, const char*);

#ifndef soap_write_tt__Mpeg4Profile
#define soap_write_tt__Mpeg4Profile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__Mpeg4Profile(soap, data, "tt:Mpeg4Profile", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__Mpeg4Profile * SOAP_FMAC4 soap_get_tt__Mpeg4Profile(struct soap*, enum tt__Mpeg4Profile *, const char*, const char*);

#ifndef soap_read_tt__Mpeg4Profile
#define soap_read_tt__Mpeg4Profile(soap, data) ( ((data) ? (soap_default_tt__Mpeg4Profile(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Mpeg4Profile(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoEncoding
#define SOAP_TYPE_tt__VideoEncoding (882)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__VideoEncoding(struct soap*, enum tt__VideoEncoding *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoEncoding(struct soap*, const char*, int, const enum tt__VideoEncoding *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__VideoEncoding2s(struct soap*, enum tt__VideoEncoding);
SOAP_FMAC3 enum tt__VideoEncoding * SOAP_FMAC4 soap_in_tt__VideoEncoding(struct soap*, const char*, enum tt__VideoEncoding *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__VideoEncoding(struct soap*, const char*, enum tt__VideoEncoding *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__VideoEncoding(struct soap*, const enum tt__VideoEncoding *, const char*, const char*);

#ifndef soap_write_tt__VideoEncoding
#define soap_write_tt__VideoEncoding(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__VideoEncoding(soap, data, "tt:VideoEncoding", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__VideoEncoding * SOAP_FMAC4 soap_get_tt__VideoEncoding(struct soap*, enum tt__VideoEncoding *, const char*, const char*);

#ifndef soap_read_tt__VideoEncoding
#define soap_read_tt__VideoEncoding(soap, data) ( ((data) ? (soap_default_tt__VideoEncoding(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoEncoding(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ViewModes
#define SOAP_TYPE_tt__ViewModes (881)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__ViewModes(struct soap*, enum tt__ViewModes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ViewModes(struct soap*, const char*, int, const enum tt__ViewModes *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__ViewModes2s(struct soap*, enum tt__ViewModes);
SOAP_FMAC3 enum tt__ViewModes * SOAP_FMAC4 soap_in_tt__ViewModes(struct soap*, const char*, enum tt__ViewModes *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__ViewModes(struct soap*, const char*, enum tt__ViewModes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ViewModes(struct soap*, const enum tt__ViewModes *, const char*, const char*);

#ifndef soap_write_tt__ViewModes
#define soap_write_tt__ViewModes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__ViewModes(soap, data, "tt:ViewModes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__ViewModes * SOAP_FMAC4 soap_get_tt__ViewModes(struct soap*, enum tt__ViewModes *, const char*, const char*);

#ifndef soap_read_tt__ViewModes
#define soap_read_tt__ViewModes(soap, data) ( ((data) ? (soap_default_tt__ViewModes(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ViewModes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SceneOrientationOption
#define SOAP_TYPE_tt__SceneOrientationOption (880)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__SceneOrientationOption(struct soap*, enum tt__SceneOrientationOption *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SceneOrientationOption(struct soap*, const char*, int, const enum tt__SceneOrientationOption *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__SceneOrientationOption2s(struct soap*, enum tt__SceneOrientationOption);
SOAP_FMAC3 enum tt__SceneOrientationOption * SOAP_FMAC4 soap_in_tt__SceneOrientationOption(struct soap*, const char*, enum tt__SceneOrientationOption *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__SceneOrientationOption(struct soap*, const char*, enum tt__SceneOrientationOption *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__SceneOrientationOption(struct soap*, const enum tt__SceneOrientationOption *, const char*, const char*);

#ifndef soap_write_tt__SceneOrientationOption
#define soap_write_tt__SceneOrientationOption(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__SceneOrientationOption(soap, data, "tt:SceneOrientationOption", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__SceneOrientationOption * SOAP_FMAC4 soap_get_tt__SceneOrientationOption(struct soap*, enum tt__SceneOrientationOption *, const char*, const char*);

#ifndef soap_read_tt__SceneOrientationOption
#define soap_read_tt__SceneOrientationOption(soap, data) ( ((data) ? (soap_default_tt__SceneOrientationOption(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__SceneOrientationOption(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SceneOrientationMode
#define SOAP_TYPE_tt__SceneOrientationMode (879)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__SceneOrientationMode(struct soap*, enum tt__SceneOrientationMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SceneOrientationMode(struct soap*, const char*, int, const enum tt__SceneOrientationMode *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__SceneOrientationMode2s(struct soap*, enum tt__SceneOrientationMode);
SOAP_FMAC3 enum tt__SceneOrientationMode * SOAP_FMAC4 soap_in_tt__SceneOrientationMode(struct soap*, const char*, enum tt__SceneOrientationMode *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__SceneOrientationMode(struct soap*, const char*, enum tt__SceneOrientationMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__SceneOrientationMode(struct soap*, const enum tt__SceneOrientationMode *, const char*, const char*);

#ifndef soap_write_tt__SceneOrientationMode
#define soap_write_tt__SceneOrientationMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__SceneOrientationMode(soap, data, "tt:SceneOrientationMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__SceneOrientationMode * SOAP_FMAC4 soap_get_tt__SceneOrientationMode(struct soap*, enum tt__SceneOrientationMode *, const char*, const char*);

#ifndef soap_read_tt__SceneOrientationMode
#define soap_read_tt__SceneOrientationMode(soap, data) ( ((data) ? (soap_default_tt__SceneOrientationMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__SceneOrientationMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RotateMode
#define SOAP_TYPE_tt__RotateMode (878)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tt__RotateMode(struct soap*, enum tt__RotateMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RotateMode(struct soap*, const char*, int, const enum tt__RotateMode *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tt__RotateMode2s(struct soap*, enum tt__RotateMode);
SOAP_FMAC3 enum tt__RotateMode * SOAP_FMAC4 soap_in_tt__RotateMode(struct soap*, const char*, enum tt__RotateMode *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tt__RotateMode(struct soap*, const char*, enum tt__RotateMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__RotateMode(struct soap*, const enum tt__RotateMode *, const char*, const char*);

#ifndef soap_write_tt__RotateMode
#define soap_write_tt__RotateMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tt__RotateMode(soap, data, "tt:RotateMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__RotateMode * SOAP_FMAC4 soap_get_tt__RotateMode(struct soap*, enum tt__RotateMode *, const char*, const char*);

#ifndef soap_read_tt__RotateMode
#define soap_read_tt__RotateMode(soap, data) ( ((data) ? (soap_default_tt__RotateMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RotateMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tds__StorageType
#define SOAP_TYPE_tds__StorageType (875)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tds__StorageType(struct soap*, enum tds__StorageType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tds__StorageType(struct soap*, const char*, int, const enum tds__StorageType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tds__StorageType2s(struct soap*, enum tds__StorageType);
SOAP_FMAC3 enum tds__StorageType * SOAP_FMAC4 soap_in_tds__StorageType(struct soap*, const char*, enum tds__StorageType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tds__StorageType(struct soap*, const char*, enum tds__StorageType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tds__StorageType(struct soap*, const enum tds__StorageType *, const char*, const char*);

#ifndef soap_write_tds__StorageType
#define soap_write_tds__StorageType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tds__StorageType(soap, data, "tds:StorageType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tds__StorageType * SOAP_FMAC4 soap_get_tds__StorageType(struct soap*, enum tds__StorageType *, const char*, const char*);

#ifndef soap_read_tds__StorageType
#define soap_read_tds__StorageType(soap, data) ( ((data) ? (soap_default_tds__StorageType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tds__StorageType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tds__AutoGeoModes
#define SOAP_TYPE_tds__AutoGeoModes (874)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tds__AutoGeoModes(struct soap*, enum tds__AutoGeoModes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tds__AutoGeoModes(struct soap*, const char*, int, const enum tds__AutoGeoModes *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tds__AutoGeoModes2s(struct soap*, enum tds__AutoGeoModes);
SOAP_FMAC3 enum tds__AutoGeoModes * SOAP_FMAC4 soap_in_tds__AutoGeoModes(struct soap*, const char*, enum tds__AutoGeoModes *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tds__AutoGeoModes(struct soap*, const char*, enum tds__AutoGeoModes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tds__AutoGeoModes(struct soap*, const enum tds__AutoGeoModes *, const char*, const char*);

#ifndef soap_write_tds__AutoGeoModes
#define soap_write_tds__AutoGeoModes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tds__AutoGeoModes(soap, data, "tds:AutoGeoModes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tds__AutoGeoModes * SOAP_FMAC4 soap_get_tds__AutoGeoModes(struct soap*, enum tds__AutoGeoModes *, const char*, const char*);

#ifndef soap_read_tds__AutoGeoModes
#define soap_read_tds__AutoGeoModes(soap, data) ( ((data) ? (soap_default_tds__AutoGeoModes(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tds__AutoGeoModes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tmd__ParityBit
#define SOAP_TYPE_tmd__ParityBit (873)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tmd__ParityBit(struct soap*, enum tmd__ParityBit *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tmd__ParityBit(struct soap*, const char*, int, const enum tmd__ParityBit *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tmd__ParityBit2s(struct soap*, enum tmd__ParityBit);
SOAP_FMAC3 enum tmd__ParityBit * SOAP_FMAC4 soap_in_tmd__ParityBit(struct soap*, const char*, enum tmd__ParityBit *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tmd__ParityBit(struct soap*, const char*, enum tmd__ParityBit *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tmd__ParityBit(struct soap*, const enum tmd__ParityBit *, const char*, const char*);

#ifndef soap_write_tmd__ParityBit
#define soap_write_tmd__ParityBit(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tmd__ParityBit(soap, data, "tmd:ParityBit", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tmd__ParityBit * SOAP_FMAC4 soap_get_tmd__ParityBit(struct soap*, enum tmd__ParityBit *, const char*, const char*);

#ifndef soap_read_tmd__ParityBit
#define soap_read_tmd__ParityBit(soap, data) ( ((data) ? (soap_default_tmd__ParityBit(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tmd__ParityBit(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tmd__SerialPortType
#define SOAP_TYPE_tmd__SerialPortType (872)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_tmd__SerialPortType(struct soap*, enum tmd__SerialPortType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tmd__SerialPortType(struct soap*, const char*, int, const enum tmd__SerialPortType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_tmd__SerialPortType2s(struct soap*, enum tmd__SerialPortType);
SOAP_FMAC3 enum tmd__SerialPortType * SOAP_FMAC4 soap_in_tmd__SerialPortType(struct soap*, const char*, enum tmd__SerialPortType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2tmd__SerialPortType(struct soap*, const char*, enum tmd__SerialPortType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_tmd__SerialPortType(struct soap*, const enum tmd__SerialPortType *, const char*, const char*);

#ifndef soap_write_tmd__SerialPortType
#define soap_write_tmd__SerialPortType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_tmd__SerialPortType(soap, data, "tmd:SerialPortType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tmd__SerialPortType * SOAP_FMAC4 soap_get_tmd__SerialPortType(struct soap*, enum tmd__SerialPortType *, const char*, const char*);

#ifndef soap_read_tmd__SerialPortType
#define soap_read_tmd__SerialPortType(soap, data) ( ((data) ? (soap_default_tmd__SerialPortType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tmd__SerialPortType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wsa5__IsReferenceParameter
#define SOAP_TYPE__wsa5__IsReferenceParameter (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__wsa5__IsReferenceParameter(struct soap*, enum _wsa5__IsReferenceParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsa5__IsReferenceParameter(struct soap*, const char*, int, const enum _wsa5__IsReferenceParameter *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap__wsa5__IsReferenceParameter2s(struct soap*, enum _wsa5__IsReferenceParameter);
SOAP_FMAC3 enum _wsa5__IsReferenceParameter * SOAP_FMAC4 soap_in__wsa5__IsReferenceParameter(struct soap*, const char*, enum _wsa5__IsReferenceParameter *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2_wsa5__IsReferenceParameter(struct soap*, const char*, enum _wsa5__IsReferenceParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__wsa5__IsReferenceParameter(struct soap*, const enum _wsa5__IsReferenceParameter *, const char*, const char*);

#ifndef soap_write__wsa5__IsReferenceParameter
#define soap_write__wsa5__IsReferenceParameter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put__wsa5__IsReferenceParameter(soap, data, "wsa5:IsReferenceParameter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum _wsa5__IsReferenceParameter * SOAP_FMAC4 soap_get__wsa5__IsReferenceParameter(struct soap*, enum _wsa5__IsReferenceParameter *, const char*, const char*);

#ifndef soap_read__wsa5__IsReferenceParameter
#define soap_read__wsa5__IsReferenceParameter(soap, data) ( ((data) ? (soap_default__wsa5__IsReferenceParameter(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsa5__IsReferenceParameter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsa5__FaultCodesType
#define SOAP_TYPE_wsa5__FaultCodesType (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__FaultCodesType(struct soap*, enum wsa5__FaultCodesType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__FaultCodesType(struct soap*, const char*, int, const enum wsa5__FaultCodesType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsa5__FaultCodesType2s(struct soap*, enum wsa5__FaultCodesType);
SOAP_FMAC3 enum wsa5__FaultCodesType * SOAP_FMAC4 soap_in_wsa5__FaultCodesType(struct soap*, const char*, enum wsa5__FaultCodesType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsa5__FaultCodesType(struct soap*, const char*, enum wsa5__FaultCodesType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__FaultCodesType(struct soap*, const enum wsa5__FaultCodesType *, const char*, const char*);

#ifndef soap_write_wsa5__FaultCodesType
#define soap_write_wsa5__FaultCodesType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsa5__FaultCodesType(soap, data, "wsa5:FaultCodesType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum wsa5__FaultCodesType * SOAP_FMAC4 soap_get_wsa5__FaultCodesType(struct soap*, enum wsa5__FaultCodesType *, const char*, const char*);

#ifndef soap_read_wsa5__FaultCodesType
#define soap_read_wsa5__FaultCodesType(soap, data) ( ((data) ? (soap_default_wsa5__FaultCodesType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsa5__FaultCodesType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsa5__RelationshipType
#define SOAP_TYPE_wsa5__RelationshipType (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__RelationshipType(struct soap*, enum wsa5__RelationshipType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__RelationshipType(struct soap*, const char*, int, const enum wsa5__RelationshipType *, const char*);
SOAP_FMAC3S const char* SOAP_FMAC4S soap_wsa5__RelationshipType2s(struct soap*, enum wsa5__RelationshipType);
SOAP_FMAC3 enum wsa5__RelationshipType * SOAP_FMAC4 soap_in_wsa5__RelationshipType(struct soap*, const char*, enum wsa5__RelationshipType *, const char*);
SOAP_FMAC3S int SOAP_FMAC4S soap_s2wsa5__RelationshipType(struct soap*, const char*, enum wsa5__RelationshipType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__RelationshipType(struct soap*, const enum wsa5__RelationshipType *, const char*, const char*);

#ifndef soap_write_wsa5__RelationshipType
#define soap_write_wsa5__RelationshipType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || soap_put_wsa5__RelationshipType(soap, data, "wsa5:RelationshipType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum wsa5__RelationshipType * SOAP_FMAC4 soap_get_wsa5__RelationshipType(struct soap*, enum wsa5__RelationshipType *, const char*, const char*);

#ifndef soap_read_wsa5__RelationshipType
#define soap_read_wsa5__RelationshipType(soap, data) ( ((data) ? (soap_default_wsa5__RelationshipType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsa5__RelationshipType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wstop__TopicNamespaceType_Topic
#define SOAP_TYPE__wstop__TopicNamespaceType_Topic (1572)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wstop__TopicNamespaceType_Topic(struct soap*, const char*, int, const _wstop__TopicNamespaceType_Topic *, const char*);
SOAP_FMAC3 _wstop__TopicNamespaceType_Topic * SOAP_FMAC4 soap_in__wstop__TopicNamespaceType_Topic(struct soap*, const char*, _wstop__TopicNamespaceType_Topic *, const char*);
SOAP_FMAC1 _wstop__TopicNamespaceType_Topic * SOAP_FMAC2 soap_instantiate__wstop__TopicNamespaceType_Topic(struct soap*, int, const char*, const char*, size_t*);

inline _wstop__TopicNamespaceType_Topic * soap_new__wstop__TopicNamespaceType_Topic(struct soap *soap, int n = -1) { return soap_instantiate__wstop__TopicNamespaceType_Topic(soap, n, NULL, NULL, NULL); }

inline _wstop__TopicNamespaceType_Topic * soap_new_req__wstop__TopicNamespaceType_Topic(
	struct soap *soap,
	const std::string& name)
{	_wstop__TopicNamespaceType_Topic *_p = soap_new__wstop__TopicNamespaceType_Topic(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_wstop__TopicNamespaceType_Topic::name = name;
	}
	return _p;
}

inline _wstop__TopicNamespaceType_Topic * soap_new_set__wstop__TopicNamespaceType_Topic(
	struct soap *soap,
	wstop__Documentation *documentation,
	wstop__QueryExpressionType *MessagePattern,
	const std::vector<wstop__TopicType *> & Topic,
	const std::string& name,
	std::string *messageTypes,
	bool final_,
	std::string *parent)
{	_wstop__TopicNamespaceType_Topic *_p = soap_new__wstop__TopicNamespaceType_Topic(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_wstop__TopicNamespaceType_Topic::documentation = documentation;
		_p->_wstop__TopicNamespaceType_Topic::MessagePattern = MessagePattern;
		_p->_wstop__TopicNamespaceType_Topic::Topic = Topic;
		_p->_wstop__TopicNamespaceType_Topic::name = name;
		_p->_wstop__TopicNamespaceType_Topic::messageTypes = messageTypes;
		_p->_wstop__TopicNamespaceType_Topic::final_ = final_;
		_p->_wstop__TopicNamespaceType_Topic::parent = parent;
	}
	return _p;
}

#ifndef soap_write__wstop__TopicNamespaceType_Topic
#define soap_write__wstop__TopicNamespaceType_Topic(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wstop:TopicNamespaceType-Topic", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wstop__TopicNamespaceType_Topic * SOAP_FMAC4 soap_get__wstop__TopicNamespaceType_Topic(struct soap*, _wstop__TopicNamespaceType_Topic *, const char*, const char*);

#ifndef soap_read__wstop__TopicNamespaceType_Topic
#define soap_read__wstop__TopicNamespaceType_Topic(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__wstop__TopicNamespaceType_Topic(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wsrfbf__BaseFaultType_FaultCause
#define SOAP_TYPE__wsrfbf__BaseFaultType_FaultCause (1529)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsrfbf__BaseFaultType_FaultCause(struct soap*, const char*, int, const _wsrfbf__BaseFaultType_FaultCause *, const char*);
SOAP_FMAC3 _wsrfbf__BaseFaultType_FaultCause * SOAP_FMAC4 soap_in__wsrfbf__BaseFaultType_FaultCause(struct soap*, const char*, _wsrfbf__BaseFaultType_FaultCause *, const char*);
SOAP_FMAC1 _wsrfbf__BaseFaultType_FaultCause * SOAP_FMAC2 soap_instantiate__wsrfbf__BaseFaultType_FaultCause(struct soap*, int, const char*, const char*, size_t*);

inline _wsrfbf__BaseFaultType_FaultCause * soap_new__wsrfbf__BaseFaultType_FaultCause(struct soap *soap, int n = -1) { return soap_instantiate__wsrfbf__BaseFaultType_FaultCause(soap, n, NULL, NULL, NULL); }

inline _wsrfbf__BaseFaultType_FaultCause * soap_new_req__wsrfbf__BaseFaultType_FaultCause(
	struct soap *soap)
{	_wsrfbf__BaseFaultType_FaultCause *_p = soap_new__wsrfbf__BaseFaultType_FaultCause(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _wsrfbf__BaseFaultType_FaultCause * soap_new_set__wsrfbf__BaseFaultType_FaultCause(
	struct soap *soap)
{	_wsrfbf__BaseFaultType_FaultCause *_p = soap_new__wsrfbf__BaseFaultType_FaultCause(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__wsrfbf__BaseFaultType_FaultCause
#define soap_write__wsrfbf__BaseFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsrfbf:BaseFaultType-FaultCause", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsrfbf__BaseFaultType_FaultCause * SOAP_FMAC4 soap_get__wsrfbf__BaseFaultType_FaultCause(struct soap*, _wsrfbf__BaseFaultType_FaultCause *, const char*, const char*);

#ifndef soap_read__wsrfbf__BaseFaultType_FaultCause
#define soap_read__wsrfbf__BaseFaultType_FaultCause(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsrfbf__BaseFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wsrfbf__BaseFaultType_Description
#define SOAP_TYPE__wsrfbf__BaseFaultType_Description (1525)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsrfbf__BaseFaultType_Description(struct soap*, const char*, int, const _wsrfbf__BaseFaultType_Description *, const char*);
SOAP_FMAC3 _wsrfbf__BaseFaultType_Description * SOAP_FMAC4 soap_in__wsrfbf__BaseFaultType_Description(struct soap*, const char*, _wsrfbf__BaseFaultType_Description *, const char*);
SOAP_FMAC1 _wsrfbf__BaseFaultType_Description * SOAP_FMAC2 soap_instantiate__wsrfbf__BaseFaultType_Description(struct soap*, int, const char*, const char*, size_t*);

inline _wsrfbf__BaseFaultType_Description * soap_new__wsrfbf__BaseFaultType_Description(struct soap *soap, int n = -1) { return soap_instantiate__wsrfbf__BaseFaultType_Description(soap, n, NULL, NULL, NULL); }

inline _wsrfbf__BaseFaultType_Description * soap_new_req__wsrfbf__BaseFaultType_Description(
	struct soap *soap,
	const std::string& __item)
{	_wsrfbf__BaseFaultType_Description *_p = soap_new__wsrfbf__BaseFaultType_Description(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_wsrfbf__BaseFaultType_Description::__item = __item;
	}
	return _p;
}

inline _wsrfbf__BaseFaultType_Description * soap_new_set__wsrfbf__BaseFaultType_Description(
	struct soap *soap,
	const std::string& __item,
	std::string *xml__lang)
{	_wsrfbf__BaseFaultType_Description *_p = soap_new__wsrfbf__BaseFaultType_Description(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_wsrfbf__BaseFaultType_Description::__item = __item;
		_p->_wsrfbf__BaseFaultType_Description::xml__lang = xml__lang;
	}
	return _p;
}

#ifndef soap_write__wsrfbf__BaseFaultType_Description
#define soap_write__wsrfbf__BaseFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsrfbf:BaseFaultType-Description", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsrfbf__BaseFaultType_Description * SOAP_FMAC4 soap_get__wsrfbf__BaseFaultType_Description(struct soap*, _wsrfbf__BaseFaultType_Description *, const char*, const char*);

#ifndef soap_read__wsrfbf__BaseFaultType_Description
#define soap_read__wsrfbf__BaseFaultType_Description(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsrfbf__BaseFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wsrfbf__BaseFaultType_ErrorCode
#define SOAP_TYPE__wsrfbf__BaseFaultType_ErrorCode (1523)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsrfbf__BaseFaultType_ErrorCode(struct soap*, const char*, int, const _wsrfbf__BaseFaultType_ErrorCode *, const char*);
SOAP_FMAC3 _wsrfbf__BaseFaultType_ErrorCode * SOAP_FMAC4 soap_in__wsrfbf__BaseFaultType_ErrorCode(struct soap*, const char*, _wsrfbf__BaseFaultType_ErrorCode *, const char*);
SOAP_FMAC1 _wsrfbf__BaseFaultType_ErrorCode * SOAP_FMAC2 soap_instantiate__wsrfbf__BaseFaultType_ErrorCode(struct soap*, int, const char*, const char*, size_t*);

inline _wsrfbf__BaseFaultType_ErrorCode * soap_new__wsrfbf__BaseFaultType_ErrorCode(struct soap *soap, int n = -1) { return soap_instantiate__wsrfbf__BaseFaultType_ErrorCode(soap, n, NULL, NULL, NULL); }

inline _wsrfbf__BaseFaultType_ErrorCode * soap_new_req__wsrfbf__BaseFaultType_ErrorCode(
	struct soap *soap,
	const std::string& dialect)
{	_wsrfbf__BaseFaultType_ErrorCode *_p = soap_new__wsrfbf__BaseFaultType_ErrorCode(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_wsrfbf__BaseFaultType_ErrorCode::dialect = dialect;
	}
	return _p;
}

inline _wsrfbf__BaseFaultType_ErrorCode * soap_new_set__wsrfbf__BaseFaultType_ErrorCode(
	struct soap *soap,
	const std::string& dialect,
	char *__mixed)
{	_wsrfbf__BaseFaultType_ErrorCode *_p = soap_new__wsrfbf__BaseFaultType_ErrorCode(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_wsrfbf__BaseFaultType_ErrorCode::dialect = dialect;
		_p->_wsrfbf__BaseFaultType_ErrorCode::__mixed = __mixed;
	}
	return _p;
}

#ifndef soap_write__wsrfbf__BaseFaultType_ErrorCode
#define soap_write__wsrfbf__BaseFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsrfbf:BaseFaultType-ErrorCode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsrfbf__BaseFaultType_ErrorCode * SOAP_FMAC4 soap_get__wsrfbf__BaseFaultType_ErrorCode(struct soap*, _wsrfbf__BaseFaultType_ErrorCode *, const char*, const char*);

#ifndef soap_read__wsrfbf__BaseFaultType_ErrorCode
#define soap_read__wsrfbf__BaseFaultType_ErrorCode(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsrfbf__BaseFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wsnt__Subscribe_SubscriptionPolicy
#define SOAP_TYPE__wsnt__Subscribe_SubscriptionPolicy (1520)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__Subscribe_SubscriptionPolicy(struct soap*, const char*, int, const _wsnt__Subscribe_SubscriptionPolicy *, const char*);
SOAP_FMAC3 _wsnt__Subscribe_SubscriptionPolicy * SOAP_FMAC4 soap_in__wsnt__Subscribe_SubscriptionPolicy(struct soap*, const char*, _wsnt__Subscribe_SubscriptionPolicy *, const char*);
SOAP_FMAC1 _wsnt__Subscribe_SubscriptionPolicy * SOAP_FMAC2 soap_instantiate__wsnt__Subscribe_SubscriptionPolicy(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__Subscribe_SubscriptionPolicy * soap_new__wsnt__Subscribe_SubscriptionPolicy(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__Subscribe_SubscriptionPolicy(soap, n, NULL, NULL, NULL); }

inline _wsnt__Subscribe_SubscriptionPolicy * soap_new_req__wsnt__Subscribe_SubscriptionPolicy(
	struct soap *soap)
{	_wsnt__Subscribe_SubscriptionPolicy *_p = soap_new__wsnt__Subscribe_SubscriptionPolicy(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _wsnt__Subscribe_SubscriptionPolicy * soap_new_set__wsnt__Subscribe_SubscriptionPolicy(
	struct soap *soap)
{	_wsnt__Subscribe_SubscriptionPolicy *_p = soap_new__wsnt__Subscribe_SubscriptionPolicy(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__wsnt__Subscribe_SubscriptionPolicy
#define soap_write__wsnt__Subscribe_SubscriptionPolicy(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:Subscribe-SubscriptionPolicy", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__Subscribe_SubscriptionPolicy * SOAP_FMAC4 soap_get__wsnt__Subscribe_SubscriptionPolicy(struct soap*, _wsnt__Subscribe_SubscriptionPolicy *, const char*, const char*);

#ifndef soap_read__wsnt__Subscribe_SubscriptionPolicy
#define soap_read__wsnt__Subscribe_SubscriptionPolicy(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__Subscribe_SubscriptionPolicy(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wsnt__NotificationMessageHolderType_Message
#define SOAP_TYPE__wsnt__NotificationMessageHolderType_Message (1514)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__NotificationMessageHolderType_Message(struct soap*, const char*, int, const _wsnt__NotificationMessageHolderType_Message *, const char*);
SOAP_FMAC3 _wsnt__NotificationMessageHolderType_Message * SOAP_FMAC4 soap_in__wsnt__NotificationMessageHolderType_Message(struct soap*, const char*, _wsnt__NotificationMessageHolderType_Message *, const char*);
SOAP_FMAC1 _wsnt__NotificationMessageHolderType_Message * SOAP_FMAC2 soap_instantiate__wsnt__NotificationMessageHolderType_Message(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__NotificationMessageHolderType_Message * soap_new__wsnt__NotificationMessageHolderType_Message(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__NotificationMessageHolderType_Message(soap, n, NULL, NULL, NULL); }

inline _wsnt__NotificationMessageHolderType_Message * soap_new_req__wsnt__NotificationMessageHolderType_Message(
	struct soap *soap)
{	_wsnt__NotificationMessageHolderType_Message *_p = soap_new__wsnt__NotificationMessageHolderType_Message(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _wsnt__NotificationMessageHolderType_Message * soap_new_set__wsnt__NotificationMessageHolderType_Message(
	struct soap *soap)
{	_wsnt__NotificationMessageHolderType_Message *_p = soap_new__wsnt__NotificationMessageHolderType_Message(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__wsnt__NotificationMessageHolderType_Message
#define soap_write__wsnt__NotificationMessageHolderType_Message(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:NotificationMessageHolderType-Message", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__NotificationMessageHolderType_Message * SOAP_FMAC4 soap_get__wsnt__NotificationMessageHolderType_Message(struct soap*, _wsnt__NotificationMessageHolderType_Message *, const char*, const char*);

#ifndef soap_read__wsnt__NotificationMessageHolderType_Message
#define soap_read__wsnt__NotificationMessageHolderType_Message(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__NotificationMessageHolderType_Message(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tt__ConfigDescription_Messages
#define SOAP_TYPE__tt__ConfigDescription_Messages (1396)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__ConfigDescription_Messages(struct soap*, const char*, int, const _tt__ConfigDescription_Messages *, const char*);
SOAP_FMAC3 _tt__ConfigDescription_Messages * SOAP_FMAC4 soap_in__tt__ConfigDescription_Messages(struct soap*, const char*, _tt__ConfigDescription_Messages *, const char*);
SOAP_FMAC1 _tt__ConfigDescription_Messages * SOAP_FMAC2 soap_instantiate__tt__ConfigDescription_Messages(struct soap*, int, const char*, const char*, size_t*);

inline _tt__ConfigDescription_Messages * soap_new__tt__ConfigDescription_Messages(struct soap *soap, int n = -1) { return soap_instantiate__tt__ConfigDescription_Messages(soap, n, NULL, NULL, NULL); }

inline _tt__ConfigDescription_Messages * soap_new_req__tt__ConfigDescription_Messages(
	struct soap *soap,
	const std::string& ParentTopic)
{	_tt__ConfigDescription_Messages *_p = soap_new__tt__ConfigDescription_Messages(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tt__ConfigDescription_Messages::ParentTopic = ParentTopic;
	}
	return _p;
}

inline _tt__ConfigDescription_Messages * soap_new_set__tt__ConfigDescription_Messages(
	struct soap *soap,
	tt__ItemListDescription *Source,
	tt__ItemListDescription *Key,
	tt__ItemListDescription *Data,
	tt__MessageDescriptionExtension *Extension,
	bool *IsProperty,
	const std::string& ParentTopic)
{	_tt__ConfigDescription_Messages *_p = soap_new__tt__ConfigDescription_Messages(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tt__ConfigDescription_Messages::Source = Source;
		_p->_tt__ConfigDescription_Messages::Key = Key;
		_p->_tt__ConfigDescription_Messages::Data = Data;
		_p->_tt__ConfigDescription_Messages::Extension = Extension;
		_p->_tt__ConfigDescription_Messages::IsProperty = IsProperty;
		_p->_tt__ConfigDescription_Messages::ParentTopic = ParentTopic;
	}
	return _p;
}

#ifndef soap_write__tt__ConfigDescription_Messages
#define soap_write__tt__ConfigDescription_Messages(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ConfigDescription-Messages", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tt__ConfigDescription_Messages * SOAP_FMAC4 soap_get__tt__ConfigDescription_Messages(struct soap*, _tt__ConfigDescription_Messages *, const char*, const char*);

#ifndef soap_read__tt__ConfigDescription_Messages
#define soap_read__tt__ConfigDescription_Messages(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tt__ConfigDescription_Messages(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tt__ItemListDescription_ElementItemDescription
#define SOAP_TYPE__tt__ItemListDescription_ElementItemDescription (1385)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__ItemListDescription_ElementItemDescription(struct soap*, const char*, int, const _tt__ItemListDescription_ElementItemDescription *, const char*);
SOAP_FMAC3 _tt__ItemListDescription_ElementItemDescription * SOAP_FMAC4 soap_in__tt__ItemListDescription_ElementItemDescription(struct soap*, const char*, _tt__ItemListDescription_ElementItemDescription *, const char*);
SOAP_FMAC1 _tt__ItemListDescription_ElementItemDescription * SOAP_FMAC2 soap_instantiate__tt__ItemListDescription_ElementItemDescription(struct soap*, int, const char*, const char*, size_t*);

inline _tt__ItemListDescription_ElementItemDescription * soap_new__tt__ItemListDescription_ElementItemDescription(struct soap *soap, int n = -1) { return soap_instantiate__tt__ItemListDescription_ElementItemDescription(soap, n, NULL, NULL, NULL); }

inline _tt__ItemListDescription_ElementItemDescription * soap_new_req__tt__ItemListDescription_ElementItemDescription(
	struct soap *soap,
	const std::string& Name,
	const std::string& Type)
{	_tt__ItemListDescription_ElementItemDescription *_p = soap_new__tt__ItemListDescription_ElementItemDescription(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tt__ItemListDescription_ElementItemDescription::Name = Name;
		_p->_tt__ItemListDescription_ElementItemDescription::Type = Type;
	}
	return _p;
}

inline _tt__ItemListDescription_ElementItemDescription * soap_new_set__tt__ItemListDescription_ElementItemDescription(
	struct soap *soap,
	const std::string& Name,
	const std::string& Type)
{	_tt__ItemListDescription_ElementItemDescription *_p = soap_new__tt__ItemListDescription_ElementItemDescription(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tt__ItemListDescription_ElementItemDescription::Name = Name;
		_p->_tt__ItemListDescription_ElementItemDescription::Type = Type;
	}
	return _p;
}

#ifndef soap_write__tt__ItemListDescription_ElementItemDescription
#define soap_write__tt__ItemListDescription_ElementItemDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ItemListDescription-ElementItemDescription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tt__ItemListDescription_ElementItemDescription * SOAP_FMAC4 soap_get__tt__ItemListDescription_ElementItemDescription(struct soap*, _tt__ItemListDescription_ElementItemDescription *, const char*, const char*);

#ifndef soap_read__tt__ItemListDescription_ElementItemDescription
#define soap_read__tt__ItemListDescription_ElementItemDescription(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tt__ItemListDescription_ElementItemDescription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tt__ItemListDescription_SimpleItemDescription
#define SOAP_TYPE__tt__ItemListDescription_SimpleItemDescription (1382)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__ItemListDescription_SimpleItemDescription(struct soap*, const char*, int, const _tt__ItemListDescription_SimpleItemDescription *, const char*);
SOAP_FMAC3 _tt__ItemListDescription_SimpleItemDescription * SOAP_FMAC4 soap_in__tt__ItemListDescription_SimpleItemDescription(struct soap*, const char*, _tt__ItemListDescription_SimpleItemDescription *, const char*);
SOAP_FMAC1 _tt__ItemListDescription_SimpleItemDescription * SOAP_FMAC2 soap_instantiate__tt__ItemListDescription_SimpleItemDescription(struct soap*, int, const char*, const char*, size_t*);

inline _tt__ItemListDescription_SimpleItemDescription * soap_new__tt__ItemListDescription_SimpleItemDescription(struct soap *soap, int n = -1) { return soap_instantiate__tt__ItemListDescription_SimpleItemDescription(soap, n, NULL, NULL, NULL); }

inline _tt__ItemListDescription_SimpleItemDescription * soap_new_req__tt__ItemListDescription_SimpleItemDescription(
	struct soap *soap,
	const std::string& Name,
	const std::string& Type)
{	_tt__ItemListDescription_SimpleItemDescription *_p = soap_new__tt__ItemListDescription_SimpleItemDescription(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tt__ItemListDescription_SimpleItemDescription::Name = Name;
		_p->_tt__ItemListDescription_SimpleItemDescription::Type = Type;
	}
	return _p;
}

inline _tt__ItemListDescription_SimpleItemDescription * soap_new_set__tt__ItemListDescription_SimpleItemDescription(
	struct soap *soap,
	const std::string& Name,
	const std::string& Type)
{	_tt__ItemListDescription_SimpleItemDescription *_p = soap_new__tt__ItemListDescription_SimpleItemDescription(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tt__ItemListDescription_SimpleItemDescription::Name = Name;
		_p->_tt__ItemListDescription_SimpleItemDescription::Type = Type;
	}
	return _p;
}

#ifndef soap_write__tt__ItemListDescription_SimpleItemDescription
#define soap_write__tt__ItemListDescription_SimpleItemDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ItemListDescription-SimpleItemDescription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tt__ItemListDescription_SimpleItemDescription * SOAP_FMAC4 soap_get__tt__ItemListDescription_SimpleItemDescription(struct soap*, _tt__ItemListDescription_SimpleItemDescription *, const char*, const char*);

#ifndef soap_read__tt__ItemListDescription_SimpleItemDescription
#define soap_read__tt__ItemListDescription_SimpleItemDescription(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tt__ItemListDescription_SimpleItemDescription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tt__ItemList_ElementItem
#define SOAP_TYPE__tt__ItemList_ElementItem (1376)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__ItemList_ElementItem(struct soap*, const char*, int, const _tt__ItemList_ElementItem *, const char*);
SOAP_FMAC3 _tt__ItemList_ElementItem * SOAP_FMAC4 soap_in__tt__ItemList_ElementItem(struct soap*, const char*, _tt__ItemList_ElementItem *, const char*);
SOAP_FMAC1 _tt__ItemList_ElementItem * SOAP_FMAC2 soap_instantiate__tt__ItemList_ElementItem(struct soap*, int, const char*, const char*, size_t*);

inline _tt__ItemList_ElementItem * soap_new__tt__ItemList_ElementItem(struct soap *soap, int n = -1) { return soap_instantiate__tt__ItemList_ElementItem(soap, n, NULL, NULL, NULL); }

inline _tt__ItemList_ElementItem * soap_new_req__tt__ItemList_ElementItem(
	struct soap *soap,
	const std::string& Name)
{	_tt__ItemList_ElementItem *_p = soap_new__tt__ItemList_ElementItem(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tt__ItemList_ElementItem::Name = Name;
	}
	return _p;
}

inline _tt__ItemList_ElementItem * soap_new_set__tt__ItemList_ElementItem(
	struct soap *soap,
	const std::string& Name)
{	_tt__ItemList_ElementItem *_p = soap_new__tt__ItemList_ElementItem(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tt__ItemList_ElementItem::Name = Name;
	}
	return _p;
}

#ifndef soap_write__tt__ItemList_ElementItem
#define soap_write__tt__ItemList_ElementItem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ItemList-ElementItem", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tt__ItemList_ElementItem * SOAP_FMAC4 soap_get__tt__ItemList_ElementItem(struct soap*, _tt__ItemList_ElementItem *, const char*, const char*);

#ifndef soap_read__tt__ItemList_ElementItem
#define soap_read__tt__ItemList_ElementItem(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tt__ItemList_ElementItem(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tt__ItemList_SimpleItem
#define SOAP_TYPE__tt__ItemList_SimpleItem (1373)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__ItemList_SimpleItem(struct soap*, const char*, int, const _tt__ItemList_SimpleItem *, const char*);
SOAP_FMAC3 _tt__ItemList_SimpleItem * SOAP_FMAC4 soap_in__tt__ItemList_SimpleItem(struct soap*, const char*, _tt__ItemList_SimpleItem *, const char*);
SOAP_FMAC1 _tt__ItemList_SimpleItem * SOAP_FMAC2 soap_instantiate__tt__ItemList_SimpleItem(struct soap*, int, const char*, const char*, size_t*);

inline _tt__ItemList_SimpleItem * soap_new__tt__ItemList_SimpleItem(struct soap *soap, int n = -1) { return soap_instantiate__tt__ItemList_SimpleItem(soap, n, NULL, NULL, NULL); }

inline _tt__ItemList_SimpleItem * soap_new_req__tt__ItemList_SimpleItem(
	struct soap *soap,
	const std::string& Name,
	const std::string& Value)
{	_tt__ItemList_SimpleItem *_p = soap_new__tt__ItemList_SimpleItem(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tt__ItemList_SimpleItem::Name = Name;
		_p->_tt__ItemList_SimpleItem::Value = Value;
	}
	return _p;
}

inline _tt__ItemList_SimpleItem * soap_new_set__tt__ItemList_SimpleItem(
	struct soap *soap,
	const std::string& Name,
	const std::string& Value)
{	_tt__ItemList_SimpleItem *_p = soap_new__tt__ItemList_SimpleItem(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tt__ItemList_SimpleItem::Name = Name;
		_p->_tt__ItemList_SimpleItem::Value = Value;
	}
	return _p;
}

#ifndef soap_write__tt__ItemList_SimpleItem
#define soap_write__tt__ItemList_SimpleItem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ItemList-SimpleItem", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tt__ItemList_SimpleItem * SOAP_FMAC4 soap_get__tt__ItemList_SimpleItem(struct soap*, _tt__ItemList_SimpleItem *, const char*, const char*);

#ifndef soap_read__tt__ItemList_SimpleItem
#define soap_read__tt__ItemList_SimpleItem(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tt__ItemList_SimpleItem(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tt__EventSubscription_SubscriptionPolicy
#define SOAP_TYPE__tt__EventSubscription_SubscriptionPolicy (1142)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__EventSubscription_SubscriptionPolicy(struct soap*, const char*, int, const _tt__EventSubscription_SubscriptionPolicy *, const char*);
SOAP_FMAC3 _tt__EventSubscription_SubscriptionPolicy * SOAP_FMAC4 soap_in__tt__EventSubscription_SubscriptionPolicy(struct soap*, const char*, _tt__EventSubscription_SubscriptionPolicy *, const char*);
SOAP_FMAC1 _tt__EventSubscription_SubscriptionPolicy * SOAP_FMAC2 soap_instantiate__tt__EventSubscription_SubscriptionPolicy(struct soap*, int, const char*, const char*, size_t*);

inline _tt__EventSubscription_SubscriptionPolicy * soap_new__tt__EventSubscription_SubscriptionPolicy(struct soap *soap, int n = -1) { return soap_instantiate__tt__EventSubscription_SubscriptionPolicy(soap, n, NULL, NULL, NULL); }

inline _tt__EventSubscription_SubscriptionPolicy * soap_new_req__tt__EventSubscription_SubscriptionPolicy(
	struct soap *soap)
{	_tt__EventSubscription_SubscriptionPolicy *_p = soap_new__tt__EventSubscription_SubscriptionPolicy(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tt__EventSubscription_SubscriptionPolicy * soap_new_set__tt__EventSubscription_SubscriptionPolicy(
	struct soap *soap)
{	_tt__EventSubscription_SubscriptionPolicy *_p = soap_new__tt__EventSubscription_SubscriptionPolicy(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tt__EventSubscription_SubscriptionPolicy
#define soap_write__tt__EventSubscription_SubscriptionPolicy(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:EventSubscription-SubscriptionPolicy", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tt__EventSubscription_SubscriptionPolicy * SOAP_FMAC4 soap_get__tt__EventSubscription_SubscriptionPolicy(struct soap*, _tt__EventSubscription_SubscriptionPolicy *, const char*, const char*);

#ifndef soap_read__tt__EventSubscription_SubscriptionPolicy
#define soap_read__tt__EventSubscription_SubscriptionPolicy(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tt__EventSubscription_SubscriptionPolicy(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetSystemUrisResponse_Extension
#define SOAP_TYPE__tds__GetSystemUrisResponse_Extension (1084)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetSystemUrisResponse_Extension(struct soap*, const char*, int, const _tds__GetSystemUrisResponse_Extension *, const char*);
SOAP_FMAC3 _tds__GetSystemUrisResponse_Extension * SOAP_FMAC4 soap_in__tds__GetSystemUrisResponse_Extension(struct soap*, const char*, _tds__GetSystemUrisResponse_Extension *, const char*);
SOAP_FMAC1 _tds__GetSystemUrisResponse_Extension * SOAP_FMAC2 soap_instantiate__tds__GetSystemUrisResponse_Extension(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetSystemUrisResponse_Extension * soap_new__tds__GetSystemUrisResponse_Extension(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetSystemUrisResponse_Extension(soap, n, NULL, NULL, NULL); }

inline _tds__GetSystemUrisResponse_Extension * soap_new_req__tds__GetSystemUrisResponse_Extension(
	struct soap *soap)
{	_tds__GetSystemUrisResponse_Extension *_p = soap_new__tds__GetSystemUrisResponse_Extension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetSystemUrisResponse_Extension * soap_new_set__tds__GetSystemUrisResponse_Extension(
	struct soap *soap)
{	_tds__GetSystemUrisResponse_Extension *_p = soap_new__tds__GetSystemUrisResponse_Extension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetSystemUrisResponse_Extension
#define soap_write__tds__GetSystemUrisResponse_Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetSystemUrisResponse-Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemUrisResponse_Extension * SOAP_FMAC4 soap_get__tds__GetSystemUrisResponse_Extension(struct soap*, _tds__GetSystemUrisResponse_Extension *, const char*, const char*);

#ifndef soap_read__tds__GetSystemUrisResponse_Extension
#define soap_read__tds__GetSystemUrisResponse_Extension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetSystemUrisResponse_Extension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__StorageConfigurationData_Extension
#define SOAP_TYPE__tds__StorageConfigurationData_Extension (1021)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__StorageConfigurationData_Extension(struct soap*, const char*, int, const _tds__StorageConfigurationData_Extension *, const char*);
SOAP_FMAC3 _tds__StorageConfigurationData_Extension * SOAP_FMAC4 soap_in__tds__StorageConfigurationData_Extension(struct soap*, const char*, _tds__StorageConfigurationData_Extension *, const char*);
SOAP_FMAC1 _tds__StorageConfigurationData_Extension * SOAP_FMAC2 soap_instantiate__tds__StorageConfigurationData_Extension(struct soap*, int, const char*, const char*, size_t*);

inline _tds__StorageConfigurationData_Extension * soap_new__tds__StorageConfigurationData_Extension(struct soap *soap, int n = -1) { return soap_instantiate__tds__StorageConfigurationData_Extension(soap, n, NULL, NULL, NULL); }

inline _tds__StorageConfigurationData_Extension * soap_new_req__tds__StorageConfigurationData_Extension(
	struct soap *soap)
{	_tds__StorageConfigurationData_Extension *_p = soap_new__tds__StorageConfigurationData_Extension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__StorageConfigurationData_Extension * soap_new_set__tds__StorageConfigurationData_Extension(
	struct soap *soap)
{	_tds__StorageConfigurationData_Extension *_p = soap_new__tds__StorageConfigurationData_Extension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__StorageConfigurationData_Extension
#define soap_write__tds__StorageConfigurationData_Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:StorageConfigurationData-Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__StorageConfigurationData_Extension * SOAP_FMAC4 soap_get__tds__StorageConfigurationData_Extension(struct soap*, _tds__StorageConfigurationData_Extension *, const char*, const char*);

#ifndef soap_read__tds__StorageConfigurationData_Extension
#define soap_read__tds__StorageConfigurationData_Extension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__StorageConfigurationData_Extension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__UserCredential_Extension
#define SOAP_TYPE__tds__UserCredential_Extension (1017)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__UserCredential_Extension(struct soap*, const char*, int, const _tds__UserCredential_Extension *, const char*);
SOAP_FMAC3 _tds__UserCredential_Extension * SOAP_FMAC4 soap_in__tds__UserCredential_Extension(struct soap*, const char*, _tds__UserCredential_Extension *, const char*);
SOAP_FMAC1 _tds__UserCredential_Extension * SOAP_FMAC2 soap_instantiate__tds__UserCredential_Extension(struct soap*, int, const char*, const char*, size_t*);

inline _tds__UserCredential_Extension * soap_new__tds__UserCredential_Extension(struct soap *soap, int n = -1) { return soap_instantiate__tds__UserCredential_Extension(soap, n, NULL, NULL, NULL); }

inline _tds__UserCredential_Extension * soap_new_req__tds__UserCredential_Extension(
	struct soap *soap)
{	_tds__UserCredential_Extension *_p = soap_new__tds__UserCredential_Extension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__UserCredential_Extension * soap_new_set__tds__UserCredential_Extension(
	struct soap *soap)
{	_tds__UserCredential_Extension *_p = soap_new__tds__UserCredential_Extension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__UserCredential_Extension
#define soap_write__tds__UserCredential_Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:UserCredential-Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__UserCredential_Extension * SOAP_FMAC4 soap_get__tds__UserCredential_Extension(struct soap*, _tds__UserCredential_Extension *, const char*, const char*);

#ifndef soap_read__tds__UserCredential_Extension
#define soap_read__tds__UserCredential_Extension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__UserCredential_Extension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__Service_Capabilities
#define SOAP_TYPE__tds__Service_Capabilities (1008)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__Service_Capabilities(struct soap*, const char*, int, const _tds__Service_Capabilities *, const char*);
SOAP_FMAC3 _tds__Service_Capabilities * SOAP_FMAC4 soap_in__tds__Service_Capabilities(struct soap*, const char*, _tds__Service_Capabilities *, const char*);
SOAP_FMAC1 _tds__Service_Capabilities * SOAP_FMAC2 soap_instantiate__tds__Service_Capabilities(struct soap*, int, const char*, const char*, size_t*);

inline _tds__Service_Capabilities * soap_new__tds__Service_Capabilities(struct soap *soap, int n = -1) { return soap_instantiate__tds__Service_Capabilities(soap, n, NULL, NULL, NULL); }

inline _tds__Service_Capabilities * soap_new_req__tds__Service_Capabilities(
	struct soap *soap)
{	_tds__Service_Capabilities *_p = soap_new__tds__Service_Capabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__Service_Capabilities * soap_new_set__tds__Service_Capabilities(
	struct soap *soap)
{	_tds__Service_Capabilities *_p = soap_new__tds__Service_Capabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__Service_Capabilities
#define soap_write__tds__Service_Capabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:Service-Capabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__Service_Capabilities * SOAP_FMAC4 soap_get__tds__Service_Capabilities(struct soap*, _tds__Service_Capabilities *, const char*, const char*);

#ifndef soap_read__tds__Service_Capabilities
#define soap_read__tds__Service_Capabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__Service_Capabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

/* tt__RecordingJobReference is a typedef synonym for tt__ReferenceToken */

#ifndef SOAP_TYPE_tt__RecordingJobReference
#define SOAP_TYPE_tt__RecordingJobReference (967)
#endif

#define soap_default_tt__RecordingJobReference(soap, a) soap_default_tt__ReferenceToken(soap, a)


#define soap_serialize_tt__RecordingJobReference soap_serialize_tt__ReferenceToken


#define soap_tt__RecordingJobReference2s soap_tt__ReferenceToken2s


#define soap_out_tt__RecordingJobReference soap_out_tt__ReferenceToken


#define soap_s2tt__RecordingJobReference soap_s2tt__ReferenceToken


#define soap_in_tt__RecordingJobReference soap_in_tt__ReferenceToken


#define soap_instantiate_tt__RecordingJobReference soap_instantiate_tt__ReferenceToken


#define soap_new_tt__RecordingJobReference soap_new_tt__ReferenceToken


#define soap_put_tt__RecordingJobReference soap_put_tt__ReferenceToken


#define soap_write_tt__RecordingJobReference soap_write_tt__ReferenceToken


#define soap_get_tt__RecordingJobReference soap_get_tt__ReferenceToken


#define soap_read_tt__RecordingJobReference soap_read_tt__ReferenceToken

/* tt__JobToken is a typedef synonym for tt__ReferenceToken */

#ifndef SOAP_TYPE_tt__JobToken
#define SOAP_TYPE_tt__JobToken (966)
#endif

#define soap_default_tt__JobToken(soap, a) soap_default_tt__ReferenceToken(soap, a)


#define soap_serialize_tt__JobToken soap_serialize_tt__ReferenceToken


#define soap_tt__JobToken2s soap_tt__ReferenceToken2s


#define soap_out_tt__JobToken soap_out_tt__ReferenceToken


#define soap_s2tt__JobToken soap_s2tt__ReferenceToken


#define soap_in_tt__JobToken soap_in_tt__ReferenceToken


#define soap_instantiate_tt__JobToken soap_instantiate_tt__ReferenceToken


#define soap_new_tt__JobToken soap_new_tt__ReferenceToken


#define soap_put_tt__JobToken soap_put_tt__ReferenceToken


#define soap_write_tt__JobToken soap_write_tt__ReferenceToken


#define soap_get_tt__JobToken soap_get_tt__ReferenceToken


#define soap_read_tt__JobToken soap_read_tt__ReferenceToken

/* tt__TrackReference is a typedef synonym for tt__ReferenceToken */

#ifndef SOAP_TYPE_tt__TrackReference
#define SOAP_TYPE_tt__TrackReference (965)
#endif

#define soap_default_tt__TrackReference(soap, a) soap_default_tt__ReferenceToken(soap, a)


#define soap_serialize_tt__TrackReference soap_serialize_tt__ReferenceToken


#define soap_tt__TrackReference2s soap_tt__ReferenceToken2s


#define soap_out_tt__TrackReference soap_out_tt__ReferenceToken


#define soap_s2tt__TrackReference soap_s2tt__ReferenceToken


#define soap_in_tt__TrackReference soap_in_tt__ReferenceToken


#define soap_instantiate_tt__TrackReference soap_instantiate_tt__ReferenceToken


#define soap_new_tt__TrackReference soap_new_tt__ReferenceToken


#define soap_put_tt__TrackReference soap_put_tt__ReferenceToken


#define soap_write_tt__TrackReference soap_write_tt__ReferenceToken


#define soap_get_tt__TrackReference soap_get_tt__ReferenceToken


#define soap_read_tt__TrackReference soap_read_tt__ReferenceToken

/* tt__RecordingReference is a typedef synonym for tt__ReferenceToken */

#ifndef SOAP_TYPE_tt__RecordingReference
#define SOAP_TYPE_tt__RecordingReference (964)
#endif

#define soap_default_tt__RecordingReference(soap, a) soap_default_tt__ReferenceToken(soap, a)


#define soap_serialize_tt__RecordingReference soap_serialize_tt__ReferenceToken


#define soap_tt__RecordingReference2s soap_tt__ReferenceToken2s


#define soap_out_tt__RecordingReference soap_out_tt__ReferenceToken


#define soap_s2tt__RecordingReference soap_s2tt__ReferenceToken


#define soap_in_tt__RecordingReference soap_in_tt__ReferenceToken


#define soap_instantiate_tt__RecordingReference soap_instantiate_tt__ReferenceToken


#define soap_new_tt__RecordingReference soap_new_tt__ReferenceToken


#define soap_put_tt__RecordingReference soap_put_tt__ReferenceToken


#define soap_write_tt__RecordingReference soap_write_tt__ReferenceToken


#define soap_get_tt__RecordingReference soap_get_tt__ReferenceToken


#define soap_read_tt__RecordingReference soap_read_tt__ReferenceToken

/* tt__ReceiverReference is a typedef synonym for tt__ReferenceToken */

#ifndef SOAP_TYPE_tt__ReceiverReference
#define SOAP_TYPE_tt__ReceiverReference (963)
#endif

#define soap_default_tt__ReceiverReference(soap, a) soap_default_tt__ReferenceToken(soap, a)


#define soap_serialize_tt__ReceiverReference soap_serialize_tt__ReferenceToken


#define soap_tt__ReceiverReference2s soap_tt__ReferenceToken2s


#define soap_out_tt__ReceiverReference soap_out_tt__ReferenceToken


#define soap_s2tt__ReceiverReference soap_s2tt__ReferenceToken


#define soap_in_tt__ReceiverReference soap_in_tt__ReferenceToken


#define soap_instantiate_tt__ReceiverReference soap_instantiate_tt__ReferenceToken


#define soap_new_tt__ReceiverReference soap_new_tt__ReferenceToken


#define soap_put_tt__ReceiverReference soap_put_tt__ReferenceToken


#define soap_write_tt__ReceiverReference soap_write_tt__ReferenceToken


#define soap_get_tt__ReceiverReference soap_get_tt__ReferenceToken


#define soap_read_tt__ReceiverReference soap_read_tt__ReferenceToken

/* wstop__SimpleTopicExpression is a typedef synonym for xsd__QName */

#ifndef SOAP_TYPE_wstop__SimpleTopicExpression
#define SOAP_TYPE_wstop__SimpleTopicExpression (962)
#endif

#define soap_default_wstop__SimpleTopicExpression(soap, a) soap_default_xsd__QName(soap, a)


#define soap_serialize_wstop__SimpleTopicExpression soap_serialize_xsd__QName


#define soap_wstop__SimpleTopicExpression2s soap_xsd__QName2s


#define soap_out_wstop__SimpleTopicExpression soap_out_xsd__QName


#define soap_s2wstop__SimpleTopicExpression soap_s2xsd__QName


#define soap_in_wstop__SimpleTopicExpression soap_in_xsd__QName


#define soap_instantiate_wstop__SimpleTopicExpression soap_instantiate_xsd__QName


#define soap_new_wstop__SimpleTopicExpression soap_new_xsd__QName


#define soap_put_wstop__SimpleTopicExpression soap_put_xsd__QName


#define soap_write_wstop__SimpleTopicExpression soap_write_xsd__QName


#define soap_get_wstop__SimpleTopicExpression soap_get_xsd__QName


#define soap_read_wstop__SimpleTopicExpression soap_read_xsd__QName


#ifndef SOAP_TYPE_wstop__ConcreteTopicExpression
#define SOAP_TYPE_wstop__ConcreteTopicExpression (961)
#endif

#define soap_default_wstop__ConcreteTopicExpression(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wstop__ConcreteTopicExpression(struct soap*, const std::string *);

#define soap_wstop__ConcreteTopicExpression2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__ConcreteTopicExpression(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2wstop__ConcreteTopicExpression soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_wstop__ConcreteTopicExpression(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_wstop__ConcreteTopicExpression soap_instantiate_std__string


#define soap_new_wstop__ConcreteTopicExpression soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wstop__ConcreteTopicExpression(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_wstop__ConcreteTopicExpression
#define soap_write_wstop__ConcreteTopicExpression(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wstop__ConcreteTopicExpression(soap, data), 0) || soap_put_wstop__ConcreteTopicExpression(soap, data, "wstop:ConcreteTopicExpression", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_wstop__ConcreteTopicExpression(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_wstop__ConcreteTopicExpression
#define soap_read_wstop__ConcreteTopicExpression(soap, data) ( ((data) ? (soap_default_wstop__ConcreteTopicExpression(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wstop__ConcreteTopicExpression(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wstop__FullTopicExpression
#define SOAP_TYPE_wstop__FullTopicExpression (960)
#endif

#define soap_default_wstop__FullTopicExpression(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wstop__FullTopicExpression(struct soap*, const std::string *);

#define soap_wstop__FullTopicExpression2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__FullTopicExpression(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2wstop__FullTopicExpression soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_wstop__FullTopicExpression(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_wstop__FullTopicExpression soap_instantiate_std__string


#define soap_new_wstop__FullTopicExpression soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wstop__FullTopicExpression(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_wstop__FullTopicExpression
#define soap_write_wstop__FullTopicExpression(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wstop__FullTopicExpression(soap, data), 0) || soap_put_wstop__FullTopicExpression(soap, data, "wstop:FullTopicExpression", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_wstop__FullTopicExpression(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_wstop__FullTopicExpression
#define soap_read_wstop__FullTopicExpression(soap, data) ( ((data) ? (soap_default_wstop__FullTopicExpression(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wstop__FullTopicExpression(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AudioClassType
#define SOAP_TYPE_tt__AudioClassType (957)
#endif

#define soap_default_tt__AudioClassType(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__AudioClassType(struct soap*, const std::string *);

#define soap_tt__AudioClassType2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioClassType(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2tt__AudioClassType soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__AudioClassType(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_tt__AudioClassType soap_instantiate_std__string


#define soap_new_tt__AudioClassType soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__AudioClassType(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__AudioClassType
#define soap_write_tt__AudioClassType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__AudioClassType(soap, data), 0) || soap_put_tt__AudioClassType(soap, data, "tt:AudioClassType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__AudioClassType(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__AudioClassType
#define soap_read_tt__AudioClassType(soap, data) ( ((data) ? (soap_default_tt__AudioClassType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AudioClassType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RecordingJobState
#define SOAP_TYPE_tt__RecordingJobState (955)
#endif

#define soap_default_tt__RecordingJobState(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__RecordingJobState(struct soap*, const std::string *);

#define soap_tt__RecordingJobState2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingJobState(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2tt__RecordingJobState soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__RecordingJobState(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_tt__RecordingJobState soap_instantiate_std__string


#define soap_new_tt__RecordingJobState soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__RecordingJobState(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__RecordingJobState
#define soap_write_tt__RecordingJobState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__RecordingJobState(soap, data), 0) || soap_put_tt__RecordingJobState(soap, data, "tt:RecordingJobState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__RecordingJobState(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__RecordingJobState
#define soap_read_tt__RecordingJobState(soap, data) ( ((data) ? (soap_default_tt__RecordingJobState(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RecordingJobState(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RecordingJobMode
#define SOAP_TYPE_tt__RecordingJobMode (954)
#endif

#define soap_default_tt__RecordingJobMode(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__RecordingJobMode(struct soap*, const std::string *);

#define soap_tt__RecordingJobMode2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingJobMode(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2tt__RecordingJobMode soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__RecordingJobMode(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_tt__RecordingJobMode soap_instantiate_std__string


#define soap_new_tt__RecordingJobMode soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__RecordingJobMode(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__RecordingJobMode
#define soap_write_tt__RecordingJobMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__RecordingJobMode(soap, data), 0) || soap_put_tt__RecordingJobMode(soap, data, "tt:RecordingJobMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__RecordingJobMode(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__RecordingJobMode
#define soap_read_tt__RecordingJobMode(soap, data) ( ((data) ? (soap_default_tt__RecordingJobMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RecordingJobMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__XPathExpression
#define SOAP_TYPE_tt__XPathExpression (950)
#endif

#define soap_default_tt__XPathExpression(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__XPathExpression(struct soap*, const std::string *);

#define soap_tt__XPathExpression2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__XPathExpression(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2tt__XPathExpression soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__XPathExpression(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_tt__XPathExpression soap_instantiate_std__string


#define soap_new_tt__XPathExpression soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__XPathExpression(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__XPathExpression
#define soap_write_tt__XPathExpression(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__XPathExpression(soap, data), 0) || soap_put_tt__XPathExpression(soap, data, "tt:XPathExpression", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__XPathExpression(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__XPathExpression
#define soap_read_tt__XPathExpression(soap, data) ( ((data) ? (soap_default_tt__XPathExpression(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__XPathExpression(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Description
#define SOAP_TYPE_tt__Description (949)
#endif

#define soap_default_tt__Description(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__Description(struct soap*, const std::string *);

#define soap_tt__Description2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Description(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2tt__Description soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__Description(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_tt__Description soap_instantiate_std__string


#define soap_new_tt__Description soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Description(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__Description
#define soap_write_tt__Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__Description(soap, data), 0) || soap_put_tt__Description(soap, data, "tt:Description", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__Description(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__Description
#define soap_read_tt__Description(soap, data) ( ((data) ? (soap_default_tt__Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

/* tt__TopicNamespaceLocation is a typedef synonym for xsd__anyURI */

#ifndef SOAP_TYPE_tt__TopicNamespaceLocation
#define SOAP_TYPE_tt__TopicNamespaceLocation (944)
#endif

#define soap_default_tt__TopicNamespaceLocation(soap, a) soap_default_xsd__anyURI(soap, a)


#define soap_serialize_tt__TopicNamespaceLocation soap_serialize_xsd__anyURI


#define soap_tt__TopicNamespaceLocation2s soap_xsd__anyURI2s


#define soap_out_tt__TopicNamespaceLocation soap_out_xsd__anyURI


#define soap_s2tt__TopicNamespaceLocation soap_s2xsd__anyURI


#define soap_in_tt__TopicNamespaceLocation soap_in_xsd__anyURI


#define soap_instantiate_tt__TopicNamespaceLocation soap_instantiate_xsd__anyURI


#define soap_new_tt__TopicNamespaceLocation soap_new_xsd__anyURI


#define soap_put_tt__TopicNamespaceLocation soap_put_xsd__anyURI


#define soap_write_tt__TopicNamespaceLocation soap_write_xsd__anyURI


#define soap_get_tt__TopicNamespaceLocation soap_get_xsd__anyURI


#define soap_read_tt__TopicNamespaceLocation soap_read_xsd__anyURI


#ifndef SOAP_TYPE_tt__AuxiliaryData
#define SOAP_TYPE_tt__AuxiliaryData (928)
#endif

#define soap_default_tt__AuxiliaryData(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__AuxiliaryData(struct soap*, const std::string *);

#define soap_tt__AuxiliaryData2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AuxiliaryData(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2tt__AuxiliaryData soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__AuxiliaryData(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_tt__AuxiliaryData soap_instantiate_std__string


#define soap_new_tt__AuxiliaryData soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__AuxiliaryData(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__AuxiliaryData
#define soap_write_tt__AuxiliaryData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__AuxiliaryData(soap, data), 0) || soap_put_tt__AuxiliaryData(soap, data, "tt:AuxiliaryData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__AuxiliaryData(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__AuxiliaryData
#define soap_read_tt__AuxiliaryData(soap, data) ( ((data) ? (soap_default_tt__AuxiliaryData(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AuxiliaryData(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Dot11PSKPassphrase
#define SOAP_TYPE_tt__Dot11PSKPassphrase (913)
#endif

#define soap_default_tt__Dot11PSKPassphrase(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__Dot11PSKPassphrase(struct soap*, const std::string *);

#define soap_tt__Dot11PSKPassphrase2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11PSKPassphrase(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2tt__Dot11PSKPassphrase soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__Dot11PSKPassphrase(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_tt__Dot11PSKPassphrase soap_instantiate_std__string


#define soap_new_tt__Dot11PSKPassphrase soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Dot11PSKPassphrase(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__Dot11PSKPassphrase
#define soap_write_tt__Dot11PSKPassphrase(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__Dot11PSKPassphrase(soap, data), 0) || soap_put_tt__Dot11PSKPassphrase(soap, data, "tt:Dot11PSKPassphrase", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__Dot11PSKPassphrase(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__Dot11PSKPassphrase
#define soap_read_tt__Dot11PSKPassphrase(soap, data) ( ((data) ? (soap_default_tt__Dot11PSKPassphrase(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Dot11PSKPassphrase(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Dot11PSK
#define SOAP_TYPE_tt__Dot11PSK (912)
#endif

#define soap_default_tt__Dot11PSK(soap, a) (a)->xsd__hexBinary::soap_default(soap)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__Dot11PSK(struct soap*, const xsd__hexBinary *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11PSK(struct soap*, const char*, int, const xsd__hexBinary *, const char*);
SOAP_FMAC3 xsd__hexBinary * SOAP_FMAC4 soap_in_tt__Dot11PSK(struct soap*, const char*, xsd__hexBinary *, const char*);

#define soap_instantiate_tt__Dot11PSK soap_instantiate_xsd__hexBinary


#define soap_new_tt__Dot11PSK soap_new_xsd__hexBinary


#define soap_new_req_tt__Dot11PSK soap_new_req_xsd__hexBinary


#define soap_new_set_tt__Dot11PSK soap_new_set_xsd__hexBinary

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Dot11PSK(struct soap*, const xsd__hexBinary *, const char*, const char*);

#ifndef soap_write_tt__Dot11PSK
#define soap_write_tt__Dot11PSK(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Dot11PSK", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__hexBinary * SOAP_FMAC4 soap_get_tt__Dot11PSK(struct soap*, xsd__hexBinary *, const char*, const char*);

#ifndef soap_read_tt__Dot11PSK
#define soap_read_tt__Dot11PSK(soap, data) ( ((data) ? (soap_default_tt__Dot11PSK(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Dot11PSK(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Dot11SSIDType
#define SOAP_TYPE_tt__Dot11SSIDType (908)
#endif

#define soap_default_tt__Dot11SSIDType(soap, a) (a)->xsd__hexBinary::soap_default(soap)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__Dot11SSIDType(struct soap*, const xsd__hexBinary *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11SSIDType(struct soap*, const char*, int, const xsd__hexBinary *, const char*);
SOAP_FMAC3 xsd__hexBinary * SOAP_FMAC4 soap_in_tt__Dot11SSIDType(struct soap*, const char*, xsd__hexBinary *, const char*);

#define soap_instantiate_tt__Dot11SSIDType soap_instantiate_xsd__hexBinary


#define soap_new_tt__Dot11SSIDType soap_new_xsd__hexBinary


#define soap_new_req_tt__Dot11SSIDType soap_new_req_xsd__hexBinary


#define soap_new_set_tt__Dot11SSIDType soap_new_set_xsd__hexBinary

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Dot11SSIDType(struct soap*, const xsd__hexBinary *, const char*, const char*);

#ifndef soap_write_tt__Dot11SSIDType
#define soap_write_tt__Dot11SSIDType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Dot11SSIDType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__hexBinary * SOAP_FMAC4 soap_get_tt__Dot11SSIDType(struct soap*, xsd__hexBinary *, const char*, const char*);

#ifndef soap_read_tt__Dot11SSIDType
#define soap_read_tt__Dot11SSIDType(soap, data) ( ((data) ? (soap_default_tt__Dot11SSIDType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Dot11SSIDType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

/* tt__Domain is a typedef synonym for xsd__token */

#ifndef SOAP_TYPE_tt__Domain
#define SOAP_TYPE_tt__Domain (905)
#endif

#define soap_default_tt__Domain(soap, a) soap_default_xsd__token(soap, a)


#define soap_serialize_tt__Domain soap_serialize_xsd__token


#define soap_tt__Domain2s soap_xsd__token2s


#define soap_out_tt__Domain soap_out_xsd__token


#define soap_s2tt__Domain soap_s2xsd__token


#define soap_in_tt__Domain soap_in_xsd__token


#define soap_instantiate_tt__Domain soap_instantiate_xsd__token


#define soap_new_tt__Domain soap_new_xsd__token


#define soap_put_tt__Domain soap_put_xsd__token


#define soap_write_tt__Domain soap_write_xsd__token


#define soap_get_tt__Domain soap_get_xsd__token


#define soap_read_tt__Domain soap_read_xsd__token

/* tt__DNSName is a typedef synonym for xsd__token */

#ifndef SOAP_TYPE_tt__DNSName
#define SOAP_TYPE_tt__DNSName (904)
#endif

#define soap_default_tt__DNSName(soap, a) soap_default_xsd__token(soap, a)


#define soap_serialize_tt__DNSName soap_serialize_xsd__token


#define soap_tt__DNSName2s soap_xsd__token2s


#define soap_out_tt__DNSName soap_out_xsd__token


#define soap_s2tt__DNSName soap_s2xsd__token


#define soap_in_tt__DNSName soap_in_xsd__token


#define soap_instantiate_tt__DNSName soap_instantiate_xsd__token


#define soap_new_tt__DNSName soap_new_xsd__token


#define soap_put_tt__DNSName soap_put_xsd__token


#define soap_write_tt__DNSName soap_write_xsd__token


#define soap_get_tt__DNSName soap_get_xsd__token


#define soap_read_tt__DNSName soap_read_xsd__token

/* tt__HwAddress is a typedef synonym for xsd__token */

#ifndef SOAP_TYPE_tt__HwAddress
#define SOAP_TYPE_tt__HwAddress (902)
#endif

#define soap_default_tt__HwAddress(soap, a) soap_default_xsd__token(soap, a)


#define soap_serialize_tt__HwAddress soap_serialize_xsd__token


#define soap_tt__HwAddress2s soap_xsd__token2s


#define soap_out_tt__HwAddress soap_out_xsd__token


#define soap_s2tt__HwAddress soap_s2xsd__token


#define soap_in_tt__HwAddress soap_in_xsd__token


#define soap_instantiate_tt__HwAddress soap_instantiate_xsd__token


#define soap_new_tt__HwAddress soap_new_xsd__token


#define soap_put_tt__HwAddress soap_put_xsd__token


#define soap_write_tt__HwAddress soap_write_xsd__token


#define soap_get_tt__HwAddress soap_get_xsd__token


#define soap_read_tt__HwAddress soap_read_xsd__token

/* tt__IPv6Address is a typedef synonym for xsd__token */

#ifndef SOAP_TYPE_tt__IPv6Address
#define SOAP_TYPE_tt__IPv6Address (901)
#endif

#define soap_default_tt__IPv6Address(soap, a) soap_default_xsd__token(soap, a)


#define soap_serialize_tt__IPv6Address soap_serialize_xsd__token


#define soap_tt__IPv6Address2s soap_xsd__token2s


#define soap_out_tt__IPv6Address soap_out_xsd__token


#define soap_s2tt__IPv6Address soap_s2xsd__token


#define soap_in_tt__IPv6Address soap_in_xsd__token


#define soap_instantiate_tt__IPv6Address soap_instantiate_xsd__token


#define soap_new_tt__IPv6Address soap_new_xsd__token


#define soap_put_tt__IPv6Address soap_put_xsd__token


#define soap_write_tt__IPv6Address soap_write_xsd__token


#define soap_get_tt__IPv6Address soap_get_xsd__token


#define soap_read_tt__IPv6Address soap_read_xsd__token

/* tt__IPv4Address is a typedef synonym for xsd__token */

#ifndef SOAP_TYPE_tt__IPv4Address
#define SOAP_TYPE_tt__IPv4Address (900)
#endif

#define soap_default_tt__IPv4Address(soap, a) soap_default_xsd__token(soap, a)


#define soap_serialize_tt__IPv4Address soap_serialize_xsd__token


#define soap_tt__IPv4Address2s soap_xsd__token2s


#define soap_out_tt__IPv4Address soap_out_xsd__token


#define soap_s2tt__IPv4Address soap_s2xsd__token


#define soap_in_tt__IPv4Address soap_in_xsd__token


#define soap_instantiate_tt__IPv4Address soap_instantiate_xsd__token


#define soap_new_tt__IPv4Address soap_new_xsd__token


#define soap_put_tt__IPv4Address soap_put_xsd__token


#define soap_write_tt__IPv4Address soap_write_xsd__token


#define soap_get_tt__IPv4Address soap_get_xsd__token


#define soap_read_tt__IPv4Address soap_read_xsd__token

/* tt__NetworkInterfaceConfigPriority is a typedef synonym for xsd__integer */

#ifndef SOAP_TYPE_tt__NetworkInterfaceConfigPriority
#define SOAP_TYPE_tt__NetworkInterfaceConfigPriority (894)
#endif

#define soap_default_tt__NetworkInterfaceConfigPriority(soap, a) soap_default_xsd__integer(soap, a)


#define soap_serialize_tt__NetworkInterfaceConfigPriority soap_serialize_xsd__integer


#define soap_tt__NetworkInterfaceConfigPriority2s soap_xsd__integer2s


#define soap_out_tt__NetworkInterfaceConfigPriority soap_out_xsd__integer


#define soap_s2tt__NetworkInterfaceConfigPriority soap_s2xsd__integer


#define soap_in_tt__NetworkInterfaceConfigPriority soap_in_xsd__integer


#define soap_instantiate_tt__NetworkInterfaceConfigPriority soap_instantiate_xsd__integer


#define soap_new_tt__NetworkInterfaceConfigPriority soap_new_xsd__integer


#define soap_put_tt__NetworkInterfaceConfigPriority soap_put_xsd__integer


#define soap_write_tt__NetworkInterfaceConfigPriority soap_write_xsd__integer


#define soap_get_tt__NetworkInterfaceConfigPriority soap_get_xsd__integer


#define soap_read_tt__NetworkInterfaceConfigPriority soap_read_xsd__integer


#ifndef SOAP_TYPE_tt__Name
#define SOAP_TYPE_tt__Name (877)
#endif

#define soap_default_tt__Name(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__Name(struct soap*, const std::string *);

#define soap_tt__Name2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Name(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2tt__Name soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__Name(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_tt__Name soap_instantiate_std__string


#define soap_new_tt__Name soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__Name(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__Name
#define soap_write_tt__Name(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__Name(soap, data), 0) || soap_put_tt__Name(soap, data, "tt:Name", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__Name(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__Name
#define soap_read_tt__Name(soap, data) ( ((data) ? (soap_default_tt__Name(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Name(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ReferenceToken
#define SOAP_TYPE_tt__ReferenceToken (876)
#endif

#define soap_default_tt__ReferenceToken(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__ReferenceToken(struct soap*, const std::string *);

#define soap_tt__ReferenceToken2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ReferenceToken(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2tt__ReferenceToken soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__ReferenceToken(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_tt__ReferenceToken soap_instantiate_std__string


#define soap_new_tt__ReferenceToken soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ReferenceToken(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__ReferenceToken
#define soap_write_tt__ReferenceToken(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__ReferenceToken(soap, data), 0) || soap_put_tt__ReferenceToken(soap, data, "tt:ReferenceToken", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__ReferenceToken(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__ReferenceToken
#define soap_read_tt__ReferenceToken(soap, data) ( ((data) ? (soap_default_tt__ReferenceToken(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ReferenceToken(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsnt__AbsoluteOrRelativeTimeType
#define SOAP_TYPE_wsnt__AbsoluteOrRelativeTimeType (871)
#endif

#define soap_default_wsnt__AbsoluteOrRelativeTimeType(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsnt__AbsoluteOrRelativeTimeType(struct soap*, const std::string *);

#define soap_wsnt__AbsoluteOrRelativeTimeType2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__AbsoluteOrRelativeTimeType(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2wsnt__AbsoluteOrRelativeTimeType soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_wsnt__AbsoluteOrRelativeTimeType(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_wsnt__AbsoluteOrRelativeTimeType soap_instantiate_std__string


#define soap_new_wsnt__AbsoluteOrRelativeTimeType soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsnt__AbsoluteOrRelativeTimeType(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_wsnt__AbsoluteOrRelativeTimeType
#define soap_write_wsnt__AbsoluteOrRelativeTimeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsnt__AbsoluteOrRelativeTimeType(soap, data), 0) || soap_put_wsnt__AbsoluteOrRelativeTimeType(soap, data, "wsnt:AbsoluteOrRelativeTimeType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_wsnt__AbsoluteOrRelativeTimeType(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_wsnt__AbsoluteOrRelativeTimeType
#define soap_read_wsnt__AbsoluteOrRelativeTimeType(soap, data) ( ((data) ? (soap_default_wsnt__AbsoluteOrRelativeTimeType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__AbsoluteOrRelativeTimeType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ReferenceTokenList
#define SOAP_TYPE_tt__ReferenceTokenList (870)
#endif

#define soap_default_tt__ReferenceTokenList(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__ReferenceTokenList(struct soap*, const std::string *);

#define soap_tt__ReferenceTokenList2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ReferenceTokenList(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2tt__ReferenceTokenList soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__ReferenceTokenList(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_tt__ReferenceTokenList soap_instantiate_std__string


#define soap_new_tt__ReferenceTokenList soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__ReferenceTokenList(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__ReferenceTokenList
#define soap_write_tt__ReferenceTokenList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__ReferenceTokenList(soap, data), 0) || soap_put_tt__ReferenceTokenList(soap, data, "tt:ReferenceTokenList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__ReferenceTokenList(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__ReferenceTokenList
#define soap_read_tt__ReferenceTokenList(soap, data) ( ((data) ? (soap_default_tt__ReferenceTokenList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ReferenceTokenList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__StringAttrList
#define SOAP_TYPE_tt__StringAttrList (869)
#endif

#define soap_default_tt__StringAttrList(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__StringAttrList(struct soap*, const std::string *);

#define soap_tt__StringAttrList2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__StringAttrList(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2tt__StringAttrList soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__StringAttrList(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_tt__StringAttrList soap_instantiate_std__string


#define soap_new_tt__StringAttrList soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__StringAttrList(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__StringAttrList
#define soap_write_tt__StringAttrList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__StringAttrList(soap, data), 0) || soap_put_tt__StringAttrList(soap, data, "tt:StringAttrList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__StringAttrList(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__StringAttrList
#define soap_read_tt__StringAttrList(soap, data) ( ((data) ? (soap_default_tt__StringAttrList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__StringAttrList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__FloatAttrList
#define SOAP_TYPE_tt__FloatAttrList (868)
#endif

#define soap_default_tt__FloatAttrList(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__FloatAttrList(struct soap*, const std::string *);

#define soap_tt__FloatAttrList2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FloatAttrList(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2tt__FloatAttrList soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__FloatAttrList(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_tt__FloatAttrList soap_instantiate_std__string


#define soap_new_tt__FloatAttrList soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__FloatAttrList(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__FloatAttrList
#define soap_write_tt__FloatAttrList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__FloatAttrList(soap, data), 0) || soap_put_tt__FloatAttrList(soap, data, "tt:FloatAttrList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__FloatAttrList(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__FloatAttrList
#define soap_read_tt__FloatAttrList(soap, data) ( ((data) ? (soap_default_tt__FloatAttrList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__FloatAttrList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IntAttrList
#define SOAP_TYPE_tt__IntAttrList (867)
#endif

#define soap_default_tt__IntAttrList(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tt__IntAttrList(struct soap*, const std::string *);

#define soap_tt__IntAttrList2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IntAttrList(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2tt__IntAttrList soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tt__IntAttrList(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_tt__IntAttrList soap_instantiate_std__string


#define soap_new_tt__IntAttrList soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tt__IntAttrList(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tt__IntAttrList
#define soap_write_tt__IntAttrList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tt__IntAttrList(soap, data), 0) || soap_put_tt__IntAttrList(soap, data, "tt:IntAttrList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tt__IntAttrList(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tt__IntAttrList
#define soap_read_tt__IntAttrList(soap, data) ( ((data) ? (soap_default_tt__IntAttrList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IntAttrList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tds__EAPMethodTypes
#define SOAP_TYPE_tds__EAPMethodTypes (866)
#endif

#define soap_default_tds__EAPMethodTypes(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tds__EAPMethodTypes(struct soap*, const std::string *);

#define soap_tds__EAPMethodTypes2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tds__EAPMethodTypes(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2tds__EAPMethodTypes soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tds__EAPMethodTypes(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_tds__EAPMethodTypes soap_instantiate_std__string


#define soap_new_tds__EAPMethodTypes soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tds__EAPMethodTypes(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tds__EAPMethodTypes
#define soap_write_tds__EAPMethodTypes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tds__EAPMethodTypes(soap, data), 0) || soap_put_tds__EAPMethodTypes(soap, data, "tds:EAPMethodTypes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tds__EAPMethodTypes(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tds__EAPMethodTypes
#define soap_read_tds__EAPMethodTypes(soap, data) ( ((data) ? (soap_default_tds__EAPMethodTypes(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tds__EAPMethodTypes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tmd__DelayTimes
#define SOAP_TYPE_tmd__DelayTimes (865)
#endif

#define soap_default_tmd__DelayTimes(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_tmd__DelayTimes(struct soap*, const std::string *);

#define soap_tmd__DelayTimes2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_tmd__DelayTimes(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2tmd__DelayTimes soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_tmd__DelayTimes(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_tmd__DelayTimes soap_instantiate_std__string


#define soap_new_tmd__DelayTimes soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_tmd__DelayTimes(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_tmd__DelayTimes
#define soap_write_tmd__DelayTimes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_tmd__DelayTimes(soap, data), 0) || soap_put_tmd__DelayTimes(soap, data, "tmd:DelayTimes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_tmd__DelayTimes(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_tmd__DelayTimes
#define soap_read_tmd__DelayTimes(soap, data) ( ((data) ? (soap_default_tmd__DelayTimes(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_tmd__DelayTimes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tls__DeletePaneConfigurationResponse
#define SOAP_TYPE__tls__DeletePaneConfigurationResponse (864)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tls__DeletePaneConfigurationResponse(struct soap*, const char*, int, const _tls__DeletePaneConfigurationResponse *, const char*);
SOAP_FMAC3 _tls__DeletePaneConfigurationResponse * SOAP_FMAC4 soap_in__tls__DeletePaneConfigurationResponse(struct soap*, const char*, _tls__DeletePaneConfigurationResponse *, const char*);
SOAP_FMAC1 _tls__DeletePaneConfigurationResponse * SOAP_FMAC2 soap_instantiate__tls__DeletePaneConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tls__DeletePaneConfigurationResponse * soap_new__tls__DeletePaneConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tls__DeletePaneConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tls__DeletePaneConfigurationResponse * soap_new_req__tls__DeletePaneConfigurationResponse(
	struct soap *soap)
{	_tls__DeletePaneConfigurationResponse *_p = soap_new__tls__DeletePaneConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tls__DeletePaneConfigurationResponse * soap_new_set__tls__DeletePaneConfigurationResponse(
	struct soap *soap)
{	_tls__DeletePaneConfigurationResponse *_p = soap_new__tls__DeletePaneConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tls__DeletePaneConfigurationResponse
#define soap_write__tls__DeletePaneConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tls:DeletePaneConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__DeletePaneConfigurationResponse * SOAP_FMAC4 soap_get__tls__DeletePaneConfigurationResponse(struct soap*, _tls__DeletePaneConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tls__DeletePaneConfigurationResponse
#define soap_read__tls__DeletePaneConfigurationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tls__DeletePaneConfigurationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tls__DeletePaneConfiguration
#define SOAP_TYPE__tls__DeletePaneConfiguration (863)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tls__DeletePaneConfiguration(struct soap*, const char*, int, const _tls__DeletePaneConfiguration *, const char*);
SOAP_FMAC3 _tls__DeletePaneConfiguration * SOAP_FMAC4 soap_in__tls__DeletePaneConfiguration(struct soap*, const char*, _tls__DeletePaneConfiguration *, const char*);
SOAP_FMAC1 _tls__DeletePaneConfiguration * SOAP_FMAC2 soap_instantiate__tls__DeletePaneConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tls__DeletePaneConfiguration * soap_new__tls__DeletePaneConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tls__DeletePaneConfiguration(soap, n, NULL, NULL, NULL); }

inline _tls__DeletePaneConfiguration * soap_new_req__tls__DeletePaneConfiguration(
	struct soap *soap,
	const std::string& VideoOutput,
	const std::string& PaneToken)
{	_tls__DeletePaneConfiguration *_p = soap_new__tls__DeletePaneConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__DeletePaneConfiguration::VideoOutput = VideoOutput;
		_p->_tls__DeletePaneConfiguration::PaneToken = PaneToken;
	}
	return _p;
}

inline _tls__DeletePaneConfiguration * soap_new_set__tls__DeletePaneConfiguration(
	struct soap *soap,
	const std::string& VideoOutput,
	const std::string& PaneToken)
{	_tls__DeletePaneConfiguration *_p = soap_new__tls__DeletePaneConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__DeletePaneConfiguration::VideoOutput = VideoOutput;
		_p->_tls__DeletePaneConfiguration::PaneToken = PaneToken;
	}
	return _p;
}

#ifndef soap_write__tls__DeletePaneConfiguration
#define soap_write__tls__DeletePaneConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tls:DeletePaneConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__DeletePaneConfiguration * SOAP_FMAC4 soap_get__tls__DeletePaneConfiguration(struct soap*, _tls__DeletePaneConfiguration *, const char*, const char*);

#ifndef soap_read__tls__DeletePaneConfiguration
#define soap_read__tls__DeletePaneConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tls__DeletePaneConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tls__CreatePaneConfigurationResponse
#define SOAP_TYPE__tls__CreatePaneConfigurationResponse (862)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tls__CreatePaneConfigurationResponse(struct soap*, const char*, int, const _tls__CreatePaneConfigurationResponse *, const char*);
SOAP_FMAC3 _tls__CreatePaneConfigurationResponse * SOAP_FMAC4 soap_in__tls__CreatePaneConfigurationResponse(struct soap*, const char*, _tls__CreatePaneConfigurationResponse *, const char*);
SOAP_FMAC1 _tls__CreatePaneConfigurationResponse * SOAP_FMAC2 soap_instantiate__tls__CreatePaneConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tls__CreatePaneConfigurationResponse * soap_new__tls__CreatePaneConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tls__CreatePaneConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tls__CreatePaneConfigurationResponse * soap_new_req__tls__CreatePaneConfigurationResponse(
	struct soap *soap,
	const std::string& PaneToken)
{	_tls__CreatePaneConfigurationResponse *_p = soap_new__tls__CreatePaneConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__CreatePaneConfigurationResponse::PaneToken = PaneToken;
	}
	return _p;
}

inline _tls__CreatePaneConfigurationResponse * soap_new_set__tls__CreatePaneConfigurationResponse(
	struct soap *soap,
	const std::string& PaneToken)
{	_tls__CreatePaneConfigurationResponse *_p = soap_new__tls__CreatePaneConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__CreatePaneConfigurationResponse::PaneToken = PaneToken;
	}
	return _p;
}

#ifndef soap_write__tls__CreatePaneConfigurationResponse
#define soap_write__tls__CreatePaneConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tls:CreatePaneConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__CreatePaneConfigurationResponse * SOAP_FMAC4 soap_get__tls__CreatePaneConfigurationResponse(struct soap*, _tls__CreatePaneConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tls__CreatePaneConfigurationResponse
#define soap_read__tls__CreatePaneConfigurationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tls__CreatePaneConfigurationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tls__CreatePaneConfiguration
#define SOAP_TYPE__tls__CreatePaneConfiguration (861)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tls__CreatePaneConfiguration(struct soap*, const char*, int, const _tls__CreatePaneConfiguration *, const char*);
SOAP_FMAC3 _tls__CreatePaneConfiguration * SOAP_FMAC4 soap_in__tls__CreatePaneConfiguration(struct soap*, const char*, _tls__CreatePaneConfiguration *, const char*);
SOAP_FMAC1 _tls__CreatePaneConfiguration * SOAP_FMAC2 soap_instantiate__tls__CreatePaneConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tls__CreatePaneConfiguration * soap_new__tls__CreatePaneConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tls__CreatePaneConfiguration(soap, n, NULL, NULL, NULL); }

inline _tls__CreatePaneConfiguration * soap_new_req__tls__CreatePaneConfiguration(
	struct soap *soap,
	const std::string& VideoOutput,
	tt__PaneConfiguration *PaneConfiguration)
{	_tls__CreatePaneConfiguration *_p = soap_new__tls__CreatePaneConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__CreatePaneConfiguration::VideoOutput = VideoOutput;
		_p->_tls__CreatePaneConfiguration::PaneConfiguration = PaneConfiguration;
	}
	return _p;
}

inline _tls__CreatePaneConfiguration * soap_new_set__tls__CreatePaneConfiguration(
	struct soap *soap,
	const std::string& VideoOutput,
	tt__PaneConfiguration *PaneConfiguration)
{	_tls__CreatePaneConfiguration *_p = soap_new__tls__CreatePaneConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__CreatePaneConfiguration::VideoOutput = VideoOutput;
		_p->_tls__CreatePaneConfiguration::PaneConfiguration = PaneConfiguration;
	}
	return _p;
}

#ifndef soap_write__tls__CreatePaneConfiguration
#define soap_write__tls__CreatePaneConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tls:CreatePaneConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__CreatePaneConfiguration * SOAP_FMAC4 soap_get__tls__CreatePaneConfiguration(struct soap*, _tls__CreatePaneConfiguration *, const char*, const char*);

#ifndef soap_read__tls__CreatePaneConfiguration
#define soap_read__tls__CreatePaneConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tls__CreatePaneConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tls__SetPaneConfigurationResponse
#define SOAP_TYPE__tls__SetPaneConfigurationResponse (860)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tls__SetPaneConfigurationResponse(struct soap*, const char*, int, const _tls__SetPaneConfigurationResponse *, const char*);
SOAP_FMAC3 _tls__SetPaneConfigurationResponse * SOAP_FMAC4 soap_in__tls__SetPaneConfigurationResponse(struct soap*, const char*, _tls__SetPaneConfigurationResponse *, const char*);
SOAP_FMAC1 _tls__SetPaneConfigurationResponse * SOAP_FMAC2 soap_instantiate__tls__SetPaneConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tls__SetPaneConfigurationResponse * soap_new__tls__SetPaneConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tls__SetPaneConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tls__SetPaneConfigurationResponse * soap_new_req__tls__SetPaneConfigurationResponse(
	struct soap *soap)
{	_tls__SetPaneConfigurationResponse *_p = soap_new__tls__SetPaneConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tls__SetPaneConfigurationResponse * soap_new_set__tls__SetPaneConfigurationResponse(
	struct soap *soap)
{	_tls__SetPaneConfigurationResponse *_p = soap_new__tls__SetPaneConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tls__SetPaneConfigurationResponse
#define soap_write__tls__SetPaneConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tls:SetPaneConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__SetPaneConfigurationResponse * SOAP_FMAC4 soap_get__tls__SetPaneConfigurationResponse(struct soap*, _tls__SetPaneConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tls__SetPaneConfigurationResponse
#define soap_read__tls__SetPaneConfigurationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tls__SetPaneConfigurationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tls__SetPaneConfiguration
#define SOAP_TYPE__tls__SetPaneConfiguration (859)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tls__SetPaneConfiguration(struct soap*, const char*, int, const _tls__SetPaneConfiguration *, const char*);
SOAP_FMAC3 _tls__SetPaneConfiguration * SOAP_FMAC4 soap_in__tls__SetPaneConfiguration(struct soap*, const char*, _tls__SetPaneConfiguration *, const char*);
SOAP_FMAC1 _tls__SetPaneConfiguration * SOAP_FMAC2 soap_instantiate__tls__SetPaneConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tls__SetPaneConfiguration * soap_new__tls__SetPaneConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tls__SetPaneConfiguration(soap, n, NULL, NULL, NULL); }

inline _tls__SetPaneConfiguration * soap_new_req__tls__SetPaneConfiguration(
	struct soap *soap,
	const std::string& VideoOutput,
	tt__PaneConfiguration *PaneConfiguration)
{	_tls__SetPaneConfiguration *_p = soap_new__tls__SetPaneConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__SetPaneConfiguration::VideoOutput = VideoOutput;
		_p->_tls__SetPaneConfiguration::PaneConfiguration = PaneConfiguration;
	}
	return _p;
}

inline _tls__SetPaneConfiguration * soap_new_set__tls__SetPaneConfiguration(
	struct soap *soap,
	const std::string& VideoOutput,
	tt__PaneConfiguration *PaneConfiguration)
{	_tls__SetPaneConfiguration *_p = soap_new__tls__SetPaneConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__SetPaneConfiguration::VideoOutput = VideoOutput;
		_p->_tls__SetPaneConfiguration::PaneConfiguration = PaneConfiguration;
	}
	return _p;
}

#ifndef soap_write__tls__SetPaneConfiguration
#define soap_write__tls__SetPaneConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tls:SetPaneConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__SetPaneConfiguration * SOAP_FMAC4 soap_get__tls__SetPaneConfiguration(struct soap*, _tls__SetPaneConfiguration *, const char*, const char*);

#ifndef soap_read__tls__SetPaneConfiguration
#define soap_read__tls__SetPaneConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tls__SetPaneConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tls__SetPaneConfigurationsResponse
#define SOAP_TYPE__tls__SetPaneConfigurationsResponse (858)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tls__SetPaneConfigurationsResponse(struct soap*, const char*, int, const _tls__SetPaneConfigurationsResponse *, const char*);
SOAP_FMAC3 _tls__SetPaneConfigurationsResponse * SOAP_FMAC4 soap_in__tls__SetPaneConfigurationsResponse(struct soap*, const char*, _tls__SetPaneConfigurationsResponse *, const char*);
SOAP_FMAC1 _tls__SetPaneConfigurationsResponse * SOAP_FMAC2 soap_instantiate__tls__SetPaneConfigurationsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tls__SetPaneConfigurationsResponse * soap_new__tls__SetPaneConfigurationsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tls__SetPaneConfigurationsResponse(soap, n, NULL, NULL, NULL); }

inline _tls__SetPaneConfigurationsResponse * soap_new_req__tls__SetPaneConfigurationsResponse(
	struct soap *soap)
{	_tls__SetPaneConfigurationsResponse *_p = soap_new__tls__SetPaneConfigurationsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tls__SetPaneConfigurationsResponse * soap_new_set__tls__SetPaneConfigurationsResponse(
	struct soap *soap)
{	_tls__SetPaneConfigurationsResponse *_p = soap_new__tls__SetPaneConfigurationsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tls__SetPaneConfigurationsResponse
#define soap_write__tls__SetPaneConfigurationsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tls:SetPaneConfigurationsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__SetPaneConfigurationsResponse * SOAP_FMAC4 soap_get__tls__SetPaneConfigurationsResponse(struct soap*, _tls__SetPaneConfigurationsResponse *, const char*, const char*);

#ifndef soap_read__tls__SetPaneConfigurationsResponse
#define soap_read__tls__SetPaneConfigurationsResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tls__SetPaneConfigurationsResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tls__SetPaneConfigurations
#define SOAP_TYPE__tls__SetPaneConfigurations (857)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tls__SetPaneConfigurations(struct soap*, const char*, int, const _tls__SetPaneConfigurations *, const char*);
SOAP_FMAC3 _tls__SetPaneConfigurations * SOAP_FMAC4 soap_in__tls__SetPaneConfigurations(struct soap*, const char*, _tls__SetPaneConfigurations *, const char*);
SOAP_FMAC1 _tls__SetPaneConfigurations * SOAP_FMAC2 soap_instantiate__tls__SetPaneConfigurations(struct soap*, int, const char*, const char*, size_t*);

inline _tls__SetPaneConfigurations * soap_new__tls__SetPaneConfigurations(struct soap *soap, int n = -1) { return soap_instantiate__tls__SetPaneConfigurations(soap, n, NULL, NULL, NULL); }

inline _tls__SetPaneConfigurations * soap_new_req__tls__SetPaneConfigurations(
	struct soap *soap,
	const std::string& VideoOutput,
	const std::vector<tt__PaneConfiguration *> & PaneConfiguration)
{	_tls__SetPaneConfigurations *_p = soap_new__tls__SetPaneConfigurations(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__SetPaneConfigurations::VideoOutput = VideoOutput;
		_p->_tls__SetPaneConfigurations::PaneConfiguration = PaneConfiguration;
	}
	return _p;
}

inline _tls__SetPaneConfigurations * soap_new_set__tls__SetPaneConfigurations(
	struct soap *soap,
	const std::string& VideoOutput,
	const std::vector<tt__PaneConfiguration *> & PaneConfiguration)
{	_tls__SetPaneConfigurations *_p = soap_new__tls__SetPaneConfigurations(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__SetPaneConfigurations::VideoOutput = VideoOutput;
		_p->_tls__SetPaneConfigurations::PaneConfiguration = PaneConfiguration;
	}
	return _p;
}

#ifndef soap_write__tls__SetPaneConfigurations
#define soap_write__tls__SetPaneConfigurations(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tls:SetPaneConfigurations", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__SetPaneConfigurations * SOAP_FMAC4 soap_get__tls__SetPaneConfigurations(struct soap*, _tls__SetPaneConfigurations *, const char*, const char*);

#ifndef soap_read__tls__SetPaneConfigurations
#define soap_read__tls__SetPaneConfigurations(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tls__SetPaneConfigurations(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tls__GetPaneConfigurationResponse
#define SOAP_TYPE__tls__GetPaneConfigurationResponse (856)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tls__GetPaneConfigurationResponse(struct soap*, const char*, int, const _tls__GetPaneConfigurationResponse *, const char*);
SOAP_FMAC3 _tls__GetPaneConfigurationResponse * SOAP_FMAC4 soap_in__tls__GetPaneConfigurationResponse(struct soap*, const char*, _tls__GetPaneConfigurationResponse *, const char*);
SOAP_FMAC1 _tls__GetPaneConfigurationResponse * SOAP_FMAC2 soap_instantiate__tls__GetPaneConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tls__GetPaneConfigurationResponse * soap_new__tls__GetPaneConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tls__GetPaneConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tls__GetPaneConfigurationResponse * soap_new_req__tls__GetPaneConfigurationResponse(
	struct soap *soap,
	tt__PaneConfiguration *PaneConfiguration)
{	_tls__GetPaneConfigurationResponse *_p = soap_new__tls__GetPaneConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__GetPaneConfigurationResponse::PaneConfiguration = PaneConfiguration;
	}
	return _p;
}

inline _tls__GetPaneConfigurationResponse * soap_new_set__tls__GetPaneConfigurationResponse(
	struct soap *soap,
	tt__PaneConfiguration *PaneConfiguration)
{	_tls__GetPaneConfigurationResponse *_p = soap_new__tls__GetPaneConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__GetPaneConfigurationResponse::PaneConfiguration = PaneConfiguration;
	}
	return _p;
}

#ifndef soap_write__tls__GetPaneConfigurationResponse
#define soap_write__tls__GetPaneConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tls:GetPaneConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__GetPaneConfigurationResponse * SOAP_FMAC4 soap_get__tls__GetPaneConfigurationResponse(struct soap*, _tls__GetPaneConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tls__GetPaneConfigurationResponse
#define soap_read__tls__GetPaneConfigurationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tls__GetPaneConfigurationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tls__GetPaneConfiguration
#define SOAP_TYPE__tls__GetPaneConfiguration (855)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tls__GetPaneConfiguration(struct soap*, const char*, int, const _tls__GetPaneConfiguration *, const char*);
SOAP_FMAC3 _tls__GetPaneConfiguration * SOAP_FMAC4 soap_in__tls__GetPaneConfiguration(struct soap*, const char*, _tls__GetPaneConfiguration *, const char*);
SOAP_FMAC1 _tls__GetPaneConfiguration * SOAP_FMAC2 soap_instantiate__tls__GetPaneConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tls__GetPaneConfiguration * soap_new__tls__GetPaneConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tls__GetPaneConfiguration(soap, n, NULL, NULL, NULL); }

inline _tls__GetPaneConfiguration * soap_new_req__tls__GetPaneConfiguration(
	struct soap *soap,
	const std::string& VideoOutput,
	const std::string& Pane)
{	_tls__GetPaneConfiguration *_p = soap_new__tls__GetPaneConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__GetPaneConfiguration::VideoOutput = VideoOutput;
		_p->_tls__GetPaneConfiguration::Pane = Pane;
	}
	return _p;
}

inline _tls__GetPaneConfiguration * soap_new_set__tls__GetPaneConfiguration(
	struct soap *soap,
	const std::string& VideoOutput,
	const std::string& Pane)
{	_tls__GetPaneConfiguration *_p = soap_new__tls__GetPaneConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__GetPaneConfiguration::VideoOutput = VideoOutput;
		_p->_tls__GetPaneConfiguration::Pane = Pane;
	}
	return _p;
}

#ifndef soap_write__tls__GetPaneConfiguration
#define soap_write__tls__GetPaneConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tls:GetPaneConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__GetPaneConfiguration * SOAP_FMAC4 soap_get__tls__GetPaneConfiguration(struct soap*, _tls__GetPaneConfiguration *, const char*, const char*);

#ifndef soap_read__tls__GetPaneConfiguration
#define soap_read__tls__GetPaneConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tls__GetPaneConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tls__GetPaneConfigurationsResponse
#define SOAP_TYPE__tls__GetPaneConfigurationsResponse (854)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tls__GetPaneConfigurationsResponse(struct soap*, const char*, int, const _tls__GetPaneConfigurationsResponse *, const char*);
SOAP_FMAC3 _tls__GetPaneConfigurationsResponse * SOAP_FMAC4 soap_in__tls__GetPaneConfigurationsResponse(struct soap*, const char*, _tls__GetPaneConfigurationsResponse *, const char*);
SOAP_FMAC1 _tls__GetPaneConfigurationsResponse * SOAP_FMAC2 soap_instantiate__tls__GetPaneConfigurationsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tls__GetPaneConfigurationsResponse * soap_new__tls__GetPaneConfigurationsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tls__GetPaneConfigurationsResponse(soap, n, NULL, NULL, NULL); }

inline _tls__GetPaneConfigurationsResponse * soap_new_req__tls__GetPaneConfigurationsResponse(
	struct soap *soap,
	const std::vector<tt__PaneConfiguration *> & PaneConfiguration)
{	_tls__GetPaneConfigurationsResponse *_p = soap_new__tls__GetPaneConfigurationsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__GetPaneConfigurationsResponse::PaneConfiguration = PaneConfiguration;
	}
	return _p;
}

inline _tls__GetPaneConfigurationsResponse * soap_new_set__tls__GetPaneConfigurationsResponse(
	struct soap *soap,
	const std::vector<tt__PaneConfiguration *> & PaneConfiguration)
{	_tls__GetPaneConfigurationsResponse *_p = soap_new__tls__GetPaneConfigurationsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__GetPaneConfigurationsResponse::PaneConfiguration = PaneConfiguration;
	}
	return _p;
}

#ifndef soap_write__tls__GetPaneConfigurationsResponse
#define soap_write__tls__GetPaneConfigurationsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tls:GetPaneConfigurationsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__GetPaneConfigurationsResponse * SOAP_FMAC4 soap_get__tls__GetPaneConfigurationsResponse(struct soap*, _tls__GetPaneConfigurationsResponse *, const char*, const char*);

#ifndef soap_read__tls__GetPaneConfigurationsResponse
#define soap_read__tls__GetPaneConfigurationsResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tls__GetPaneConfigurationsResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tls__GetPaneConfigurations
#define SOAP_TYPE__tls__GetPaneConfigurations (853)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tls__GetPaneConfigurations(struct soap*, const char*, int, const _tls__GetPaneConfigurations *, const char*);
SOAP_FMAC3 _tls__GetPaneConfigurations * SOAP_FMAC4 soap_in__tls__GetPaneConfigurations(struct soap*, const char*, _tls__GetPaneConfigurations *, const char*);
SOAP_FMAC1 _tls__GetPaneConfigurations * SOAP_FMAC2 soap_instantiate__tls__GetPaneConfigurations(struct soap*, int, const char*, const char*, size_t*);

inline _tls__GetPaneConfigurations * soap_new__tls__GetPaneConfigurations(struct soap *soap, int n = -1) { return soap_instantiate__tls__GetPaneConfigurations(soap, n, NULL, NULL, NULL); }

inline _tls__GetPaneConfigurations * soap_new_req__tls__GetPaneConfigurations(
	struct soap *soap,
	const std::string& VideoOutput)
{	_tls__GetPaneConfigurations *_p = soap_new__tls__GetPaneConfigurations(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__GetPaneConfigurations::VideoOutput = VideoOutput;
	}
	return _p;
}

inline _tls__GetPaneConfigurations * soap_new_set__tls__GetPaneConfigurations(
	struct soap *soap,
	const std::string& VideoOutput)
{	_tls__GetPaneConfigurations *_p = soap_new__tls__GetPaneConfigurations(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__GetPaneConfigurations::VideoOutput = VideoOutput;
	}
	return _p;
}

#ifndef soap_write__tls__GetPaneConfigurations
#define soap_write__tls__GetPaneConfigurations(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tls:GetPaneConfigurations", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__GetPaneConfigurations * SOAP_FMAC4 soap_get__tls__GetPaneConfigurations(struct soap*, _tls__GetPaneConfigurations *, const char*, const char*);

#ifndef soap_read__tls__GetPaneConfigurations
#define soap_read__tls__GetPaneConfigurations(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tls__GetPaneConfigurations(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tls__GetDisplayOptionsResponse
#define SOAP_TYPE__tls__GetDisplayOptionsResponse (852)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tls__GetDisplayOptionsResponse(struct soap*, const char*, int, const _tls__GetDisplayOptionsResponse *, const char*);
SOAP_FMAC3 _tls__GetDisplayOptionsResponse * SOAP_FMAC4 soap_in__tls__GetDisplayOptionsResponse(struct soap*, const char*, _tls__GetDisplayOptionsResponse *, const char*);
SOAP_FMAC1 _tls__GetDisplayOptionsResponse * SOAP_FMAC2 soap_instantiate__tls__GetDisplayOptionsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tls__GetDisplayOptionsResponse * soap_new__tls__GetDisplayOptionsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tls__GetDisplayOptionsResponse(soap, n, NULL, NULL, NULL); }

inline _tls__GetDisplayOptionsResponse * soap_new_req__tls__GetDisplayOptionsResponse(
	struct soap *soap,
	tt__CodingCapabilities *CodingCapabilities)
{	_tls__GetDisplayOptionsResponse *_p = soap_new__tls__GetDisplayOptionsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__GetDisplayOptionsResponse::CodingCapabilities = CodingCapabilities;
	}
	return _p;
}

inline _tls__GetDisplayOptionsResponse * soap_new_set__tls__GetDisplayOptionsResponse(
	struct soap *soap,
	tt__LayoutOptions *LayoutOptions,
	tt__CodingCapabilities *CodingCapabilities)
{	_tls__GetDisplayOptionsResponse *_p = soap_new__tls__GetDisplayOptionsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__GetDisplayOptionsResponse::LayoutOptions = LayoutOptions;
		_p->_tls__GetDisplayOptionsResponse::CodingCapabilities = CodingCapabilities;
	}
	return _p;
}

#ifndef soap_write__tls__GetDisplayOptionsResponse
#define soap_write__tls__GetDisplayOptionsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tls:GetDisplayOptionsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__GetDisplayOptionsResponse * SOAP_FMAC4 soap_get__tls__GetDisplayOptionsResponse(struct soap*, _tls__GetDisplayOptionsResponse *, const char*, const char*);

#ifndef soap_read__tls__GetDisplayOptionsResponse
#define soap_read__tls__GetDisplayOptionsResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tls__GetDisplayOptionsResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tls__GetDisplayOptions
#define SOAP_TYPE__tls__GetDisplayOptions (851)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tls__GetDisplayOptions(struct soap*, const char*, int, const _tls__GetDisplayOptions *, const char*);
SOAP_FMAC3 _tls__GetDisplayOptions * SOAP_FMAC4 soap_in__tls__GetDisplayOptions(struct soap*, const char*, _tls__GetDisplayOptions *, const char*);
SOAP_FMAC1 _tls__GetDisplayOptions * SOAP_FMAC2 soap_instantiate__tls__GetDisplayOptions(struct soap*, int, const char*, const char*, size_t*);

inline _tls__GetDisplayOptions * soap_new__tls__GetDisplayOptions(struct soap *soap, int n = -1) { return soap_instantiate__tls__GetDisplayOptions(soap, n, NULL, NULL, NULL); }

inline _tls__GetDisplayOptions * soap_new_req__tls__GetDisplayOptions(
	struct soap *soap,
	const std::string& VideoOutput)
{	_tls__GetDisplayOptions *_p = soap_new__tls__GetDisplayOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__GetDisplayOptions::VideoOutput = VideoOutput;
	}
	return _p;
}

inline _tls__GetDisplayOptions * soap_new_set__tls__GetDisplayOptions(
	struct soap *soap,
	const std::string& VideoOutput)
{	_tls__GetDisplayOptions *_p = soap_new__tls__GetDisplayOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__GetDisplayOptions::VideoOutput = VideoOutput;
	}
	return _p;
}

#ifndef soap_write__tls__GetDisplayOptions
#define soap_write__tls__GetDisplayOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tls:GetDisplayOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__GetDisplayOptions * SOAP_FMAC4 soap_get__tls__GetDisplayOptions(struct soap*, _tls__GetDisplayOptions *, const char*, const char*);

#ifndef soap_read__tls__GetDisplayOptions
#define soap_read__tls__GetDisplayOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tls__GetDisplayOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tls__SetLayoutResponse
#define SOAP_TYPE__tls__SetLayoutResponse (850)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tls__SetLayoutResponse(struct soap*, const char*, int, const _tls__SetLayoutResponse *, const char*);
SOAP_FMAC3 _tls__SetLayoutResponse * SOAP_FMAC4 soap_in__tls__SetLayoutResponse(struct soap*, const char*, _tls__SetLayoutResponse *, const char*);
SOAP_FMAC1 _tls__SetLayoutResponse * SOAP_FMAC2 soap_instantiate__tls__SetLayoutResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tls__SetLayoutResponse * soap_new__tls__SetLayoutResponse(struct soap *soap, int n = -1) { return soap_instantiate__tls__SetLayoutResponse(soap, n, NULL, NULL, NULL); }

inline _tls__SetLayoutResponse * soap_new_req__tls__SetLayoutResponse(
	struct soap *soap)
{	_tls__SetLayoutResponse *_p = soap_new__tls__SetLayoutResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tls__SetLayoutResponse * soap_new_set__tls__SetLayoutResponse(
	struct soap *soap)
{	_tls__SetLayoutResponse *_p = soap_new__tls__SetLayoutResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tls__SetLayoutResponse
#define soap_write__tls__SetLayoutResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tls:SetLayoutResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__SetLayoutResponse * SOAP_FMAC4 soap_get__tls__SetLayoutResponse(struct soap*, _tls__SetLayoutResponse *, const char*, const char*);

#ifndef soap_read__tls__SetLayoutResponse
#define soap_read__tls__SetLayoutResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tls__SetLayoutResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tls__SetLayout
#define SOAP_TYPE__tls__SetLayout (849)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tls__SetLayout(struct soap*, const char*, int, const _tls__SetLayout *, const char*);
SOAP_FMAC3 _tls__SetLayout * SOAP_FMAC4 soap_in__tls__SetLayout(struct soap*, const char*, _tls__SetLayout *, const char*);
SOAP_FMAC1 _tls__SetLayout * SOAP_FMAC2 soap_instantiate__tls__SetLayout(struct soap*, int, const char*, const char*, size_t*);

inline _tls__SetLayout * soap_new__tls__SetLayout(struct soap *soap, int n = -1) { return soap_instantiate__tls__SetLayout(soap, n, NULL, NULL, NULL); }

inline _tls__SetLayout * soap_new_req__tls__SetLayout(
	struct soap *soap,
	const std::string& VideoOutput,
	tt__Layout *Layout)
{	_tls__SetLayout *_p = soap_new__tls__SetLayout(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__SetLayout::VideoOutput = VideoOutput;
		_p->_tls__SetLayout::Layout = Layout;
	}
	return _p;
}

inline _tls__SetLayout * soap_new_set__tls__SetLayout(
	struct soap *soap,
	const std::string& VideoOutput,
	tt__Layout *Layout)
{	_tls__SetLayout *_p = soap_new__tls__SetLayout(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__SetLayout::VideoOutput = VideoOutput;
		_p->_tls__SetLayout::Layout = Layout;
	}
	return _p;
}

#ifndef soap_write__tls__SetLayout
#define soap_write__tls__SetLayout(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tls:SetLayout", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__SetLayout * SOAP_FMAC4 soap_get__tls__SetLayout(struct soap*, _tls__SetLayout *, const char*, const char*);

#ifndef soap_read__tls__SetLayout
#define soap_read__tls__SetLayout(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tls__SetLayout(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tls__GetLayoutResponse
#define SOAP_TYPE__tls__GetLayoutResponse (848)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tls__GetLayoutResponse(struct soap*, const char*, int, const _tls__GetLayoutResponse *, const char*);
SOAP_FMAC3 _tls__GetLayoutResponse * SOAP_FMAC4 soap_in__tls__GetLayoutResponse(struct soap*, const char*, _tls__GetLayoutResponse *, const char*);
SOAP_FMAC1 _tls__GetLayoutResponse * SOAP_FMAC2 soap_instantiate__tls__GetLayoutResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tls__GetLayoutResponse * soap_new__tls__GetLayoutResponse(struct soap *soap, int n = -1) { return soap_instantiate__tls__GetLayoutResponse(soap, n, NULL, NULL, NULL); }

inline _tls__GetLayoutResponse * soap_new_req__tls__GetLayoutResponse(
	struct soap *soap,
	tt__Layout *Layout)
{	_tls__GetLayoutResponse *_p = soap_new__tls__GetLayoutResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__GetLayoutResponse::Layout = Layout;
	}
	return _p;
}

inline _tls__GetLayoutResponse * soap_new_set__tls__GetLayoutResponse(
	struct soap *soap,
	tt__Layout *Layout)
{	_tls__GetLayoutResponse *_p = soap_new__tls__GetLayoutResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__GetLayoutResponse::Layout = Layout;
	}
	return _p;
}

#ifndef soap_write__tls__GetLayoutResponse
#define soap_write__tls__GetLayoutResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tls:GetLayoutResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__GetLayoutResponse * SOAP_FMAC4 soap_get__tls__GetLayoutResponse(struct soap*, _tls__GetLayoutResponse *, const char*, const char*);

#ifndef soap_read__tls__GetLayoutResponse
#define soap_read__tls__GetLayoutResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tls__GetLayoutResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tls__GetLayout
#define SOAP_TYPE__tls__GetLayout (847)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tls__GetLayout(struct soap*, const char*, int, const _tls__GetLayout *, const char*);
SOAP_FMAC3 _tls__GetLayout * SOAP_FMAC4 soap_in__tls__GetLayout(struct soap*, const char*, _tls__GetLayout *, const char*);
SOAP_FMAC1 _tls__GetLayout * SOAP_FMAC2 soap_instantiate__tls__GetLayout(struct soap*, int, const char*, const char*, size_t*);

inline _tls__GetLayout * soap_new__tls__GetLayout(struct soap *soap, int n = -1) { return soap_instantiate__tls__GetLayout(soap, n, NULL, NULL, NULL); }

inline _tls__GetLayout * soap_new_req__tls__GetLayout(
	struct soap *soap,
	const std::string& VideoOutput)
{	_tls__GetLayout *_p = soap_new__tls__GetLayout(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__GetLayout::VideoOutput = VideoOutput;
	}
	return _p;
}

inline _tls__GetLayout * soap_new_set__tls__GetLayout(
	struct soap *soap,
	const std::string& VideoOutput)
{	_tls__GetLayout *_p = soap_new__tls__GetLayout(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__GetLayout::VideoOutput = VideoOutput;
	}
	return _p;
}

#ifndef soap_write__tls__GetLayout
#define soap_write__tls__GetLayout(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tls:GetLayout", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__GetLayout * SOAP_FMAC4 soap_get__tls__GetLayout(struct soap*, _tls__GetLayout *, const char*, const char*);

#ifndef soap_read__tls__GetLayout
#define soap_read__tls__GetLayout(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tls__GetLayout(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tls__GetServiceCapabilitiesResponse
#define SOAP_TYPE__tls__GetServiceCapabilitiesResponse (846)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tls__GetServiceCapabilitiesResponse(struct soap*, const char*, int, const _tls__GetServiceCapabilitiesResponse *, const char*);
SOAP_FMAC3 _tls__GetServiceCapabilitiesResponse * SOAP_FMAC4 soap_in__tls__GetServiceCapabilitiesResponse(struct soap*, const char*, _tls__GetServiceCapabilitiesResponse *, const char*);
SOAP_FMAC1 _tls__GetServiceCapabilitiesResponse * SOAP_FMAC2 soap_instantiate__tls__GetServiceCapabilitiesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tls__GetServiceCapabilitiesResponse * soap_new__tls__GetServiceCapabilitiesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tls__GetServiceCapabilitiesResponse(soap, n, NULL, NULL, NULL); }

inline _tls__GetServiceCapabilitiesResponse * soap_new_req__tls__GetServiceCapabilitiesResponse(
	struct soap *soap,
	tls__Capabilities *Capabilities)
{	_tls__GetServiceCapabilitiesResponse *_p = soap_new__tls__GetServiceCapabilitiesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__GetServiceCapabilitiesResponse::Capabilities = Capabilities;
	}
	return _p;
}

inline _tls__GetServiceCapabilitiesResponse * soap_new_set__tls__GetServiceCapabilitiesResponse(
	struct soap *soap,
	tls__Capabilities *Capabilities)
{	_tls__GetServiceCapabilitiesResponse *_p = soap_new__tls__GetServiceCapabilitiesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tls__GetServiceCapabilitiesResponse::Capabilities = Capabilities;
	}
	return _p;
}

#ifndef soap_write__tls__GetServiceCapabilitiesResponse
#define soap_write__tls__GetServiceCapabilitiesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tls:GetServiceCapabilitiesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__GetServiceCapabilitiesResponse * SOAP_FMAC4 soap_get__tls__GetServiceCapabilitiesResponse(struct soap*, _tls__GetServiceCapabilitiesResponse *, const char*, const char*);

#ifndef soap_read__tls__GetServiceCapabilitiesResponse
#define soap_read__tls__GetServiceCapabilitiesResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tls__GetServiceCapabilitiesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tls__GetServiceCapabilities
#define SOAP_TYPE__tls__GetServiceCapabilities (845)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tls__GetServiceCapabilities(struct soap*, const char*, int, const _tls__GetServiceCapabilities *, const char*);
SOAP_FMAC3 _tls__GetServiceCapabilities * SOAP_FMAC4 soap_in__tls__GetServiceCapabilities(struct soap*, const char*, _tls__GetServiceCapabilities *, const char*);
SOAP_FMAC1 _tls__GetServiceCapabilities * SOAP_FMAC2 soap_instantiate__tls__GetServiceCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline _tls__GetServiceCapabilities * soap_new__tls__GetServiceCapabilities(struct soap *soap, int n = -1) { return soap_instantiate__tls__GetServiceCapabilities(soap, n, NULL, NULL, NULL); }

inline _tls__GetServiceCapabilities * soap_new_req__tls__GetServiceCapabilities(
	struct soap *soap)
{	_tls__GetServiceCapabilities *_p = soap_new__tls__GetServiceCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tls__GetServiceCapabilities * soap_new_set__tls__GetServiceCapabilities(
	struct soap *soap)
{	_tls__GetServiceCapabilities *_p = soap_new__tls__GetServiceCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tls__GetServiceCapabilities
#define soap_write__tls__GetServiceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tls:GetServiceCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__GetServiceCapabilities * SOAP_FMAC4 soap_get__tls__GetServiceCapabilities(struct soap*, _tls__GetServiceCapabilities *, const char*, const char*);

#ifndef soap_read__tls__GetServiceCapabilities
#define soap_read__tls__GetServiceCapabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tls__GetServiceCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tls__Capabilities
#define SOAP_TYPE_tls__Capabilities (844)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tls__Capabilities(struct soap*, const char*, int, const tls__Capabilities *, const char*);
SOAP_FMAC3 tls__Capabilities * SOAP_FMAC4 soap_in_tls__Capabilities(struct soap*, const char*, tls__Capabilities *, const char*);
SOAP_FMAC1 tls__Capabilities * SOAP_FMAC2 soap_instantiate_tls__Capabilities(struct soap*, int, const char*, const char*, size_t*);

inline tls__Capabilities * soap_new_tls__Capabilities(struct soap *soap, int n = -1) { return soap_instantiate_tls__Capabilities(soap, n, NULL, NULL, NULL); }

inline tls__Capabilities * soap_new_req_tls__Capabilities(
	struct soap *soap)
{	tls__Capabilities *_p = soap_new_tls__Capabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tls__Capabilities * soap_new_set_tls__Capabilities(
	struct soap *soap,
	bool *FixedLayout)
{	tls__Capabilities *_p = soap_new_tls__Capabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tls__Capabilities::FixedLayout = FixedLayout;
	}
	return _p;
}

#ifndef soap_write_tls__Capabilities
#define soap_write_tls__Capabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tls:Capabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tls__Capabilities * SOAP_FMAC4 soap_get_tls__Capabilities(struct soap*, tls__Capabilities *, const char*, const char*);

#ifndef soap_read_tls__Capabilities
#define soap_read_tls__Capabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tls__Capabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wstop__TopicSetType
#define SOAP_TYPE_wstop__TopicSetType (843)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__TopicSetType(struct soap*, const char*, int, const wstop__TopicSetType *, const char*);
SOAP_FMAC3 wstop__TopicSetType * SOAP_FMAC4 soap_in_wstop__TopicSetType(struct soap*, const char*, wstop__TopicSetType *, const char*);
SOAP_FMAC1 wstop__TopicSetType * SOAP_FMAC2 soap_instantiate_wstop__TopicSetType(struct soap*, int, const char*, const char*, size_t*);

inline wstop__TopicSetType * soap_new_wstop__TopicSetType(struct soap *soap, int n = -1) { return soap_instantiate_wstop__TopicSetType(soap, n, NULL, NULL, NULL); }

inline wstop__TopicSetType * soap_new_req_wstop__TopicSetType(
	struct soap *soap)
{	wstop__TopicSetType *_p = soap_new_wstop__TopicSetType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline wstop__TopicSetType * soap_new_set_wstop__TopicSetType(
	struct soap *soap,
	wstop__Documentation *documentation1)
{	wstop__TopicSetType *_p = soap_new_wstop__TopicSetType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wstop__ExtensibleDocumented::documentation = documentation1;
	}
	return _p;
}

#ifndef soap_write_wstop__TopicSetType
#define soap_write_wstop__TopicSetType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wstop:TopicSetType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wstop__TopicSetType * SOAP_FMAC4 soap_get_wstop__TopicSetType(struct soap*, wstop__TopicSetType *, const char*, const char*);

#ifndef soap_read_wstop__TopicSetType
#define soap_read_wstop__TopicSetType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wstop__TopicSetType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wstop__TopicType
#define SOAP_TYPE_wstop__TopicType (842)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__TopicType(struct soap*, const char*, int, const wstop__TopicType *, const char*);
SOAP_FMAC3 wstop__TopicType * SOAP_FMAC4 soap_in_wstop__TopicType(struct soap*, const char*, wstop__TopicType *, const char*);
SOAP_FMAC1 wstop__TopicType * SOAP_FMAC2 soap_instantiate_wstop__TopicType(struct soap*, int, const char*, const char*, size_t*);

inline wstop__TopicType * soap_new_wstop__TopicType(struct soap *soap, int n = -1) { return soap_instantiate_wstop__TopicType(soap, n, NULL, NULL, NULL); }

inline wstop__TopicType * soap_new_req_wstop__TopicType(
	struct soap *soap,
	const std::string& name)
{	wstop__TopicType *_p = soap_new_wstop__TopicType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wstop__TopicType::name = name;
	}
	return _p;
}

inline wstop__TopicType * soap_new_set_wstop__TopicType(
	struct soap *soap,
	wstop__QueryExpressionType *MessagePattern,
	const std::vector<wstop__TopicType *> & Topic,
	const std::string& name,
	std::string *messageTypes,
	bool final_,
	wstop__Documentation *documentation1)
{	wstop__TopicType *_p = soap_new_wstop__TopicType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wstop__TopicType::MessagePattern = MessagePattern;
		_p->wstop__TopicType::Topic = Topic;
		_p->wstop__TopicType::name = name;
		_p->wstop__TopicType::messageTypes = messageTypes;
		_p->wstop__TopicType::final_ = final_;
		_p->wstop__ExtensibleDocumented::documentation = documentation1;
	}
	return _p;
}

#ifndef soap_write_wstop__TopicType
#define soap_write_wstop__TopicType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wstop:TopicType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wstop__TopicType * SOAP_FMAC4 soap_get_wstop__TopicType(struct soap*, wstop__TopicType *, const char*, const char*);

#ifndef soap_read_wstop__TopicType
#define soap_read_wstop__TopicType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wstop__TopicType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wstop__TopicNamespaceType
#define SOAP_TYPE_wstop__TopicNamespaceType (841)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__TopicNamespaceType(struct soap*, const char*, int, const wstop__TopicNamespaceType *, const char*);
SOAP_FMAC3 wstop__TopicNamespaceType * SOAP_FMAC4 soap_in_wstop__TopicNamespaceType(struct soap*, const char*, wstop__TopicNamespaceType *, const char*);
SOAP_FMAC1 wstop__TopicNamespaceType * SOAP_FMAC2 soap_instantiate_wstop__TopicNamespaceType(struct soap*, int, const char*, const char*, size_t*);

inline wstop__TopicNamespaceType * soap_new_wstop__TopicNamespaceType(struct soap *soap, int n = -1) { return soap_instantiate_wstop__TopicNamespaceType(soap, n, NULL, NULL, NULL); }

inline wstop__TopicNamespaceType * soap_new_req_wstop__TopicNamespaceType(
	struct soap *soap,
	const std::string& targetNamespace)
{	wstop__TopicNamespaceType *_p = soap_new_wstop__TopicNamespaceType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wstop__TopicNamespaceType::targetNamespace = targetNamespace;
	}
	return _p;
}

inline wstop__TopicNamespaceType * soap_new_set_wstop__TopicNamespaceType(
	struct soap *soap,
	std::vector<_wstop__TopicNamespaceType_Topic> *Topic,
	std::string *name,
	const std::string& targetNamespace,
	bool final_,
	wstop__Documentation *documentation1)
{	wstop__TopicNamespaceType *_p = soap_new_wstop__TopicNamespaceType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wstop__TopicNamespaceType::Topic = Topic;
		_p->wstop__TopicNamespaceType::name = name;
		_p->wstop__TopicNamespaceType::targetNamespace = targetNamespace;
		_p->wstop__TopicNamespaceType::final_ = final_;
		_p->wstop__ExtensibleDocumented::documentation = documentation1;
	}
	return _p;
}

#ifndef soap_write_wstop__TopicNamespaceType
#define soap_write_wstop__TopicNamespaceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wstop:TopicNamespaceType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wstop__TopicNamespaceType * SOAP_FMAC4 soap_get_wstop__TopicNamespaceType(struct soap*, wstop__TopicNamespaceType *, const char*, const char*);

#ifndef soap_read_wstop__TopicNamespaceType
#define soap_read_wstop__TopicNamespaceType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wstop__TopicNamespaceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wstop__QueryExpressionType
#define SOAP_TYPE_wstop__QueryExpressionType (840)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__QueryExpressionType(struct soap*, const char*, int, const wstop__QueryExpressionType *, const char*);
SOAP_FMAC3 wstop__QueryExpressionType * SOAP_FMAC4 soap_in_wstop__QueryExpressionType(struct soap*, const char*, wstop__QueryExpressionType *, const char*);
SOAP_FMAC1 wstop__QueryExpressionType * SOAP_FMAC2 soap_instantiate_wstop__QueryExpressionType(struct soap*, int, const char*, const char*, size_t*);

inline wstop__QueryExpressionType * soap_new_wstop__QueryExpressionType(struct soap *soap, int n = -1) { return soap_instantiate_wstop__QueryExpressionType(soap, n, NULL, NULL, NULL); }

inline wstop__QueryExpressionType * soap_new_req_wstop__QueryExpressionType(
	struct soap *soap,
	const std::string& Dialect)
{	wstop__QueryExpressionType *_p = soap_new_wstop__QueryExpressionType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wstop__QueryExpressionType::Dialect = Dialect;
	}
	return _p;
}

inline wstop__QueryExpressionType * soap_new_set_wstop__QueryExpressionType(
	struct soap *soap,
	const std::string& Dialect,
	char *__mixed)
{	wstop__QueryExpressionType *_p = soap_new_wstop__QueryExpressionType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wstop__QueryExpressionType::Dialect = Dialect;
		_p->wstop__QueryExpressionType::__mixed = __mixed;
	}
	return _p;
}

#ifndef soap_write_wstop__QueryExpressionType
#define soap_write_wstop__QueryExpressionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wstop:QueryExpressionType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wstop__QueryExpressionType * SOAP_FMAC4 soap_get_wstop__QueryExpressionType(struct soap*, wstop__QueryExpressionType *, const char*, const char*);

#ifndef soap_read_wstop__QueryExpressionType
#define soap_read_wstop__QueryExpressionType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wstop__QueryExpressionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wstop__ExtensibleDocumented
#define SOAP_TYPE_wstop__ExtensibleDocumented (839)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__ExtensibleDocumented(struct soap*, const char*, int, const wstop__ExtensibleDocumented *, const char*);
SOAP_FMAC3 wstop__ExtensibleDocumented * SOAP_FMAC4 soap_in_wstop__ExtensibleDocumented(struct soap*, const char*, wstop__ExtensibleDocumented *, const char*);
SOAP_FMAC1 wstop__ExtensibleDocumented * SOAP_FMAC2 soap_instantiate_wstop__ExtensibleDocumented(struct soap*, int, const char*, const char*, size_t*);

inline wstop__ExtensibleDocumented * soap_new_wstop__ExtensibleDocumented(struct soap *soap, int n = -1) { return soap_instantiate_wstop__ExtensibleDocumented(soap, n, NULL, NULL, NULL); }

inline wstop__ExtensibleDocumented * soap_new_req_wstop__ExtensibleDocumented(
	struct soap *soap)
{	wstop__ExtensibleDocumented *_p = soap_new_wstop__ExtensibleDocumented(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline wstop__ExtensibleDocumented * soap_new_set_wstop__ExtensibleDocumented(
	struct soap *soap,
	wstop__Documentation *documentation)
{	wstop__ExtensibleDocumented *_p = soap_new_wstop__ExtensibleDocumented(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wstop__ExtensibleDocumented::documentation = documentation;
	}
	return _p;
}

#ifndef soap_write_wstop__ExtensibleDocumented
#define soap_write_wstop__ExtensibleDocumented(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wstop:ExtensibleDocumented", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wstop__ExtensibleDocumented * SOAP_FMAC4 soap_get_wstop__ExtensibleDocumented(struct soap*, wstop__ExtensibleDocumented *, const char*, const char*);

#ifndef soap_read_wstop__ExtensibleDocumented
#define soap_read_wstop__ExtensibleDocumented(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wstop__ExtensibleDocumented(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wstop__Documentation
#define SOAP_TYPE_wstop__Documentation (838)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstop__Documentation(struct soap*, const char*, int, const wstop__Documentation *, const char*);
SOAP_FMAC3 wstop__Documentation * SOAP_FMAC4 soap_in_wstop__Documentation(struct soap*, const char*, wstop__Documentation *, const char*);
SOAP_FMAC1 wstop__Documentation * SOAP_FMAC2 soap_instantiate_wstop__Documentation(struct soap*, int, const char*, const char*, size_t*);

inline wstop__Documentation * soap_new_wstop__Documentation(struct soap *soap, int n = -1) { return soap_instantiate_wstop__Documentation(soap, n, NULL, NULL, NULL); }

inline wstop__Documentation * soap_new_req_wstop__Documentation(
	struct soap *soap)
{	wstop__Documentation *_p = soap_new_wstop__Documentation(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline wstop__Documentation * soap_new_set_wstop__Documentation(
	struct soap *soap,
	char *__mixed)
{	wstop__Documentation *_p = soap_new_wstop__Documentation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wstop__Documentation::__mixed = __mixed;
	}
	return _p;
}

#ifndef soap_write_wstop__Documentation
#define soap_write_wstop__Documentation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wstop:Documentation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wstop__Documentation * SOAP_FMAC4 soap_get_wstop__Documentation(struct soap*, wstop__Documentation *, const char*, const char*);

#ifndef soap_read_wstop__Documentation
#define soap_read_wstop__Documentation(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wstop__Documentation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsrfbf__BaseFaultType
#define SOAP_TYPE_wsrfbf__BaseFaultType (837)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsrfbf__BaseFaultType(struct soap*, const char*, int, const wsrfbf__BaseFaultType *, const char*);
SOAP_FMAC3 wsrfbf__BaseFaultType * SOAP_FMAC4 soap_in_wsrfbf__BaseFaultType(struct soap*, const char*, wsrfbf__BaseFaultType *, const char*);
SOAP_FMAC1 wsrfbf__BaseFaultType * SOAP_FMAC2 soap_instantiate_wsrfbf__BaseFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsrfbf__BaseFaultType * soap_new_wsrfbf__BaseFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsrfbf__BaseFaultType(soap, n, NULL, NULL, NULL); }

inline wsrfbf__BaseFaultType * soap_new_req_wsrfbf__BaseFaultType(
	struct soap *soap,
	time_t Timestamp)
{	wsrfbf__BaseFaultType *_p = soap_new_wsrfbf__BaseFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp;
	}
	return _p;
}

inline wsrfbf__BaseFaultType * soap_new_set_wsrfbf__BaseFaultType(
	struct soap *soap,
	time_t Timestamp,
	struct wsa5__EndpointReferenceType *Originator,
	_wsrfbf__BaseFaultType_ErrorCode *ErrorCode,
	std::vector<_wsrfbf__BaseFaultType_Description> *Description,
	_wsrfbf__BaseFaultType_FaultCause *FaultCause)
{	wsrfbf__BaseFaultType *_p = soap_new_wsrfbf__BaseFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp;
		_p->wsrfbf__BaseFaultType::Originator = Originator;
		_p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode;
		_p->wsrfbf__BaseFaultType::Description = Description;
		_p->wsrfbf__BaseFaultType::FaultCause = FaultCause;
	}
	return _p;
}

#ifndef soap_write_wsrfbf__BaseFaultType
#define soap_write_wsrfbf__BaseFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsrfbf:BaseFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsrfbf__BaseFaultType * SOAP_FMAC4 soap_get_wsrfbf__BaseFaultType(struct soap*, wsrfbf__BaseFaultType *, const char*, const char*);

#ifndef soap_read_wsrfbf__BaseFaultType
#define soap_read_wsrfbf__BaseFaultType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsrfbf__BaseFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wsnt__ResumeSubscriptionResponse
#define SOAP_TYPE__wsnt__ResumeSubscriptionResponse (836)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__ResumeSubscriptionResponse(struct soap*, const char*, int, const _wsnt__ResumeSubscriptionResponse *, const char*);
SOAP_FMAC3 _wsnt__ResumeSubscriptionResponse * SOAP_FMAC4 soap_in__wsnt__ResumeSubscriptionResponse(struct soap*, const char*, _wsnt__ResumeSubscriptionResponse *, const char*);
SOAP_FMAC1 _wsnt__ResumeSubscriptionResponse * SOAP_FMAC2 soap_instantiate__wsnt__ResumeSubscriptionResponse(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__ResumeSubscriptionResponse * soap_new__wsnt__ResumeSubscriptionResponse(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__ResumeSubscriptionResponse(soap, n, NULL, NULL, NULL); }

inline _wsnt__ResumeSubscriptionResponse * soap_new_req__wsnt__ResumeSubscriptionResponse(
	struct soap *soap)
{	_wsnt__ResumeSubscriptionResponse *_p = soap_new__wsnt__ResumeSubscriptionResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _wsnt__ResumeSubscriptionResponse * soap_new_set__wsnt__ResumeSubscriptionResponse(
	struct soap *soap)
{	_wsnt__ResumeSubscriptionResponse *_p = soap_new__wsnt__ResumeSubscriptionResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__wsnt__ResumeSubscriptionResponse
#define soap_write__wsnt__ResumeSubscriptionResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:ResumeSubscriptionResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__ResumeSubscriptionResponse * SOAP_FMAC4 soap_get__wsnt__ResumeSubscriptionResponse(struct soap*, _wsnt__ResumeSubscriptionResponse *, const char*, const char*);

#ifndef soap_read__wsnt__ResumeSubscriptionResponse
#define soap_read__wsnt__ResumeSubscriptionResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__ResumeSubscriptionResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wsnt__ResumeSubscription
#define SOAP_TYPE__wsnt__ResumeSubscription (835)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__ResumeSubscription(struct soap*, const char*, int, const _wsnt__ResumeSubscription *, const char*);
SOAP_FMAC3 _wsnt__ResumeSubscription * SOAP_FMAC4 soap_in__wsnt__ResumeSubscription(struct soap*, const char*, _wsnt__ResumeSubscription *, const char*);
SOAP_FMAC1 _wsnt__ResumeSubscription * SOAP_FMAC2 soap_instantiate__wsnt__ResumeSubscription(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__ResumeSubscription * soap_new__wsnt__ResumeSubscription(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__ResumeSubscription(soap, n, NULL, NULL, NULL); }

inline _wsnt__ResumeSubscription * soap_new_req__wsnt__ResumeSubscription(
	struct soap *soap)
{	_wsnt__ResumeSubscription *_p = soap_new__wsnt__ResumeSubscription(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _wsnt__ResumeSubscription * soap_new_set__wsnt__ResumeSubscription(
	struct soap *soap)
{	_wsnt__ResumeSubscription *_p = soap_new__wsnt__ResumeSubscription(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__wsnt__ResumeSubscription
#define soap_write__wsnt__ResumeSubscription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:ResumeSubscription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__ResumeSubscription * SOAP_FMAC4 soap_get__wsnt__ResumeSubscription(struct soap*, _wsnt__ResumeSubscription *, const char*, const char*);

#ifndef soap_read__wsnt__ResumeSubscription
#define soap_read__wsnt__ResumeSubscription(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__ResumeSubscription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wsnt__PauseSubscriptionResponse
#define SOAP_TYPE__wsnt__PauseSubscriptionResponse (834)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__PauseSubscriptionResponse(struct soap*, const char*, int, const _wsnt__PauseSubscriptionResponse *, const char*);
SOAP_FMAC3 _wsnt__PauseSubscriptionResponse * SOAP_FMAC4 soap_in__wsnt__PauseSubscriptionResponse(struct soap*, const char*, _wsnt__PauseSubscriptionResponse *, const char*);
SOAP_FMAC1 _wsnt__PauseSubscriptionResponse * SOAP_FMAC2 soap_instantiate__wsnt__PauseSubscriptionResponse(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__PauseSubscriptionResponse * soap_new__wsnt__PauseSubscriptionResponse(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__PauseSubscriptionResponse(soap, n, NULL, NULL, NULL); }

inline _wsnt__PauseSubscriptionResponse * soap_new_req__wsnt__PauseSubscriptionResponse(
	struct soap *soap)
{	_wsnt__PauseSubscriptionResponse *_p = soap_new__wsnt__PauseSubscriptionResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _wsnt__PauseSubscriptionResponse * soap_new_set__wsnt__PauseSubscriptionResponse(
	struct soap *soap)
{	_wsnt__PauseSubscriptionResponse *_p = soap_new__wsnt__PauseSubscriptionResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__wsnt__PauseSubscriptionResponse
#define soap_write__wsnt__PauseSubscriptionResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:PauseSubscriptionResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__PauseSubscriptionResponse * SOAP_FMAC4 soap_get__wsnt__PauseSubscriptionResponse(struct soap*, _wsnt__PauseSubscriptionResponse *, const char*, const char*);

#ifndef soap_read__wsnt__PauseSubscriptionResponse
#define soap_read__wsnt__PauseSubscriptionResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__PauseSubscriptionResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wsnt__PauseSubscription
#define SOAP_TYPE__wsnt__PauseSubscription (833)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__PauseSubscription(struct soap*, const char*, int, const _wsnt__PauseSubscription *, const char*);
SOAP_FMAC3 _wsnt__PauseSubscription * SOAP_FMAC4 soap_in__wsnt__PauseSubscription(struct soap*, const char*, _wsnt__PauseSubscription *, const char*);
SOAP_FMAC1 _wsnt__PauseSubscription * SOAP_FMAC2 soap_instantiate__wsnt__PauseSubscription(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__PauseSubscription * soap_new__wsnt__PauseSubscription(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__PauseSubscription(soap, n, NULL, NULL, NULL); }

inline _wsnt__PauseSubscription * soap_new_req__wsnt__PauseSubscription(
	struct soap *soap)
{	_wsnt__PauseSubscription *_p = soap_new__wsnt__PauseSubscription(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _wsnt__PauseSubscription * soap_new_set__wsnt__PauseSubscription(
	struct soap *soap)
{	_wsnt__PauseSubscription *_p = soap_new__wsnt__PauseSubscription(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__wsnt__PauseSubscription
#define soap_write__wsnt__PauseSubscription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:PauseSubscription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__PauseSubscription * SOAP_FMAC4 soap_get__wsnt__PauseSubscription(struct soap*, _wsnt__PauseSubscription *, const char*, const char*);

#ifndef soap_read__wsnt__PauseSubscription
#define soap_read__wsnt__PauseSubscription(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__PauseSubscription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wsnt__UnsubscribeResponse
#define SOAP_TYPE__wsnt__UnsubscribeResponse (832)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UnsubscribeResponse(struct soap*, const char*, int, const _wsnt__UnsubscribeResponse *, const char*);
SOAP_FMAC3 _wsnt__UnsubscribeResponse * SOAP_FMAC4 soap_in__wsnt__UnsubscribeResponse(struct soap*, const char*, _wsnt__UnsubscribeResponse *, const char*);
SOAP_FMAC1 _wsnt__UnsubscribeResponse * SOAP_FMAC2 soap_instantiate__wsnt__UnsubscribeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__UnsubscribeResponse * soap_new__wsnt__UnsubscribeResponse(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__UnsubscribeResponse(soap, n, NULL, NULL, NULL); }

inline _wsnt__UnsubscribeResponse * soap_new_req__wsnt__UnsubscribeResponse(
	struct soap *soap)
{	_wsnt__UnsubscribeResponse *_p = soap_new__wsnt__UnsubscribeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _wsnt__UnsubscribeResponse * soap_new_set__wsnt__UnsubscribeResponse(
	struct soap *soap)
{	_wsnt__UnsubscribeResponse *_p = soap_new__wsnt__UnsubscribeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__wsnt__UnsubscribeResponse
#define soap_write__wsnt__UnsubscribeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:UnsubscribeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__UnsubscribeResponse * SOAP_FMAC4 soap_get__wsnt__UnsubscribeResponse(struct soap*, _wsnt__UnsubscribeResponse *, const char*, const char*);

#ifndef soap_read__wsnt__UnsubscribeResponse
#define soap_read__wsnt__UnsubscribeResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UnsubscribeResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wsnt__Unsubscribe
#define SOAP_TYPE__wsnt__Unsubscribe (831)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__Unsubscribe(struct soap*, const char*, int, const _wsnt__Unsubscribe *, const char*);
SOAP_FMAC3 _wsnt__Unsubscribe * SOAP_FMAC4 soap_in__wsnt__Unsubscribe(struct soap*, const char*, _wsnt__Unsubscribe *, const char*);
SOAP_FMAC1 _wsnt__Unsubscribe * SOAP_FMAC2 soap_instantiate__wsnt__Unsubscribe(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__Unsubscribe * soap_new__wsnt__Unsubscribe(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__Unsubscribe(soap, n, NULL, NULL, NULL); }

inline _wsnt__Unsubscribe * soap_new_req__wsnt__Unsubscribe(
	struct soap *soap)
{	_wsnt__Unsubscribe *_p = soap_new__wsnt__Unsubscribe(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _wsnt__Unsubscribe * soap_new_set__wsnt__Unsubscribe(
	struct soap *soap)
{	_wsnt__Unsubscribe *_p = soap_new__wsnt__Unsubscribe(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__wsnt__Unsubscribe
#define soap_write__wsnt__Unsubscribe(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:Unsubscribe", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__Unsubscribe * SOAP_FMAC4 soap_get__wsnt__Unsubscribe(struct soap*, _wsnt__Unsubscribe *, const char*, const char*);

#ifndef soap_read__wsnt__Unsubscribe
#define soap_read__wsnt__Unsubscribe(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__Unsubscribe(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wsnt__RenewResponse
#define SOAP_TYPE__wsnt__RenewResponse (830)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__RenewResponse(struct soap*, const char*, int, const _wsnt__RenewResponse *, const char*);
SOAP_FMAC3 _wsnt__RenewResponse * SOAP_FMAC4 soap_in__wsnt__RenewResponse(struct soap*, const char*, _wsnt__RenewResponse *, const char*);
SOAP_FMAC1 _wsnt__RenewResponse * SOAP_FMAC2 soap_instantiate__wsnt__RenewResponse(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__RenewResponse * soap_new__wsnt__RenewResponse(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__RenewResponse(soap, n, NULL, NULL, NULL); }

inline _wsnt__RenewResponse * soap_new_req__wsnt__RenewResponse(
	struct soap *soap,
	time_t TerminationTime)
{	_wsnt__RenewResponse *_p = soap_new__wsnt__RenewResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_wsnt__RenewResponse::TerminationTime = TerminationTime;
	}
	return _p;
}

inline _wsnt__RenewResponse * soap_new_set__wsnt__RenewResponse(
	struct soap *soap,
	time_t TerminationTime,
	time_t *CurrentTime)
{	_wsnt__RenewResponse *_p = soap_new__wsnt__RenewResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_wsnt__RenewResponse::TerminationTime = TerminationTime;
		_p->_wsnt__RenewResponse::CurrentTime = CurrentTime;
	}
	return _p;
}

#ifndef soap_write__wsnt__RenewResponse
#define soap_write__wsnt__RenewResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:RenewResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__RenewResponse * SOAP_FMAC4 soap_get__wsnt__RenewResponse(struct soap*, _wsnt__RenewResponse *, const char*, const char*);

#ifndef soap_read__wsnt__RenewResponse
#define soap_read__wsnt__RenewResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__RenewResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wsnt__Renew
#define SOAP_TYPE__wsnt__Renew (829)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__Renew(struct soap*, const char*, int, const _wsnt__Renew *, const char*);
SOAP_FMAC3 _wsnt__Renew * SOAP_FMAC4 soap_in__wsnt__Renew(struct soap*, const char*, _wsnt__Renew *, const char*);
SOAP_FMAC1 _wsnt__Renew * SOAP_FMAC2 soap_instantiate__wsnt__Renew(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__Renew * soap_new__wsnt__Renew(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__Renew(soap, n, NULL, NULL, NULL); }

inline _wsnt__Renew * soap_new_req__wsnt__Renew(
	struct soap *soap,
	std::string *TerminationTime)
{	_wsnt__Renew *_p = soap_new__wsnt__Renew(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_wsnt__Renew::TerminationTime = TerminationTime;
	}
	return _p;
}

inline _wsnt__Renew * soap_new_set__wsnt__Renew(
	struct soap *soap,
	std::string *TerminationTime)
{	_wsnt__Renew *_p = soap_new__wsnt__Renew(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_wsnt__Renew::TerminationTime = TerminationTime;
	}
	return _p;
}

#ifndef soap_write__wsnt__Renew
#define soap_write__wsnt__Renew(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:Renew", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__Renew * SOAP_FMAC4 soap_get__wsnt__Renew(struct soap*, _wsnt__Renew *, const char*, const char*);

#ifndef soap_read__wsnt__Renew
#define soap_read__wsnt__Renew(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__Renew(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wsnt__CreatePullPointResponse
#define SOAP_TYPE__wsnt__CreatePullPointResponse (828)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__CreatePullPointResponse(struct soap*, const char*, int, const _wsnt__CreatePullPointResponse *, const char*);
SOAP_FMAC3 _wsnt__CreatePullPointResponse * SOAP_FMAC4 soap_in__wsnt__CreatePullPointResponse(struct soap*, const char*, _wsnt__CreatePullPointResponse *, const char*);
SOAP_FMAC1 _wsnt__CreatePullPointResponse * SOAP_FMAC2 soap_instantiate__wsnt__CreatePullPointResponse(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__CreatePullPointResponse * soap_new__wsnt__CreatePullPointResponse(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__CreatePullPointResponse(soap, n, NULL, NULL, NULL); }

inline _wsnt__CreatePullPointResponse * soap_new_req__wsnt__CreatePullPointResponse(
	struct soap *soap,
	const struct wsa5__EndpointReferenceType& PullPoint)
{	_wsnt__CreatePullPointResponse *_p = soap_new__wsnt__CreatePullPointResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_wsnt__CreatePullPointResponse::PullPoint = PullPoint;
	}
	return _p;
}

inline _wsnt__CreatePullPointResponse * soap_new_set__wsnt__CreatePullPointResponse(
	struct soap *soap,
	const struct wsa5__EndpointReferenceType& PullPoint)
{	_wsnt__CreatePullPointResponse *_p = soap_new__wsnt__CreatePullPointResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_wsnt__CreatePullPointResponse::PullPoint = PullPoint;
	}
	return _p;
}

#ifndef soap_write__wsnt__CreatePullPointResponse
#define soap_write__wsnt__CreatePullPointResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:CreatePullPointResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__CreatePullPointResponse * SOAP_FMAC4 soap_get__wsnt__CreatePullPointResponse(struct soap*, _wsnt__CreatePullPointResponse *, const char*, const char*);

#ifndef soap_read__wsnt__CreatePullPointResponse
#define soap_read__wsnt__CreatePullPointResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__CreatePullPointResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wsnt__CreatePullPoint
#define SOAP_TYPE__wsnt__CreatePullPoint (827)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__CreatePullPoint(struct soap*, const char*, int, const _wsnt__CreatePullPoint *, const char*);
SOAP_FMAC3 _wsnt__CreatePullPoint * SOAP_FMAC4 soap_in__wsnt__CreatePullPoint(struct soap*, const char*, _wsnt__CreatePullPoint *, const char*);
SOAP_FMAC1 _wsnt__CreatePullPoint * SOAP_FMAC2 soap_instantiate__wsnt__CreatePullPoint(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__CreatePullPoint * soap_new__wsnt__CreatePullPoint(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__CreatePullPoint(soap, n, NULL, NULL, NULL); }

inline _wsnt__CreatePullPoint * soap_new_req__wsnt__CreatePullPoint(
	struct soap *soap)
{	_wsnt__CreatePullPoint *_p = soap_new__wsnt__CreatePullPoint(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _wsnt__CreatePullPoint * soap_new_set__wsnt__CreatePullPoint(
	struct soap *soap)
{	_wsnt__CreatePullPoint *_p = soap_new__wsnt__CreatePullPoint(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__wsnt__CreatePullPoint
#define soap_write__wsnt__CreatePullPoint(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:CreatePullPoint", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__CreatePullPoint * SOAP_FMAC4 soap_get__wsnt__CreatePullPoint(struct soap*, _wsnt__CreatePullPoint *, const char*, const char*);

#ifndef soap_read__wsnt__CreatePullPoint
#define soap_read__wsnt__CreatePullPoint(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__CreatePullPoint(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wsnt__DestroyPullPointResponse
#define SOAP_TYPE__wsnt__DestroyPullPointResponse (826)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__DestroyPullPointResponse(struct soap*, const char*, int, const _wsnt__DestroyPullPointResponse *, const char*);
SOAP_FMAC3 _wsnt__DestroyPullPointResponse * SOAP_FMAC4 soap_in__wsnt__DestroyPullPointResponse(struct soap*, const char*, _wsnt__DestroyPullPointResponse *, const char*);
SOAP_FMAC1 _wsnt__DestroyPullPointResponse * SOAP_FMAC2 soap_instantiate__wsnt__DestroyPullPointResponse(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__DestroyPullPointResponse * soap_new__wsnt__DestroyPullPointResponse(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__DestroyPullPointResponse(soap, n, NULL, NULL, NULL); }

inline _wsnt__DestroyPullPointResponse * soap_new_req__wsnt__DestroyPullPointResponse(
	struct soap *soap)
{	_wsnt__DestroyPullPointResponse *_p = soap_new__wsnt__DestroyPullPointResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _wsnt__DestroyPullPointResponse * soap_new_set__wsnt__DestroyPullPointResponse(
	struct soap *soap)
{	_wsnt__DestroyPullPointResponse *_p = soap_new__wsnt__DestroyPullPointResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__wsnt__DestroyPullPointResponse
#define soap_write__wsnt__DestroyPullPointResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:DestroyPullPointResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__DestroyPullPointResponse * SOAP_FMAC4 soap_get__wsnt__DestroyPullPointResponse(struct soap*, _wsnt__DestroyPullPointResponse *, const char*, const char*);

#ifndef soap_read__wsnt__DestroyPullPointResponse
#define soap_read__wsnt__DestroyPullPointResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__DestroyPullPointResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wsnt__DestroyPullPoint
#define SOAP_TYPE__wsnt__DestroyPullPoint (825)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__DestroyPullPoint(struct soap*, const char*, int, const _wsnt__DestroyPullPoint *, const char*);
SOAP_FMAC3 _wsnt__DestroyPullPoint * SOAP_FMAC4 soap_in__wsnt__DestroyPullPoint(struct soap*, const char*, _wsnt__DestroyPullPoint *, const char*);
SOAP_FMAC1 _wsnt__DestroyPullPoint * SOAP_FMAC2 soap_instantiate__wsnt__DestroyPullPoint(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__DestroyPullPoint * soap_new__wsnt__DestroyPullPoint(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__DestroyPullPoint(soap, n, NULL, NULL, NULL); }

inline _wsnt__DestroyPullPoint * soap_new_req__wsnt__DestroyPullPoint(
	struct soap *soap)
{	_wsnt__DestroyPullPoint *_p = soap_new__wsnt__DestroyPullPoint(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _wsnt__DestroyPullPoint * soap_new_set__wsnt__DestroyPullPoint(
	struct soap *soap)
{	_wsnt__DestroyPullPoint *_p = soap_new__wsnt__DestroyPullPoint(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__wsnt__DestroyPullPoint
#define soap_write__wsnt__DestroyPullPoint(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:DestroyPullPoint", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__DestroyPullPoint * SOAP_FMAC4 soap_get__wsnt__DestroyPullPoint(struct soap*, _wsnt__DestroyPullPoint *, const char*, const char*);

#ifndef soap_read__wsnt__DestroyPullPoint
#define soap_read__wsnt__DestroyPullPoint(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__DestroyPullPoint(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wsnt__GetMessagesResponse
#define SOAP_TYPE__wsnt__GetMessagesResponse (824)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__GetMessagesResponse(struct soap*, const char*, int, const _wsnt__GetMessagesResponse *, const char*);
SOAP_FMAC3 _wsnt__GetMessagesResponse * SOAP_FMAC4 soap_in__wsnt__GetMessagesResponse(struct soap*, const char*, _wsnt__GetMessagesResponse *, const char*);
SOAP_FMAC1 _wsnt__GetMessagesResponse * SOAP_FMAC2 soap_instantiate__wsnt__GetMessagesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__GetMessagesResponse * soap_new__wsnt__GetMessagesResponse(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__GetMessagesResponse(soap, n, NULL, NULL, NULL); }

inline _wsnt__GetMessagesResponse * soap_new_req__wsnt__GetMessagesResponse(
	struct soap *soap)
{	_wsnt__GetMessagesResponse *_p = soap_new__wsnt__GetMessagesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _wsnt__GetMessagesResponse * soap_new_set__wsnt__GetMessagesResponse(
	struct soap *soap,
	const std::vector<wsnt__NotificationMessageHolderType *> & NotificationMessage)
{	_wsnt__GetMessagesResponse *_p = soap_new__wsnt__GetMessagesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_wsnt__GetMessagesResponse::NotificationMessage = NotificationMessage;
	}
	return _p;
}

#ifndef soap_write__wsnt__GetMessagesResponse
#define soap_write__wsnt__GetMessagesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:GetMessagesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__GetMessagesResponse * SOAP_FMAC4 soap_get__wsnt__GetMessagesResponse(struct soap*, _wsnt__GetMessagesResponse *, const char*, const char*);

#ifndef soap_read__wsnt__GetMessagesResponse
#define soap_read__wsnt__GetMessagesResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__GetMessagesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wsnt__GetMessages
#define SOAP_TYPE__wsnt__GetMessages (823)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__GetMessages(struct soap*, const char*, int, const _wsnt__GetMessages *, const char*);
SOAP_FMAC3 _wsnt__GetMessages * SOAP_FMAC4 soap_in__wsnt__GetMessages(struct soap*, const char*, _wsnt__GetMessages *, const char*);
SOAP_FMAC1 _wsnt__GetMessages * SOAP_FMAC2 soap_instantiate__wsnt__GetMessages(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__GetMessages * soap_new__wsnt__GetMessages(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__GetMessages(soap, n, NULL, NULL, NULL); }

inline _wsnt__GetMessages * soap_new_req__wsnt__GetMessages(
	struct soap *soap)
{	_wsnt__GetMessages *_p = soap_new__wsnt__GetMessages(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _wsnt__GetMessages * soap_new_set__wsnt__GetMessages(
	struct soap *soap,
	std::string *MaximumNumber)
{	_wsnt__GetMessages *_p = soap_new__wsnt__GetMessages(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_wsnt__GetMessages::MaximumNumber = MaximumNumber;
	}
	return _p;
}

#ifndef soap_write__wsnt__GetMessages
#define soap_write__wsnt__GetMessages(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:GetMessages", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__GetMessages * SOAP_FMAC4 soap_get__wsnt__GetMessages(struct soap*, _wsnt__GetMessages *, const char*, const char*);

#ifndef soap_read__wsnt__GetMessages
#define soap_read__wsnt__GetMessages(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__GetMessages(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wsnt__GetCurrentMessageResponse
#define SOAP_TYPE__wsnt__GetCurrentMessageResponse (822)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__GetCurrentMessageResponse(struct soap*, const char*, int, const _wsnt__GetCurrentMessageResponse *, const char*);
SOAP_FMAC3 _wsnt__GetCurrentMessageResponse * SOAP_FMAC4 soap_in__wsnt__GetCurrentMessageResponse(struct soap*, const char*, _wsnt__GetCurrentMessageResponse *, const char*);
SOAP_FMAC1 _wsnt__GetCurrentMessageResponse * SOAP_FMAC2 soap_instantiate__wsnt__GetCurrentMessageResponse(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__GetCurrentMessageResponse * soap_new__wsnt__GetCurrentMessageResponse(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__GetCurrentMessageResponse(soap, n, NULL, NULL, NULL); }

inline _wsnt__GetCurrentMessageResponse * soap_new_req__wsnt__GetCurrentMessageResponse(
	struct soap *soap)
{	_wsnt__GetCurrentMessageResponse *_p = soap_new__wsnt__GetCurrentMessageResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _wsnt__GetCurrentMessageResponse * soap_new_set__wsnt__GetCurrentMessageResponse(
	struct soap *soap)
{	_wsnt__GetCurrentMessageResponse *_p = soap_new__wsnt__GetCurrentMessageResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__wsnt__GetCurrentMessageResponse
#define soap_write__wsnt__GetCurrentMessageResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:GetCurrentMessageResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__GetCurrentMessageResponse * SOAP_FMAC4 soap_get__wsnt__GetCurrentMessageResponse(struct soap*, _wsnt__GetCurrentMessageResponse *, const char*, const char*);

#ifndef soap_read__wsnt__GetCurrentMessageResponse
#define soap_read__wsnt__GetCurrentMessageResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__GetCurrentMessageResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wsnt__GetCurrentMessage
#define SOAP_TYPE__wsnt__GetCurrentMessage (821)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__GetCurrentMessage(struct soap*, const char*, int, const _wsnt__GetCurrentMessage *, const char*);
SOAP_FMAC3 _wsnt__GetCurrentMessage * SOAP_FMAC4 soap_in__wsnt__GetCurrentMessage(struct soap*, const char*, _wsnt__GetCurrentMessage *, const char*);
SOAP_FMAC1 _wsnt__GetCurrentMessage * SOAP_FMAC2 soap_instantiate__wsnt__GetCurrentMessage(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__GetCurrentMessage * soap_new__wsnt__GetCurrentMessage(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__GetCurrentMessage(soap, n, NULL, NULL, NULL); }

inline _wsnt__GetCurrentMessage * soap_new_req__wsnt__GetCurrentMessage(
	struct soap *soap,
	wsnt__TopicExpressionType *Topic)
{	_wsnt__GetCurrentMessage *_p = soap_new__wsnt__GetCurrentMessage(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_wsnt__GetCurrentMessage::Topic = Topic;
	}
	return _p;
}

inline _wsnt__GetCurrentMessage * soap_new_set__wsnt__GetCurrentMessage(
	struct soap *soap,
	wsnt__TopicExpressionType *Topic)
{	_wsnt__GetCurrentMessage *_p = soap_new__wsnt__GetCurrentMessage(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_wsnt__GetCurrentMessage::Topic = Topic;
	}
	return _p;
}

#ifndef soap_write__wsnt__GetCurrentMessage
#define soap_write__wsnt__GetCurrentMessage(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:GetCurrentMessage", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__GetCurrentMessage * SOAP_FMAC4 soap_get__wsnt__GetCurrentMessage(struct soap*, _wsnt__GetCurrentMessage *, const char*, const char*);

#ifndef soap_read__wsnt__GetCurrentMessage
#define soap_read__wsnt__GetCurrentMessage(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__GetCurrentMessage(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wsnt__SubscribeResponse
#define SOAP_TYPE__wsnt__SubscribeResponse (820)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__SubscribeResponse(struct soap*, const char*, int, const _wsnt__SubscribeResponse *, const char*);
SOAP_FMAC3 _wsnt__SubscribeResponse * SOAP_FMAC4 soap_in__wsnt__SubscribeResponse(struct soap*, const char*, _wsnt__SubscribeResponse *, const char*);
SOAP_FMAC1 _wsnt__SubscribeResponse * SOAP_FMAC2 soap_instantiate__wsnt__SubscribeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__SubscribeResponse * soap_new__wsnt__SubscribeResponse(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__SubscribeResponse(soap, n, NULL, NULL, NULL); }

inline _wsnt__SubscribeResponse * soap_new_req__wsnt__SubscribeResponse(
	struct soap *soap,
	const struct wsa5__EndpointReferenceType& SubscriptionReference)
{	_wsnt__SubscribeResponse *_p = soap_new__wsnt__SubscribeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_wsnt__SubscribeResponse::SubscriptionReference = SubscriptionReference;
	}
	return _p;
}

inline _wsnt__SubscribeResponse * soap_new_set__wsnt__SubscribeResponse(
	struct soap *soap,
	const struct wsa5__EndpointReferenceType& SubscriptionReference,
	time_t *CurrentTime,
	time_t *TerminationTime)
{	_wsnt__SubscribeResponse *_p = soap_new__wsnt__SubscribeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_wsnt__SubscribeResponse::SubscriptionReference = SubscriptionReference;
		_p->_wsnt__SubscribeResponse::CurrentTime = CurrentTime;
		_p->_wsnt__SubscribeResponse::TerminationTime = TerminationTime;
	}
	return _p;
}

#ifndef soap_write__wsnt__SubscribeResponse
#define soap_write__wsnt__SubscribeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:SubscribeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__SubscribeResponse * SOAP_FMAC4 soap_get__wsnt__SubscribeResponse(struct soap*, _wsnt__SubscribeResponse *, const char*, const char*);

#ifndef soap_read__wsnt__SubscribeResponse
#define soap_read__wsnt__SubscribeResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__SubscribeResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wsnt__Subscribe
#define SOAP_TYPE__wsnt__Subscribe (819)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__Subscribe(struct soap*, const char*, int, const _wsnt__Subscribe *, const char*);
SOAP_FMAC3 _wsnt__Subscribe * SOAP_FMAC4 soap_in__wsnt__Subscribe(struct soap*, const char*, _wsnt__Subscribe *, const char*);
SOAP_FMAC1 _wsnt__Subscribe * SOAP_FMAC2 soap_instantiate__wsnt__Subscribe(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__Subscribe * soap_new__wsnt__Subscribe(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__Subscribe(soap, n, NULL, NULL, NULL); }

inline _wsnt__Subscribe * soap_new_req__wsnt__Subscribe(
	struct soap *soap,
	const struct wsa5__EndpointReferenceType& ConsumerReference)
{	_wsnt__Subscribe *_p = soap_new__wsnt__Subscribe(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_wsnt__Subscribe::ConsumerReference = ConsumerReference;
	}
	return _p;
}

inline _wsnt__Subscribe * soap_new_set__wsnt__Subscribe(
	struct soap *soap,
	const struct wsa5__EndpointReferenceType& ConsumerReference,
	wsnt__FilterType *Filter,
	std::string *InitialTerminationTime,
	_wsnt__Subscribe_SubscriptionPolicy *SubscriptionPolicy)
{	_wsnt__Subscribe *_p = soap_new__wsnt__Subscribe(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_wsnt__Subscribe::ConsumerReference = ConsumerReference;
		_p->_wsnt__Subscribe::Filter = Filter;
		_p->_wsnt__Subscribe::InitialTerminationTime = InitialTerminationTime;
		_p->_wsnt__Subscribe::SubscriptionPolicy = SubscriptionPolicy;
	}
	return _p;
}

#ifndef soap_write__wsnt__Subscribe
#define soap_write__wsnt__Subscribe(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:Subscribe", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__Subscribe * SOAP_FMAC4 soap_get__wsnt__Subscribe(struct soap*, _wsnt__Subscribe *, const char*, const char*);

#ifndef soap_read__wsnt__Subscribe
#define soap_read__wsnt__Subscribe(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__Subscribe(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wsnt__UseRaw
#define SOAP_TYPE__wsnt__UseRaw (818)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__UseRaw(struct soap*, const char*, int, const _wsnt__UseRaw *, const char*);
SOAP_FMAC3 _wsnt__UseRaw * SOAP_FMAC4 soap_in__wsnt__UseRaw(struct soap*, const char*, _wsnt__UseRaw *, const char*);
SOAP_FMAC1 _wsnt__UseRaw * SOAP_FMAC2 soap_instantiate__wsnt__UseRaw(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__UseRaw * soap_new__wsnt__UseRaw(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__UseRaw(soap, n, NULL, NULL, NULL); }

inline _wsnt__UseRaw * soap_new_req__wsnt__UseRaw(
	struct soap *soap)
{	_wsnt__UseRaw *_p = soap_new__wsnt__UseRaw(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _wsnt__UseRaw * soap_new_set__wsnt__UseRaw(
	struct soap *soap)
{	_wsnt__UseRaw *_p = soap_new__wsnt__UseRaw(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__wsnt__UseRaw
#define soap_write__wsnt__UseRaw(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:UseRaw", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__UseRaw * SOAP_FMAC4 soap_get__wsnt__UseRaw(struct soap*, _wsnt__UseRaw *, const char*, const char*);

#ifndef soap_read__wsnt__UseRaw
#define soap_read__wsnt__UseRaw(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__UseRaw(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wsnt__Notify
#define SOAP_TYPE__wsnt__Notify (817)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__Notify(struct soap*, const char*, int, const _wsnt__Notify *, const char*);
SOAP_FMAC3 _wsnt__Notify * SOAP_FMAC4 soap_in__wsnt__Notify(struct soap*, const char*, _wsnt__Notify *, const char*);
SOAP_FMAC1 _wsnt__Notify * SOAP_FMAC2 soap_instantiate__wsnt__Notify(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__Notify * soap_new__wsnt__Notify(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__Notify(soap, n, NULL, NULL, NULL); }

inline _wsnt__Notify * soap_new_req__wsnt__Notify(
	struct soap *soap,
	const std::vector<wsnt__NotificationMessageHolderType *> & NotificationMessage)
{	_wsnt__Notify *_p = soap_new__wsnt__Notify(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_wsnt__Notify::NotificationMessage = NotificationMessage;
	}
	return _p;
}

inline _wsnt__Notify * soap_new_set__wsnt__Notify(
	struct soap *soap,
	const std::vector<wsnt__NotificationMessageHolderType *> & NotificationMessage)
{	_wsnt__Notify *_p = soap_new__wsnt__Notify(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_wsnt__Notify::NotificationMessage = NotificationMessage;
	}
	return _p;
}

#ifndef soap_write__wsnt__Notify
#define soap_write__wsnt__Notify(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:Notify", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__Notify * SOAP_FMAC4 soap_get__wsnt__Notify(struct soap*, _wsnt__Notify *, const char*, const char*);

#ifndef soap_read__wsnt__Notify
#define soap_read__wsnt__Notify(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__Notify(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wsnt__SubscriptionManagerRP
#define SOAP_TYPE__wsnt__SubscriptionManagerRP (816)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__SubscriptionManagerRP(struct soap*, const char*, int, const _wsnt__SubscriptionManagerRP *, const char*);
SOAP_FMAC3 _wsnt__SubscriptionManagerRP * SOAP_FMAC4 soap_in__wsnt__SubscriptionManagerRP(struct soap*, const char*, _wsnt__SubscriptionManagerRP *, const char*);
SOAP_FMAC1 _wsnt__SubscriptionManagerRP * SOAP_FMAC2 soap_instantiate__wsnt__SubscriptionManagerRP(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__SubscriptionManagerRP * soap_new__wsnt__SubscriptionManagerRP(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__SubscriptionManagerRP(soap, n, NULL, NULL, NULL); }

inline _wsnt__SubscriptionManagerRP * soap_new_req__wsnt__SubscriptionManagerRP(
	struct soap *soap,
	const struct wsa5__EndpointReferenceType& ConsumerReference)
{	_wsnt__SubscriptionManagerRP *_p = soap_new__wsnt__SubscriptionManagerRP(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_wsnt__SubscriptionManagerRP::ConsumerReference = ConsumerReference;
	}
	return _p;
}

inline _wsnt__SubscriptionManagerRP * soap_new_set__wsnt__SubscriptionManagerRP(
	struct soap *soap,
	const struct wsa5__EndpointReferenceType& ConsumerReference,
	wsnt__FilterType *Filter,
	wsnt__SubscriptionPolicyType *SubscriptionPolicy,
	time_t *CreationTime)
{	_wsnt__SubscriptionManagerRP *_p = soap_new__wsnt__SubscriptionManagerRP(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_wsnt__SubscriptionManagerRP::ConsumerReference = ConsumerReference;
		_p->_wsnt__SubscriptionManagerRP::Filter = Filter;
		_p->_wsnt__SubscriptionManagerRP::SubscriptionPolicy = SubscriptionPolicy;
		_p->_wsnt__SubscriptionManagerRP::CreationTime = CreationTime;
	}
	return _p;
}

#ifndef soap_write__wsnt__SubscriptionManagerRP
#define soap_write__wsnt__SubscriptionManagerRP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:SubscriptionManagerRP", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__SubscriptionManagerRP * SOAP_FMAC4 soap_get__wsnt__SubscriptionManagerRP(struct soap*, _wsnt__SubscriptionManagerRP *, const char*, const char*);

#ifndef soap_read__wsnt__SubscriptionManagerRP
#define soap_read__wsnt__SubscriptionManagerRP(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__SubscriptionManagerRP(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__wsnt__NotificationProducerRP
#define SOAP_TYPE__wsnt__NotificationProducerRP (815)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__wsnt__NotificationProducerRP(struct soap*, const char*, int, const _wsnt__NotificationProducerRP *, const char*);
SOAP_FMAC3 _wsnt__NotificationProducerRP * SOAP_FMAC4 soap_in__wsnt__NotificationProducerRP(struct soap*, const char*, _wsnt__NotificationProducerRP *, const char*);
SOAP_FMAC1 _wsnt__NotificationProducerRP * SOAP_FMAC2 soap_instantiate__wsnt__NotificationProducerRP(struct soap*, int, const char*, const char*, size_t*);

inline _wsnt__NotificationProducerRP * soap_new__wsnt__NotificationProducerRP(struct soap *soap, int n = -1) { return soap_instantiate__wsnt__NotificationProducerRP(soap, n, NULL, NULL, NULL); }

inline _wsnt__NotificationProducerRP * soap_new_req__wsnt__NotificationProducerRP(
	struct soap *soap)
{	_wsnt__NotificationProducerRP *_p = soap_new__wsnt__NotificationProducerRP(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _wsnt__NotificationProducerRP * soap_new_set__wsnt__NotificationProducerRP(
	struct soap *soap,
	const std::vector<wsnt__TopicExpressionType *> & TopicExpression,
	bool FixedTopicSet,
	const std::vector<std::string> & TopicExpressionDialect,
	wstop__TopicSetType *wstop__TopicSet)
{	_wsnt__NotificationProducerRP *_p = soap_new__wsnt__NotificationProducerRP(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_wsnt__NotificationProducerRP::TopicExpression = TopicExpression;
		_p->_wsnt__NotificationProducerRP::FixedTopicSet = FixedTopicSet;
		_p->_wsnt__NotificationProducerRP::TopicExpressionDialect = TopicExpressionDialect;
		_p->_wsnt__NotificationProducerRP::wstop__TopicSet = wstop__TopicSet;
	}
	return _p;
}

#ifndef soap_write__wsnt__NotificationProducerRP
#define soap_write__wsnt__NotificationProducerRP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:NotificationProducerRP", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__NotificationProducerRP * SOAP_FMAC4 soap_get__wsnt__NotificationProducerRP(struct soap*, _wsnt__NotificationProducerRP *, const char*, const char*);

#ifndef soap_read__wsnt__NotificationProducerRP
#define soap_read__wsnt__NotificationProducerRP(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__wsnt__NotificationProducerRP(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsnt__ResumeFailedFaultType
#define SOAP_TYPE_wsnt__ResumeFailedFaultType (814)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__ResumeFailedFaultType(struct soap*, const char*, int, const wsnt__ResumeFailedFaultType *, const char*);
SOAP_FMAC3 wsnt__ResumeFailedFaultType * SOAP_FMAC4 soap_in_wsnt__ResumeFailedFaultType(struct soap*, const char*, wsnt__ResumeFailedFaultType *, const char*);
SOAP_FMAC1 wsnt__ResumeFailedFaultType * SOAP_FMAC2 soap_instantiate_wsnt__ResumeFailedFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__ResumeFailedFaultType * soap_new_wsnt__ResumeFailedFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__ResumeFailedFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__ResumeFailedFaultType * soap_new_req_wsnt__ResumeFailedFaultType(
	struct soap *soap,
	time_t Timestamp1)
{	wsnt__ResumeFailedFaultType *_p = soap_new_wsnt__ResumeFailedFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
	}
	return _p;
}

inline wsnt__ResumeFailedFaultType * soap_new_set_wsnt__ResumeFailedFaultType(
	struct soap *soap,
	time_t Timestamp1,
	struct wsa5__EndpointReferenceType *Originator1,
	_wsrfbf__BaseFaultType_ErrorCode *ErrorCode1,
	std::vector<_wsrfbf__BaseFaultType_Description> *Description1,
	_wsrfbf__BaseFaultType_FaultCause *FaultCause1)
{	wsnt__ResumeFailedFaultType *_p = soap_new_wsnt__ResumeFailedFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
		_p->wsrfbf__BaseFaultType::Originator = Originator1;
		_p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1;
		_p->wsrfbf__BaseFaultType::Description = Description1;
		_p->wsrfbf__BaseFaultType::FaultCause = FaultCause1;
	}
	return _p;
}

#ifndef soap_write_wsnt__ResumeFailedFaultType
#define soap_write_wsnt__ResumeFailedFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:ResumeFailedFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__ResumeFailedFaultType * SOAP_FMAC4 soap_get_wsnt__ResumeFailedFaultType(struct soap*, wsnt__ResumeFailedFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__ResumeFailedFaultType
#define soap_read_wsnt__ResumeFailedFaultType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__ResumeFailedFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsnt__PauseFailedFaultType
#define SOAP_TYPE_wsnt__PauseFailedFaultType (813)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__PauseFailedFaultType(struct soap*, const char*, int, const wsnt__PauseFailedFaultType *, const char*);
SOAP_FMAC3 wsnt__PauseFailedFaultType * SOAP_FMAC4 soap_in_wsnt__PauseFailedFaultType(struct soap*, const char*, wsnt__PauseFailedFaultType *, const char*);
SOAP_FMAC1 wsnt__PauseFailedFaultType * SOAP_FMAC2 soap_instantiate_wsnt__PauseFailedFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__PauseFailedFaultType * soap_new_wsnt__PauseFailedFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__PauseFailedFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__PauseFailedFaultType * soap_new_req_wsnt__PauseFailedFaultType(
	struct soap *soap,
	time_t Timestamp1)
{	wsnt__PauseFailedFaultType *_p = soap_new_wsnt__PauseFailedFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
	}
	return _p;
}

inline wsnt__PauseFailedFaultType * soap_new_set_wsnt__PauseFailedFaultType(
	struct soap *soap,
	time_t Timestamp1,
	struct wsa5__EndpointReferenceType *Originator1,
	_wsrfbf__BaseFaultType_ErrorCode *ErrorCode1,
	std::vector<_wsrfbf__BaseFaultType_Description> *Description1,
	_wsrfbf__BaseFaultType_FaultCause *FaultCause1)
{	wsnt__PauseFailedFaultType *_p = soap_new_wsnt__PauseFailedFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
		_p->wsrfbf__BaseFaultType::Originator = Originator1;
		_p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1;
		_p->wsrfbf__BaseFaultType::Description = Description1;
		_p->wsrfbf__BaseFaultType::FaultCause = FaultCause1;
	}
	return _p;
}

#ifndef soap_write_wsnt__PauseFailedFaultType
#define soap_write_wsnt__PauseFailedFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:PauseFailedFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__PauseFailedFaultType * SOAP_FMAC4 soap_get_wsnt__PauseFailedFaultType(struct soap*, wsnt__PauseFailedFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__PauseFailedFaultType
#define soap_read_wsnt__PauseFailedFaultType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__PauseFailedFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsnt__UnableToDestroySubscriptionFaultType
#define SOAP_TYPE_wsnt__UnableToDestroySubscriptionFaultType (812)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, const char*, int, const wsnt__UnableToDestroySubscriptionFaultType *, const char*);
SOAP_FMAC3 wsnt__UnableToDestroySubscriptionFaultType * SOAP_FMAC4 soap_in_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, const char*, wsnt__UnableToDestroySubscriptionFaultType *, const char*);
SOAP_FMAC1 wsnt__UnableToDestroySubscriptionFaultType * SOAP_FMAC2 soap_instantiate_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__UnableToDestroySubscriptionFaultType * soap_new_wsnt__UnableToDestroySubscriptionFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__UnableToDestroySubscriptionFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__UnableToDestroySubscriptionFaultType * soap_new_req_wsnt__UnableToDestroySubscriptionFaultType(
	struct soap *soap,
	time_t Timestamp1)
{	wsnt__UnableToDestroySubscriptionFaultType *_p = soap_new_wsnt__UnableToDestroySubscriptionFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
	}
	return _p;
}

inline wsnt__UnableToDestroySubscriptionFaultType * soap_new_set_wsnt__UnableToDestroySubscriptionFaultType(
	struct soap *soap,
	time_t Timestamp1,
	struct wsa5__EndpointReferenceType *Originator1,
	_wsrfbf__BaseFaultType_ErrorCode *ErrorCode1,
	std::vector<_wsrfbf__BaseFaultType_Description> *Description1,
	_wsrfbf__BaseFaultType_FaultCause *FaultCause1)
{	wsnt__UnableToDestroySubscriptionFaultType *_p = soap_new_wsnt__UnableToDestroySubscriptionFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
		_p->wsrfbf__BaseFaultType::Originator = Originator1;
		_p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1;
		_p->wsrfbf__BaseFaultType::Description = Description1;
		_p->wsrfbf__BaseFaultType::FaultCause = FaultCause1;
	}
	return _p;
}

#ifndef soap_write_wsnt__UnableToDestroySubscriptionFaultType
#define soap_write_wsnt__UnableToDestroySubscriptionFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:UnableToDestroySubscriptionFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__UnableToDestroySubscriptionFaultType * SOAP_FMAC4 soap_get_wsnt__UnableToDestroySubscriptionFaultType(struct soap*, wsnt__UnableToDestroySubscriptionFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnableToDestroySubscriptionFaultType
#define soap_read_wsnt__UnableToDestroySubscriptionFaultType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__UnableToDestroySubscriptionFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsnt__UnacceptableTerminationTimeFaultType
#define SOAP_TYPE_wsnt__UnacceptableTerminationTimeFaultType (811)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, const char*, int, const wsnt__UnacceptableTerminationTimeFaultType *, const char*);
SOAP_FMAC3 wsnt__UnacceptableTerminationTimeFaultType * SOAP_FMAC4 soap_in_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, const char*, wsnt__UnacceptableTerminationTimeFaultType *, const char*);
SOAP_FMAC1 wsnt__UnacceptableTerminationTimeFaultType * SOAP_FMAC2 soap_instantiate_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__UnacceptableTerminationTimeFaultType * soap_new_wsnt__UnacceptableTerminationTimeFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__UnacceptableTerminationTimeFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__UnacceptableTerminationTimeFaultType * soap_new_req_wsnt__UnacceptableTerminationTimeFaultType(
	struct soap *soap,
	time_t MinimumTime,
	time_t Timestamp1)
{	wsnt__UnacceptableTerminationTimeFaultType *_p = soap_new_wsnt__UnacceptableTerminationTimeFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsnt__UnacceptableTerminationTimeFaultType::MinimumTime = MinimumTime;
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
	}
	return _p;
}

inline wsnt__UnacceptableTerminationTimeFaultType * soap_new_set_wsnt__UnacceptableTerminationTimeFaultType(
	struct soap *soap,
	time_t MinimumTime,
	time_t *MaximumTime,
	time_t Timestamp1,
	struct wsa5__EndpointReferenceType *Originator1,
	_wsrfbf__BaseFaultType_ErrorCode *ErrorCode1,
	std::vector<_wsrfbf__BaseFaultType_Description> *Description1,
	_wsrfbf__BaseFaultType_FaultCause *FaultCause1)
{	wsnt__UnacceptableTerminationTimeFaultType *_p = soap_new_wsnt__UnacceptableTerminationTimeFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsnt__UnacceptableTerminationTimeFaultType::MinimumTime = MinimumTime;
		_p->wsnt__UnacceptableTerminationTimeFaultType::MaximumTime = MaximumTime;
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
		_p->wsrfbf__BaseFaultType::Originator = Originator1;
		_p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1;
		_p->wsrfbf__BaseFaultType::Description = Description1;
		_p->wsrfbf__BaseFaultType::FaultCause = FaultCause1;
	}
	return _p;
}

#ifndef soap_write_wsnt__UnacceptableTerminationTimeFaultType
#define soap_write_wsnt__UnacceptableTerminationTimeFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:UnacceptableTerminationTimeFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__UnacceptableTerminationTimeFaultType * SOAP_FMAC4 soap_get_wsnt__UnacceptableTerminationTimeFaultType(struct soap*, wsnt__UnacceptableTerminationTimeFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnacceptableTerminationTimeFaultType
#define soap_read_wsnt__UnacceptableTerminationTimeFaultType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__UnacceptableTerminationTimeFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsnt__UnableToCreatePullPointFaultType
#define SOAP_TYPE_wsnt__UnableToCreatePullPointFaultType (810)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnableToCreatePullPointFaultType(struct soap*, const char*, int, const wsnt__UnableToCreatePullPointFaultType *, const char*);
SOAP_FMAC3 wsnt__UnableToCreatePullPointFaultType * SOAP_FMAC4 soap_in_wsnt__UnableToCreatePullPointFaultType(struct soap*, const char*, wsnt__UnableToCreatePullPointFaultType *, const char*);
SOAP_FMAC1 wsnt__UnableToCreatePullPointFaultType * SOAP_FMAC2 soap_instantiate_wsnt__UnableToCreatePullPointFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__UnableToCreatePullPointFaultType * soap_new_wsnt__UnableToCreatePullPointFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__UnableToCreatePullPointFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__UnableToCreatePullPointFaultType * soap_new_req_wsnt__UnableToCreatePullPointFaultType(
	struct soap *soap,
	time_t Timestamp1)
{	wsnt__UnableToCreatePullPointFaultType *_p = soap_new_wsnt__UnableToCreatePullPointFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
	}
	return _p;
}

inline wsnt__UnableToCreatePullPointFaultType * soap_new_set_wsnt__UnableToCreatePullPointFaultType(
	struct soap *soap,
	time_t Timestamp1,
	struct wsa5__EndpointReferenceType *Originator1,
	_wsrfbf__BaseFaultType_ErrorCode *ErrorCode1,
	std::vector<_wsrfbf__BaseFaultType_Description> *Description1,
	_wsrfbf__BaseFaultType_FaultCause *FaultCause1)
{	wsnt__UnableToCreatePullPointFaultType *_p = soap_new_wsnt__UnableToCreatePullPointFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
		_p->wsrfbf__BaseFaultType::Originator = Originator1;
		_p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1;
		_p->wsrfbf__BaseFaultType::Description = Description1;
		_p->wsrfbf__BaseFaultType::FaultCause = FaultCause1;
	}
	return _p;
}

#ifndef soap_write_wsnt__UnableToCreatePullPointFaultType
#define soap_write_wsnt__UnableToCreatePullPointFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:UnableToCreatePullPointFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__UnableToCreatePullPointFaultType * SOAP_FMAC4 soap_get_wsnt__UnableToCreatePullPointFaultType(struct soap*, wsnt__UnableToCreatePullPointFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnableToCreatePullPointFaultType
#define soap_read_wsnt__UnableToCreatePullPointFaultType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__UnableToCreatePullPointFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsnt__UnableToDestroyPullPointFaultType
#define SOAP_TYPE_wsnt__UnableToDestroyPullPointFaultType (809)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnableToDestroyPullPointFaultType(struct soap*, const char*, int, const wsnt__UnableToDestroyPullPointFaultType *, const char*);
SOAP_FMAC3 wsnt__UnableToDestroyPullPointFaultType * SOAP_FMAC4 soap_in_wsnt__UnableToDestroyPullPointFaultType(struct soap*, const char*, wsnt__UnableToDestroyPullPointFaultType *, const char*);
SOAP_FMAC1 wsnt__UnableToDestroyPullPointFaultType * SOAP_FMAC2 soap_instantiate_wsnt__UnableToDestroyPullPointFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__UnableToDestroyPullPointFaultType * soap_new_wsnt__UnableToDestroyPullPointFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__UnableToDestroyPullPointFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__UnableToDestroyPullPointFaultType * soap_new_req_wsnt__UnableToDestroyPullPointFaultType(
	struct soap *soap,
	time_t Timestamp1)
{	wsnt__UnableToDestroyPullPointFaultType *_p = soap_new_wsnt__UnableToDestroyPullPointFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
	}
	return _p;
}

inline wsnt__UnableToDestroyPullPointFaultType * soap_new_set_wsnt__UnableToDestroyPullPointFaultType(
	struct soap *soap,
	time_t Timestamp1,
	struct wsa5__EndpointReferenceType *Originator1,
	_wsrfbf__BaseFaultType_ErrorCode *ErrorCode1,
	std::vector<_wsrfbf__BaseFaultType_Description> *Description1,
	_wsrfbf__BaseFaultType_FaultCause *FaultCause1)
{	wsnt__UnableToDestroyPullPointFaultType *_p = soap_new_wsnt__UnableToDestroyPullPointFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
		_p->wsrfbf__BaseFaultType::Originator = Originator1;
		_p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1;
		_p->wsrfbf__BaseFaultType::Description = Description1;
		_p->wsrfbf__BaseFaultType::FaultCause = FaultCause1;
	}
	return _p;
}

#ifndef soap_write_wsnt__UnableToDestroyPullPointFaultType
#define soap_write_wsnt__UnableToDestroyPullPointFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:UnableToDestroyPullPointFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__UnableToDestroyPullPointFaultType * SOAP_FMAC4 soap_get_wsnt__UnableToDestroyPullPointFaultType(struct soap*, wsnt__UnableToDestroyPullPointFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnableToDestroyPullPointFaultType
#define soap_read_wsnt__UnableToDestroyPullPointFaultType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__UnableToDestroyPullPointFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsnt__UnableToGetMessagesFaultType
#define SOAP_TYPE_wsnt__UnableToGetMessagesFaultType (808)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnableToGetMessagesFaultType(struct soap*, const char*, int, const wsnt__UnableToGetMessagesFaultType *, const char*);
SOAP_FMAC3 wsnt__UnableToGetMessagesFaultType * SOAP_FMAC4 soap_in_wsnt__UnableToGetMessagesFaultType(struct soap*, const char*, wsnt__UnableToGetMessagesFaultType *, const char*);
SOAP_FMAC1 wsnt__UnableToGetMessagesFaultType * SOAP_FMAC2 soap_instantiate_wsnt__UnableToGetMessagesFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__UnableToGetMessagesFaultType * soap_new_wsnt__UnableToGetMessagesFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__UnableToGetMessagesFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__UnableToGetMessagesFaultType * soap_new_req_wsnt__UnableToGetMessagesFaultType(
	struct soap *soap,
	time_t Timestamp1)
{	wsnt__UnableToGetMessagesFaultType *_p = soap_new_wsnt__UnableToGetMessagesFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
	}
	return _p;
}

inline wsnt__UnableToGetMessagesFaultType * soap_new_set_wsnt__UnableToGetMessagesFaultType(
	struct soap *soap,
	time_t Timestamp1,
	struct wsa5__EndpointReferenceType *Originator1,
	_wsrfbf__BaseFaultType_ErrorCode *ErrorCode1,
	std::vector<_wsrfbf__BaseFaultType_Description> *Description1,
	_wsrfbf__BaseFaultType_FaultCause *FaultCause1)
{	wsnt__UnableToGetMessagesFaultType *_p = soap_new_wsnt__UnableToGetMessagesFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
		_p->wsrfbf__BaseFaultType::Originator = Originator1;
		_p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1;
		_p->wsrfbf__BaseFaultType::Description = Description1;
		_p->wsrfbf__BaseFaultType::FaultCause = FaultCause1;
	}
	return _p;
}

#ifndef soap_write_wsnt__UnableToGetMessagesFaultType
#define soap_write_wsnt__UnableToGetMessagesFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:UnableToGetMessagesFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__UnableToGetMessagesFaultType * SOAP_FMAC4 soap_get_wsnt__UnableToGetMessagesFaultType(struct soap*, wsnt__UnableToGetMessagesFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnableToGetMessagesFaultType
#define soap_read_wsnt__UnableToGetMessagesFaultType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__UnableToGetMessagesFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsnt__NoCurrentMessageOnTopicFaultType
#define SOAP_TYPE_wsnt__NoCurrentMessageOnTopicFaultType (807)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, const char*, int, const wsnt__NoCurrentMessageOnTopicFaultType *, const char*);
SOAP_FMAC3 wsnt__NoCurrentMessageOnTopicFaultType * SOAP_FMAC4 soap_in_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, const char*, wsnt__NoCurrentMessageOnTopicFaultType *, const char*);
SOAP_FMAC1 wsnt__NoCurrentMessageOnTopicFaultType * SOAP_FMAC2 soap_instantiate_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__NoCurrentMessageOnTopicFaultType * soap_new_wsnt__NoCurrentMessageOnTopicFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__NoCurrentMessageOnTopicFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__NoCurrentMessageOnTopicFaultType * soap_new_req_wsnt__NoCurrentMessageOnTopicFaultType(
	struct soap *soap,
	time_t Timestamp1)
{	wsnt__NoCurrentMessageOnTopicFaultType *_p = soap_new_wsnt__NoCurrentMessageOnTopicFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
	}
	return _p;
}

inline wsnt__NoCurrentMessageOnTopicFaultType * soap_new_set_wsnt__NoCurrentMessageOnTopicFaultType(
	struct soap *soap,
	time_t Timestamp1,
	struct wsa5__EndpointReferenceType *Originator1,
	_wsrfbf__BaseFaultType_ErrorCode *ErrorCode1,
	std::vector<_wsrfbf__BaseFaultType_Description> *Description1,
	_wsrfbf__BaseFaultType_FaultCause *FaultCause1)
{	wsnt__NoCurrentMessageOnTopicFaultType *_p = soap_new_wsnt__NoCurrentMessageOnTopicFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
		_p->wsrfbf__BaseFaultType::Originator = Originator1;
		_p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1;
		_p->wsrfbf__BaseFaultType::Description = Description1;
		_p->wsrfbf__BaseFaultType::FaultCause = FaultCause1;
	}
	return _p;
}

#ifndef soap_write_wsnt__NoCurrentMessageOnTopicFaultType
#define soap_write_wsnt__NoCurrentMessageOnTopicFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:NoCurrentMessageOnTopicFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__NoCurrentMessageOnTopicFaultType * SOAP_FMAC4 soap_get_wsnt__NoCurrentMessageOnTopicFaultType(struct soap*, wsnt__NoCurrentMessageOnTopicFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__NoCurrentMessageOnTopicFaultType
#define soap_read_wsnt__NoCurrentMessageOnTopicFaultType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__NoCurrentMessageOnTopicFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsnt__UnacceptableInitialTerminationTimeFaultType
#define SOAP_TYPE_wsnt__UnacceptableInitialTerminationTimeFaultType (806)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, const char*, int, const wsnt__UnacceptableInitialTerminationTimeFaultType *, const char*);
SOAP_FMAC3 wsnt__UnacceptableInitialTerminationTimeFaultType * SOAP_FMAC4 soap_in_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, const char*, wsnt__UnacceptableInitialTerminationTimeFaultType *, const char*);
SOAP_FMAC1 wsnt__UnacceptableInitialTerminationTimeFaultType * SOAP_FMAC2 soap_instantiate_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__UnacceptableInitialTerminationTimeFaultType * soap_new_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__UnacceptableInitialTerminationTimeFaultType * soap_new_req_wsnt__UnacceptableInitialTerminationTimeFaultType(
	struct soap *soap,
	time_t MinimumTime,
	time_t Timestamp1)
{	wsnt__UnacceptableInitialTerminationTimeFaultType *_p = soap_new_wsnt__UnacceptableInitialTerminationTimeFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsnt__UnacceptableInitialTerminationTimeFaultType::MinimumTime = MinimumTime;
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
	}
	return _p;
}

inline wsnt__UnacceptableInitialTerminationTimeFaultType * soap_new_set_wsnt__UnacceptableInitialTerminationTimeFaultType(
	struct soap *soap,
	time_t MinimumTime,
	time_t *MaximumTime,
	time_t Timestamp1,
	struct wsa5__EndpointReferenceType *Originator1,
	_wsrfbf__BaseFaultType_ErrorCode *ErrorCode1,
	std::vector<_wsrfbf__BaseFaultType_Description> *Description1,
	_wsrfbf__BaseFaultType_FaultCause *FaultCause1)
{	wsnt__UnacceptableInitialTerminationTimeFaultType *_p = soap_new_wsnt__UnacceptableInitialTerminationTimeFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsnt__UnacceptableInitialTerminationTimeFaultType::MinimumTime = MinimumTime;
		_p->wsnt__UnacceptableInitialTerminationTimeFaultType::MaximumTime = MaximumTime;
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
		_p->wsrfbf__BaseFaultType::Originator = Originator1;
		_p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1;
		_p->wsrfbf__BaseFaultType::Description = Description1;
		_p->wsrfbf__BaseFaultType::FaultCause = FaultCause1;
	}
	return _p;
}

#ifndef soap_write_wsnt__UnacceptableInitialTerminationTimeFaultType
#define soap_write_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:UnacceptableInitialTerminationTimeFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__UnacceptableInitialTerminationTimeFaultType * SOAP_FMAC4 soap_get_wsnt__UnacceptableInitialTerminationTimeFaultType(struct soap*, wsnt__UnacceptableInitialTerminationTimeFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnacceptableInitialTerminationTimeFaultType
#define soap_read_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__UnacceptableInitialTerminationTimeFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsnt__NotifyMessageNotSupportedFaultType
#define SOAP_TYPE_wsnt__NotifyMessageNotSupportedFaultType (805)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, const char*, int, const wsnt__NotifyMessageNotSupportedFaultType *, const char*);
SOAP_FMAC3 wsnt__NotifyMessageNotSupportedFaultType * SOAP_FMAC4 soap_in_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, const char*, wsnt__NotifyMessageNotSupportedFaultType *, const char*);
SOAP_FMAC1 wsnt__NotifyMessageNotSupportedFaultType * SOAP_FMAC2 soap_instantiate_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__NotifyMessageNotSupportedFaultType * soap_new_wsnt__NotifyMessageNotSupportedFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__NotifyMessageNotSupportedFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__NotifyMessageNotSupportedFaultType * soap_new_req_wsnt__NotifyMessageNotSupportedFaultType(
	struct soap *soap,
	time_t Timestamp1)
{	wsnt__NotifyMessageNotSupportedFaultType *_p = soap_new_wsnt__NotifyMessageNotSupportedFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
	}
	return _p;
}

inline wsnt__NotifyMessageNotSupportedFaultType * soap_new_set_wsnt__NotifyMessageNotSupportedFaultType(
	struct soap *soap,
	time_t Timestamp1,
	struct wsa5__EndpointReferenceType *Originator1,
	_wsrfbf__BaseFaultType_ErrorCode *ErrorCode1,
	std::vector<_wsrfbf__BaseFaultType_Description> *Description1,
	_wsrfbf__BaseFaultType_FaultCause *FaultCause1)
{	wsnt__NotifyMessageNotSupportedFaultType *_p = soap_new_wsnt__NotifyMessageNotSupportedFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
		_p->wsrfbf__BaseFaultType::Originator = Originator1;
		_p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1;
		_p->wsrfbf__BaseFaultType::Description = Description1;
		_p->wsrfbf__BaseFaultType::FaultCause = FaultCause1;
	}
	return _p;
}

#ifndef soap_write_wsnt__NotifyMessageNotSupportedFaultType
#define soap_write_wsnt__NotifyMessageNotSupportedFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:NotifyMessageNotSupportedFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__NotifyMessageNotSupportedFaultType * SOAP_FMAC4 soap_get_wsnt__NotifyMessageNotSupportedFaultType(struct soap*, wsnt__NotifyMessageNotSupportedFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__NotifyMessageNotSupportedFaultType
#define soap_read_wsnt__NotifyMessageNotSupportedFaultType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__NotifyMessageNotSupportedFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsnt__UnsupportedPolicyRequestFaultType
#define SOAP_TYPE_wsnt__UnsupportedPolicyRequestFaultType (804)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, const char*, int, const wsnt__UnsupportedPolicyRequestFaultType *, const char*);
SOAP_FMAC3 wsnt__UnsupportedPolicyRequestFaultType * SOAP_FMAC4 soap_in_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, const char*, wsnt__UnsupportedPolicyRequestFaultType *, const char*);
SOAP_FMAC1 wsnt__UnsupportedPolicyRequestFaultType * SOAP_FMAC2 soap_instantiate_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__UnsupportedPolicyRequestFaultType * soap_new_wsnt__UnsupportedPolicyRequestFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__UnsupportedPolicyRequestFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__UnsupportedPolicyRequestFaultType * soap_new_req_wsnt__UnsupportedPolicyRequestFaultType(
	struct soap *soap,
	time_t Timestamp1)
{	wsnt__UnsupportedPolicyRequestFaultType *_p = soap_new_wsnt__UnsupportedPolicyRequestFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
	}
	return _p;
}

inline wsnt__UnsupportedPolicyRequestFaultType * soap_new_set_wsnt__UnsupportedPolicyRequestFaultType(
	struct soap *soap,
	const std::vector<std::string> & UnsupportedPolicy,
	time_t Timestamp1,
	struct wsa5__EndpointReferenceType *Originator1,
	_wsrfbf__BaseFaultType_ErrorCode *ErrorCode1,
	std::vector<_wsrfbf__BaseFaultType_Description> *Description1,
	_wsrfbf__BaseFaultType_FaultCause *FaultCause1)
{	wsnt__UnsupportedPolicyRequestFaultType *_p = soap_new_wsnt__UnsupportedPolicyRequestFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsnt__UnsupportedPolicyRequestFaultType::UnsupportedPolicy = UnsupportedPolicy;
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
		_p->wsrfbf__BaseFaultType::Originator = Originator1;
		_p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1;
		_p->wsrfbf__BaseFaultType::Description = Description1;
		_p->wsrfbf__BaseFaultType::FaultCause = FaultCause1;
	}
	return _p;
}

#ifndef soap_write_wsnt__UnsupportedPolicyRequestFaultType
#define soap_write_wsnt__UnsupportedPolicyRequestFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:UnsupportedPolicyRequestFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__UnsupportedPolicyRequestFaultType * SOAP_FMAC4 soap_get_wsnt__UnsupportedPolicyRequestFaultType(struct soap*, wsnt__UnsupportedPolicyRequestFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnsupportedPolicyRequestFaultType
#define soap_read_wsnt__UnsupportedPolicyRequestFaultType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__UnsupportedPolicyRequestFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsnt__UnrecognizedPolicyRequestFaultType
#define SOAP_TYPE_wsnt__UnrecognizedPolicyRequestFaultType (803)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, const char*, int, const wsnt__UnrecognizedPolicyRequestFaultType *, const char*);
SOAP_FMAC3 wsnt__UnrecognizedPolicyRequestFaultType * SOAP_FMAC4 soap_in_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, const char*, wsnt__UnrecognizedPolicyRequestFaultType *, const char*);
SOAP_FMAC1 wsnt__UnrecognizedPolicyRequestFaultType * SOAP_FMAC2 soap_instantiate_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__UnrecognizedPolicyRequestFaultType * soap_new_wsnt__UnrecognizedPolicyRequestFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__UnrecognizedPolicyRequestFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__UnrecognizedPolicyRequestFaultType * soap_new_req_wsnt__UnrecognizedPolicyRequestFaultType(
	struct soap *soap,
	time_t Timestamp1)
{	wsnt__UnrecognizedPolicyRequestFaultType *_p = soap_new_wsnt__UnrecognizedPolicyRequestFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
	}
	return _p;
}

inline wsnt__UnrecognizedPolicyRequestFaultType * soap_new_set_wsnt__UnrecognizedPolicyRequestFaultType(
	struct soap *soap,
	const std::vector<std::string> & UnrecognizedPolicy,
	time_t Timestamp1,
	struct wsa5__EndpointReferenceType *Originator1,
	_wsrfbf__BaseFaultType_ErrorCode *ErrorCode1,
	std::vector<_wsrfbf__BaseFaultType_Description> *Description1,
	_wsrfbf__BaseFaultType_FaultCause *FaultCause1)
{	wsnt__UnrecognizedPolicyRequestFaultType *_p = soap_new_wsnt__UnrecognizedPolicyRequestFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsnt__UnrecognizedPolicyRequestFaultType::UnrecognizedPolicy = UnrecognizedPolicy;
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
		_p->wsrfbf__BaseFaultType::Originator = Originator1;
		_p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1;
		_p->wsrfbf__BaseFaultType::Description = Description1;
		_p->wsrfbf__BaseFaultType::FaultCause = FaultCause1;
	}
	return _p;
}

#ifndef soap_write_wsnt__UnrecognizedPolicyRequestFaultType
#define soap_write_wsnt__UnrecognizedPolicyRequestFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:UnrecognizedPolicyRequestFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__UnrecognizedPolicyRequestFaultType * SOAP_FMAC4 soap_get_wsnt__UnrecognizedPolicyRequestFaultType(struct soap*, wsnt__UnrecognizedPolicyRequestFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__UnrecognizedPolicyRequestFaultType
#define soap_read_wsnt__UnrecognizedPolicyRequestFaultType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__UnrecognizedPolicyRequestFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsnt__InvalidMessageContentExpressionFaultType
#define SOAP_TYPE_wsnt__InvalidMessageContentExpressionFaultType (802)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, const char*, int, const wsnt__InvalidMessageContentExpressionFaultType *, const char*);
SOAP_FMAC3 wsnt__InvalidMessageContentExpressionFaultType * SOAP_FMAC4 soap_in_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, const char*, wsnt__InvalidMessageContentExpressionFaultType *, const char*);
SOAP_FMAC1 wsnt__InvalidMessageContentExpressionFaultType * SOAP_FMAC2 soap_instantiate_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__InvalidMessageContentExpressionFaultType * soap_new_wsnt__InvalidMessageContentExpressionFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__InvalidMessageContentExpressionFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__InvalidMessageContentExpressionFaultType * soap_new_req_wsnt__InvalidMessageContentExpressionFaultType(
	struct soap *soap,
	time_t Timestamp1)
{	wsnt__InvalidMessageContentExpressionFaultType *_p = soap_new_wsnt__InvalidMessageContentExpressionFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
	}
	return _p;
}

inline wsnt__InvalidMessageContentExpressionFaultType * soap_new_set_wsnt__InvalidMessageContentExpressionFaultType(
	struct soap *soap,
	time_t Timestamp1,
	struct wsa5__EndpointReferenceType *Originator1,
	_wsrfbf__BaseFaultType_ErrorCode *ErrorCode1,
	std::vector<_wsrfbf__BaseFaultType_Description> *Description1,
	_wsrfbf__BaseFaultType_FaultCause *FaultCause1)
{	wsnt__InvalidMessageContentExpressionFaultType *_p = soap_new_wsnt__InvalidMessageContentExpressionFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
		_p->wsrfbf__BaseFaultType::Originator = Originator1;
		_p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1;
		_p->wsrfbf__BaseFaultType::Description = Description1;
		_p->wsrfbf__BaseFaultType::FaultCause = FaultCause1;
	}
	return _p;
}

#ifndef soap_write_wsnt__InvalidMessageContentExpressionFaultType
#define soap_write_wsnt__InvalidMessageContentExpressionFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:InvalidMessageContentExpressionFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__InvalidMessageContentExpressionFaultType * SOAP_FMAC4 soap_get_wsnt__InvalidMessageContentExpressionFaultType(struct soap*, wsnt__InvalidMessageContentExpressionFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__InvalidMessageContentExpressionFaultType
#define soap_read_wsnt__InvalidMessageContentExpressionFaultType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__InvalidMessageContentExpressionFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsnt__InvalidProducerPropertiesExpressionFaultType
#define SOAP_TYPE_wsnt__InvalidProducerPropertiesExpressionFaultType (801)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, const char*, int, const wsnt__InvalidProducerPropertiesExpressionFaultType *, const char*);
SOAP_FMAC3 wsnt__InvalidProducerPropertiesExpressionFaultType * SOAP_FMAC4 soap_in_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, const char*, wsnt__InvalidProducerPropertiesExpressionFaultType *, const char*);
SOAP_FMAC1 wsnt__InvalidProducerPropertiesExpressionFaultType * SOAP_FMAC2 soap_instantiate_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__InvalidProducerPropertiesExpressionFaultType * soap_new_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__InvalidProducerPropertiesExpressionFaultType * soap_new_req_wsnt__InvalidProducerPropertiesExpressionFaultType(
	struct soap *soap,
	time_t Timestamp1)
{	wsnt__InvalidProducerPropertiesExpressionFaultType *_p = soap_new_wsnt__InvalidProducerPropertiesExpressionFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
	}
	return _p;
}

inline wsnt__InvalidProducerPropertiesExpressionFaultType * soap_new_set_wsnt__InvalidProducerPropertiesExpressionFaultType(
	struct soap *soap,
	time_t Timestamp1,
	struct wsa5__EndpointReferenceType *Originator1,
	_wsrfbf__BaseFaultType_ErrorCode *ErrorCode1,
	std::vector<_wsrfbf__BaseFaultType_Description> *Description1,
	_wsrfbf__BaseFaultType_FaultCause *FaultCause1)
{	wsnt__InvalidProducerPropertiesExpressionFaultType *_p = soap_new_wsnt__InvalidProducerPropertiesExpressionFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
		_p->wsrfbf__BaseFaultType::Originator = Originator1;
		_p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1;
		_p->wsrfbf__BaseFaultType::Description = Description1;
		_p->wsrfbf__BaseFaultType::FaultCause = FaultCause1;
	}
	return _p;
}

#ifndef soap_write_wsnt__InvalidProducerPropertiesExpressionFaultType
#define soap_write_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:InvalidProducerPropertiesExpressionFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__InvalidProducerPropertiesExpressionFaultType * SOAP_FMAC4 soap_get_wsnt__InvalidProducerPropertiesExpressionFaultType(struct soap*, wsnt__InvalidProducerPropertiesExpressionFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__InvalidProducerPropertiesExpressionFaultType
#define soap_read_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__InvalidProducerPropertiesExpressionFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsnt__MultipleTopicsSpecifiedFaultType
#define SOAP_TYPE_wsnt__MultipleTopicsSpecifiedFaultType (800)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, const char*, int, const wsnt__MultipleTopicsSpecifiedFaultType *, const char*);
SOAP_FMAC3 wsnt__MultipleTopicsSpecifiedFaultType * SOAP_FMAC4 soap_in_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, const char*, wsnt__MultipleTopicsSpecifiedFaultType *, const char*);
SOAP_FMAC1 wsnt__MultipleTopicsSpecifiedFaultType * SOAP_FMAC2 soap_instantiate_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__MultipleTopicsSpecifiedFaultType * soap_new_wsnt__MultipleTopicsSpecifiedFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__MultipleTopicsSpecifiedFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__MultipleTopicsSpecifiedFaultType * soap_new_req_wsnt__MultipleTopicsSpecifiedFaultType(
	struct soap *soap,
	time_t Timestamp1)
{	wsnt__MultipleTopicsSpecifiedFaultType *_p = soap_new_wsnt__MultipleTopicsSpecifiedFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
	}
	return _p;
}

inline wsnt__MultipleTopicsSpecifiedFaultType * soap_new_set_wsnt__MultipleTopicsSpecifiedFaultType(
	struct soap *soap,
	time_t Timestamp1,
	struct wsa5__EndpointReferenceType *Originator1,
	_wsrfbf__BaseFaultType_ErrorCode *ErrorCode1,
	std::vector<_wsrfbf__BaseFaultType_Description> *Description1,
	_wsrfbf__BaseFaultType_FaultCause *FaultCause1)
{	wsnt__MultipleTopicsSpecifiedFaultType *_p = soap_new_wsnt__MultipleTopicsSpecifiedFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
		_p->wsrfbf__BaseFaultType::Originator = Originator1;
		_p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1;
		_p->wsrfbf__BaseFaultType::Description = Description1;
		_p->wsrfbf__BaseFaultType::FaultCause = FaultCause1;
	}
	return _p;
}

#ifndef soap_write_wsnt__MultipleTopicsSpecifiedFaultType
#define soap_write_wsnt__MultipleTopicsSpecifiedFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:MultipleTopicsSpecifiedFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__MultipleTopicsSpecifiedFaultType * SOAP_FMAC4 soap_get_wsnt__MultipleTopicsSpecifiedFaultType(struct soap*, wsnt__MultipleTopicsSpecifiedFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__MultipleTopicsSpecifiedFaultType
#define soap_read_wsnt__MultipleTopicsSpecifiedFaultType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__MultipleTopicsSpecifiedFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsnt__TopicNotSupportedFaultType
#define SOAP_TYPE_wsnt__TopicNotSupportedFaultType (799)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__TopicNotSupportedFaultType(struct soap*, const char*, int, const wsnt__TopicNotSupportedFaultType *, const char*);
SOAP_FMAC3 wsnt__TopicNotSupportedFaultType * SOAP_FMAC4 soap_in_wsnt__TopicNotSupportedFaultType(struct soap*, const char*, wsnt__TopicNotSupportedFaultType *, const char*);
SOAP_FMAC1 wsnt__TopicNotSupportedFaultType * SOAP_FMAC2 soap_instantiate_wsnt__TopicNotSupportedFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__TopicNotSupportedFaultType * soap_new_wsnt__TopicNotSupportedFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__TopicNotSupportedFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__TopicNotSupportedFaultType * soap_new_req_wsnt__TopicNotSupportedFaultType(
	struct soap *soap,
	time_t Timestamp1)
{	wsnt__TopicNotSupportedFaultType *_p = soap_new_wsnt__TopicNotSupportedFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
	}
	return _p;
}

inline wsnt__TopicNotSupportedFaultType * soap_new_set_wsnt__TopicNotSupportedFaultType(
	struct soap *soap,
	time_t Timestamp1,
	struct wsa5__EndpointReferenceType *Originator1,
	_wsrfbf__BaseFaultType_ErrorCode *ErrorCode1,
	std::vector<_wsrfbf__BaseFaultType_Description> *Description1,
	_wsrfbf__BaseFaultType_FaultCause *FaultCause1)
{	wsnt__TopicNotSupportedFaultType *_p = soap_new_wsnt__TopicNotSupportedFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
		_p->wsrfbf__BaseFaultType::Originator = Originator1;
		_p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1;
		_p->wsrfbf__BaseFaultType::Description = Description1;
		_p->wsrfbf__BaseFaultType::FaultCause = FaultCause1;
	}
	return _p;
}

#ifndef soap_write_wsnt__TopicNotSupportedFaultType
#define soap_write_wsnt__TopicNotSupportedFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:TopicNotSupportedFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__TopicNotSupportedFaultType * SOAP_FMAC4 soap_get_wsnt__TopicNotSupportedFaultType(struct soap*, wsnt__TopicNotSupportedFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__TopicNotSupportedFaultType
#define soap_read_wsnt__TopicNotSupportedFaultType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__TopicNotSupportedFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsnt__InvalidTopicExpressionFaultType
#define SOAP_TYPE_wsnt__InvalidTopicExpressionFaultType (798)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__InvalidTopicExpressionFaultType(struct soap*, const char*, int, const wsnt__InvalidTopicExpressionFaultType *, const char*);
SOAP_FMAC3 wsnt__InvalidTopicExpressionFaultType * SOAP_FMAC4 soap_in_wsnt__InvalidTopicExpressionFaultType(struct soap*, const char*, wsnt__InvalidTopicExpressionFaultType *, const char*);
SOAP_FMAC1 wsnt__InvalidTopicExpressionFaultType * SOAP_FMAC2 soap_instantiate_wsnt__InvalidTopicExpressionFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__InvalidTopicExpressionFaultType * soap_new_wsnt__InvalidTopicExpressionFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__InvalidTopicExpressionFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__InvalidTopicExpressionFaultType * soap_new_req_wsnt__InvalidTopicExpressionFaultType(
	struct soap *soap,
	time_t Timestamp1)
{	wsnt__InvalidTopicExpressionFaultType *_p = soap_new_wsnt__InvalidTopicExpressionFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
	}
	return _p;
}

inline wsnt__InvalidTopicExpressionFaultType * soap_new_set_wsnt__InvalidTopicExpressionFaultType(
	struct soap *soap,
	time_t Timestamp1,
	struct wsa5__EndpointReferenceType *Originator1,
	_wsrfbf__BaseFaultType_ErrorCode *ErrorCode1,
	std::vector<_wsrfbf__BaseFaultType_Description> *Description1,
	_wsrfbf__BaseFaultType_FaultCause *FaultCause1)
{	wsnt__InvalidTopicExpressionFaultType *_p = soap_new_wsnt__InvalidTopicExpressionFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
		_p->wsrfbf__BaseFaultType::Originator = Originator1;
		_p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1;
		_p->wsrfbf__BaseFaultType::Description = Description1;
		_p->wsrfbf__BaseFaultType::FaultCause = FaultCause1;
	}
	return _p;
}

#ifndef soap_write_wsnt__InvalidTopicExpressionFaultType
#define soap_write_wsnt__InvalidTopicExpressionFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:InvalidTopicExpressionFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__InvalidTopicExpressionFaultType * SOAP_FMAC4 soap_get_wsnt__InvalidTopicExpressionFaultType(struct soap*, wsnt__InvalidTopicExpressionFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__InvalidTopicExpressionFaultType
#define soap_read_wsnt__InvalidTopicExpressionFaultType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__InvalidTopicExpressionFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsnt__TopicExpressionDialectUnknownFaultType
#define SOAP_TYPE_wsnt__TopicExpressionDialectUnknownFaultType (797)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, const char*, int, const wsnt__TopicExpressionDialectUnknownFaultType *, const char*);
SOAP_FMAC3 wsnt__TopicExpressionDialectUnknownFaultType * SOAP_FMAC4 soap_in_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, const char*, wsnt__TopicExpressionDialectUnknownFaultType *, const char*);
SOAP_FMAC1 wsnt__TopicExpressionDialectUnknownFaultType * SOAP_FMAC2 soap_instantiate_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__TopicExpressionDialectUnknownFaultType * soap_new_wsnt__TopicExpressionDialectUnknownFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__TopicExpressionDialectUnknownFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__TopicExpressionDialectUnknownFaultType * soap_new_req_wsnt__TopicExpressionDialectUnknownFaultType(
	struct soap *soap,
	time_t Timestamp1)
{	wsnt__TopicExpressionDialectUnknownFaultType *_p = soap_new_wsnt__TopicExpressionDialectUnknownFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
	}
	return _p;
}

inline wsnt__TopicExpressionDialectUnknownFaultType * soap_new_set_wsnt__TopicExpressionDialectUnknownFaultType(
	struct soap *soap,
	time_t Timestamp1,
	struct wsa5__EndpointReferenceType *Originator1,
	_wsrfbf__BaseFaultType_ErrorCode *ErrorCode1,
	std::vector<_wsrfbf__BaseFaultType_Description> *Description1,
	_wsrfbf__BaseFaultType_FaultCause *FaultCause1)
{	wsnt__TopicExpressionDialectUnknownFaultType *_p = soap_new_wsnt__TopicExpressionDialectUnknownFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
		_p->wsrfbf__BaseFaultType::Originator = Originator1;
		_p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1;
		_p->wsrfbf__BaseFaultType::Description = Description1;
		_p->wsrfbf__BaseFaultType::FaultCause = FaultCause1;
	}
	return _p;
}

#ifndef soap_write_wsnt__TopicExpressionDialectUnknownFaultType
#define soap_write_wsnt__TopicExpressionDialectUnknownFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:TopicExpressionDialectUnknownFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__TopicExpressionDialectUnknownFaultType * SOAP_FMAC4 soap_get_wsnt__TopicExpressionDialectUnknownFaultType(struct soap*, wsnt__TopicExpressionDialectUnknownFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__TopicExpressionDialectUnknownFaultType
#define soap_read_wsnt__TopicExpressionDialectUnknownFaultType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__TopicExpressionDialectUnknownFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsnt__InvalidFilterFaultType
#define SOAP_TYPE_wsnt__InvalidFilterFaultType (796)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__InvalidFilterFaultType(struct soap*, const char*, int, const wsnt__InvalidFilterFaultType *, const char*);
SOAP_FMAC3 wsnt__InvalidFilterFaultType * SOAP_FMAC4 soap_in_wsnt__InvalidFilterFaultType(struct soap*, const char*, wsnt__InvalidFilterFaultType *, const char*);
SOAP_FMAC1 wsnt__InvalidFilterFaultType * SOAP_FMAC2 soap_instantiate_wsnt__InvalidFilterFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__InvalidFilterFaultType * soap_new_wsnt__InvalidFilterFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__InvalidFilterFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__InvalidFilterFaultType * soap_new_req_wsnt__InvalidFilterFaultType(
	struct soap *soap,
	const std::vector<std::string> & UnknownFilter,
	time_t Timestamp1)
{	wsnt__InvalidFilterFaultType *_p = soap_new_wsnt__InvalidFilterFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsnt__InvalidFilterFaultType::UnknownFilter = UnknownFilter;
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
	}
	return _p;
}

inline wsnt__InvalidFilterFaultType * soap_new_set_wsnt__InvalidFilterFaultType(
	struct soap *soap,
	const std::vector<std::string> & UnknownFilter,
	time_t Timestamp1,
	struct wsa5__EndpointReferenceType *Originator1,
	_wsrfbf__BaseFaultType_ErrorCode *ErrorCode1,
	std::vector<_wsrfbf__BaseFaultType_Description> *Description1,
	_wsrfbf__BaseFaultType_FaultCause *FaultCause1)
{	wsnt__InvalidFilterFaultType *_p = soap_new_wsnt__InvalidFilterFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsnt__InvalidFilterFaultType::UnknownFilter = UnknownFilter;
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
		_p->wsrfbf__BaseFaultType::Originator = Originator1;
		_p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1;
		_p->wsrfbf__BaseFaultType::Description = Description1;
		_p->wsrfbf__BaseFaultType::FaultCause = FaultCause1;
	}
	return _p;
}

#ifndef soap_write_wsnt__InvalidFilterFaultType
#define soap_write_wsnt__InvalidFilterFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:InvalidFilterFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__InvalidFilterFaultType * SOAP_FMAC4 soap_get_wsnt__InvalidFilterFaultType(struct soap*, wsnt__InvalidFilterFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__InvalidFilterFaultType
#define soap_read_wsnt__InvalidFilterFaultType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__InvalidFilterFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsnt__SubscribeCreationFailedFaultType
#define SOAP_TYPE_wsnt__SubscribeCreationFailedFaultType (795)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__SubscribeCreationFailedFaultType(struct soap*, const char*, int, const wsnt__SubscribeCreationFailedFaultType *, const char*);
SOAP_FMAC3 wsnt__SubscribeCreationFailedFaultType * SOAP_FMAC4 soap_in_wsnt__SubscribeCreationFailedFaultType(struct soap*, const char*, wsnt__SubscribeCreationFailedFaultType *, const char*);
SOAP_FMAC1 wsnt__SubscribeCreationFailedFaultType * SOAP_FMAC2 soap_instantiate_wsnt__SubscribeCreationFailedFaultType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__SubscribeCreationFailedFaultType * soap_new_wsnt__SubscribeCreationFailedFaultType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__SubscribeCreationFailedFaultType(soap, n, NULL, NULL, NULL); }

inline wsnt__SubscribeCreationFailedFaultType * soap_new_req_wsnt__SubscribeCreationFailedFaultType(
	struct soap *soap,
	time_t Timestamp1)
{	wsnt__SubscribeCreationFailedFaultType *_p = soap_new_wsnt__SubscribeCreationFailedFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
	}
	return _p;
}

inline wsnt__SubscribeCreationFailedFaultType * soap_new_set_wsnt__SubscribeCreationFailedFaultType(
	struct soap *soap,
	time_t Timestamp1,
	struct wsa5__EndpointReferenceType *Originator1,
	_wsrfbf__BaseFaultType_ErrorCode *ErrorCode1,
	std::vector<_wsrfbf__BaseFaultType_Description> *Description1,
	_wsrfbf__BaseFaultType_FaultCause *FaultCause1)
{	wsnt__SubscribeCreationFailedFaultType *_p = soap_new_wsnt__SubscribeCreationFailedFaultType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsrfbf__BaseFaultType::Timestamp = Timestamp1;
		_p->wsrfbf__BaseFaultType::Originator = Originator1;
		_p->wsrfbf__BaseFaultType::ErrorCode = ErrorCode1;
		_p->wsrfbf__BaseFaultType::Description = Description1;
		_p->wsrfbf__BaseFaultType::FaultCause = FaultCause1;
	}
	return _p;
}

#ifndef soap_write_wsnt__SubscribeCreationFailedFaultType
#define soap_write_wsnt__SubscribeCreationFailedFaultType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:SubscribeCreationFailedFaultType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__SubscribeCreationFailedFaultType * SOAP_FMAC4 soap_get_wsnt__SubscribeCreationFailedFaultType(struct soap*, wsnt__SubscribeCreationFailedFaultType *, const char*, const char*);

#ifndef soap_read_wsnt__SubscribeCreationFailedFaultType
#define soap_read_wsnt__SubscribeCreationFailedFaultType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__SubscribeCreationFailedFaultType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsnt__NotificationMessageHolderType
#define SOAP_TYPE_wsnt__NotificationMessageHolderType (794)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__NotificationMessageHolderType(struct soap*, const char*, int, const wsnt__NotificationMessageHolderType *, const char*);
SOAP_FMAC3 wsnt__NotificationMessageHolderType * SOAP_FMAC4 soap_in_wsnt__NotificationMessageHolderType(struct soap*, const char*, wsnt__NotificationMessageHolderType *, const char*);
SOAP_FMAC1 wsnt__NotificationMessageHolderType * SOAP_FMAC2 soap_instantiate_wsnt__NotificationMessageHolderType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__NotificationMessageHolderType * soap_new_wsnt__NotificationMessageHolderType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__NotificationMessageHolderType(soap, n, NULL, NULL, NULL); }

inline wsnt__NotificationMessageHolderType * soap_new_req_wsnt__NotificationMessageHolderType(
	struct soap *soap,
	const _wsnt__NotificationMessageHolderType_Message& Message)
{	wsnt__NotificationMessageHolderType *_p = soap_new_wsnt__NotificationMessageHolderType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsnt__NotificationMessageHolderType::Message = Message;
	}
	return _p;
}

inline wsnt__NotificationMessageHolderType * soap_new_set_wsnt__NotificationMessageHolderType(
	struct soap *soap,
	struct wsa5__EndpointReferenceType *SubscriptionReference,
	wsnt__TopicExpressionType *Topic,
	struct wsa5__EndpointReferenceType *ProducerReference,
	const _wsnt__NotificationMessageHolderType_Message& Message)
{	wsnt__NotificationMessageHolderType *_p = soap_new_wsnt__NotificationMessageHolderType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsnt__NotificationMessageHolderType::SubscriptionReference = SubscriptionReference;
		_p->wsnt__NotificationMessageHolderType::Topic = Topic;
		_p->wsnt__NotificationMessageHolderType::ProducerReference = ProducerReference;
		_p->wsnt__NotificationMessageHolderType::Message = Message;
	}
	return _p;
}

#ifndef soap_write_wsnt__NotificationMessageHolderType
#define soap_write_wsnt__NotificationMessageHolderType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:NotificationMessageHolderType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__NotificationMessageHolderType * SOAP_FMAC4 soap_get_wsnt__NotificationMessageHolderType(struct soap*, wsnt__NotificationMessageHolderType *, const char*, const char*);

#ifndef soap_read_wsnt__NotificationMessageHolderType
#define soap_read_wsnt__NotificationMessageHolderType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__NotificationMessageHolderType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsnt__SubscriptionPolicyType
#define SOAP_TYPE_wsnt__SubscriptionPolicyType (793)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__SubscriptionPolicyType(struct soap*, const char*, int, const wsnt__SubscriptionPolicyType *, const char*);
SOAP_FMAC3 wsnt__SubscriptionPolicyType * SOAP_FMAC4 soap_in_wsnt__SubscriptionPolicyType(struct soap*, const char*, wsnt__SubscriptionPolicyType *, const char*);
SOAP_FMAC1 wsnt__SubscriptionPolicyType * SOAP_FMAC2 soap_instantiate_wsnt__SubscriptionPolicyType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__SubscriptionPolicyType * soap_new_wsnt__SubscriptionPolicyType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__SubscriptionPolicyType(soap, n, NULL, NULL, NULL); }

inline wsnt__SubscriptionPolicyType * soap_new_req_wsnt__SubscriptionPolicyType(
	struct soap *soap)
{	wsnt__SubscriptionPolicyType *_p = soap_new_wsnt__SubscriptionPolicyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline wsnt__SubscriptionPolicyType * soap_new_set_wsnt__SubscriptionPolicyType(
	struct soap *soap)
{	wsnt__SubscriptionPolicyType *_p = soap_new_wsnt__SubscriptionPolicyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_wsnt__SubscriptionPolicyType
#define soap_write_wsnt__SubscriptionPolicyType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:SubscriptionPolicyType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__SubscriptionPolicyType * SOAP_FMAC4 soap_get_wsnt__SubscriptionPolicyType(struct soap*, wsnt__SubscriptionPolicyType *, const char*, const char*);

#ifndef soap_read_wsnt__SubscriptionPolicyType
#define soap_read_wsnt__SubscriptionPolicyType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__SubscriptionPolicyType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsnt__FilterType
#define SOAP_TYPE_wsnt__FilterType (792)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__FilterType(struct soap*, const char*, int, const wsnt__FilterType *, const char*);
SOAP_FMAC3 wsnt__FilterType * SOAP_FMAC4 soap_in_wsnt__FilterType(struct soap*, const char*, wsnt__FilterType *, const char*);
SOAP_FMAC1 wsnt__FilterType * SOAP_FMAC2 soap_instantiate_wsnt__FilterType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__FilterType * soap_new_wsnt__FilterType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__FilterType(soap, n, NULL, NULL, NULL); }

inline wsnt__FilterType * soap_new_req_wsnt__FilterType(
	struct soap *soap)
{	wsnt__FilterType *_p = soap_new_wsnt__FilterType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline wsnt__FilterType * soap_new_set_wsnt__FilterType(
	struct soap *soap)
{	wsnt__FilterType *_p = soap_new_wsnt__FilterType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_wsnt__FilterType
#define soap_write_wsnt__FilterType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:FilterType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__FilterType * SOAP_FMAC4 soap_get_wsnt__FilterType(struct soap*, wsnt__FilterType *, const char*, const char*);

#ifndef soap_read_wsnt__FilterType
#define soap_read_wsnt__FilterType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__FilterType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsnt__TopicExpressionType
#define SOAP_TYPE_wsnt__TopicExpressionType (791)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__TopicExpressionType(struct soap*, const char*, int, const wsnt__TopicExpressionType *, const char*);
SOAP_FMAC3 wsnt__TopicExpressionType * SOAP_FMAC4 soap_in_wsnt__TopicExpressionType(struct soap*, const char*, wsnt__TopicExpressionType *, const char*);
SOAP_FMAC1 wsnt__TopicExpressionType * SOAP_FMAC2 soap_instantiate_wsnt__TopicExpressionType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__TopicExpressionType * soap_new_wsnt__TopicExpressionType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__TopicExpressionType(soap, n, NULL, NULL, NULL); }

inline wsnt__TopicExpressionType * soap_new_req_wsnt__TopicExpressionType(
	struct soap *soap,
	const std::string& Dialect)
{	wsnt__TopicExpressionType *_p = soap_new_wsnt__TopicExpressionType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsnt__TopicExpressionType::Dialect = Dialect;
	}
	return _p;
}

inline wsnt__TopicExpressionType * soap_new_set_wsnt__TopicExpressionType(
	struct soap *soap,
	const std::string& Dialect,
	char *__mixed)
{	wsnt__TopicExpressionType *_p = soap_new_wsnt__TopicExpressionType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsnt__TopicExpressionType::Dialect = Dialect;
		_p->wsnt__TopicExpressionType::__mixed = __mixed;
	}
	return _p;
}

#ifndef soap_write_wsnt__TopicExpressionType
#define soap_write_wsnt__TopicExpressionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:TopicExpressionType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__TopicExpressionType * SOAP_FMAC4 soap_get_wsnt__TopicExpressionType(struct soap*, wsnt__TopicExpressionType *, const char*, const char*);

#ifndef soap_read_wsnt__TopicExpressionType
#define soap_read_wsnt__TopicExpressionType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__TopicExpressionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsnt__QueryExpressionType
#define SOAP_TYPE_wsnt__QueryExpressionType (790)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsnt__QueryExpressionType(struct soap*, const char*, int, const wsnt__QueryExpressionType *, const char*);
SOAP_FMAC3 wsnt__QueryExpressionType * SOAP_FMAC4 soap_in_wsnt__QueryExpressionType(struct soap*, const char*, wsnt__QueryExpressionType *, const char*);
SOAP_FMAC1 wsnt__QueryExpressionType * SOAP_FMAC2 soap_instantiate_wsnt__QueryExpressionType(struct soap*, int, const char*, const char*, size_t*);

inline wsnt__QueryExpressionType * soap_new_wsnt__QueryExpressionType(struct soap *soap, int n = -1) { return soap_instantiate_wsnt__QueryExpressionType(soap, n, NULL, NULL, NULL); }

inline wsnt__QueryExpressionType * soap_new_req_wsnt__QueryExpressionType(
	struct soap *soap,
	const std::string& Dialect)
{	wsnt__QueryExpressionType *_p = soap_new_wsnt__QueryExpressionType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsnt__QueryExpressionType::Dialect = Dialect;
	}
	return _p;
}

inline wsnt__QueryExpressionType * soap_new_set_wsnt__QueryExpressionType(
	struct soap *soap,
	const std::string& Dialect,
	char *__mixed)
{	wsnt__QueryExpressionType *_p = soap_new_wsnt__QueryExpressionType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->wsnt__QueryExpressionType::Dialect = Dialect;
		_p->wsnt__QueryExpressionType::__mixed = __mixed;
	}
	return _p;
}

#ifndef soap_write_wsnt__QueryExpressionType
#define soap_write_wsnt__QueryExpressionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsnt:QueryExpressionType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__QueryExpressionType * SOAP_FMAC4 soap_get_wsnt__QueryExpressionType(struct soap*, wsnt__QueryExpressionType *, const char*, const char*);

#ifndef soap_read_wsnt__QueryExpressionType
#define soap_read_wsnt__QueryExpressionType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsnt__QueryExpressionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tt__Message
#define SOAP_TYPE__tt__Message (789)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__Message(struct soap*, const char*, int, const _tt__Message *, const char*);
SOAP_FMAC3 _tt__Message * SOAP_FMAC4 soap_in__tt__Message(struct soap*, const char*, _tt__Message *, const char*);
SOAP_FMAC1 _tt__Message * SOAP_FMAC2 soap_instantiate__tt__Message(struct soap*, int, const char*, const char*, size_t*);

inline _tt__Message * soap_new__tt__Message(struct soap *soap, int n = -1) { return soap_instantiate__tt__Message(soap, n, NULL, NULL, NULL); }

inline _tt__Message * soap_new_req__tt__Message(
	struct soap *soap,
	time_t UtcTime)
{	_tt__Message *_p = soap_new__tt__Message(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tt__Message::UtcTime = UtcTime;
	}
	return _p;
}

inline _tt__Message * soap_new_set__tt__Message(
	struct soap *soap,
	tt__ItemList *Source,
	tt__ItemList *Key,
	tt__ItemList *Data,
	tt__MessageExtension *Extension,
	time_t UtcTime,
	enum tt__PropertyOperation *PropertyOperation)
{	_tt__Message *_p = soap_new__tt__Message(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tt__Message::Source = Source;
		_p->_tt__Message::Key = Key;
		_p->_tt__Message::Data = Data;
		_p->_tt__Message::Extension = Extension;
		_p->_tt__Message::UtcTime = UtcTime;
		_p->_tt__Message::PropertyOperation = PropertyOperation;
	}
	return _p;
}

#ifndef soap_write__tt__Message
#define soap_write__tt__Message(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Message", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tt__Message * SOAP_FMAC4 soap_get__tt__Message(struct soap*, _tt__Message *, const char*, const char*);

#ifndef soap_read__tt__Message
#define soap_read__tt__Message(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tt__Message(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__TransformationExtension
#define SOAP_TYPE_tt__TransformationExtension (788)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__TransformationExtension(struct soap*, const char*, int, const tt__TransformationExtension *, const char*);
SOAP_FMAC3 tt__TransformationExtension * SOAP_FMAC4 soap_in_tt__TransformationExtension(struct soap*, const char*, tt__TransformationExtension *, const char*);
SOAP_FMAC1 tt__TransformationExtension * SOAP_FMAC2 soap_instantiate_tt__TransformationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__TransformationExtension * soap_new_tt__TransformationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__TransformationExtension(soap, n, NULL, NULL, NULL); }

inline tt__TransformationExtension * soap_new_req_tt__TransformationExtension(
	struct soap *soap)
{	tt__TransformationExtension *_p = soap_new_tt__TransformationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__TransformationExtension * soap_new_set_tt__TransformationExtension(
	struct soap *soap)
{	tt__TransformationExtension *_p = soap_new_tt__TransformationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__TransformationExtension
#define soap_write_tt__TransformationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:TransformationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__TransformationExtension * SOAP_FMAC4 soap_get_tt__TransformationExtension(struct soap*, tt__TransformationExtension *, const char*, const char*);

#ifndef soap_read_tt__TransformationExtension
#define soap_read_tt__TransformationExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__TransformationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Transformation
#define SOAP_TYPE_tt__Transformation (787)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Transformation(struct soap*, const char*, int, const tt__Transformation *, const char*);
SOAP_FMAC3 tt__Transformation * SOAP_FMAC4 soap_in_tt__Transformation(struct soap*, const char*, tt__Transformation *, const char*);
SOAP_FMAC1 tt__Transformation * SOAP_FMAC2 soap_instantiate_tt__Transformation(struct soap*, int, const char*, const char*, size_t*);

inline tt__Transformation * soap_new_tt__Transformation(struct soap *soap, int n = -1) { return soap_instantiate_tt__Transformation(soap, n, NULL, NULL, NULL); }

inline tt__Transformation * soap_new_req_tt__Transformation(
	struct soap *soap)
{	tt__Transformation *_p = soap_new_tt__Transformation(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__Transformation * soap_new_set_tt__Transformation(
	struct soap *soap,
	tt__Vector *Translate,
	tt__Vector *Scale,
	tt__TransformationExtension *Extension)
{	tt__Transformation *_p = soap_new_tt__Transformation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Transformation::Translate = Translate;
		_p->tt__Transformation::Scale = Scale;
		_p->tt__Transformation::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__Transformation
#define soap_write_tt__Transformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Transformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Transformation * SOAP_FMAC4 soap_get_tt__Transformation(struct soap*, tt__Transformation *, const char*, const char*);

#ifndef soap_read_tt__Transformation
#define soap_read_tt__Transformation(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Transformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ColorCovariance
#define SOAP_TYPE_tt__ColorCovariance (786)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ColorCovariance(struct soap*, const char*, int, const tt__ColorCovariance *, const char*);
SOAP_FMAC3 tt__ColorCovariance * SOAP_FMAC4 soap_in_tt__ColorCovariance(struct soap*, const char*, tt__ColorCovariance *, const char*);
SOAP_FMAC1 tt__ColorCovariance * SOAP_FMAC2 soap_instantiate_tt__ColorCovariance(struct soap*, int, const char*, const char*, size_t*);

inline tt__ColorCovariance * soap_new_tt__ColorCovariance(struct soap *soap, int n = -1) { return soap_instantiate_tt__ColorCovariance(soap, n, NULL, NULL, NULL); }

inline tt__ColorCovariance * soap_new_req_tt__ColorCovariance(
	struct soap *soap,
	float XX,
	float YY,
	float ZZ)
{	tt__ColorCovariance *_p = soap_new_tt__ColorCovariance(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ColorCovariance::XX = XX;
		_p->tt__ColorCovariance::YY = YY;
		_p->tt__ColorCovariance::ZZ = ZZ;
	}
	return _p;
}

inline tt__ColorCovariance * soap_new_set_tt__ColorCovariance(
	struct soap *soap,
	float XX,
	float YY,
	float ZZ,
	float *XY,
	float *XZ,
	float *YZ,
	std::string *Colorspace)
{	tt__ColorCovariance *_p = soap_new_tt__ColorCovariance(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ColorCovariance::XX = XX;
		_p->tt__ColorCovariance::YY = YY;
		_p->tt__ColorCovariance::ZZ = ZZ;
		_p->tt__ColorCovariance::XY = XY;
		_p->tt__ColorCovariance::XZ = XZ;
		_p->tt__ColorCovariance::YZ = YZ;
		_p->tt__ColorCovariance::Colorspace = Colorspace;
	}
	return _p;
}

#ifndef soap_write_tt__ColorCovariance
#define soap_write_tt__ColorCovariance(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ColorCovariance", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ColorCovariance * SOAP_FMAC4 soap_get_tt__ColorCovariance(struct soap*, tt__ColorCovariance *, const char*, const char*);

#ifndef soap_read_tt__ColorCovariance
#define soap_read_tt__ColorCovariance(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ColorCovariance(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Color
#define SOAP_TYPE_tt__Color (785)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Color(struct soap*, const char*, int, const tt__Color *, const char*);
SOAP_FMAC3 tt__Color * SOAP_FMAC4 soap_in_tt__Color(struct soap*, const char*, tt__Color *, const char*);
SOAP_FMAC1 tt__Color * SOAP_FMAC2 soap_instantiate_tt__Color(struct soap*, int, const char*, const char*, size_t*);

inline tt__Color * soap_new_tt__Color(struct soap *soap, int n = -1) { return soap_instantiate_tt__Color(soap, n, NULL, NULL, NULL); }

inline tt__Color * soap_new_req_tt__Color(
	struct soap *soap,
	float X,
	float Y,
	float Z)
{	tt__Color *_p = soap_new_tt__Color(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Color::X = X;
		_p->tt__Color::Y = Y;
		_p->tt__Color::Z = Z;
	}
	return _p;
}

inline tt__Color * soap_new_set_tt__Color(
	struct soap *soap,
	float X,
	float Y,
	float Z,
	std::string *Colorspace)
{	tt__Color *_p = soap_new_tt__Color(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Color::X = X;
		_p->tt__Color::Y = Y;
		_p->tt__Color::Z = Z;
		_p->tt__Color::Colorspace = Colorspace;
	}
	return _p;
}

#ifndef soap_write_tt__Color
#define soap_write_tt__Color(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Color", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Color * SOAP_FMAC4 soap_get_tt__Color(struct soap*, tt__Color *, const char*, const char*);

#ifndef soap_read_tt__Color
#define soap_read_tt__Color(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Color(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Polygon
#define SOAP_TYPE_tt__Polygon (784)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Polygon(struct soap*, const char*, int, const tt__Polygon *, const char*);
SOAP_FMAC3 tt__Polygon * SOAP_FMAC4 soap_in_tt__Polygon(struct soap*, const char*, tt__Polygon *, const char*);
SOAP_FMAC1 tt__Polygon * SOAP_FMAC2 soap_instantiate_tt__Polygon(struct soap*, int, const char*, const char*, size_t*);

inline tt__Polygon * soap_new_tt__Polygon(struct soap *soap, int n = -1) { return soap_instantiate_tt__Polygon(soap, n, NULL, NULL, NULL); }

inline tt__Polygon * soap_new_req_tt__Polygon(
	struct soap *soap,
	const std::vector<tt__Vector *> & Point)
{	tt__Polygon *_p = soap_new_tt__Polygon(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Polygon::Point = Point;
	}
	return _p;
}

inline tt__Polygon * soap_new_set_tt__Polygon(
	struct soap *soap,
	const std::vector<tt__Vector *> & Point)
{	tt__Polygon *_p = soap_new_tt__Polygon(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Polygon::Point = Point;
	}
	return _p;
}

#ifndef soap_write_tt__Polygon
#define soap_write_tt__Polygon(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Polygon", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Polygon * SOAP_FMAC4 soap_get_tt__Polygon(struct soap*, tt__Polygon *, const char*, const char*);

#ifndef soap_read_tt__Polygon
#define soap_read_tt__Polygon(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Polygon(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Rectangle
#define SOAP_TYPE_tt__Rectangle (783)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Rectangle(struct soap*, const char*, int, const tt__Rectangle *, const char*);
SOAP_FMAC3 tt__Rectangle * SOAP_FMAC4 soap_in_tt__Rectangle(struct soap*, const char*, tt__Rectangle *, const char*);
SOAP_FMAC1 tt__Rectangle * SOAP_FMAC2 soap_instantiate_tt__Rectangle(struct soap*, int, const char*, const char*, size_t*);

inline tt__Rectangle * soap_new_tt__Rectangle(struct soap *soap, int n = -1) { return soap_instantiate_tt__Rectangle(soap, n, NULL, NULL, NULL); }

inline tt__Rectangle * soap_new_req_tt__Rectangle(
	struct soap *soap)
{	tt__Rectangle *_p = soap_new_tt__Rectangle(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__Rectangle * soap_new_set_tt__Rectangle(
	struct soap *soap,
	float *bottom,
	float *top,
	float *right,
	float *left)
{	tt__Rectangle *_p = soap_new_tt__Rectangle(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Rectangle::bottom = bottom;
		_p->tt__Rectangle::top = top;
		_p->tt__Rectangle::right = right;
		_p->tt__Rectangle::left = left;
	}
	return _p;
}

#ifndef soap_write_tt__Rectangle
#define soap_write_tt__Rectangle(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Rectangle", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Rectangle * SOAP_FMAC4 soap_get_tt__Rectangle(struct soap*, tt__Rectangle *, const char*, const char*);

#ifndef soap_read_tt__Rectangle
#define soap_read_tt__Rectangle(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Rectangle(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Vector
#define SOAP_TYPE_tt__Vector (782)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Vector(struct soap*, const char*, int, const tt__Vector *, const char*);
SOAP_FMAC3 tt__Vector * SOAP_FMAC4 soap_in_tt__Vector(struct soap*, const char*, tt__Vector *, const char*);
SOAP_FMAC1 tt__Vector * SOAP_FMAC2 soap_instantiate_tt__Vector(struct soap*, int, const char*, const char*, size_t*);

inline tt__Vector * soap_new_tt__Vector(struct soap *soap, int n = -1) { return soap_instantiate_tt__Vector(soap, n, NULL, NULL, NULL); }

inline tt__Vector * soap_new_req_tt__Vector(
	struct soap *soap)
{	tt__Vector *_p = soap_new_tt__Vector(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__Vector * soap_new_set_tt__Vector(
	struct soap *soap,
	float *x,
	float *y)
{	tt__Vector *_p = soap_new_tt__Vector(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Vector::x = x;
		_p->tt__Vector::y = y;
	}
	return _p;
}

#ifndef soap_write_tt__Vector
#define soap_write_tt__Vector(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Vector", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Vector * SOAP_FMAC4 soap_get_tt__Vector(struct soap*, tt__Vector *, const char*, const char*);

#ifndef soap_read_tt__Vector
#define soap_read_tt__Vector(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Vector(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZMoveStatus
#define SOAP_TYPE_tt__PTZMoveStatus (781)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZMoveStatus(struct soap*, const char*, int, const tt__PTZMoveStatus *, const char*);
SOAP_FMAC3 tt__PTZMoveStatus * SOAP_FMAC4 soap_in_tt__PTZMoveStatus(struct soap*, const char*, tt__PTZMoveStatus *, const char*);
SOAP_FMAC1 tt__PTZMoveStatus * SOAP_FMAC2 soap_instantiate_tt__PTZMoveStatus(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZMoveStatus * soap_new_tt__PTZMoveStatus(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZMoveStatus(soap, n, NULL, NULL, NULL); }

inline tt__PTZMoveStatus * soap_new_req_tt__PTZMoveStatus(
	struct soap *soap)
{	tt__PTZMoveStatus *_p = soap_new_tt__PTZMoveStatus(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__PTZMoveStatus * soap_new_set_tt__PTZMoveStatus(
	struct soap *soap,
	enum tt__MoveStatus *PanTilt,
	enum tt__MoveStatus *Zoom)
{	tt__PTZMoveStatus *_p = soap_new_tt__PTZMoveStatus(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZMoveStatus::PanTilt = PanTilt;
		_p->tt__PTZMoveStatus::Zoom = Zoom;
	}
	return _p;
}

#ifndef soap_write_tt__PTZMoveStatus
#define soap_write_tt__PTZMoveStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZMoveStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZMoveStatus * SOAP_FMAC4 soap_get_tt__PTZMoveStatus(struct soap*, tt__PTZMoveStatus *, const char*, const char*);

#ifndef soap_read_tt__PTZMoveStatus
#define soap_read_tt__PTZMoveStatus(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZMoveStatus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZStatus
#define SOAP_TYPE_tt__PTZStatus (780)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZStatus(struct soap*, const char*, int, const tt__PTZStatus *, const char*);
SOAP_FMAC3 tt__PTZStatus * SOAP_FMAC4 soap_in_tt__PTZStatus(struct soap*, const char*, tt__PTZStatus *, const char*);
SOAP_FMAC1 tt__PTZStatus * SOAP_FMAC2 soap_instantiate_tt__PTZStatus(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZStatus * soap_new_tt__PTZStatus(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZStatus(soap, n, NULL, NULL, NULL); }

inline tt__PTZStatus * soap_new_req_tt__PTZStatus(
	struct soap *soap,
	time_t UtcTime)
{	tt__PTZStatus *_p = soap_new_tt__PTZStatus(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZStatus::UtcTime = UtcTime;
	}
	return _p;
}

inline tt__PTZStatus * soap_new_set_tt__PTZStatus(
	struct soap *soap,
	tt__PTZVector *Position,
	tt__PTZMoveStatus *MoveStatus,
	std::string *Error,
	time_t UtcTime)
{	tt__PTZStatus *_p = soap_new_tt__PTZStatus(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZStatus::Position = Position;
		_p->tt__PTZStatus::MoveStatus = MoveStatus;
		_p->tt__PTZStatus::Error = Error;
		_p->tt__PTZStatus::UtcTime = UtcTime;
	}
	return _p;
}

#ifndef soap_write_tt__PTZStatus
#define soap_write_tt__PTZStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZStatus * SOAP_FMAC4 soap_get_tt__PTZStatus(struct soap*, tt__PTZStatus *, const char*, const char*);

#ifndef soap_read_tt__PTZStatus
#define soap_read_tt__PTZStatus(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZStatus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZVector
#define SOAP_TYPE_tt__PTZVector (779)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZVector(struct soap*, const char*, int, const tt__PTZVector *, const char*);
SOAP_FMAC3 tt__PTZVector * SOAP_FMAC4 soap_in_tt__PTZVector(struct soap*, const char*, tt__PTZVector *, const char*);
SOAP_FMAC1 tt__PTZVector * SOAP_FMAC2 soap_instantiate_tt__PTZVector(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZVector * soap_new_tt__PTZVector(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZVector(soap, n, NULL, NULL, NULL); }

inline tt__PTZVector * soap_new_req_tt__PTZVector(
	struct soap *soap)
{	tt__PTZVector *_p = soap_new_tt__PTZVector(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__PTZVector * soap_new_set_tt__PTZVector(
	struct soap *soap,
	tt__Vector2D *PanTilt,
	tt__Vector1D *Zoom)
{	tt__PTZVector *_p = soap_new_tt__PTZVector(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZVector::PanTilt = PanTilt;
		_p->tt__PTZVector::Zoom = Zoom;
	}
	return _p;
}

#ifndef soap_write_tt__PTZVector
#define soap_write_tt__PTZVector(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZVector", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZVector * SOAP_FMAC4 soap_get_tt__PTZVector(struct soap*, tt__PTZVector *, const char*, const char*);

#ifndef soap_read_tt__PTZVector
#define soap_read_tt__PTZVector(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZVector(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Vector1D
#define SOAP_TYPE_tt__Vector1D (778)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Vector1D(struct soap*, const char*, int, const tt__Vector1D *, const char*);
SOAP_FMAC3 tt__Vector1D * SOAP_FMAC4 soap_in_tt__Vector1D(struct soap*, const char*, tt__Vector1D *, const char*);
SOAP_FMAC1 tt__Vector1D * SOAP_FMAC2 soap_instantiate_tt__Vector1D(struct soap*, int, const char*, const char*, size_t*);

inline tt__Vector1D * soap_new_tt__Vector1D(struct soap *soap, int n = -1) { return soap_instantiate_tt__Vector1D(soap, n, NULL, NULL, NULL); }

inline tt__Vector1D * soap_new_req_tt__Vector1D(
	struct soap *soap,
	float x)
{	tt__Vector1D *_p = soap_new_tt__Vector1D(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Vector1D::x = x;
	}
	return _p;
}

inline tt__Vector1D * soap_new_set_tt__Vector1D(
	struct soap *soap,
	float x,
	std::string *space)
{	tt__Vector1D *_p = soap_new_tt__Vector1D(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Vector1D::x = x;
		_p->tt__Vector1D::space = space;
	}
	return _p;
}

#ifndef soap_write_tt__Vector1D
#define soap_write_tt__Vector1D(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Vector1D", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Vector1D * SOAP_FMAC4 soap_get_tt__Vector1D(struct soap*, tt__Vector1D *, const char*, const char*);

#ifndef soap_read_tt__Vector1D
#define soap_read_tt__Vector1D(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Vector1D(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Vector2D
#define SOAP_TYPE_tt__Vector2D (777)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Vector2D(struct soap*, const char*, int, const tt__Vector2D *, const char*);
SOAP_FMAC3 tt__Vector2D * SOAP_FMAC4 soap_in_tt__Vector2D(struct soap*, const char*, tt__Vector2D *, const char*);
SOAP_FMAC1 tt__Vector2D * SOAP_FMAC2 soap_instantiate_tt__Vector2D(struct soap*, int, const char*, const char*, size_t*);

inline tt__Vector2D * soap_new_tt__Vector2D(struct soap *soap, int n = -1) { return soap_instantiate_tt__Vector2D(soap, n, NULL, NULL, NULL); }

inline tt__Vector2D * soap_new_req_tt__Vector2D(
	struct soap *soap,
	float x,
	float y)
{	tt__Vector2D *_p = soap_new_tt__Vector2D(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Vector2D::x = x;
		_p->tt__Vector2D::y = y;
	}
	return _p;
}

inline tt__Vector2D * soap_new_set_tt__Vector2D(
	struct soap *soap,
	float x,
	float y,
	std::string *space)
{	tt__Vector2D *_p = soap_new_tt__Vector2D(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Vector2D::x = x;
		_p->tt__Vector2D::y = y;
		_p->tt__Vector2D::space = space;
	}
	return _p;
}

#ifndef soap_write_tt__Vector2D
#define soap_write_tt__Vector2D(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Vector2D", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Vector2D * SOAP_FMAC4 soap_get_tt__Vector2D(struct soap*, tt__Vector2D *, const char*, const char*);

#ifndef soap_read_tt__Vector2D
#define soap_read_tt__Vector2D(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Vector2D(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__StorageReferencePathExtension
#define SOAP_TYPE_tt__StorageReferencePathExtension (776)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__StorageReferencePathExtension(struct soap*, const char*, int, const tt__StorageReferencePathExtension *, const char*);
SOAP_FMAC3 tt__StorageReferencePathExtension * SOAP_FMAC4 soap_in_tt__StorageReferencePathExtension(struct soap*, const char*, tt__StorageReferencePathExtension *, const char*);
SOAP_FMAC1 tt__StorageReferencePathExtension * SOAP_FMAC2 soap_instantiate_tt__StorageReferencePathExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__StorageReferencePathExtension * soap_new_tt__StorageReferencePathExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__StorageReferencePathExtension(soap, n, NULL, NULL, NULL); }

inline tt__StorageReferencePathExtension * soap_new_req_tt__StorageReferencePathExtension(
	struct soap *soap)
{	tt__StorageReferencePathExtension *_p = soap_new_tt__StorageReferencePathExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__StorageReferencePathExtension * soap_new_set_tt__StorageReferencePathExtension(
	struct soap *soap)
{	tt__StorageReferencePathExtension *_p = soap_new_tt__StorageReferencePathExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__StorageReferencePathExtension
#define soap_write_tt__StorageReferencePathExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:StorageReferencePathExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__StorageReferencePathExtension * SOAP_FMAC4 soap_get_tt__StorageReferencePathExtension(struct soap*, tt__StorageReferencePathExtension *, const char*, const char*);

#ifndef soap_read_tt__StorageReferencePathExtension
#define soap_read_tt__StorageReferencePathExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__StorageReferencePathExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__StorageReferencePath
#define SOAP_TYPE_tt__StorageReferencePath (775)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__StorageReferencePath(struct soap*, const char*, int, const tt__StorageReferencePath *, const char*);
SOAP_FMAC3 tt__StorageReferencePath * SOAP_FMAC4 soap_in_tt__StorageReferencePath(struct soap*, const char*, tt__StorageReferencePath *, const char*);
SOAP_FMAC1 tt__StorageReferencePath * SOAP_FMAC2 soap_instantiate_tt__StorageReferencePath(struct soap*, int, const char*, const char*, size_t*);

inline tt__StorageReferencePath * soap_new_tt__StorageReferencePath(struct soap *soap, int n = -1) { return soap_instantiate_tt__StorageReferencePath(soap, n, NULL, NULL, NULL); }

inline tt__StorageReferencePath * soap_new_req_tt__StorageReferencePath(
	struct soap *soap,
	const std::string& StorageToken)
{	tt__StorageReferencePath *_p = soap_new_tt__StorageReferencePath(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__StorageReferencePath::StorageToken = StorageToken;
	}
	return _p;
}

inline tt__StorageReferencePath * soap_new_set_tt__StorageReferencePath(
	struct soap *soap,
	const std::string& StorageToken,
	std::string *RelativePath,
	tt__StorageReferencePathExtension *Extension)
{	tt__StorageReferencePath *_p = soap_new_tt__StorageReferencePath(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__StorageReferencePath::StorageToken = StorageToken;
		_p->tt__StorageReferencePath::RelativePath = RelativePath;
		_p->tt__StorageReferencePath::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__StorageReferencePath
#define soap_write_tt__StorageReferencePath(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:StorageReferencePath", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__StorageReferencePath * SOAP_FMAC4 soap_get_tt__StorageReferencePath(struct soap*, tt__StorageReferencePath *, const char*, const char*);

#ifndef soap_read_tt__StorageReferencePath
#define soap_read_tt__StorageReferencePath(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__StorageReferencePath(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ArrayOfFileProgressExtension
#define SOAP_TYPE_tt__ArrayOfFileProgressExtension (774)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ArrayOfFileProgressExtension(struct soap*, const char*, int, const tt__ArrayOfFileProgressExtension *, const char*);
SOAP_FMAC3 tt__ArrayOfFileProgressExtension * SOAP_FMAC4 soap_in_tt__ArrayOfFileProgressExtension(struct soap*, const char*, tt__ArrayOfFileProgressExtension *, const char*);
SOAP_FMAC1 tt__ArrayOfFileProgressExtension * SOAP_FMAC2 soap_instantiate_tt__ArrayOfFileProgressExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ArrayOfFileProgressExtension * soap_new_tt__ArrayOfFileProgressExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ArrayOfFileProgressExtension(soap, n, NULL, NULL, NULL); }

inline tt__ArrayOfFileProgressExtension * soap_new_req_tt__ArrayOfFileProgressExtension(
	struct soap *soap)
{	tt__ArrayOfFileProgressExtension *_p = soap_new_tt__ArrayOfFileProgressExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ArrayOfFileProgressExtension * soap_new_set_tt__ArrayOfFileProgressExtension(
	struct soap *soap)
{	tt__ArrayOfFileProgressExtension *_p = soap_new_tt__ArrayOfFileProgressExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__ArrayOfFileProgressExtension
#define soap_write_tt__ArrayOfFileProgressExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ArrayOfFileProgressExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ArrayOfFileProgressExtension * SOAP_FMAC4 soap_get_tt__ArrayOfFileProgressExtension(struct soap*, tt__ArrayOfFileProgressExtension *, const char*, const char*);

#ifndef soap_read_tt__ArrayOfFileProgressExtension
#define soap_read_tt__ArrayOfFileProgressExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ArrayOfFileProgressExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ArrayOfFileProgress
#define SOAP_TYPE_tt__ArrayOfFileProgress (773)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ArrayOfFileProgress(struct soap*, const char*, int, const tt__ArrayOfFileProgress *, const char*);
SOAP_FMAC3 tt__ArrayOfFileProgress * SOAP_FMAC4 soap_in_tt__ArrayOfFileProgress(struct soap*, const char*, tt__ArrayOfFileProgress *, const char*);
SOAP_FMAC1 tt__ArrayOfFileProgress * SOAP_FMAC2 soap_instantiate_tt__ArrayOfFileProgress(struct soap*, int, const char*, const char*, size_t*);

inline tt__ArrayOfFileProgress * soap_new_tt__ArrayOfFileProgress(struct soap *soap, int n = -1) { return soap_instantiate_tt__ArrayOfFileProgress(soap, n, NULL, NULL, NULL); }

inline tt__ArrayOfFileProgress * soap_new_req_tt__ArrayOfFileProgress(
	struct soap *soap)
{	tt__ArrayOfFileProgress *_p = soap_new_tt__ArrayOfFileProgress(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ArrayOfFileProgress * soap_new_set_tt__ArrayOfFileProgress(
	struct soap *soap,
	const std::vector<tt__FileProgress *> & FileProgress,
	tt__ArrayOfFileProgressExtension *Extension)
{	tt__ArrayOfFileProgress *_p = soap_new_tt__ArrayOfFileProgress(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ArrayOfFileProgress::FileProgress = FileProgress;
		_p->tt__ArrayOfFileProgress::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__ArrayOfFileProgress
#define soap_write_tt__ArrayOfFileProgress(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ArrayOfFileProgress", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ArrayOfFileProgress * SOAP_FMAC4 soap_get_tt__ArrayOfFileProgress(struct soap*, tt__ArrayOfFileProgress *, const char*, const char*);

#ifndef soap_read_tt__ArrayOfFileProgress
#define soap_read_tt__ArrayOfFileProgress(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ArrayOfFileProgress(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__FileProgress
#define SOAP_TYPE_tt__FileProgress (772)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FileProgress(struct soap*, const char*, int, const tt__FileProgress *, const char*);
SOAP_FMAC3 tt__FileProgress * SOAP_FMAC4 soap_in_tt__FileProgress(struct soap*, const char*, tt__FileProgress *, const char*);
SOAP_FMAC1 tt__FileProgress * SOAP_FMAC2 soap_instantiate_tt__FileProgress(struct soap*, int, const char*, const char*, size_t*);

inline tt__FileProgress * soap_new_tt__FileProgress(struct soap *soap, int n = -1) { return soap_instantiate_tt__FileProgress(soap, n, NULL, NULL, NULL); }

inline tt__FileProgress * soap_new_req_tt__FileProgress(
	struct soap *soap,
	const std::string& FileName,
	float Progress)
{	tt__FileProgress *_p = soap_new_tt__FileProgress(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FileProgress::FileName = FileName;
		_p->tt__FileProgress::Progress = Progress;
	}
	return _p;
}

inline tt__FileProgress * soap_new_set_tt__FileProgress(
	struct soap *soap,
	const std::string& FileName,
	float Progress)
{	tt__FileProgress *_p = soap_new_tt__FileProgress(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FileProgress::FileName = FileName;
		_p->tt__FileProgress::Progress = Progress;
	}
	return _p;
}

#ifndef soap_write_tt__FileProgress
#define soap_write_tt__FileProgress(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:FileProgress", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FileProgress * SOAP_FMAC4 soap_get_tt__FileProgress(struct soap*, tt__FileProgress *, const char*, const char*);

#ifndef soap_read_tt__FileProgress
#define soap_read_tt__FileProgress(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__FileProgress(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__OSDConfigurationOptionsExtension
#define SOAP_TYPE_tt__OSDConfigurationOptionsExtension (771)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDConfigurationOptionsExtension(struct soap*, const char*, int, const tt__OSDConfigurationOptionsExtension *, const char*);
SOAP_FMAC3 tt__OSDConfigurationOptionsExtension * SOAP_FMAC4 soap_in_tt__OSDConfigurationOptionsExtension(struct soap*, const char*, tt__OSDConfigurationOptionsExtension *, const char*);
SOAP_FMAC1 tt__OSDConfigurationOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__OSDConfigurationOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDConfigurationOptionsExtension * soap_new_tt__OSDConfigurationOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDConfigurationOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__OSDConfigurationOptionsExtension * soap_new_req_tt__OSDConfigurationOptionsExtension(
	struct soap *soap)
{	tt__OSDConfigurationOptionsExtension *_p = soap_new_tt__OSDConfigurationOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__OSDConfigurationOptionsExtension * soap_new_set_tt__OSDConfigurationOptionsExtension(
	struct soap *soap)
{	tt__OSDConfigurationOptionsExtension *_p = soap_new_tt__OSDConfigurationOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__OSDConfigurationOptionsExtension
#define soap_write_tt__OSDConfigurationOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:OSDConfigurationOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDConfigurationOptionsExtension * SOAP_FMAC4 soap_get_tt__OSDConfigurationOptionsExtension(struct soap*, tt__OSDConfigurationOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__OSDConfigurationOptionsExtension
#define soap_read_tt__OSDConfigurationOptionsExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__OSDConfigurationOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__OSDConfigurationOptions
#define SOAP_TYPE_tt__OSDConfigurationOptions (770)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDConfigurationOptions(struct soap*, const char*, int, const tt__OSDConfigurationOptions *, const char*);
SOAP_FMAC3 tt__OSDConfigurationOptions * SOAP_FMAC4 soap_in_tt__OSDConfigurationOptions(struct soap*, const char*, tt__OSDConfigurationOptions *, const char*);
SOAP_FMAC1 tt__OSDConfigurationOptions * SOAP_FMAC2 soap_instantiate_tt__OSDConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDConfigurationOptions * soap_new_tt__OSDConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline tt__OSDConfigurationOptions * soap_new_req_tt__OSDConfigurationOptions(
	struct soap *soap,
	tt__MaximumNumberOfOSDs *MaximumNumberOfOSDs,
	const std::vector<enum tt__OSDType> & Type,
	const std::vector<std::string> & PositionOption)
{	tt__OSDConfigurationOptions *_p = soap_new_tt__OSDConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__OSDConfigurationOptions::MaximumNumberOfOSDs = MaximumNumberOfOSDs;
		_p->tt__OSDConfigurationOptions::Type = Type;
		_p->tt__OSDConfigurationOptions::PositionOption = PositionOption;
	}
	return _p;
}

inline tt__OSDConfigurationOptions * soap_new_set_tt__OSDConfigurationOptions(
	struct soap *soap,
	tt__MaximumNumberOfOSDs *MaximumNumberOfOSDs,
	const std::vector<enum tt__OSDType> & Type,
	const std::vector<std::string> & PositionOption,
	tt__OSDTextOptions *TextOption,
	tt__OSDImgOptions *ImageOption,
	tt__OSDConfigurationOptionsExtension *Extension)
{	tt__OSDConfigurationOptions *_p = soap_new_tt__OSDConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__OSDConfigurationOptions::MaximumNumberOfOSDs = MaximumNumberOfOSDs;
		_p->tt__OSDConfigurationOptions::Type = Type;
		_p->tt__OSDConfigurationOptions::PositionOption = PositionOption;
		_p->tt__OSDConfigurationOptions::TextOption = TextOption;
		_p->tt__OSDConfigurationOptions::ImageOption = ImageOption;
		_p->tt__OSDConfigurationOptions::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__OSDConfigurationOptions
#define soap_write_tt__OSDConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:OSDConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDConfigurationOptions * SOAP_FMAC4 soap_get_tt__OSDConfigurationOptions(struct soap*, tt__OSDConfigurationOptions *, const char*, const char*);

#ifndef soap_read_tt__OSDConfigurationOptions
#define soap_read_tt__OSDConfigurationOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__OSDConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__MaximumNumberOfOSDs
#define SOAP_TYPE_tt__MaximumNumberOfOSDs (769)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MaximumNumberOfOSDs(struct soap*, const char*, int, const tt__MaximumNumberOfOSDs *, const char*);
SOAP_FMAC3 tt__MaximumNumberOfOSDs * SOAP_FMAC4 soap_in_tt__MaximumNumberOfOSDs(struct soap*, const char*, tt__MaximumNumberOfOSDs *, const char*);
SOAP_FMAC1 tt__MaximumNumberOfOSDs * SOAP_FMAC2 soap_instantiate_tt__MaximumNumberOfOSDs(struct soap*, int, const char*, const char*, size_t*);

inline tt__MaximumNumberOfOSDs * soap_new_tt__MaximumNumberOfOSDs(struct soap *soap, int n = -1) { return soap_instantiate_tt__MaximumNumberOfOSDs(soap, n, NULL, NULL, NULL); }

inline tt__MaximumNumberOfOSDs * soap_new_req_tt__MaximumNumberOfOSDs(
	struct soap *soap,
	int Total)
{	tt__MaximumNumberOfOSDs *_p = soap_new_tt__MaximumNumberOfOSDs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__MaximumNumberOfOSDs::Total = Total;
	}
	return _p;
}

inline tt__MaximumNumberOfOSDs * soap_new_set_tt__MaximumNumberOfOSDs(
	struct soap *soap,
	int Total,
	int *Image,
	int *PlainText,
	int *Date,
	int *Time,
	int *DateAndTime)
{	tt__MaximumNumberOfOSDs *_p = soap_new_tt__MaximumNumberOfOSDs(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__MaximumNumberOfOSDs::Total = Total;
		_p->tt__MaximumNumberOfOSDs::Image = Image;
		_p->tt__MaximumNumberOfOSDs::PlainText = PlainText;
		_p->tt__MaximumNumberOfOSDs::Date = Date;
		_p->tt__MaximumNumberOfOSDs::Time = Time;
		_p->tt__MaximumNumberOfOSDs::DateAndTime = DateAndTime;
	}
	return _p;
}

#ifndef soap_write_tt__MaximumNumberOfOSDs
#define soap_write_tt__MaximumNumberOfOSDs(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:MaximumNumberOfOSDs", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MaximumNumberOfOSDs * SOAP_FMAC4 soap_get_tt__MaximumNumberOfOSDs(struct soap*, tt__MaximumNumberOfOSDs *, const char*, const char*);

#ifndef soap_read_tt__MaximumNumberOfOSDs
#define soap_read_tt__MaximumNumberOfOSDs(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MaximumNumberOfOSDs(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__OSDConfigurationExtension
#define SOAP_TYPE_tt__OSDConfigurationExtension (768)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDConfigurationExtension(struct soap*, const char*, int, const tt__OSDConfigurationExtension *, const char*);
SOAP_FMAC3 tt__OSDConfigurationExtension * SOAP_FMAC4 soap_in_tt__OSDConfigurationExtension(struct soap*, const char*, tt__OSDConfigurationExtension *, const char*);
SOAP_FMAC1 tt__OSDConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__OSDConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDConfigurationExtension * soap_new_tt__OSDConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__OSDConfigurationExtension * soap_new_req_tt__OSDConfigurationExtension(
	struct soap *soap)
{	tt__OSDConfigurationExtension *_p = soap_new_tt__OSDConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__OSDConfigurationExtension * soap_new_set_tt__OSDConfigurationExtension(
	struct soap *soap)
{	tt__OSDConfigurationExtension *_p = soap_new_tt__OSDConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__OSDConfigurationExtension
#define soap_write_tt__OSDConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:OSDConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDConfigurationExtension * SOAP_FMAC4 soap_get_tt__OSDConfigurationExtension(struct soap*, tt__OSDConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__OSDConfigurationExtension
#define soap_read_tt__OSDConfigurationExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__OSDConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__OSDConfiguration
#define SOAP_TYPE_tt__OSDConfiguration (767)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDConfiguration(struct soap*, const char*, int, const tt__OSDConfiguration *, const char*);
SOAP_FMAC3 tt__OSDConfiguration * SOAP_FMAC4 soap_in_tt__OSDConfiguration(struct soap*, const char*, tt__OSDConfiguration *, const char*);
SOAP_FMAC1 tt__OSDConfiguration * SOAP_FMAC2 soap_instantiate_tt__OSDConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDConfiguration * soap_new_tt__OSDConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__OSDConfiguration * soap_new_req_tt__OSDConfiguration(
	struct soap *soap,
	tt__OSDReference *VideoSourceConfigurationToken,
	enum tt__OSDType Type,
	tt__OSDPosConfiguration *Position,
	const std::string& token1)
{	tt__OSDConfiguration *_p = soap_new_tt__OSDConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__OSDConfiguration::VideoSourceConfigurationToken = VideoSourceConfigurationToken;
		_p->tt__OSDConfiguration::Type = Type;
		_p->tt__OSDConfiguration::Position = Position;
		_p->tt__DeviceEntity::token = token1;
	}
	return _p;
}

inline tt__OSDConfiguration * soap_new_set_tt__OSDConfiguration(
	struct soap *soap,
	tt__OSDReference *VideoSourceConfigurationToken,
	enum tt__OSDType Type,
	tt__OSDPosConfiguration *Position,
	tt__OSDTextConfiguration *TextString,
	tt__OSDImgConfiguration *Image,
	tt__OSDConfigurationExtension *Extension,
	const std::string& token1)
{	tt__OSDConfiguration *_p = soap_new_tt__OSDConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__OSDConfiguration::VideoSourceConfigurationToken = VideoSourceConfigurationToken;
		_p->tt__OSDConfiguration::Type = Type;
		_p->tt__OSDConfiguration::Position = Position;
		_p->tt__OSDConfiguration::TextString = TextString;
		_p->tt__OSDConfiguration::Image = Image;
		_p->tt__OSDConfiguration::Extension = Extension;
		_p->tt__DeviceEntity::token = token1;
	}
	return _p;
}

#ifndef soap_write_tt__OSDConfiguration
#define soap_write_tt__OSDConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:OSDConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDConfiguration * SOAP_FMAC4 soap_get_tt__OSDConfiguration(struct soap*, tt__OSDConfiguration *, const char*, const char*);

#ifndef soap_read_tt__OSDConfiguration
#define soap_read_tt__OSDConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__OSDConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__OSDImgOptionsExtension
#define SOAP_TYPE_tt__OSDImgOptionsExtension (766)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDImgOptionsExtension(struct soap*, const char*, int, const tt__OSDImgOptionsExtension *, const char*);
SOAP_FMAC3 tt__OSDImgOptionsExtension * SOAP_FMAC4 soap_in_tt__OSDImgOptionsExtension(struct soap*, const char*, tt__OSDImgOptionsExtension *, const char*);
SOAP_FMAC1 tt__OSDImgOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__OSDImgOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDImgOptionsExtension * soap_new_tt__OSDImgOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDImgOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__OSDImgOptionsExtension * soap_new_req_tt__OSDImgOptionsExtension(
	struct soap *soap)
{	tt__OSDImgOptionsExtension *_p = soap_new_tt__OSDImgOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__OSDImgOptionsExtension * soap_new_set_tt__OSDImgOptionsExtension(
	struct soap *soap)
{	tt__OSDImgOptionsExtension *_p = soap_new_tt__OSDImgOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__OSDImgOptionsExtension
#define soap_write_tt__OSDImgOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:OSDImgOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDImgOptionsExtension * SOAP_FMAC4 soap_get_tt__OSDImgOptionsExtension(struct soap*, tt__OSDImgOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__OSDImgOptionsExtension
#define soap_read_tt__OSDImgOptionsExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__OSDImgOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__OSDImgOptions
#define SOAP_TYPE_tt__OSDImgOptions (765)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDImgOptions(struct soap*, const char*, int, const tt__OSDImgOptions *, const char*);
SOAP_FMAC3 tt__OSDImgOptions * SOAP_FMAC4 soap_in_tt__OSDImgOptions(struct soap*, const char*, tt__OSDImgOptions *, const char*);
SOAP_FMAC1 tt__OSDImgOptions * SOAP_FMAC2 soap_instantiate_tt__OSDImgOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDImgOptions * soap_new_tt__OSDImgOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDImgOptions(soap, n, NULL, NULL, NULL); }

inline tt__OSDImgOptions * soap_new_req_tt__OSDImgOptions(
	struct soap *soap,
	const std::vector<std::string> & ImagePath)
{	tt__OSDImgOptions *_p = soap_new_tt__OSDImgOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__OSDImgOptions::ImagePath = ImagePath;
	}
	return _p;
}

inline tt__OSDImgOptions * soap_new_set_tt__OSDImgOptions(
	struct soap *soap,
	const std::vector<std::string> & ImagePath,
	tt__OSDImgOptionsExtension *Extension,
	std::string *FormatsSupported,
	int *MaxSize,
	int *MaxWidth,
	int *MaxHeight)
{	tt__OSDImgOptions *_p = soap_new_tt__OSDImgOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__OSDImgOptions::ImagePath = ImagePath;
		_p->tt__OSDImgOptions::Extension = Extension;
		_p->tt__OSDImgOptions::FormatsSupported = FormatsSupported;
		_p->tt__OSDImgOptions::MaxSize = MaxSize;
		_p->tt__OSDImgOptions::MaxWidth = MaxWidth;
		_p->tt__OSDImgOptions::MaxHeight = MaxHeight;
	}
	return _p;
}

#ifndef soap_write_tt__OSDImgOptions
#define soap_write_tt__OSDImgOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:OSDImgOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDImgOptions * SOAP_FMAC4 soap_get_tt__OSDImgOptions(struct soap*, tt__OSDImgOptions *, const char*, const char*);

#ifndef soap_read_tt__OSDImgOptions
#define soap_read_tt__OSDImgOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__OSDImgOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__OSDTextOptionsExtension
#define SOAP_TYPE_tt__OSDTextOptionsExtension (764)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDTextOptionsExtension(struct soap*, const char*, int, const tt__OSDTextOptionsExtension *, const char*);
SOAP_FMAC3 tt__OSDTextOptionsExtension * SOAP_FMAC4 soap_in_tt__OSDTextOptionsExtension(struct soap*, const char*, tt__OSDTextOptionsExtension *, const char*);
SOAP_FMAC1 tt__OSDTextOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__OSDTextOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDTextOptionsExtension * soap_new_tt__OSDTextOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDTextOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__OSDTextOptionsExtension * soap_new_req_tt__OSDTextOptionsExtension(
	struct soap *soap)
{	tt__OSDTextOptionsExtension *_p = soap_new_tt__OSDTextOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__OSDTextOptionsExtension * soap_new_set_tt__OSDTextOptionsExtension(
	struct soap *soap)
{	tt__OSDTextOptionsExtension *_p = soap_new_tt__OSDTextOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__OSDTextOptionsExtension
#define soap_write_tt__OSDTextOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:OSDTextOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDTextOptionsExtension * SOAP_FMAC4 soap_get_tt__OSDTextOptionsExtension(struct soap*, tt__OSDTextOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__OSDTextOptionsExtension
#define soap_read_tt__OSDTextOptionsExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__OSDTextOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__OSDTextOptions
#define SOAP_TYPE_tt__OSDTextOptions (763)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDTextOptions(struct soap*, const char*, int, const tt__OSDTextOptions *, const char*);
SOAP_FMAC3 tt__OSDTextOptions * SOAP_FMAC4 soap_in_tt__OSDTextOptions(struct soap*, const char*, tt__OSDTextOptions *, const char*);
SOAP_FMAC1 tt__OSDTextOptions * SOAP_FMAC2 soap_instantiate_tt__OSDTextOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDTextOptions * soap_new_tt__OSDTextOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDTextOptions(soap, n, NULL, NULL, NULL); }

inline tt__OSDTextOptions * soap_new_req_tt__OSDTextOptions(
	struct soap *soap,
	const std::vector<std::string> & Type)
{	tt__OSDTextOptions *_p = soap_new_tt__OSDTextOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__OSDTextOptions::Type = Type;
	}
	return _p;
}

inline tt__OSDTextOptions * soap_new_set_tt__OSDTextOptions(
	struct soap *soap,
	const std::vector<std::string> & Type,
	tt__IntRange *FontSizeRange,
	const std::vector<std::string> & DateFormat,
	const std::vector<std::string> & TimeFormat,
	tt__OSDColorOptions *FontColor,
	tt__OSDColorOptions *BackgroundColor,
	tt__OSDTextOptionsExtension *Extension)
{	tt__OSDTextOptions *_p = soap_new_tt__OSDTextOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__OSDTextOptions::Type = Type;
		_p->tt__OSDTextOptions::FontSizeRange = FontSizeRange;
		_p->tt__OSDTextOptions::DateFormat = DateFormat;
		_p->tt__OSDTextOptions::TimeFormat = TimeFormat;
		_p->tt__OSDTextOptions::FontColor = FontColor;
		_p->tt__OSDTextOptions::BackgroundColor = BackgroundColor;
		_p->tt__OSDTextOptions::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__OSDTextOptions
#define soap_write_tt__OSDTextOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:OSDTextOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDTextOptions * SOAP_FMAC4 soap_get_tt__OSDTextOptions(struct soap*, tt__OSDTextOptions *, const char*, const char*);

#ifndef soap_read_tt__OSDTextOptions
#define soap_read_tt__OSDTextOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__OSDTextOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__OSDColorOptionsExtension
#define SOAP_TYPE_tt__OSDColorOptionsExtension (762)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDColorOptionsExtension(struct soap*, const char*, int, const tt__OSDColorOptionsExtension *, const char*);
SOAP_FMAC3 tt__OSDColorOptionsExtension * SOAP_FMAC4 soap_in_tt__OSDColorOptionsExtension(struct soap*, const char*, tt__OSDColorOptionsExtension *, const char*);
SOAP_FMAC1 tt__OSDColorOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__OSDColorOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDColorOptionsExtension * soap_new_tt__OSDColorOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDColorOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__OSDColorOptionsExtension * soap_new_req_tt__OSDColorOptionsExtension(
	struct soap *soap)
{	tt__OSDColorOptionsExtension *_p = soap_new_tt__OSDColorOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__OSDColorOptionsExtension * soap_new_set_tt__OSDColorOptionsExtension(
	struct soap *soap)
{	tt__OSDColorOptionsExtension *_p = soap_new_tt__OSDColorOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__OSDColorOptionsExtension
#define soap_write_tt__OSDColorOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:OSDColorOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDColorOptionsExtension * SOAP_FMAC4 soap_get_tt__OSDColorOptionsExtension(struct soap*, tt__OSDColorOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__OSDColorOptionsExtension
#define soap_read_tt__OSDColorOptionsExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__OSDColorOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__OSDColorOptions
#define SOAP_TYPE_tt__OSDColorOptions (761)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDColorOptions(struct soap*, const char*, int, const tt__OSDColorOptions *, const char*);
SOAP_FMAC3 tt__OSDColorOptions * SOAP_FMAC4 soap_in_tt__OSDColorOptions(struct soap*, const char*, tt__OSDColorOptions *, const char*);
SOAP_FMAC1 tt__OSDColorOptions * SOAP_FMAC2 soap_instantiate_tt__OSDColorOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDColorOptions * soap_new_tt__OSDColorOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDColorOptions(soap, n, NULL, NULL, NULL); }

inline tt__OSDColorOptions * soap_new_req_tt__OSDColorOptions(
	struct soap *soap)
{	tt__OSDColorOptions *_p = soap_new_tt__OSDColorOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__OSDColorOptions * soap_new_set_tt__OSDColorOptions(
	struct soap *soap,
	tt__ColorOptions *Color,
	tt__IntRange *Transparent,
	tt__OSDColorOptionsExtension *Extension)
{	tt__OSDColorOptions *_p = soap_new_tt__OSDColorOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__OSDColorOptions::Color = Color;
		_p->tt__OSDColorOptions::Transparent = Transparent;
		_p->tt__OSDColorOptions::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__OSDColorOptions
#define soap_write_tt__OSDColorOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:OSDColorOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDColorOptions * SOAP_FMAC4 soap_get_tt__OSDColorOptions(struct soap*, tt__OSDColorOptions *, const char*, const char*);

#ifndef soap_read_tt__OSDColorOptions
#define soap_read_tt__OSDColorOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__OSDColorOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ColorOptions
#define SOAP_TYPE_tt__ColorOptions (760)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ColorOptions(struct soap*, const char*, int, const tt__ColorOptions *, const char*);
SOAP_FMAC3 tt__ColorOptions * SOAP_FMAC4 soap_in_tt__ColorOptions(struct soap*, const char*, tt__ColorOptions *, const char*);
SOAP_FMAC1 tt__ColorOptions * SOAP_FMAC2 soap_instantiate_tt__ColorOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__ColorOptions * soap_new_tt__ColorOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__ColorOptions(soap, n, NULL, NULL, NULL); }

inline tt__ColorOptions * soap_new_req_tt__ColorOptions(
	struct soap *soap,
	int __union_ColorOptions,
	const union _tt__union_ColorOptions& union_ColorOptions)
{	tt__ColorOptions *_p = soap_new_tt__ColorOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ColorOptions::__union_ColorOptions = __union_ColorOptions;
		_p->tt__ColorOptions::union_ColorOptions = union_ColorOptions;
	}
	return _p;
}

inline tt__ColorOptions * soap_new_set_tt__ColorOptions(
	struct soap *soap,
	int __union_ColorOptions,
	const union _tt__union_ColorOptions& union_ColorOptions)
{	tt__ColorOptions *_p = soap_new_tt__ColorOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ColorOptions::__union_ColorOptions = __union_ColorOptions;
		_p->tt__ColorOptions::union_ColorOptions = union_ColorOptions;
	}
	return _p;
}

#ifndef soap_write_tt__ColorOptions
#define soap_write_tt__ColorOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ColorOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ColorOptions * SOAP_FMAC4 soap_get_tt__ColorOptions(struct soap*, tt__ColorOptions *, const char*, const char*);

#ifndef soap_read_tt__ColorOptions
#define soap_read_tt__ColorOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ColorOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ColorspaceRange
#define SOAP_TYPE_tt__ColorspaceRange (759)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ColorspaceRange(struct soap*, const char*, int, const tt__ColorspaceRange *, const char*);
SOAP_FMAC3 tt__ColorspaceRange * SOAP_FMAC4 soap_in_tt__ColorspaceRange(struct soap*, const char*, tt__ColorspaceRange *, const char*);
SOAP_FMAC1 tt__ColorspaceRange * SOAP_FMAC2 soap_instantiate_tt__ColorspaceRange(struct soap*, int, const char*, const char*, size_t*);

inline tt__ColorspaceRange * soap_new_tt__ColorspaceRange(struct soap *soap, int n = -1) { return soap_instantiate_tt__ColorspaceRange(soap, n, NULL, NULL, NULL); }

inline tt__ColorspaceRange * soap_new_req_tt__ColorspaceRange(
	struct soap *soap,
	tt__FloatRange *X,
	tt__FloatRange *Y,
	tt__FloatRange *Z,
	const std::string& Colorspace)
{	tt__ColorspaceRange *_p = soap_new_tt__ColorspaceRange(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ColorspaceRange::X = X;
		_p->tt__ColorspaceRange::Y = Y;
		_p->tt__ColorspaceRange::Z = Z;
		_p->tt__ColorspaceRange::Colorspace = Colorspace;
	}
	return _p;
}

inline tt__ColorspaceRange * soap_new_set_tt__ColorspaceRange(
	struct soap *soap,
	tt__FloatRange *X,
	tt__FloatRange *Y,
	tt__FloatRange *Z,
	const std::string& Colorspace)
{	tt__ColorspaceRange *_p = soap_new_tt__ColorspaceRange(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ColorspaceRange::X = X;
		_p->tt__ColorspaceRange::Y = Y;
		_p->tt__ColorspaceRange::Z = Z;
		_p->tt__ColorspaceRange::Colorspace = Colorspace;
	}
	return _p;
}

#ifndef soap_write_tt__ColorspaceRange
#define soap_write_tt__ColorspaceRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ColorspaceRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ColorspaceRange * SOAP_FMAC4 soap_get_tt__ColorspaceRange(struct soap*, tt__ColorspaceRange *, const char*, const char*);

#ifndef soap_read_tt__ColorspaceRange
#define soap_read_tt__ColorspaceRange(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ColorspaceRange(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__OSDImgConfigurationExtension
#define SOAP_TYPE_tt__OSDImgConfigurationExtension (758)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDImgConfigurationExtension(struct soap*, const char*, int, const tt__OSDImgConfigurationExtension *, const char*);
SOAP_FMAC3 tt__OSDImgConfigurationExtension * SOAP_FMAC4 soap_in_tt__OSDImgConfigurationExtension(struct soap*, const char*, tt__OSDImgConfigurationExtension *, const char*);
SOAP_FMAC1 tt__OSDImgConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__OSDImgConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDImgConfigurationExtension * soap_new_tt__OSDImgConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDImgConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__OSDImgConfigurationExtension * soap_new_req_tt__OSDImgConfigurationExtension(
	struct soap *soap)
{	tt__OSDImgConfigurationExtension *_p = soap_new_tt__OSDImgConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__OSDImgConfigurationExtension * soap_new_set_tt__OSDImgConfigurationExtension(
	struct soap *soap)
{	tt__OSDImgConfigurationExtension *_p = soap_new_tt__OSDImgConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__OSDImgConfigurationExtension
#define soap_write_tt__OSDImgConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:OSDImgConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDImgConfigurationExtension * SOAP_FMAC4 soap_get_tt__OSDImgConfigurationExtension(struct soap*, tt__OSDImgConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__OSDImgConfigurationExtension
#define soap_read_tt__OSDImgConfigurationExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__OSDImgConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__OSDImgConfiguration
#define SOAP_TYPE_tt__OSDImgConfiguration (757)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDImgConfiguration(struct soap*, const char*, int, const tt__OSDImgConfiguration *, const char*);
SOAP_FMAC3 tt__OSDImgConfiguration * SOAP_FMAC4 soap_in_tt__OSDImgConfiguration(struct soap*, const char*, tt__OSDImgConfiguration *, const char*);
SOAP_FMAC1 tt__OSDImgConfiguration * SOAP_FMAC2 soap_instantiate_tt__OSDImgConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDImgConfiguration * soap_new_tt__OSDImgConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDImgConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__OSDImgConfiguration * soap_new_req_tt__OSDImgConfiguration(
	struct soap *soap,
	const std::string& ImgPath)
{	tt__OSDImgConfiguration *_p = soap_new_tt__OSDImgConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__OSDImgConfiguration::ImgPath = ImgPath;
	}
	return _p;
}

inline tt__OSDImgConfiguration * soap_new_set_tt__OSDImgConfiguration(
	struct soap *soap,
	const std::string& ImgPath,
	tt__OSDImgConfigurationExtension *Extension)
{	tt__OSDImgConfiguration *_p = soap_new_tt__OSDImgConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__OSDImgConfiguration::ImgPath = ImgPath;
		_p->tt__OSDImgConfiguration::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__OSDImgConfiguration
#define soap_write_tt__OSDImgConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:OSDImgConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDImgConfiguration * SOAP_FMAC4 soap_get_tt__OSDImgConfiguration(struct soap*, tt__OSDImgConfiguration *, const char*, const char*);

#ifndef soap_read_tt__OSDImgConfiguration
#define soap_read_tt__OSDImgConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__OSDImgConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__OSDTextConfigurationExtension
#define SOAP_TYPE_tt__OSDTextConfigurationExtension (756)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDTextConfigurationExtension(struct soap*, const char*, int, const tt__OSDTextConfigurationExtension *, const char*);
SOAP_FMAC3 tt__OSDTextConfigurationExtension * SOAP_FMAC4 soap_in_tt__OSDTextConfigurationExtension(struct soap*, const char*, tt__OSDTextConfigurationExtension *, const char*);
SOAP_FMAC1 tt__OSDTextConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__OSDTextConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDTextConfigurationExtension * soap_new_tt__OSDTextConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDTextConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__OSDTextConfigurationExtension * soap_new_req_tt__OSDTextConfigurationExtension(
	struct soap *soap)
{	tt__OSDTextConfigurationExtension *_p = soap_new_tt__OSDTextConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__OSDTextConfigurationExtension * soap_new_set_tt__OSDTextConfigurationExtension(
	struct soap *soap)
{	tt__OSDTextConfigurationExtension *_p = soap_new_tt__OSDTextConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__OSDTextConfigurationExtension
#define soap_write_tt__OSDTextConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:OSDTextConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDTextConfigurationExtension * SOAP_FMAC4 soap_get_tt__OSDTextConfigurationExtension(struct soap*, tt__OSDTextConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__OSDTextConfigurationExtension
#define soap_read_tt__OSDTextConfigurationExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__OSDTextConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__OSDTextConfiguration
#define SOAP_TYPE_tt__OSDTextConfiguration (755)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDTextConfiguration(struct soap*, const char*, int, const tt__OSDTextConfiguration *, const char*);
SOAP_FMAC3 tt__OSDTextConfiguration * SOAP_FMAC4 soap_in_tt__OSDTextConfiguration(struct soap*, const char*, tt__OSDTextConfiguration *, const char*);
SOAP_FMAC1 tt__OSDTextConfiguration * SOAP_FMAC2 soap_instantiate_tt__OSDTextConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDTextConfiguration * soap_new_tt__OSDTextConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDTextConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__OSDTextConfiguration * soap_new_req_tt__OSDTextConfiguration(
	struct soap *soap,
	const std::string& Type)
{	tt__OSDTextConfiguration *_p = soap_new_tt__OSDTextConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__OSDTextConfiguration::Type = Type;
	}
	return _p;
}

inline tt__OSDTextConfiguration * soap_new_set_tt__OSDTextConfiguration(
	struct soap *soap,
	const std::string& Type,
	std::string *DateFormat,
	std::string *TimeFormat,
	int *FontSize,
	tt__OSDColor *FontColor,
	tt__OSDColor *BackgroundColor,
	std::string *PlainText,
	tt__OSDTextConfigurationExtension *Extension,
	bool *IsPersistentText)
{	tt__OSDTextConfiguration *_p = soap_new_tt__OSDTextConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__OSDTextConfiguration::Type = Type;
		_p->tt__OSDTextConfiguration::DateFormat = DateFormat;
		_p->tt__OSDTextConfiguration::TimeFormat = TimeFormat;
		_p->tt__OSDTextConfiguration::FontSize = FontSize;
		_p->tt__OSDTextConfiguration::FontColor = FontColor;
		_p->tt__OSDTextConfiguration::BackgroundColor = BackgroundColor;
		_p->tt__OSDTextConfiguration::PlainText = PlainText;
		_p->tt__OSDTextConfiguration::Extension = Extension;
		_p->tt__OSDTextConfiguration::IsPersistentText = IsPersistentText;
	}
	return _p;
}

#ifndef soap_write_tt__OSDTextConfiguration
#define soap_write_tt__OSDTextConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:OSDTextConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDTextConfiguration * SOAP_FMAC4 soap_get_tt__OSDTextConfiguration(struct soap*, tt__OSDTextConfiguration *, const char*, const char*);

#ifndef soap_read_tt__OSDTextConfiguration
#define soap_read_tt__OSDTextConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__OSDTextConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__OSDColor
#define SOAP_TYPE_tt__OSDColor (754)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDColor(struct soap*, const char*, int, const tt__OSDColor *, const char*);
SOAP_FMAC3 tt__OSDColor * SOAP_FMAC4 soap_in_tt__OSDColor(struct soap*, const char*, tt__OSDColor *, const char*);
SOAP_FMAC1 tt__OSDColor * SOAP_FMAC2 soap_instantiate_tt__OSDColor(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDColor * soap_new_tt__OSDColor(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDColor(soap, n, NULL, NULL, NULL); }

inline tt__OSDColor * soap_new_req_tt__OSDColor(
	struct soap *soap,
	tt__Color *Color)
{	tt__OSDColor *_p = soap_new_tt__OSDColor(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__OSDColor::Color = Color;
	}
	return _p;
}

inline tt__OSDColor * soap_new_set_tt__OSDColor(
	struct soap *soap,
	tt__Color *Color,
	int *Transparent)
{	tt__OSDColor *_p = soap_new_tt__OSDColor(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__OSDColor::Color = Color;
		_p->tt__OSDColor::Transparent = Transparent;
	}
	return _p;
}

#ifndef soap_write_tt__OSDColor
#define soap_write_tt__OSDColor(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:OSDColor", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDColor * SOAP_FMAC4 soap_get_tt__OSDColor(struct soap*, tt__OSDColor *, const char*, const char*);

#ifndef soap_read_tt__OSDColor
#define soap_read_tt__OSDColor(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__OSDColor(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__OSDPosConfigurationExtension
#define SOAP_TYPE_tt__OSDPosConfigurationExtension (753)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDPosConfigurationExtension(struct soap*, const char*, int, const tt__OSDPosConfigurationExtension *, const char*);
SOAP_FMAC3 tt__OSDPosConfigurationExtension * SOAP_FMAC4 soap_in_tt__OSDPosConfigurationExtension(struct soap*, const char*, tt__OSDPosConfigurationExtension *, const char*);
SOAP_FMAC1 tt__OSDPosConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__OSDPosConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDPosConfigurationExtension * soap_new_tt__OSDPosConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDPosConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__OSDPosConfigurationExtension * soap_new_req_tt__OSDPosConfigurationExtension(
	struct soap *soap)
{	tt__OSDPosConfigurationExtension *_p = soap_new_tt__OSDPosConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__OSDPosConfigurationExtension * soap_new_set_tt__OSDPosConfigurationExtension(
	struct soap *soap)
{	tt__OSDPosConfigurationExtension *_p = soap_new_tt__OSDPosConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__OSDPosConfigurationExtension
#define soap_write_tt__OSDPosConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:OSDPosConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDPosConfigurationExtension * SOAP_FMAC4 soap_get_tt__OSDPosConfigurationExtension(struct soap*, tt__OSDPosConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__OSDPosConfigurationExtension
#define soap_read_tt__OSDPosConfigurationExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__OSDPosConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__OSDPosConfiguration
#define SOAP_TYPE_tt__OSDPosConfiguration (752)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDPosConfiguration(struct soap*, const char*, int, const tt__OSDPosConfiguration *, const char*);
SOAP_FMAC3 tt__OSDPosConfiguration * SOAP_FMAC4 soap_in_tt__OSDPosConfiguration(struct soap*, const char*, tt__OSDPosConfiguration *, const char*);
SOAP_FMAC1 tt__OSDPosConfiguration * SOAP_FMAC2 soap_instantiate_tt__OSDPosConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDPosConfiguration * soap_new_tt__OSDPosConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDPosConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__OSDPosConfiguration * soap_new_req_tt__OSDPosConfiguration(
	struct soap *soap,
	const std::string& Type)
{	tt__OSDPosConfiguration *_p = soap_new_tt__OSDPosConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__OSDPosConfiguration::Type = Type;
	}
	return _p;
}

inline tt__OSDPosConfiguration * soap_new_set_tt__OSDPosConfiguration(
	struct soap *soap,
	const std::string& Type,
	tt__Vector *Pos,
	tt__OSDPosConfigurationExtension *Extension)
{	tt__OSDPosConfiguration *_p = soap_new_tt__OSDPosConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__OSDPosConfiguration::Type = Type;
		_p->tt__OSDPosConfiguration::Pos = Pos;
		_p->tt__OSDPosConfiguration::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__OSDPosConfiguration
#define soap_write_tt__OSDPosConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:OSDPosConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDPosConfiguration * SOAP_FMAC4 soap_get_tt__OSDPosConfiguration(struct soap*, tt__OSDPosConfiguration *, const char*, const char*);

#ifndef soap_read_tt__OSDPosConfiguration
#define soap_read_tt__OSDPosConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__OSDPosConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__OSDReference
#define SOAP_TYPE_tt__OSDReference (751)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OSDReference(struct soap*, const char*, int, const tt__OSDReference *, const char*);
SOAP_FMAC3 tt__OSDReference * SOAP_FMAC4 soap_in_tt__OSDReference(struct soap*, const char*, tt__OSDReference *, const char*);
SOAP_FMAC1 tt__OSDReference * SOAP_FMAC2 soap_instantiate_tt__OSDReference(struct soap*, int, const char*, const char*, size_t*);

inline tt__OSDReference * soap_new_tt__OSDReference(struct soap *soap, int n = -1) { return soap_instantiate_tt__OSDReference(soap, n, NULL, NULL, NULL); }

inline tt__OSDReference * soap_new_req_tt__OSDReference(
	struct soap *soap,
	const std::string& __item)
{	tt__OSDReference *_p = soap_new_tt__OSDReference(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__OSDReference::__item = __item;
	}
	return _p;
}

inline tt__OSDReference * soap_new_set_tt__OSDReference(
	struct soap *soap,
	const std::string& __item)
{	tt__OSDReference *_p = soap_new_tt__OSDReference(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__OSDReference::__item = __item;
	}
	return _p;
}

#ifndef soap_write_tt__OSDReference
#define soap_write_tt__OSDReference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:OSDReference", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDReference * SOAP_FMAC4 soap_get_tt__OSDReference(struct soap*, tt__OSDReference *, const char*, const char*);

#ifndef soap_read_tt__OSDReference
#define soap_read_tt__OSDReference(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__OSDReference(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ProfileStatusExtension
#define SOAP_TYPE_tt__ProfileStatusExtension (750)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ProfileStatusExtension(struct soap*, const char*, int, const tt__ProfileStatusExtension *, const char*);
SOAP_FMAC3 tt__ProfileStatusExtension * SOAP_FMAC4 soap_in_tt__ProfileStatusExtension(struct soap*, const char*, tt__ProfileStatusExtension *, const char*);
SOAP_FMAC1 tt__ProfileStatusExtension * SOAP_FMAC2 soap_instantiate_tt__ProfileStatusExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ProfileStatusExtension * soap_new_tt__ProfileStatusExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ProfileStatusExtension(soap, n, NULL, NULL, NULL); }

inline tt__ProfileStatusExtension * soap_new_req_tt__ProfileStatusExtension(
	struct soap *soap)
{	tt__ProfileStatusExtension *_p = soap_new_tt__ProfileStatusExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ProfileStatusExtension * soap_new_set_tt__ProfileStatusExtension(
	struct soap *soap)
{	tt__ProfileStatusExtension *_p = soap_new_tt__ProfileStatusExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__ProfileStatusExtension
#define soap_write_tt__ProfileStatusExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ProfileStatusExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ProfileStatusExtension * SOAP_FMAC4 soap_get_tt__ProfileStatusExtension(struct soap*, tt__ProfileStatusExtension *, const char*, const char*);

#ifndef soap_read_tt__ProfileStatusExtension
#define soap_read_tt__ProfileStatusExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ProfileStatusExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ProfileStatus
#define SOAP_TYPE_tt__ProfileStatus (749)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ProfileStatus(struct soap*, const char*, int, const tt__ProfileStatus *, const char*);
SOAP_FMAC3 tt__ProfileStatus * SOAP_FMAC4 soap_in_tt__ProfileStatus(struct soap*, const char*, tt__ProfileStatus *, const char*);
SOAP_FMAC1 tt__ProfileStatus * SOAP_FMAC2 soap_instantiate_tt__ProfileStatus(struct soap*, int, const char*, const char*, size_t*);

inline tt__ProfileStatus * soap_new_tt__ProfileStatus(struct soap *soap, int n = -1) { return soap_instantiate_tt__ProfileStatus(soap, n, NULL, NULL, NULL); }

inline tt__ProfileStatus * soap_new_req_tt__ProfileStatus(
	struct soap *soap)
{	tt__ProfileStatus *_p = soap_new_tt__ProfileStatus(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ProfileStatus * soap_new_set_tt__ProfileStatus(
	struct soap *soap,
	const std::vector<tt__ActiveConnection *> & ActiveConnections,
	tt__ProfileStatusExtension *Extension)
{	tt__ProfileStatus *_p = soap_new_tt__ProfileStatus(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ProfileStatus::ActiveConnections = ActiveConnections;
		_p->tt__ProfileStatus::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__ProfileStatus
#define soap_write_tt__ProfileStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ProfileStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ProfileStatus * SOAP_FMAC4 soap_get_tt__ProfileStatus(struct soap*, tt__ProfileStatus *, const char*, const char*);

#ifndef soap_read_tt__ProfileStatus
#define soap_read_tt__ProfileStatus(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ProfileStatus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ActiveConnection
#define SOAP_TYPE_tt__ActiveConnection (748)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ActiveConnection(struct soap*, const char*, int, const tt__ActiveConnection *, const char*);
SOAP_FMAC3 tt__ActiveConnection * SOAP_FMAC4 soap_in_tt__ActiveConnection(struct soap*, const char*, tt__ActiveConnection *, const char*);
SOAP_FMAC1 tt__ActiveConnection * SOAP_FMAC2 soap_instantiate_tt__ActiveConnection(struct soap*, int, const char*, const char*, size_t*);

inline tt__ActiveConnection * soap_new_tt__ActiveConnection(struct soap *soap, int n = -1) { return soap_instantiate_tt__ActiveConnection(soap, n, NULL, NULL, NULL); }

inline tt__ActiveConnection * soap_new_req_tt__ActiveConnection(
	struct soap *soap,
	float CurrentBitrate,
	float CurrentFps)
{	tt__ActiveConnection *_p = soap_new_tt__ActiveConnection(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ActiveConnection::CurrentBitrate = CurrentBitrate;
		_p->tt__ActiveConnection::CurrentFps = CurrentFps;
	}
	return _p;
}

inline tt__ActiveConnection * soap_new_set_tt__ActiveConnection(
	struct soap *soap,
	float CurrentBitrate,
	float CurrentFps)
{	tt__ActiveConnection *_p = soap_new_tt__ActiveConnection(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ActiveConnection::CurrentBitrate = CurrentBitrate;
		_p->tt__ActiveConnection::CurrentFps = CurrentFps;
	}
	return _p;
}

#ifndef soap_write_tt__ActiveConnection
#define soap_write_tt__ActiveConnection(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ActiveConnection", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ActiveConnection * SOAP_FMAC4 soap_get_tt__ActiveConnection(struct soap*, tt__ActiveConnection *, const char*, const char*);

#ifndef soap_read_tt__ActiveConnection
#define soap_read_tt__ActiveConnection(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ActiveConnection(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AudioClassDescriptorExtension
#define SOAP_TYPE_tt__AudioClassDescriptorExtension (747)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioClassDescriptorExtension(struct soap*, const char*, int, const tt__AudioClassDescriptorExtension *, const char*);
SOAP_FMAC3 tt__AudioClassDescriptorExtension * SOAP_FMAC4 soap_in_tt__AudioClassDescriptorExtension(struct soap*, const char*, tt__AudioClassDescriptorExtension *, const char*);
SOAP_FMAC1 tt__AudioClassDescriptorExtension * SOAP_FMAC2 soap_instantiate_tt__AudioClassDescriptorExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioClassDescriptorExtension * soap_new_tt__AudioClassDescriptorExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioClassDescriptorExtension(soap, n, NULL, NULL, NULL); }

inline tt__AudioClassDescriptorExtension * soap_new_req_tt__AudioClassDescriptorExtension(
	struct soap *soap)
{	tt__AudioClassDescriptorExtension *_p = soap_new_tt__AudioClassDescriptorExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__AudioClassDescriptorExtension * soap_new_set_tt__AudioClassDescriptorExtension(
	struct soap *soap)
{	tt__AudioClassDescriptorExtension *_p = soap_new_tt__AudioClassDescriptorExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__AudioClassDescriptorExtension
#define soap_write_tt__AudioClassDescriptorExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AudioClassDescriptorExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioClassDescriptorExtension * SOAP_FMAC4 soap_get_tt__AudioClassDescriptorExtension(struct soap*, tt__AudioClassDescriptorExtension *, const char*, const char*);

#ifndef soap_read_tt__AudioClassDescriptorExtension
#define soap_read_tt__AudioClassDescriptorExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AudioClassDescriptorExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AudioClassDescriptor
#define SOAP_TYPE_tt__AudioClassDescriptor (746)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioClassDescriptor(struct soap*, const char*, int, const tt__AudioClassDescriptor *, const char*);
SOAP_FMAC3 tt__AudioClassDescriptor * SOAP_FMAC4 soap_in_tt__AudioClassDescriptor(struct soap*, const char*, tt__AudioClassDescriptor *, const char*);
SOAP_FMAC1 tt__AudioClassDescriptor * SOAP_FMAC2 soap_instantiate_tt__AudioClassDescriptor(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioClassDescriptor * soap_new_tt__AudioClassDescriptor(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioClassDescriptor(soap, n, NULL, NULL, NULL); }

inline tt__AudioClassDescriptor * soap_new_req_tt__AudioClassDescriptor(
	struct soap *soap)
{	tt__AudioClassDescriptor *_p = soap_new_tt__AudioClassDescriptor(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__AudioClassDescriptor * soap_new_set_tt__AudioClassDescriptor(
	struct soap *soap,
	const std::vector<tt__AudioClassCandidate *> & ClassCandidate,
	tt__AudioClassDescriptorExtension *Extension)
{	tt__AudioClassDescriptor *_p = soap_new_tt__AudioClassDescriptor(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AudioClassDescriptor::ClassCandidate = ClassCandidate;
		_p->tt__AudioClassDescriptor::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__AudioClassDescriptor
#define soap_write_tt__AudioClassDescriptor(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AudioClassDescriptor", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioClassDescriptor * SOAP_FMAC4 soap_get_tt__AudioClassDescriptor(struct soap*, tt__AudioClassDescriptor *, const char*, const char*);

#ifndef soap_read_tt__AudioClassDescriptor
#define soap_read_tt__AudioClassDescriptor(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AudioClassDescriptor(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AudioClassCandidate
#define SOAP_TYPE_tt__AudioClassCandidate (745)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioClassCandidate(struct soap*, const char*, int, const tt__AudioClassCandidate *, const char*);
SOAP_FMAC3 tt__AudioClassCandidate * SOAP_FMAC4 soap_in_tt__AudioClassCandidate(struct soap*, const char*, tt__AudioClassCandidate *, const char*);
SOAP_FMAC1 tt__AudioClassCandidate * SOAP_FMAC2 soap_instantiate_tt__AudioClassCandidate(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioClassCandidate * soap_new_tt__AudioClassCandidate(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioClassCandidate(soap, n, NULL, NULL, NULL); }

inline tt__AudioClassCandidate * soap_new_req_tt__AudioClassCandidate(
	struct soap *soap,
	const std::string& Type,
	float Likelihood)
{	tt__AudioClassCandidate *_p = soap_new_tt__AudioClassCandidate(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AudioClassCandidate::Type = Type;
		_p->tt__AudioClassCandidate::Likelihood = Likelihood;
	}
	return _p;
}

inline tt__AudioClassCandidate * soap_new_set_tt__AudioClassCandidate(
	struct soap *soap,
	const std::string& Type,
	float Likelihood)
{	tt__AudioClassCandidate *_p = soap_new_tt__AudioClassCandidate(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AudioClassCandidate::Type = Type;
		_p->tt__AudioClassCandidate::Likelihood = Likelihood;
	}
	return _p;
}

#ifndef soap_write_tt__AudioClassCandidate
#define soap_write_tt__AudioClassCandidate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AudioClassCandidate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioClassCandidate * SOAP_FMAC4 soap_get_tt__AudioClassCandidate(struct soap*, tt__AudioClassCandidate *, const char*, const char*);

#ifndef soap_read_tt__AudioClassCandidate
#define soap_read_tt__AudioClassCandidate(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AudioClassCandidate(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ActionEngineEventPayloadExtension
#define SOAP_TYPE_tt__ActionEngineEventPayloadExtension (744)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ActionEngineEventPayloadExtension(struct soap*, const char*, int, const tt__ActionEngineEventPayloadExtension *, const char*);
SOAP_FMAC3 tt__ActionEngineEventPayloadExtension * SOAP_FMAC4 soap_in_tt__ActionEngineEventPayloadExtension(struct soap*, const char*, tt__ActionEngineEventPayloadExtension *, const char*);
SOAP_FMAC1 tt__ActionEngineEventPayloadExtension * SOAP_FMAC2 soap_instantiate_tt__ActionEngineEventPayloadExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ActionEngineEventPayloadExtension * soap_new_tt__ActionEngineEventPayloadExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ActionEngineEventPayloadExtension(soap, n, NULL, NULL, NULL); }

inline tt__ActionEngineEventPayloadExtension * soap_new_req_tt__ActionEngineEventPayloadExtension(
	struct soap *soap)
{	tt__ActionEngineEventPayloadExtension *_p = soap_new_tt__ActionEngineEventPayloadExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ActionEngineEventPayloadExtension * soap_new_set_tt__ActionEngineEventPayloadExtension(
	struct soap *soap)
{	tt__ActionEngineEventPayloadExtension *_p = soap_new_tt__ActionEngineEventPayloadExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__ActionEngineEventPayloadExtension
#define soap_write_tt__ActionEngineEventPayloadExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ActionEngineEventPayloadExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ActionEngineEventPayloadExtension * SOAP_FMAC4 soap_get_tt__ActionEngineEventPayloadExtension(struct soap*, tt__ActionEngineEventPayloadExtension *, const char*, const char*);

#ifndef soap_read_tt__ActionEngineEventPayloadExtension
#define soap_read_tt__ActionEngineEventPayloadExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ActionEngineEventPayloadExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ActionEngineEventPayload
#define SOAP_TYPE_tt__ActionEngineEventPayload (743)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ActionEngineEventPayload(struct soap*, const char*, int, const tt__ActionEngineEventPayload *, const char*);
SOAP_FMAC3 tt__ActionEngineEventPayload * SOAP_FMAC4 soap_in_tt__ActionEngineEventPayload(struct soap*, const char*, tt__ActionEngineEventPayload *, const char*);
SOAP_FMAC1 tt__ActionEngineEventPayload * SOAP_FMAC2 soap_instantiate_tt__ActionEngineEventPayload(struct soap*, int, const char*, const char*, size_t*);

inline tt__ActionEngineEventPayload * soap_new_tt__ActionEngineEventPayload(struct soap *soap, int n = -1) { return soap_instantiate_tt__ActionEngineEventPayload(soap, n, NULL, NULL, NULL); }

inline tt__ActionEngineEventPayload * soap_new_req_tt__ActionEngineEventPayload(
	struct soap *soap)
{	tt__ActionEngineEventPayload *_p = soap_new_tt__ActionEngineEventPayload(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ActionEngineEventPayload * soap_new_set_tt__ActionEngineEventPayload(
	struct soap *soap,
	struct SOAP_ENV__Envelope *RequestInfo,
	struct SOAP_ENV__Envelope *ResponseInfo,
	struct SOAP_ENV__Fault *Fault,
	tt__ActionEngineEventPayloadExtension *Extension)
{	tt__ActionEngineEventPayload *_p = soap_new_tt__ActionEngineEventPayload(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ActionEngineEventPayload::RequestInfo = RequestInfo;
		_p->tt__ActionEngineEventPayload::ResponseInfo = ResponseInfo;
		_p->tt__ActionEngineEventPayload::Fault = Fault;
		_p->tt__ActionEngineEventPayload::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__ActionEngineEventPayload
#define soap_write_tt__ActionEngineEventPayload(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ActionEngineEventPayload", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ActionEngineEventPayload * SOAP_FMAC4 soap_get_tt__ActionEngineEventPayload(struct soap*, tt__ActionEngineEventPayload *, const char*, const char*);

#ifndef soap_read_tt__ActionEngineEventPayload
#define soap_read_tt__ActionEngineEventPayload(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ActionEngineEventPayload(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AnalyticsState
#define SOAP_TYPE_tt__AnalyticsState (742)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnalyticsState(struct soap*, const char*, int, const tt__AnalyticsState *, const char*);
SOAP_FMAC3 tt__AnalyticsState * SOAP_FMAC4 soap_in_tt__AnalyticsState(struct soap*, const char*, tt__AnalyticsState *, const char*);
SOAP_FMAC1 tt__AnalyticsState * SOAP_FMAC2 soap_instantiate_tt__AnalyticsState(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnalyticsState * soap_new_tt__AnalyticsState(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnalyticsState(soap, n, NULL, NULL, NULL); }

inline tt__AnalyticsState * soap_new_req_tt__AnalyticsState(
	struct soap *soap,
	const std::string& State)
{	tt__AnalyticsState *_p = soap_new_tt__AnalyticsState(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AnalyticsState::State = State;
	}
	return _p;
}

inline tt__AnalyticsState * soap_new_set_tt__AnalyticsState(
	struct soap *soap,
	std::string *Error,
	const std::string& State)
{	tt__AnalyticsState *_p = soap_new_tt__AnalyticsState(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AnalyticsState::Error = Error;
		_p->tt__AnalyticsState::State = State;
	}
	return _p;
}

#ifndef soap_write_tt__AnalyticsState
#define soap_write_tt__AnalyticsState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AnalyticsState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsState * SOAP_FMAC4 soap_get_tt__AnalyticsState(struct soap*, tt__AnalyticsState *, const char*, const char*);

#ifndef soap_read_tt__AnalyticsState
#define soap_read_tt__AnalyticsState(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AnalyticsState(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AnalyticsStateInformation
#define SOAP_TYPE_tt__AnalyticsStateInformation (741)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnalyticsStateInformation(struct soap*, const char*, int, const tt__AnalyticsStateInformation *, const char*);
SOAP_FMAC3 tt__AnalyticsStateInformation * SOAP_FMAC4 soap_in_tt__AnalyticsStateInformation(struct soap*, const char*, tt__AnalyticsStateInformation *, const char*);
SOAP_FMAC1 tt__AnalyticsStateInformation * SOAP_FMAC2 soap_instantiate_tt__AnalyticsStateInformation(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnalyticsStateInformation * soap_new_tt__AnalyticsStateInformation(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnalyticsStateInformation(soap, n, NULL, NULL, NULL); }

inline tt__AnalyticsStateInformation * soap_new_req_tt__AnalyticsStateInformation(
	struct soap *soap,
	const std::string& AnalyticsEngineControlToken,
	tt__AnalyticsState *State)
{	tt__AnalyticsStateInformation *_p = soap_new_tt__AnalyticsStateInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AnalyticsStateInformation::AnalyticsEngineControlToken = AnalyticsEngineControlToken;
		_p->tt__AnalyticsStateInformation::State = State;
	}
	return _p;
}

inline tt__AnalyticsStateInformation * soap_new_set_tt__AnalyticsStateInformation(
	struct soap *soap,
	const std::string& AnalyticsEngineControlToken,
	tt__AnalyticsState *State)
{	tt__AnalyticsStateInformation *_p = soap_new_tt__AnalyticsStateInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AnalyticsStateInformation::AnalyticsEngineControlToken = AnalyticsEngineControlToken;
		_p->tt__AnalyticsStateInformation::State = State;
	}
	return _p;
}

#ifndef soap_write_tt__AnalyticsStateInformation
#define soap_write_tt__AnalyticsStateInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AnalyticsStateInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsStateInformation * SOAP_FMAC4 soap_get_tt__AnalyticsStateInformation(struct soap*, tt__AnalyticsStateInformation *, const char*, const char*);

#ifndef soap_read_tt__AnalyticsStateInformation
#define soap_read_tt__AnalyticsStateInformation(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AnalyticsStateInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AnalyticsEngineControl
#define SOAP_TYPE_tt__AnalyticsEngineControl (740)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnalyticsEngineControl(struct soap*, const char*, int, const tt__AnalyticsEngineControl *, const char*);
SOAP_FMAC3 tt__AnalyticsEngineControl * SOAP_FMAC4 soap_in_tt__AnalyticsEngineControl(struct soap*, const char*, tt__AnalyticsEngineControl *, const char*);
SOAP_FMAC1 tt__AnalyticsEngineControl * SOAP_FMAC2 soap_instantiate_tt__AnalyticsEngineControl(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnalyticsEngineControl * soap_new_tt__AnalyticsEngineControl(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnalyticsEngineControl(soap, n, NULL, NULL, NULL); }

inline tt__AnalyticsEngineControl * soap_new_req_tt__AnalyticsEngineControl(
	struct soap *soap,
	const std::string& EngineToken,
	const std::string& EngineConfigToken,
	const std::vector<std::string> & InputToken,
	const std::vector<std::string> & ReceiverToken,
	tt__Config *Subscription,
	enum tt__ModeOfOperation Mode,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__AnalyticsEngineControl *_p = soap_new_tt__AnalyticsEngineControl(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AnalyticsEngineControl::EngineToken = EngineToken;
		_p->tt__AnalyticsEngineControl::EngineConfigToken = EngineConfigToken;
		_p->tt__AnalyticsEngineControl::InputToken = InputToken;
		_p->tt__AnalyticsEngineControl::ReceiverToken = ReceiverToken;
		_p->tt__AnalyticsEngineControl::Subscription = Subscription;
		_p->tt__AnalyticsEngineControl::Mode = Mode;
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

inline tt__AnalyticsEngineControl * soap_new_set_tt__AnalyticsEngineControl(
	struct soap *soap,
	const std::string& EngineToken,
	const std::string& EngineConfigToken,
	const std::vector<std::string> & InputToken,
	const std::vector<std::string> & ReceiverToken,
	tt__MulticastConfiguration *Multicast,
	tt__Config *Subscription,
	enum tt__ModeOfOperation Mode,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__AnalyticsEngineControl *_p = soap_new_tt__AnalyticsEngineControl(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AnalyticsEngineControl::EngineToken = EngineToken;
		_p->tt__AnalyticsEngineControl::EngineConfigToken = EngineConfigToken;
		_p->tt__AnalyticsEngineControl::InputToken = InputToken;
		_p->tt__AnalyticsEngineControl::ReceiverToken = ReceiverToken;
		_p->tt__AnalyticsEngineControl::Multicast = Multicast;
		_p->tt__AnalyticsEngineControl::Subscription = Subscription;
		_p->tt__AnalyticsEngineControl::Mode = Mode;
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

#ifndef soap_write_tt__AnalyticsEngineControl
#define soap_write_tt__AnalyticsEngineControl(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AnalyticsEngineControl", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsEngineControl * SOAP_FMAC4 soap_get_tt__AnalyticsEngineControl(struct soap*, tt__AnalyticsEngineControl *, const char*, const char*);

#ifndef soap_read_tt__AnalyticsEngineControl
#define soap_read_tt__AnalyticsEngineControl(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AnalyticsEngineControl(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__MetadataInputExtension
#define SOAP_TYPE_tt__MetadataInputExtension (739)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MetadataInputExtension(struct soap*, const char*, int, const tt__MetadataInputExtension *, const char*);
SOAP_FMAC3 tt__MetadataInputExtension * SOAP_FMAC4 soap_in_tt__MetadataInputExtension(struct soap*, const char*, tt__MetadataInputExtension *, const char*);
SOAP_FMAC1 tt__MetadataInputExtension * SOAP_FMAC2 soap_instantiate_tt__MetadataInputExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__MetadataInputExtension * soap_new_tt__MetadataInputExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__MetadataInputExtension(soap, n, NULL, NULL, NULL); }

inline tt__MetadataInputExtension * soap_new_req_tt__MetadataInputExtension(
	struct soap *soap)
{	tt__MetadataInputExtension *_p = soap_new_tt__MetadataInputExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__MetadataInputExtension * soap_new_set_tt__MetadataInputExtension(
	struct soap *soap)
{	tt__MetadataInputExtension *_p = soap_new_tt__MetadataInputExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__MetadataInputExtension
#define soap_write_tt__MetadataInputExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:MetadataInputExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataInputExtension * SOAP_FMAC4 soap_get_tt__MetadataInputExtension(struct soap*, tt__MetadataInputExtension *, const char*, const char*);

#ifndef soap_read_tt__MetadataInputExtension
#define soap_read_tt__MetadataInputExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MetadataInputExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__MetadataInput
#define SOAP_TYPE_tt__MetadataInput (738)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MetadataInput(struct soap*, const char*, int, const tt__MetadataInput *, const char*);
SOAP_FMAC3 tt__MetadataInput * SOAP_FMAC4 soap_in_tt__MetadataInput(struct soap*, const char*, tt__MetadataInput *, const char*);
SOAP_FMAC1 tt__MetadataInput * SOAP_FMAC2 soap_instantiate_tt__MetadataInput(struct soap*, int, const char*, const char*, size_t*);

inline tt__MetadataInput * soap_new_tt__MetadataInput(struct soap *soap, int n = -1) { return soap_instantiate_tt__MetadataInput(soap, n, NULL, NULL, NULL); }

inline tt__MetadataInput * soap_new_req_tt__MetadataInput(
	struct soap *soap)
{	tt__MetadataInput *_p = soap_new_tt__MetadataInput(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__MetadataInput * soap_new_set_tt__MetadataInput(
	struct soap *soap,
	const std::vector<tt__Config *> & MetadataConfig,
	tt__MetadataInputExtension *Extension)
{	tt__MetadataInput *_p = soap_new_tt__MetadataInput(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__MetadataInput::MetadataConfig = MetadataConfig;
		_p->tt__MetadataInput::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__MetadataInput
#define soap_write_tt__MetadataInput(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:MetadataInput", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataInput * SOAP_FMAC4 soap_get_tt__MetadataInput(struct soap*, tt__MetadataInput *, const char*, const char*);

#ifndef soap_read_tt__MetadataInput
#define soap_read_tt__MetadataInput(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MetadataInput(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SourceIdentificationExtension
#define SOAP_TYPE_tt__SourceIdentificationExtension (737)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SourceIdentificationExtension(struct soap*, const char*, int, const tt__SourceIdentificationExtension *, const char*);
SOAP_FMAC3 tt__SourceIdentificationExtension * SOAP_FMAC4 soap_in_tt__SourceIdentificationExtension(struct soap*, const char*, tt__SourceIdentificationExtension *, const char*);
SOAP_FMAC1 tt__SourceIdentificationExtension * SOAP_FMAC2 soap_instantiate_tt__SourceIdentificationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__SourceIdentificationExtension * soap_new_tt__SourceIdentificationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__SourceIdentificationExtension(soap, n, NULL, NULL, NULL); }

inline tt__SourceIdentificationExtension * soap_new_req_tt__SourceIdentificationExtension(
	struct soap *soap)
{	tt__SourceIdentificationExtension *_p = soap_new_tt__SourceIdentificationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__SourceIdentificationExtension * soap_new_set_tt__SourceIdentificationExtension(
	struct soap *soap)
{	tt__SourceIdentificationExtension *_p = soap_new_tt__SourceIdentificationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__SourceIdentificationExtension
#define soap_write_tt__SourceIdentificationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:SourceIdentificationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SourceIdentificationExtension * SOAP_FMAC4 soap_get_tt__SourceIdentificationExtension(struct soap*, tt__SourceIdentificationExtension *, const char*, const char*);

#ifndef soap_read_tt__SourceIdentificationExtension
#define soap_read_tt__SourceIdentificationExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__SourceIdentificationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SourceIdentification
#define SOAP_TYPE_tt__SourceIdentification (736)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SourceIdentification(struct soap*, const char*, int, const tt__SourceIdentification *, const char*);
SOAP_FMAC3 tt__SourceIdentification * SOAP_FMAC4 soap_in_tt__SourceIdentification(struct soap*, const char*, tt__SourceIdentification *, const char*);
SOAP_FMAC1 tt__SourceIdentification * SOAP_FMAC2 soap_instantiate_tt__SourceIdentification(struct soap*, int, const char*, const char*, size_t*);

inline tt__SourceIdentification * soap_new_tt__SourceIdentification(struct soap *soap, int n = -1) { return soap_instantiate_tt__SourceIdentification(soap, n, NULL, NULL, NULL); }

inline tt__SourceIdentification * soap_new_req_tt__SourceIdentification(
	struct soap *soap,
	const std::string& Name,
	const std::vector<std::string> & Token)
{	tt__SourceIdentification *_p = soap_new_tt__SourceIdentification(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__SourceIdentification::Name = Name;
		_p->tt__SourceIdentification::Token = Token;
	}
	return _p;
}

inline tt__SourceIdentification * soap_new_set_tt__SourceIdentification(
	struct soap *soap,
	const std::string& Name,
	const std::vector<std::string> & Token,
	tt__SourceIdentificationExtension *Extension)
{	tt__SourceIdentification *_p = soap_new_tt__SourceIdentification(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__SourceIdentification::Name = Name;
		_p->tt__SourceIdentification::Token = Token;
		_p->tt__SourceIdentification::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__SourceIdentification
#define soap_write_tt__SourceIdentification(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:SourceIdentification", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SourceIdentification * SOAP_FMAC4 soap_get_tt__SourceIdentification(struct soap*, tt__SourceIdentification *, const char*, const char*);

#ifndef soap_read_tt__SourceIdentification
#define soap_read_tt__SourceIdentification(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__SourceIdentification(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AnalyticsEngineInput
#define SOAP_TYPE_tt__AnalyticsEngineInput (735)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnalyticsEngineInput(struct soap*, const char*, int, const tt__AnalyticsEngineInput *, const char*);
SOAP_FMAC3 tt__AnalyticsEngineInput * SOAP_FMAC4 soap_in_tt__AnalyticsEngineInput(struct soap*, const char*, tt__AnalyticsEngineInput *, const char*);
SOAP_FMAC1 tt__AnalyticsEngineInput * SOAP_FMAC2 soap_instantiate_tt__AnalyticsEngineInput(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnalyticsEngineInput * soap_new_tt__AnalyticsEngineInput(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnalyticsEngineInput(soap, n, NULL, NULL, NULL); }

inline tt__AnalyticsEngineInput * soap_new_req_tt__AnalyticsEngineInput(
	struct soap *soap,
	tt__SourceIdentification *SourceIdentification,
	tt__VideoEncoderConfiguration *VideoInput,
	tt__MetadataInput *MetadataInput,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__AnalyticsEngineInput *_p = soap_new_tt__AnalyticsEngineInput(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AnalyticsEngineInput::SourceIdentification = SourceIdentification;
		_p->tt__AnalyticsEngineInput::VideoInput = VideoInput;
		_p->tt__AnalyticsEngineInput::MetadataInput = MetadataInput;
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

inline tt__AnalyticsEngineInput * soap_new_set_tt__AnalyticsEngineInput(
	struct soap *soap,
	tt__SourceIdentification *SourceIdentification,
	tt__VideoEncoderConfiguration *VideoInput,
	tt__MetadataInput *MetadataInput,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__AnalyticsEngineInput *_p = soap_new_tt__AnalyticsEngineInput(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AnalyticsEngineInput::SourceIdentification = SourceIdentification;
		_p->tt__AnalyticsEngineInput::VideoInput = VideoInput;
		_p->tt__AnalyticsEngineInput::MetadataInput = MetadataInput;
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

#ifndef soap_write_tt__AnalyticsEngineInput
#define soap_write_tt__AnalyticsEngineInput(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AnalyticsEngineInput", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsEngineInput * SOAP_FMAC4 soap_get_tt__AnalyticsEngineInput(struct soap*, tt__AnalyticsEngineInput *, const char*, const char*);

#ifndef soap_read_tt__AnalyticsEngineInput
#define soap_read_tt__AnalyticsEngineInput(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AnalyticsEngineInput(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AnalyticsEngineInputInfoExtension
#define SOAP_TYPE_tt__AnalyticsEngineInputInfoExtension (734)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnalyticsEngineInputInfoExtension(struct soap*, const char*, int, const tt__AnalyticsEngineInputInfoExtension *, const char*);
SOAP_FMAC3 tt__AnalyticsEngineInputInfoExtension * SOAP_FMAC4 soap_in_tt__AnalyticsEngineInputInfoExtension(struct soap*, const char*, tt__AnalyticsEngineInputInfoExtension *, const char*);
SOAP_FMAC1 tt__AnalyticsEngineInputInfoExtension * SOAP_FMAC2 soap_instantiate_tt__AnalyticsEngineInputInfoExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnalyticsEngineInputInfoExtension * soap_new_tt__AnalyticsEngineInputInfoExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnalyticsEngineInputInfoExtension(soap, n, NULL, NULL, NULL); }

inline tt__AnalyticsEngineInputInfoExtension * soap_new_req_tt__AnalyticsEngineInputInfoExtension(
	struct soap *soap)
{	tt__AnalyticsEngineInputInfoExtension *_p = soap_new_tt__AnalyticsEngineInputInfoExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__AnalyticsEngineInputInfoExtension * soap_new_set_tt__AnalyticsEngineInputInfoExtension(
	struct soap *soap)
{	tt__AnalyticsEngineInputInfoExtension *_p = soap_new_tt__AnalyticsEngineInputInfoExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__AnalyticsEngineInputInfoExtension
#define soap_write_tt__AnalyticsEngineInputInfoExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AnalyticsEngineInputInfoExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsEngineInputInfoExtension * SOAP_FMAC4 soap_get_tt__AnalyticsEngineInputInfoExtension(struct soap*, tt__AnalyticsEngineInputInfoExtension *, const char*, const char*);

#ifndef soap_read_tt__AnalyticsEngineInputInfoExtension
#define soap_read_tt__AnalyticsEngineInputInfoExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AnalyticsEngineInputInfoExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AnalyticsEngineInputInfo
#define SOAP_TYPE_tt__AnalyticsEngineInputInfo (733)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnalyticsEngineInputInfo(struct soap*, const char*, int, const tt__AnalyticsEngineInputInfo *, const char*);
SOAP_FMAC3 tt__AnalyticsEngineInputInfo * SOAP_FMAC4 soap_in_tt__AnalyticsEngineInputInfo(struct soap*, const char*, tt__AnalyticsEngineInputInfo *, const char*);
SOAP_FMAC1 tt__AnalyticsEngineInputInfo * SOAP_FMAC2 soap_instantiate_tt__AnalyticsEngineInputInfo(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnalyticsEngineInputInfo * soap_new_tt__AnalyticsEngineInputInfo(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnalyticsEngineInputInfo(soap, n, NULL, NULL, NULL); }

inline tt__AnalyticsEngineInputInfo * soap_new_req_tt__AnalyticsEngineInputInfo(
	struct soap *soap)
{	tt__AnalyticsEngineInputInfo *_p = soap_new_tt__AnalyticsEngineInputInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__AnalyticsEngineInputInfo * soap_new_set_tt__AnalyticsEngineInputInfo(
	struct soap *soap,
	tt__Config *InputInfo,
	tt__AnalyticsEngineInputInfoExtension *Extension)
{	tt__AnalyticsEngineInputInfo *_p = soap_new_tt__AnalyticsEngineInputInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AnalyticsEngineInputInfo::InputInfo = InputInfo;
		_p->tt__AnalyticsEngineInputInfo::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__AnalyticsEngineInputInfo
#define soap_write_tt__AnalyticsEngineInputInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AnalyticsEngineInputInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsEngineInputInfo * SOAP_FMAC4 soap_get_tt__AnalyticsEngineInputInfo(struct soap*, tt__AnalyticsEngineInputInfo *, const char*, const char*);

#ifndef soap_read_tt__AnalyticsEngineInputInfo
#define soap_read_tt__AnalyticsEngineInputInfo(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AnalyticsEngineInputInfo(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__EngineConfiguration
#define SOAP_TYPE_tt__EngineConfiguration (732)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__EngineConfiguration(struct soap*, const char*, int, const tt__EngineConfiguration *, const char*);
SOAP_FMAC3 tt__EngineConfiguration * SOAP_FMAC4 soap_in_tt__EngineConfiguration(struct soap*, const char*, tt__EngineConfiguration *, const char*);
SOAP_FMAC1 tt__EngineConfiguration * SOAP_FMAC2 soap_instantiate_tt__EngineConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__EngineConfiguration * soap_new_tt__EngineConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__EngineConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__EngineConfiguration * soap_new_req_tt__EngineConfiguration(
	struct soap *soap,
	tt__VideoAnalyticsConfiguration *VideoAnalyticsConfiguration,
	tt__AnalyticsEngineInputInfo *AnalyticsEngineInputInfo)
{	tt__EngineConfiguration *_p = soap_new_tt__EngineConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__EngineConfiguration::VideoAnalyticsConfiguration = VideoAnalyticsConfiguration;
		_p->tt__EngineConfiguration::AnalyticsEngineInputInfo = AnalyticsEngineInputInfo;
	}
	return _p;
}

inline tt__EngineConfiguration * soap_new_set_tt__EngineConfiguration(
	struct soap *soap,
	tt__VideoAnalyticsConfiguration *VideoAnalyticsConfiguration,
	tt__AnalyticsEngineInputInfo *AnalyticsEngineInputInfo)
{	tt__EngineConfiguration *_p = soap_new_tt__EngineConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__EngineConfiguration::VideoAnalyticsConfiguration = VideoAnalyticsConfiguration;
		_p->tt__EngineConfiguration::AnalyticsEngineInputInfo = AnalyticsEngineInputInfo;
	}
	return _p;
}

#ifndef soap_write_tt__EngineConfiguration
#define soap_write_tt__EngineConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:EngineConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EngineConfiguration * SOAP_FMAC4 soap_get_tt__EngineConfiguration(struct soap*, tt__EngineConfiguration *, const char*, const char*);

#ifndef soap_read_tt__EngineConfiguration
#define soap_read_tt__EngineConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__EngineConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AnalyticsDeviceEngineConfigurationExtension
#define SOAP_TYPE_tt__AnalyticsDeviceEngineConfigurationExtension (731)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnalyticsDeviceEngineConfigurationExtension(struct soap*, const char*, int, const tt__AnalyticsDeviceEngineConfigurationExtension *, const char*);
SOAP_FMAC3 tt__AnalyticsDeviceEngineConfigurationExtension * SOAP_FMAC4 soap_in_tt__AnalyticsDeviceEngineConfigurationExtension(struct soap*, const char*, tt__AnalyticsDeviceEngineConfigurationExtension *, const char*);
SOAP_FMAC1 tt__AnalyticsDeviceEngineConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__AnalyticsDeviceEngineConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnalyticsDeviceEngineConfigurationExtension * soap_new_tt__AnalyticsDeviceEngineConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnalyticsDeviceEngineConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__AnalyticsDeviceEngineConfigurationExtension * soap_new_req_tt__AnalyticsDeviceEngineConfigurationExtension(
	struct soap *soap)
{	tt__AnalyticsDeviceEngineConfigurationExtension *_p = soap_new_tt__AnalyticsDeviceEngineConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__AnalyticsDeviceEngineConfigurationExtension * soap_new_set_tt__AnalyticsDeviceEngineConfigurationExtension(
	struct soap *soap)
{	tt__AnalyticsDeviceEngineConfigurationExtension *_p = soap_new_tt__AnalyticsDeviceEngineConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__AnalyticsDeviceEngineConfigurationExtension
#define soap_write_tt__AnalyticsDeviceEngineConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AnalyticsDeviceEngineConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsDeviceEngineConfigurationExtension * SOAP_FMAC4 soap_get_tt__AnalyticsDeviceEngineConfigurationExtension(struct soap*, tt__AnalyticsDeviceEngineConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__AnalyticsDeviceEngineConfigurationExtension
#define soap_read_tt__AnalyticsDeviceEngineConfigurationExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AnalyticsDeviceEngineConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AnalyticsDeviceEngineConfiguration
#define SOAP_TYPE_tt__AnalyticsDeviceEngineConfiguration (730)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnalyticsDeviceEngineConfiguration(struct soap*, const char*, int, const tt__AnalyticsDeviceEngineConfiguration *, const char*);
SOAP_FMAC3 tt__AnalyticsDeviceEngineConfiguration * SOAP_FMAC4 soap_in_tt__AnalyticsDeviceEngineConfiguration(struct soap*, const char*, tt__AnalyticsDeviceEngineConfiguration *, const char*);
SOAP_FMAC1 tt__AnalyticsDeviceEngineConfiguration * SOAP_FMAC2 soap_instantiate_tt__AnalyticsDeviceEngineConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnalyticsDeviceEngineConfiguration * soap_new_tt__AnalyticsDeviceEngineConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnalyticsDeviceEngineConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__AnalyticsDeviceEngineConfiguration * soap_new_req_tt__AnalyticsDeviceEngineConfiguration(
	struct soap *soap,
	const std::vector<tt__EngineConfiguration *> & EngineConfiguration)
{	tt__AnalyticsDeviceEngineConfiguration *_p = soap_new_tt__AnalyticsDeviceEngineConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AnalyticsDeviceEngineConfiguration::EngineConfiguration = EngineConfiguration;
	}
	return _p;
}

inline tt__AnalyticsDeviceEngineConfiguration * soap_new_set_tt__AnalyticsDeviceEngineConfiguration(
	struct soap *soap,
	const std::vector<tt__EngineConfiguration *> & EngineConfiguration,
	tt__AnalyticsDeviceEngineConfigurationExtension *Extension)
{	tt__AnalyticsDeviceEngineConfiguration *_p = soap_new_tt__AnalyticsDeviceEngineConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AnalyticsDeviceEngineConfiguration::EngineConfiguration = EngineConfiguration;
		_p->tt__AnalyticsDeviceEngineConfiguration::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__AnalyticsDeviceEngineConfiguration
#define soap_write_tt__AnalyticsDeviceEngineConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AnalyticsDeviceEngineConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsDeviceEngineConfiguration * SOAP_FMAC4 soap_get_tt__AnalyticsDeviceEngineConfiguration(struct soap*, tt__AnalyticsDeviceEngineConfiguration *, const char*, const char*);

#ifndef soap_read_tt__AnalyticsDeviceEngineConfiguration
#define soap_read_tt__AnalyticsDeviceEngineConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AnalyticsDeviceEngineConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AnalyticsEngine
#define SOAP_TYPE_tt__AnalyticsEngine (729)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnalyticsEngine(struct soap*, const char*, int, const tt__AnalyticsEngine *, const char*);
SOAP_FMAC3 tt__AnalyticsEngine * SOAP_FMAC4 soap_in_tt__AnalyticsEngine(struct soap*, const char*, tt__AnalyticsEngine *, const char*);
SOAP_FMAC1 tt__AnalyticsEngine * SOAP_FMAC2 soap_instantiate_tt__AnalyticsEngine(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnalyticsEngine * soap_new_tt__AnalyticsEngine(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnalyticsEngine(soap, n, NULL, NULL, NULL); }

inline tt__AnalyticsEngine * soap_new_req_tt__AnalyticsEngine(
	struct soap *soap,
	tt__AnalyticsDeviceEngineConfiguration *AnalyticsEngineConfiguration,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__AnalyticsEngine *_p = soap_new_tt__AnalyticsEngine(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AnalyticsEngine::AnalyticsEngineConfiguration = AnalyticsEngineConfiguration;
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

inline tt__AnalyticsEngine * soap_new_set_tt__AnalyticsEngine(
	struct soap *soap,
	tt__AnalyticsDeviceEngineConfiguration *AnalyticsEngineConfiguration,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__AnalyticsEngine *_p = soap_new_tt__AnalyticsEngine(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AnalyticsEngine::AnalyticsEngineConfiguration = AnalyticsEngineConfiguration;
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

#ifndef soap_write_tt__AnalyticsEngine
#define soap_write_tt__AnalyticsEngine(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AnalyticsEngine", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsEngine * SOAP_FMAC4 soap_get_tt__AnalyticsEngine(struct soap*, tt__AnalyticsEngine *, const char*, const char*);

#ifndef soap_read_tt__AnalyticsEngine
#define soap_read_tt__AnalyticsEngine(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AnalyticsEngine(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ReplayConfiguration
#define SOAP_TYPE_tt__ReplayConfiguration (728)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ReplayConfiguration(struct soap*, const char*, int, const tt__ReplayConfiguration *, const char*);
SOAP_FMAC3 tt__ReplayConfiguration * SOAP_FMAC4 soap_in_tt__ReplayConfiguration(struct soap*, const char*, tt__ReplayConfiguration *, const char*);
SOAP_FMAC1 tt__ReplayConfiguration * SOAP_FMAC2 soap_instantiate_tt__ReplayConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__ReplayConfiguration * soap_new_tt__ReplayConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__ReplayConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__ReplayConfiguration * soap_new_req_tt__ReplayConfiguration(
	struct soap *soap,
	LONG64 SessionTimeout)
{	tt__ReplayConfiguration *_p = soap_new_tt__ReplayConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ReplayConfiguration::SessionTimeout = SessionTimeout;
	}
	return _p;
}

inline tt__ReplayConfiguration * soap_new_set_tt__ReplayConfiguration(
	struct soap *soap,
	LONG64 SessionTimeout)
{	tt__ReplayConfiguration *_p = soap_new_tt__ReplayConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ReplayConfiguration::SessionTimeout = SessionTimeout;
	}
	return _p;
}

#ifndef soap_write_tt__ReplayConfiguration
#define soap_write_tt__ReplayConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ReplayConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ReplayConfiguration * SOAP_FMAC4 soap_get_tt__ReplayConfiguration(struct soap*, tt__ReplayConfiguration *, const char*, const char*);

#ifndef soap_read_tt__ReplayConfiguration
#define soap_read_tt__ReplayConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ReplayConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__GetRecordingJobsResponseItem
#define SOAP_TYPE_tt__GetRecordingJobsResponseItem (727)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__GetRecordingJobsResponseItem(struct soap*, const char*, int, const tt__GetRecordingJobsResponseItem *, const char*);
SOAP_FMAC3 tt__GetRecordingJobsResponseItem * SOAP_FMAC4 soap_in_tt__GetRecordingJobsResponseItem(struct soap*, const char*, tt__GetRecordingJobsResponseItem *, const char*);
SOAP_FMAC1 tt__GetRecordingJobsResponseItem * SOAP_FMAC2 soap_instantiate_tt__GetRecordingJobsResponseItem(struct soap*, int, const char*, const char*, size_t*);

inline tt__GetRecordingJobsResponseItem * soap_new_tt__GetRecordingJobsResponseItem(struct soap *soap, int n = -1) { return soap_instantiate_tt__GetRecordingJobsResponseItem(soap, n, NULL, NULL, NULL); }

inline tt__GetRecordingJobsResponseItem * soap_new_req_tt__GetRecordingJobsResponseItem(
	struct soap *soap,
	const std::string& JobToken,
	tt__RecordingJobConfiguration *JobConfiguration)
{	tt__GetRecordingJobsResponseItem *_p = soap_new_tt__GetRecordingJobsResponseItem(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__GetRecordingJobsResponseItem::JobToken = JobToken;
		_p->tt__GetRecordingJobsResponseItem::JobConfiguration = JobConfiguration;
	}
	return _p;
}

inline tt__GetRecordingJobsResponseItem * soap_new_set_tt__GetRecordingJobsResponseItem(
	struct soap *soap,
	const std::string& JobToken,
	tt__RecordingJobConfiguration *JobConfiguration)
{	tt__GetRecordingJobsResponseItem *_p = soap_new_tt__GetRecordingJobsResponseItem(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__GetRecordingJobsResponseItem::JobToken = JobToken;
		_p->tt__GetRecordingJobsResponseItem::JobConfiguration = JobConfiguration;
	}
	return _p;
}

#ifndef soap_write_tt__GetRecordingJobsResponseItem
#define soap_write_tt__GetRecordingJobsResponseItem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:GetRecordingJobsResponseItem", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__GetRecordingJobsResponseItem * SOAP_FMAC4 soap_get_tt__GetRecordingJobsResponseItem(struct soap*, tt__GetRecordingJobsResponseItem *, const char*, const char*);

#ifndef soap_read_tt__GetRecordingJobsResponseItem
#define soap_read_tt__GetRecordingJobsResponseItem(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__GetRecordingJobsResponseItem(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RecordingJobStateTrack
#define SOAP_TYPE_tt__RecordingJobStateTrack (726)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingJobStateTrack(struct soap*, const char*, int, const tt__RecordingJobStateTrack *, const char*);
SOAP_FMAC3 tt__RecordingJobStateTrack * SOAP_FMAC4 soap_in_tt__RecordingJobStateTrack(struct soap*, const char*, tt__RecordingJobStateTrack *, const char*);
SOAP_FMAC1 tt__RecordingJobStateTrack * SOAP_FMAC2 soap_instantiate_tt__RecordingJobStateTrack(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingJobStateTrack * soap_new_tt__RecordingJobStateTrack(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingJobStateTrack(soap, n, NULL, NULL, NULL); }

inline tt__RecordingJobStateTrack * soap_new_req_tt__RecordingJobStateTrack(
	struct soap *soap,
	const std::string& SourceTag,
	const std::string& Destination,
	const std::string& State)
{	tt__RecordingJobStateTrack *_p = soap_new_tt__RecordingJobStateTrack(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RecordingJobStateTrack::SourceTag = SourceTag;
		_p->tt__RecordingJobStateTrack::Destination = Destination;
		_p->tt__RecordingJobStateTrack::State = State;
	}
	return _p;
}

inline tt__RecordingJobStateTrack * soap_new_set_tt__RecordingJobStateTrack(
	struct soap *soap,
	const std::string& SourceTag,
	const std::string& Destination,
	std::string *Error,
	const std::string& State)
{	tt__RecordingJobStateTrack *_p = soap_new_tt__RecordingJobStateTrack(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RecordingJobStateTrack::SourceTag = SourceTag;
		_p->tt__RecordingJobStateTrack::Destination = Destination;
		_p->tt__RecordingJobStateTrack::Error = Error;
		_p->tt__RecordingJobStateTrack::State = State;
	}
	return _p;
}

#ifndef soap_write_tt__RecordingJobStateTrack
#define soap_write_tt__RecordingJobStateTrack(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:RecordingJobStateTrack", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobStateTrack * SOAP_FMAC4 soap_get_tt__RecordingJobStateTrack(struct soap*, tt__RecordingJobStateTrack *, const char*, const char*);

#ifndef soap_read_tt__RecordingJobStateTrack
#define soap_read_tt__RecordingJobStateTrack(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RecordingJobStateTrack(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RecordingJobStateTracks
#define SOAP_TYPE_tt__RecordingJobStateTracks (725)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingJobStateTracks(struct soap*, const char*, int, const tt__RecordingJobStateTracks *, const char*);
SOAP_FMAC3 tt__RecordingJobStateTracks * SOAP_FMAC4 soap_in_tt__RecordingJobStateTracks(struct soap*, const char*, tt__RecordingJobStateTracks *, const char*);
SOAP_FMAC1 tt__RecordingJobStateTracks * SOAP_FMAC2 soap_instantiate_tt__RecordingJobStateTracks(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingJobStateTracks * soap_new_tt__RecordingJobStateTracks(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingJobStateTracks(soap, n, NULL, NULL, NULL); }

inline tt__RecordingJobStateTracks * soap_new_req_tt__RecordingJobStateTracks(
	struct soap *soap)
{	tt__RecordingJobStateTracks *_p = soap_new_tt__RecordingJobStateTracks(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__RecordingJobStateTracks * soap_new_set_tt__RecordingJobStateTracks(
	struct soap *soap,
	const std::vector<tt__RecordingJobStateTrack *> & Track)
{	tt__RecordingJobStateTracks *_p = soap_new_tt__RecordingJobStateTracks(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RecordingJobStateTracks::Track = Track;
	}
	return _p;
}

#ifndef soap_write_tt__RecordingJobStateTracks
#define soap_write_tt__RecordingJobStateTracks(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:RecordingJobStateTracks", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobStateTracks * SOAP_FMAC4 soap_get_tt__RecordingJobStateTracks(struct soap*, tt__RecordingJobStateTracks *, const char*, const char*);

#ifndef soap_read_tt__RecordingJobStateTracks
#define soap_read_tt__RecordingJobStateTracks(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RecordingJobStateTracks(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RecordingJobStateSource
#define SOAP_TYPE_tt__RecordingJobStateSource (724)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingJobStateSource(struct soap*, const char*, int, const tt__RecordingJobStateSource *, const char*);
SOAP_FMAC3 tt__RecordingJobStateSource * SOAP_FMAC4 soap_in_tt__RecordingJobStateSource(struct soap*, const char*, tt__RecordingJobStateSource *, const char*);
SOAP_FMAC1 tt__RecordingJobStateSource * SOAP_FMAC2 soap_instantiate_tt__RecordingJobStateSource(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingJobStateSource * soap_new_tt__RecordingJobStateSource(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingJobStateSource(soap, n, NULL, NULL, NULL); }

inline tt__RecordingJobStateSource * soap_new_req_tt__RecordingJobStateSource(
	struct soap *soap,
	tt__SourceReference *SourceToken,
	const std::string& State,
	tt__RecordingJobStateTracks *Tracks)
{	tt__RecordingJobStateSource *_p = soap_new_tt__RecordingJobStateSource(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RecordingJobStateSource::SourceToken = SourceToken;
		_p->tt__RecordingJobStateSource::State = State;
		_p->tt__RecordingJobStateSource::Tracks = Tracks;
	}
	return _p;
}

inline tt__RecordingJobStateSource * soap_new_set_tt__RecordingJobStateSource(
	struct soap *soap,
	tt__SourceReference *SourceToken,
	const std::string& State,
	tt__RecordingJobStateTracks *Tracks)
{	tt__RecordingJobStateSource *_p = soap_new_tt__RecordingJobStateSource(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RecordingJobStateSource::SourceToken = SourceToken;
		_p->tt__RecordingJobStateSource::State = State;
		_p->tt__RecordingJobStateSource::Tracks = Tracks;
	}
	return _p;
}

#ifndef soap_write_tt__RecordingJobStateSource
#define soap_write_tt__RecordingJobStateSource(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:RecordingJobStateSource", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobStateSource * SOAP_FMAC4 soap_get_tt__RecordingJobStateSource(struct soap*, tt__RecordingJobStateSource *, const char*, const char*);

#ifndef soap_read_tt__RecordingJobStateSource
#define soap_read_tt__RecordingJobStateSource(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RecordingJobStateSource(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RecordingJobStateInformationExtension
#define SOAP_TYPE_tt__RecordingJobStateInformationExtension (723)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingJobStateInformationExtension(struct soap*, const char*, int, const tt__RecordingJobStateInformationExtension *, const char*);
SOAP_FMAC3 tt__RecordingJobStateInformationExtension * SOAP_FMAC4 soap_in_tt__RecordingJobStateInformationExtension(struct soap*, const char*, tt__RecordingJobStateInformationExtension *, const char*);
SOAP_FMAC1 tt__RecordingJobStateInformationExtension * SOAP_FMAC2 soap_instantiate_tt__RecordingJobStateInformationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingJobStateInformationExtension * soap_new_tt__RecordingJobStateInformationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingJobStateInformationExtension(soap, n, NULL, NULL, NULL); }

inline tt__RecordingJobStateInformationExtension * soap_new_req_tt__RecordingJobStateInformationExtension(
	struct soap *soap)
{	tt__RecordingJobStateInformationExtension *_p = soap_new_tt__RecordingJobStateInformationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__RecordingJobStateInformationExtension * soap_new_set_tt__RecordingJobStateInformationExtension(
	struct soap *soap)
{	tt__RecordingJobStateInformationExtension *_p = soap_new_tt__RecordingJobStateInformationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__RecordingJobStateInformationExtension
#define soap_write_tt__RecordingJobStateInformationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:RecordingJobStateInformationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobStateInformationExtension * SOAP_FMAC4 soap_get_tt__RecordingJobStateInformationExtension(struct soap*, tt__RecordingJobStateInformationExtension *, const char*, const char*);

#ifndef soap_read_tt__RecordingJobStateInformationExtension
#define soap_read_tt__RecordingJobStateInformationExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RecordingJobStateInformationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RecordingJobStateInformation
#define SOAP_TYPE_tt__RecordingJobStateInformation (722)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingJobStateInformation(struct soap*, const char*, int, const tt__RecordingJobStateInformation *, const char*);
SOAP_FMAC3 tt__RecordingJobStateInformation * SOAP_FMAC4 soap_in_tt__RecordingJobStateInformation(struct soap*, const char*, tt__RecordingJobStateInformation *, const char*);
SOAP_FMAC1 tt__RecordingJobStateInformation * SOAP_FMAC2 soap_instantiate_tt__RecordingJobStateInformation(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingJobStateInformation * soap_new_tt__RecordingJobStateInformation(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingJobStateInformation(soap, n, NULL, NULL, NULL); }

inline tt__RecordingJobStateInformation * soap_new_req_tt__RecordingJobStateInformation(
	struct soap *soap,
	const std::string& RecordingToken,
	const std::string& State)
{	tt__RecordingJobStateInformation *_p = soap_new_tt__RecordingJobStateInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RecordingJobStateInformation::RecordingToken = RecordingToken;
		_p->tt__RecordingJobStateInformation::State = State;
	}
	return _p;
}

inline tt__RecordingJobStateInformation * soap_new_set_tt__RecordingJobStateInformation(
	struct soap *soap,
	const std::string& RecordingToken,
	const std::string& State,
	const std::vector<tt__RecordingJobStateSource *> & Sources,
	tt__RecordingJobStateInformationExtension *Extension)
{	tt__RecordingJobStateInformation *_p = soap_new_tt__RecordingJobStateInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RecordingJobStateInformation::RecordingToken = RecordingToken;
		_p->tt__RecordingJobStateInformation::State = State;
		_p->tt__RecordingJobStateInformation::Sources = Sources;
		_p->tt__RecordingJobStateInformation::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__RecordingJobStateInformation
#define soap_write_tt__RecordingJobStateInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:RecordingJobStateInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobStateInformation * SOAP_FMAC4 soap_get_tt__RecordingJobStateInformation(struct soap*, tt__RecordingJobStateInformation *, const char*, const char*);

#ifndef soap_read_tt__RecordingJobStateInformation
#define soap_read_tt__RecordingJobStateInformation(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RecordingJobStateInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RecordingJobTrack
#define SOAP_TYPE_tt__RecordingJobTrack (721)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingJobTrack(struct soap*, const char*, int, const tt__RecordingJobTrack *, const char*);
SOAP_FMAC3 tt__RecordingJobTrack * SOAP_FMAC4 soap_in_tt__RecordingJobTrack(struct soap*, const char*, tt__RecordingJobTrack *, const char*);
SOAP_FMAC1 tt__RecordingJobTrack * SOAP_FMAC2 soap_instantiate_tt__RecordingJobTrack(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingJobTrack * soap_new_tt__RecordingJobTrack(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingJobTrack(soap, n, NULL, NULL, NULL); }

inline tt__RecordingJobTrack * soap_new_req_tt__RecordingJobTrack(
	struct soap *soap,
	const std::string& SourceTag,
	const std::string& Destination)
{	tt__RecordingJobTrack *_p = soap_new_tt__RecordingJobTrack(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RecordingJobTrack::SourceTag = SourceTag;
		_p->tt__RecordingJobTrack::Destination = Destination;
	}
	return _p;
}

inline tt__RecordingJobTrack * soap_new_set_tt__RecordingJobTrack(
	struct soap *soap,
	const std::string& SourceTag,
	const std::string& Destination)
{	tt__RecordingJobTrack *_p = soap_new_tt__RecordingJobTrack(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RecordingJobTrack::SourceTag = SourceTag;
		_p->tt__RecordingJobTrack::Destination = Destination;
	}
	return _p;
}

#ifndef soap_write_tt__RecordingJobTrack
#define soap_write_tt__RecordingJobTrack(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:RecordingJobTrack", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobTrack * SOAP_FMAC4 soap_get_tt__RecordingJobTrack(struct soap*, tt__RecordingJobTrack *, const char*, const char*);

#ifndef soap_read_tt__RecordingJobTrack
#define soap_read_tt__RecordingJobTrack(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RecordingJobTrack(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RecordingJobSourceExtension
#define SOAP_TYPE_tt__RecordingJobSourceExtension (720)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingJobSourceExtension(struct soap*, const char*, int, const tt__RecordingJobSourceExtension *, const char*);
SOAP_FMAC3 tt__RecordingJobSourceExtension * SOAP_FMAC4 soap_in_tt__RecordingJobSourceExtension(struct soap*, const char*, tt__RecordingJobSourceExtension *, const char*);
SOAP_FMAC1 tt__RecordingJobSourceExtension * SOAP_FMAC2 soap_instantiate_tt__RecordingJobSourceExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingJobSourceExtension * soap_new_tt__RecordingJobSourceExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingJobSourceExtension(soap, n, NULL, NULL, NULL); }

inline tt__RecordingJobSourceExtension * soap_new_req_tt__RecordingJobSourceExtension(
	struct soap *soap)
{	tt__RecordingJobSourceExtension *_p = soap_new_tt__RecordingJobSourceExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__RecordingJobSourceExtension * soap_new_set_tt__RecordingJobSourceExtension(
	struct soap *soap)
{	tt__RecordingJobSourceExtension *_p = soap_new_tt__RecordingJobSourceExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__RecordingJobSourceExtension
#define soap_write_tt__RecordingJobSourceExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:RecordingJobSourceExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobSourceExtension * SOAP_FMAC4 soap_get_tt__RecordingJobSourceExtension(struct soap*, tt__RecordingJobSourceExtension *, const char*, const char*);

#ifndef soap_read_tt__RecordingJobSourceExtension
#define soap_read_tt__RecordingJobSourceExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RecordingJobSourceExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RecordingJobSource
#define SOAP_TYPE_tt__RecordingJobSource (719)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingJobSource(struct soap*, const char*, int, const tt__RecordingJobSource *, const char*);
SOAP_FMAC3 tt__RecordingJobSource * SOAP_FMAC4 soap_in_tt__RecordingJobSource(struct soap*, const char*, tt__RecordingJobSource *, const char*);
SOAP_FMAC1 tt__RecordingJobSource * SOAP_FMAC2 soap_instantiate_tt__RecordingJobSource(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingJobSource * soap_new_tt__RecordingJobSource(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingJobSource(soap, n, NULL, NULL, NULL); }

inline tt__RecordingJobSource * soap_new_req_tt__RecordingJobSource(
	struct soap *soap)
{	tt__RecordingJobSource *_p = soap_new_tt__RecordingJobSource(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__RecordingJobSource * soap_new_set_tt__RecordingJobSource(
	struct soap *soap,
	tt__SourceReference *SourceToken,
	bool *AutoCreateReceiver,
	const std::vector<tt__RecordingJobTrack *> & Tracks,
	tt__RecordingJobSourceExtension *Extension)
{	tt__RecordingJobSource *_p = soap_new_tt__RecordingJobSource(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RecordingJobSource::SourceToken = SourceToken;
		_p->tt__RecordingJobSource::AutoCreateReceiver = AutoCreateReceiver;
		_p->tt__RecordingJobSource::Tracks = Tracks;
		_p->tt__RecordingJobSource::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__RecordingJobSource
#define soap_write_tt__RecordingJobSource(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:RecordingJobSource", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobSource * SOAP_FMAC4 soap_get_tt__RecordingJobSource(struct soap*, tt__RecordingJobSource *, const char*, const char*);

#ifndef soap_read_tt__RecordingJobSource
#define soap_read_tt__RecordingJobSource(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RecordingJobSource(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RecordingJobConfigurationExtension
#define SOAP_TYPE_tt__RecordingJobConfigurationExtension (718)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingJobConfigurationExtension(struct soap*, const char*, int, const tt__RecordingJobConfigurationExtension *, const char*);
SOAP_FMAC3 tt__RecordingJobConfigurationExtension * SOAP_FMAC4 soap_in_tt__RecordingJobConfigurationExtension(struct soap*, const char*, tt__RecordingJobConfigurationExtension *, const char*);
SOAP_FMAC1 tt__RecordingJobConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__RecordingJobConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingJobConfigurationExtension * soap_new_tt__RecordingJobConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingJobConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__RecordingJobConfigurationExtension * soap_new_req_tt__RecordingJobConfigurationExtension(
	struct soap *soap)
{	tt__RecordingJobConfigurationExtension *_p = soap_new_tt__RecordingJobConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__RecordingJobConfigurationExtension * soap_new_set_tt__RecordingJobConfigurationExtension(
	struct soap *soap)
{	tt__RecordingJobConfigurationExtension *_p = soap_new_tt__RecordingJobConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__RecordingJobConfigurationExtension
#define soap_write_tt__RecordingJobConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:RecordingJobConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobConfigurationExtension * SOAP_FMAC4 soap_get_tt__RecordingJobConfigurationExtension(struct soap*, tt__RecordingJobConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__RecordingJobConfigurationExtension
#define soap_read_tt__RecordingJobConfigurationExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RecordingJobConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RecordingJobConfiguration
#define SOAP_TYPE_tt__RecordingJobConfiguration (717)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingJobConfiguration(struct soap*, const char*, int, const tt__RecordingJobConfiguration *, const char*);
SOAP_FMAC3 tt__RecordingJobConfiguration * SOAP_FMAC4 soap_in_tt__RecordingJobConfiguration(struct soap*, const char*, tt__RecordingJobConfiguration *, const char*);
SOAP_FMAC1 tt__RecordingJobConfiguration * SOAP_FMAC2 soap_instantiate_tt__RecordingJobConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingJobConfiguration * soap_new_tt__RecordingJobConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingJobConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__RecordingJobConfiguration * soap_new_req_tt__RecordingJobConfiguration(
	struct soap *soap,
	const std::string& RecordingToken,
	const std::string& Mode,
	int Priority)
{	tt__RecordingJobConfiguration *_p = soap_new_tt__RecordingJobConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RecordingJobConfiguration::RecordingToken = RecordingToken;
		_p->tt__RecordingJobConfiguration::Mode = Mode;
		_p->tt__RecordingJobConfiguration::Priority = Priority;
	}
	return _p;
}

inline tt__RecordingJobConfiguration * soap_new_set_tt__RecordingJobConfiguration(
	struct soap *soap,
	const std::string& RecordingToken,
	const std::string& Mode,
	int Priority,
	const std::vector<tt__RecordingJobSource *> & Source,
	tt__RecordingJobConfigurationExtension *Extension)
{	tt__RecordingJobConfiguration *_p = soap_new_tt__RecordingJobConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RecordingJobConfiguration::RecordingToken = RecordingToken;
		_p->tt__RecordingJobConfiguration::Mode = Mode;
		_p->tt__RecordingJobConfiguration::Priority = Priority;
		_p->tt__RecordingJobConfiguration::Source = Source;
		_p->tt__RecordingJobConfiguration::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__RecordingJobConfiguration
#define soap_write_tt__RecordingJobConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:RecordingJobConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobConfiguration * SOAP_FMAC4 soap_get_tt__RecordingJobConfiguration(struct soap*, tt__RecordingJobConfiguration *, const char*, const char*);

#ifndef soap_read_tt__RecordingJobConfiguration
#define soap_read_tt__RecordingJobConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RecordingJobConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__GetTracksResponseItem
#define SOAP_TYPE_tt__GetTracksResponseItem (716)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__GetTracksResponseItem(struct soap*, const char*, int, const tt__GetTracksResponseItem *, const char*);
SOAP_FMAC3 tt__GetTracksResponseItem * SOAP_FMAC4 soap_in_tt__GetTracksResponseItem(struct soap*, const char*, tt__GetTracksResponseItem *, const char*);
SOAP_FMAC1 tt__GetTracksResponseItem * SOAP_FMAC2 soap_instantiate_tt__GetTracksResponseItem(struct soap*, int, const char*, const char*, size_t*);

inline tt__GetTracksResponseItem * soap_new_tt__GetTracksResponseItem(struct soap *soap, int n = -1) { return soap_instantiate_tt__GetTracksResponseItem(soap, n, NULL, NULL, NULL); }

inline tt__GetTracksResponseItem * soap_new_req_tt__GetTracksResponseItem(
	struct soap *soap,
	const std::string& TrackToken,
	tt__TrackConfiguration *Configuration)
{	tt__GetTracksResponseItem *_p = soap_new_tt__GetTracksResponseItem(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__GetTracksResponseItem::TrackToken = TrackToken;
		_p->tt__GetTracksResponseItem::Configuration = Configuration;
	}
	return _p;
}

inline tt__GetTracksResponseItem * soap_new_set_tt__GetTracksResponseItem(
	struct soap *soap,
	const std::string& TrackToken,
	tt__TrackConfiguration *Configuration)
{	tt__GetTracksResponseItem *_p = soap_new_tt__GetTracksResponseItem(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__GetTracksResponseItem::TrackToken = TrackToken;
		_p->tt__GetTracksResponseItem::Configuration = Configuration;
	}
	return _p;
}

#ifndef soap_write_tt__GetTracksResponseItem
#define soap_write_tt__GetTracksResponseItem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:GetTracksResponseItem", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__GetTracksResponseItem * SOAP_FMAC4 soap_get_tt__GetTracksResponseItem(struct soap*, tt__GetTracksResponseItem *, const char*, const char*);

#ifndef soap_read_tt__GetTracksResponseItem
#define soap_read_tt__GetTracksResponseItem(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__GetTracksResponseItem(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__GetTracksResponseList
#define SOAP_TYPE_tt__GetTracksResponseList (715)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__GetTracksResponseList(struct soap*, const char*, int, const tt__GetTracksResponseList *, const char*);
SOAP_FMAC3 tt__GetTracksResponseList * SOAP_FMAC4 soap_in_tt__GetTracksResponseList(struct soap*, const char*, tt__GetTracksResponseList *, const char*);
SOAP_FMAC1 tt__GetTracksResponseList * SOAP_FMAC2 soap_instantiate_tt__GetTracksResponseList(struct soap*, int, const char*, const char*, size_t*);

inline tt__GetTracksResponseList * soap_new_tt__GetTracksResponseList(struct soap *soap, int n = -1) { return soap_instantiate_tt__GetTracksResponseList(soap, n, NULL, NULL, NULL); }

inline tt__GetTracksResponseList * soap_new_req_tt__GetTracksResponseList(
	struct soap *soap)
{	tt__GetTracksResponseList *_p = soap_new_tt__GetTracksResponseList(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__GetTracksResponseList * soap_new_set_tt__GetTracksResponseList(
	struct soap *soap,
	const std::vector<tt__GetTracksResponseItem *> & Track)
{	tt__GetTracksResponseList *_p = soap_new_tt__GetTracksResponseList(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__GetTracksResponseList::Track = Track;
	}
	return _p;
}

#ifndef soap_write_tt__GetTracksResponseList
#define soap_write_tt__GetTracksResponseList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:GetTracksResponseList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__GetTracksResponseList * SOAP_FMAC4 soap_get_tt__GetTracksResponseList(struct soap*, tt__GetTracksResponseList *, const char*, const char*);

#ifndef soap_read_tt__GetTracksResponseList
#define soap_read_tt__GetTracksResponseList(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__GetTracksResponseList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__GetRecordingsResponseItem
#define SOAP_TYPE_tt__GetRecordingsResponseItem (714)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__GetRecordingsResponseItem(struct soap*, const char*, int, const tt__GetRecordingsResponseItem *, const char*);
SOAP_FMAC3 tt__GetRecordingsResponseItem * SOAP_FMAC4 soap_in_tt__GetRecordingsResponseItem(struct soap*, const char*, tt__GetRecordingsResponseItem *, const char*);
SOAP_FMAC1 tt__GetRecordingsResponseItem * SOAP_FMAC2 soap_instantiate_tt__GetRecordingsResponseItem(struct soap*, int, const char*, const char*, size_t*);

inline tt__GetRecordingsResponseItem * soap_new_tt__GetRecordingsResponseItem(struct soap *soap, int n = -1) { return soap_instantiate_tt__GetRecordingsResponseItem(soap, n, NULL, NULL, NULL); }

inline tt__GetRecordingsResponseItem * soap_new_req_tt__GetRecordingsResponseItem(
	struct soap *soap,
	const std::string& RecordingToken,
	tt__RecordingConfiguration *Configuration,
	tt__GetTracksResponseList *Tracks)
{	tt__GetRecordingsResponseItem *_p = soap_new_tt__GetRecordingsResponseItem(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__GetRecordingsResponseItem::RecordingToken = RecordingToken;
		_p->tt__GetRecordingsResponseItem::Configuration = Configuration;
		_p->tt__GetRecordingsResponseItem::Tracks = Tracks;
	}
	return _p;
}

inline tt__GetRecordingsResponseItem * soap_new_set_tt__GetRecordingsResponseItem(
	struct soap *soap,
	const std::string& RecordingToken,
	tt__RecordingConfiguration *Configuration,
	tt__GetTracksResponseList *Tracks)
{	tt__GetRecordingsResponseItem *_p = soap_new_tt__GetRecordingsResponseItem(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__GetRecordingsResponseItem::RecordingToken = RecordingToken;
		_p->tt__GetRecordingsResponseItem::Configuration = Configuration;
		_p->tt__GetRecordingsResponseItem::Tracks = Tracks;
	}
	return _p;
}

#ifndef soap_write_tt__GetRecordingsResponseItem
#define soap_write_tt__GetRecordingsResponseItem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:GetRecordingsResponseItem", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__GetRecordingsResponseItem * SOAP_FMAC4 soap_get_tt__GetRecordingsResponseItem(struct soap*, tt__GetRecordingsResponseItem *, const char*, const char*);

#ifndef soap_read_tt__GetRecordingsResponseItem
#define soap_read_tt__GetRecordingsResponseItem(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__GetRecordingsResponseItem(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__TrackConfiguration
#define SOAP_TYPE_tt__TrackConfiguration (713)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__TrackConfiguration(struct soap*, const char*, int, const tt__TrackConfiguration *, const char*);
SOAP_FMAC3 tt__TrackConfiguration * SOAP_FMAC4 soap_in_tt__TrackConfiguration(struct soap*, const char*, tt__TrackConfiguration *, const char*);
SOAP_FMAC1 tt__TrackConfiguration * SOAP_FMAC2 soap_instantiate_tt__TrackConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__TrackConfiguration * soap_new_tt__TrackConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__TrackConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__TrackConfiguration * soap_new_req_tt__TrackConfiguration(
	struct soap *soap,
	enum tt__TrackType TrackType,
	const std::string& Description)
{	tt__TrackConfiguration *_p = soap_new_tt__TrackConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__TrackConfiguration::TrackType = TrackType;
		_p->tt__TrackConfiguration::Description = Description;
	}
	return _p;
}

inline tt__TrackConfiguration * soap_new_set_tt__TrackConfiguration(
	struct soap *soap,
	enum tt__TrackType TrackType,
	const std::string& Description)
{	tt__TrackConfiguration *_p = soap_new_tt__TrackConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__TrackConfiguration::TrackType = TrackType;
		_p->tt__TrackConfiguration::Description = Description;
	}
	return _p;
}

#ifndef soap_write_tt__TrackConfiguration
#define soap_write_tt__TrackConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:TrackConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__TrackConfiguration * SOAP_FMAC4 soap_get_tt__TrackConfiguration(struct soap*, tt__TrackConfiguration *, const char*, const char*);

#ifndef soap_read_tt__TrackConfiguration
#define soap_read_tt__TrackConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__TrackConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RecordingConfiguration
#define SOAP_TYPE_tt__RecordingConfiguration (712)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingConfiguration(struct soap*, const char*, int, const tt__RecordingConfiguration *, const char*);
SOAP_FMAC3 tt__RecordingConfiguration * SOAP_FMAC4 soap_in_tt__RecordingConfiguration(struct soap*, const char*, tt__RecordingConfiguration *, const char*);
SOAP_FMAC1 tt__RecordingConfiguration * SOAP_FMAC2 soap_instantiate_tt__RecordingConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingConfiguration * soap_new_tt__RecordingConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__RecordingConfiguration * soap_new_req_tt__RecordingConfiguration(
	struct soap *soap,
	tt__RecordingSourceInformation *Source,
	const std::string& Content,
	LONG64 MaximumRetentionTime)
{	tt__RecordingConfiguration *_p = soap_new_tt__RecordingConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RecordingConfiguration::Source = Source;
		_p->tt__RecordingConfiguration::Content = Content;
		_p->tt__RecordingConfiguration::MaximumRetentionTime = MaximumRetentionTime;
	}
	return _p;
}

inline tt__RecordingConfiguration * soap_new_set_tt__RecordingConfiguration(
	struct soap *soap,
	tt__RecordingSourceInformation *Source,
	const std::string& Content,
	LONG64 MaximumRetentionTime)
{	tt__RecordingConfiguration *_p = soap_new_tt__RecordingConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RecordingConfiguration::Source = Source;
		_p->tt__RecordingConfiguration::Content = Content;
		_p->tt__RecordingConfiguration::MaximumRetentionTime = MaximumRetentionTime;
	}
	return _p;
}

#ifndef soap_write_tt__RecordingConfiguration
#define soap_write_tt__RecordingConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:RecordingConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingConfiguration * SOAP_FMAC4 soap_get_tt__RecordingConfiguration(struct soap*, tt__RecordingConfiguration *, const char*, const char*);

#ifndef soap_read_tt__RecordingConfiguration
#define soap_read_tt__RecordingConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RecordingConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__MetadataAttributes
#define SOAP_TYPE_tt__MetadataAttributes (711)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MetadataAttributes(struct soap*, const char*, int, const tt__MetadataAttributes *, const char*);
SOAP_FMAC3 tt__MetadataAttributes * SOAP_FMAC4 soap_in_tt__MetadataAttributes(struct soap*, const char*, tt__MetadataAttributes *, const char*);
SOAP_FMAC1 tt__MetadataAttributes * SOAP_FMAC2 soap_instantiate_tt__MetadataAttributes(struct soap*, int, const char*, const char*, size_t*);

inline tt__MetadataAttributes * soap_new_tt__MetadataAttributes(struct soap *soap, int n = -1) { return soap_instantiate_tt__MetadataAttributes(soap, n, NULL, NULL, NULL); }

inline tt__MetadataAttributes * soap_new_req_tt__MetadataAttributes(
	struct soap *soap,
	bool CanContainPTZ,
	bool CanContainAnalytics,
	bool CanContainNotifications)
{	tt__MetadataAttributes *_p = soap_new_tt__MetadataAttributes(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__MetadataAttributes::CanContainPTZ = CanContainPTZ;
		_p->tt__MetadataAttributes::CanContainAnalytics = CanContainAnalytics;
		_p->tt__MetadataAttributes::CanContainNotifications = CanContainNotifications;
	}
	return _p;
}

inline tt__MetadataAttributes * soap_new_set_tt__MetadataAttributes(
	struct soap *soap,
	bool CanContainPTZ,
	bool CanContainAnalytics,
	bool CanContainNotifications,
	std::string *PtzSpaces)
{	tt__MetadataAttributes *_p = soap_new_tt__MetadataAttributes(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__MetadataAttributes::CanContainPTZ = CanContainPTZ;
		_p->tt__MetadataAttributes::CanContainAnalytics = CanContainAnalytics;
		_p->tt__MetadataAttributes::CanContainNotifications = CanContainNotifications;
		_p->tt__MetadataAttributes::PtzSpaces = PtzSpaces;
	}
	return _p;
}

#ifndef soap_write_tt__MetadataAttributes
#define soap_write_tt__MetadataAttributes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:MetadataAttributes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataAttributes * SOAP_FMAC4 soap_get_tt__MetadataAttributes(struct soap*, tt__MetadataAttributes *, const char*, const char*);

#ifndef soap_read_tt__MetadataAttributes
#define soap_read_tt__MetadataAttributes(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MetadataAttributes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AudioAttributes
#define SOAP_TYPE_tt__AudioAttributes (710)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioAttributes(struct soap*, const char*, int, const tt__AudioAttributes *, const char*);
SOAP_FMAC3 tt__AudioAttributes * SOAP_FMAC4 soap_in_tt__AudioAttributes(struct soap*, const char*, tt__AudioAttributes *, const char*);
SOAP_FMAC1 tt__AudioAttributes * SOAP_FMAC2 soap_instantiate_tt__AudioAttributes(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioAttributes * soap_new_tt__AudioAttributes(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioAttributes(soap, n, NULL, NULL, NULL); }

inline tt__AudioAttributes * soap_new_req_tt__AudioAttributes(
	struct soap *soap,
	const std::string& Encoding,
	int Samplerate)
{	tt__AudioAttributes *_p = soap_new_tt__AudioAttributes(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AudioAttributes::Encoding = Encoding;
		_p->tt__AudioAttributes::Samplerate = Samplerate;
	}
	return _p;
}

inline tt__AudioAttributes * soap_new_set_tt__AudioAttributes(
	struct soap *soap,
	int *Bitrate,
	const std::string& Encoding,
	int Samplerate)
{	tt__AudioAttributes *_p = soap_new_tt__AudioAttributes(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AudioAttributes::Bitrate = Bitrate;
		_p->tt__AudioAttributes::Encoding = Encoding;
		_p->tt__AudioAttributes::Samplerate = Samplerate;
	}
	return _p;
}

#ifndef soap_write_tt__AudioAttributes
#define soap_write_tt__AudioAttributes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AudioAttributes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioAttributes * SOAP_FMAC4 soap_get_tt__AudioAttributes(struct soap*, tt__AudioAttributes *, const char*, const char*);

#ifndef soap_read_tt__AudioAttributes
#define soap_read_tt__AudioAttributes(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AudioAttributes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoAttributes
#define SOAP_TYPE_tt__VideoAttributes (709)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoAttributes(struct soap*, const char*, int, const tt__VideoAttributes *, const char*);
SOAP_FMAC3 tt__VideoAttributes * SOAP_FMAC4 soap_in_tt__VideoAttributes(struct soap*, const char*, tt__VideoAttributes *, const char*);
SOAP_FMAC1 tt__VideoAttributes * SOAP_FMAC2 soap_instantiate_tt__VideoAttributes(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoAttributes * soap_new_tt__VideoAttributes(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoAttributes(soap, n, NULL, NULL, NULL); }

inline tt__VideoAttributes * soap_new_req_tt__VideoAttributes(
	struct soap *soap,
	int Width,
	int Height,
	const std::string& Encoding,
	float Framerate)
{	tt__VideoAttributes *_p = soap_new_tt__VideoAttributes(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoAttributes::Width = Width;
		_p->tt__VideoAttributes::Height = Height;
		_p->tt__VideoAttributes::Encoding = Encoding;
		_p->tt__VideoAttributes::Framerate = Framerate;
	}
	return _p;
}

inline tt__VideoAttributes * soap_new_set_tt__VideoAttributes(
	struct soap *soap,
	int *Bitrate,
	int Width,
	int Height,
	const std::string& Encoding,
	float Framerate)
{	tt__VideoAttributes *_p = soap_new_tt__VideoAttributes(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoAttributes::Bitrate = Bitrate;
		_p->tt__VideoAttributes::Width = Width;
		_p->tt__VideoAttributes::Height = Height;
		_p->tt__VideoAttributes::Encoding = Encoding;
		_p->tt__VideoAttributes::Framerate = Framerate;
	}
	return _p;
}

#ifndef soap_write_tt__VideoAttributes
#define soap_write_tt__VideoAttributes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:VideoAttributes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoAttributes * SOAP_FMAC4 soap_get_tt__VideoAttributes(struct soap*, tt__VideoAttributes *, const char*, const char*);

#ifndef soap_read_tt__VideoAttributes
#define soap_read_tt__VideoAttributes(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoAttributes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__TrackAttributesExtension
#define SOAP_TYPE_tt__TrackAttributesExtension (708)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__TrackAttributesExtension(struct soap*, const char*, int, const tt__TrackAttributesExtension *, const char*);
SOAP_FMAC3 tt__TrackAttributesExtension * SOAP_FMAC4 soap_in_tt__TrackAttributesExtension(struct soap*, const char*, tt__TrackAttributesExtension *, const char*);
SOAP_FMAC1 tt__TrackAttributesExtension * SOAP_FMAC2 soap_instantiate_tt__TrackAttributesExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__TrackAttributesExtension * soap_new_tt__TrackAttributesExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__TrackAttributesExtension(soap, n, NULL, NULL, NULL); }

inline tt__TrackAttributesExtension * soap_new_req_tt__TrackAttributesExtension(
	struct soap *soap)
{	tt__TrackAttributesExtension *_p = soap_new_tt__TrackAttributesExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__TrackAttributesExtension * soap_new_set_tt__TrackAttributesExtension(
	struct soap *soap)
{	tt__TrackAttributesExtension *_p = soap_new_tt__TrackAttributesExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__TrackAttributesExtension
#define soap_write_tt__TrackAttributesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:TrackAttributesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__TrackAttributesExtension * SOAP_FMAC4 soap_get_tt__TrackAttributesExtension(struct soap*, tt__TrackAttributesExtension *, const char*, const char*);

#ifndef soap_read_tt__TrackAttributesExtension
#define soap_read_tt__TrackAttributesExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__TrackAttributesExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__TrackAttributes
#define SOAP_TYPE_tt__TrackAttributes (707)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__TrackAttributes(struct soap*, const char*, int, const tt__TrackAttributes *, const char*);
SOAP_FMAC3 tt__TrackAttributes * SOAP_FMAC4 soap_in_tt__TrackAttributes(struct soap*, const char*, tt__TrackAttributes *, const char*);
SOAP_FMAC1 tt__TrackAttributes * SOAP_FMAC2 soap_instantiate_tt__TrackAttributes(struct soap*, int, const char*, const char*, size_t*);

inline tt__TrackAttributes * soap_new_tt__TrackAttributes(struct soap *soap, int n = -1) { return soap_instantiate_tt__TrackAttributes(soap, n, NULL, NULL, NULL); }

inline tt__TrackAttributes * soap_new_req_tt__TrackAttributes(
	struct soap *soap,
	tt__TrackInformation *TrackInformation)
{	tt__TrackAttributes *_p = soap_new_tt__TrackAttributes(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__TrackAttributes::TrackInformation = TrackInformation;
	}
	return _p;
}

inline tt__TrackAttributes * soap_new_set_tt__TrackAttributes(
	struct soap *soap,
	tt__TrackInformation *TrackInformation,
	tt__VideoAttributes *VideoAttributes,
	tt__AudioAttributes *AudioAttributes,
	tt__MetadataAttributes *MetadataAttributes,
	tt__TrackAttributesExtension *Extension)
{	tt__TrackAttributes *_p = soap_new_tt__TrackAttributes(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__TrackAttributes::TrackInformation = TrackInformation;
		_p->tt__TrackAttributes::VideoAttributes = VideoAttributes;
		_p->tt__TrackAttributes::AudioAttributes = AudioAttributes;
		_p->tt__TrackAttributes::MetadataAttributes = MetadataAttributes;
		_p->tt__TrackAttributes::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__TrackAttributes
#define soap_write_tt__TrackAttributes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:TrackAttributes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__TrackAttributes * SOAP_FMAC4 soap_get_tt__TrackAttributes(struct soap*, tt__TrackAttributes *, const char*, const char*);

#ifndef soap_read_tt__TrackAttributes
#define soap_read_tt__TrackAttributes(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__TrackAttributes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__MediaAttributes
#define SOAP_TYPE_tt__MediaAttributes (706)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MediaAttributes(struct soap*, const char*, int, const tt__MediaAttributes *, const char*);
SOAP_FMAC3 tt__MediaAttributes * SOAP_FMAC4 soap_in_tt__MediaAttributes(struct soap*, const char*, tt__MediaAttributes *, const char*);
SOAP_FMAC1 tt__MediaAttributes * SOAP_FMAC2 soap_instantiate_tt__MediaAttributes(struct soap*, int, const char*, const char*, size_t*);

inline tt__MediaAttributes * soap_new_tt__MediaAttributes(struct soap *soap, int n = -1) { return soap_instantiate_tt__MediaAttributes(soap, n, NULL, NULL, NULL); }

inline tt__MediaAttributes * soap_new_req_tt__MediaAttributes(
	struct soap *soap,
	const std::string& RecordingToken,
	time_t From,
	time_t Until)
{	tt__MediaAttributes *_p = soap_new_tt__MediaAttributes(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__MediaAttributes::RecordingToken = RecordingToken;
		_p->tt__MediaAttributes::From = From;
		_p->tt__MediaAttributes::Until = Until;
	}
	return _p;
}

inline tt__MediaAttributes * soap_new_set_tt__MediaAttributes(
	struct soap *soap,
	const std::string& RecordingToken,
	const std::vector<tt__TrackAttributes *> & TrackAttributes,
	time_t From,
	time_t Until)
{	tt__MediaAttributes *_p = soap_new_tt__MediaAttributes(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__MediaAttributes::RecordingToken = RecordingToken;
		_p->tt__MediaAttributes::TrackAttributes = TrackAttributes;
		_p->tt__MediaAttributes::From = From;
		_p->tt__MediaAttributes::Until = Until;
	}
	return _p;
}

#ifndef soap_write_tt__MediaAttributes
#define soap_write_tt__MediaAttributes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:MediaAttributes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MediaAttributes * SOAP_FMAC4 soap_get_tt__MediaAttributes(struct soap*, tt__MediaAttributes *, const char*, const char*);

#ifndef soap_read_tt__MediaAttributes
#define soap_read_tt__MediaAttributes(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MediaAttributes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__TrackInformation
#define SOAP_TYPE_tt__TrackInformation (705)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__TrackInformation(struct soap*, const char*, int, const tt__TrackInformation *, const char*);
SOAP_FMAC3 tt__TrackInformation * SOAP_FMAC4 soap_in_tt__TrackInformation(struct soap*, const char*, tt__TrackInformation *, const char*);
SOAP_FMAC1 tt__TrackInformation * SOAP_FMAC2 soap_instantiate_tt__TrackInformation(struct soap*, int, const char*, const char*, size_t*);

inline tt__TrackInformation * soap_new_tt__TrackInformation(struct soap *soap, int n = -1) { return soap_instantiate_tt__TrackInformation(soap, n, NULL, NULL, NULL); }

inline tt__TrackInformation * soap_new_req_tt__TrackInformation(
	struct soap *soap,
	const std::string& TrackToken,
	enum tt__TrackType TrackType,
	const std::string& Description,
	time_t DataFrom,
	time_t DataTo)
{	tt__TrackInformation *_p = soap_new_tt__TrackInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__TrackInformation::TrackToken = TrackToken;
		_p->tt__TrackInformation::TrackType = TrackType;
		_p->tt__TrackInformation::Description = Description;
		_p->tt__TrackInformation::DataFrom = DataFrom;
		_p->tt__TrackInformation::DataTo = DataTo;
	}
	return _p;
}

inline tt__TrackInformation * soap_new_set_tt__TrackInformation(
	struct soap *soap,
	const std::string& TrackToken,
	enum tt__TrackType TrackType,
	const std::string& Description,
	time_t DataFrom,
	time_t DataTo)
{	tt__TrackInformation *_p = soap_new_tt__TrackInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__TrackInformation::TrackToken = TrackToken;
		_p->tt__TrackInformation::TrackType = TrackType;
		_p->tt__TrackInformation::Description = Description;
		_p->tt__TrackInformation::DataFrom = DataFrom;
		_p->tt__TrackInformation::DataTo = DataTo;
	}
	return _p;
}

#ifndef soap_write_tt__TrackInformation
#define soap_write_tt__TrackInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:TrackInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__TrackInformation * SOAP_FMAC4 soap_get_tt__TrackInformation(struct soap*, tt__TrackInformation *, const char*, const char*);

#ifndef soap_read_tt__TrackInformation
#define soap_read_tt__TrackInformation(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__TrackInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RecordingSourceInformation
#define SOAP_TYPE_tt__RecordingSourceInformation (704)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingSourceInformation(struct soap*, const char*, int, const tt__RecordingSourceInformation *, const char*);
SOAP_FMAC3 tt__RecordingSourceInformation * SOAP_FMAC4 soap_in_tt__RecordingSourceInformation(struct soap*, const char*, tt__RecordingSourceInformation *, const char*);
SOAP_FMAC1 tt__RecordingSourceInformation * SOAP_FMAC2 soap_instantiate_tt__RecordingSourceInformation(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingSourceInformation * soap_new_tt__RecordingSourceInformation(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingSourceInformation(soap, n, NULL, NULL, NULL); }

inline tt__RecordingSourceInformation * soap_new_req_tt__RecordingSourceInformation(
	struct soap *soap,
	const std::string& SourceId,
	const std::string& Name,
	const std::string& Location,
	const std::string& Description,
	const std::string& Address)
{	tt__RecordingSourceInformation *_p = soap_new_tt__RecordingSourceInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RecordingSourceInformation::SourceId = SourceId;
		_p->tt__RecordingSourceInformation::Name = Name;
		_p->tt__RecordingSourceInformation::Location = Location;
		_p->tt__RecordingSourceInformation::Description = Description;
		_p->tt__RecordingSourceInformation::Address = Address;
	}
	return _p;
}

inline tt__RecordingSourceInformation * soap_new_set_tt__RecordingSourceInformation(
	struct soap *soap,
	const std::string& SourceId,
	const std::string& Name,
	const std::string& Location,
	const std::string& Description,
	const std::string& Address)
{	tt__RecordingSourceInformation *_p = soap_new_tt__RecordingSourceInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RecordingSourceInformation::SourceId = SourceId;
		_p->tt__RecordingSourceInformation::Name = Name;
		_p->tt__RecordingSourceInformation::Location = Location;
		_p->tt__RecordingSourceInformation::Description = Description;
		_p->tt__RecordingSourceInformation::Address = Address;
	}
	return _p;
}

#ifndef soap_write_tt__RecordingSourceInformation
#define soap_write_tt__RecordingSourceInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:RecordingSourceInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingSourceInformation * SOAP_FMAC4 soap_get_tt__RecordingSourceInformation(struct soap*, tt__RecordingSourceInformation *, const char*, const char*);

#ifndef soap_read_tt__RecordingSourceInformation
#define soap_read_tt__RecordingSourceInformation(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RecordingSourceInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RecordingInformation
#define SOAP_TYPE_tt__RecordingInformation (703)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingInformation(struct soap*, const char*, int, const tt__RecordingInformation *, const char*);
SOAP_FMAC3 tt__RecordingInformation * SOAP_FMAC4 soap_in_tt__RecordingInformation(struct soap*, const char*, tt__RecordingInformation *, const char*);
SOAP_FMAC1 tt__RecordingInformation * SOAP_FMAC2 soap_instantiate_tt__RecordingInformation(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingInformation * soap_new_tt__RecordingInformation(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingInformation(soap, n, NULL, NULL, NULL); }

inline tt__RecordingInformation * soap_new_req_tt__RecordingInformation(
	struct soap *soap,
	const std::string& RecordingToken,
	tt__RecordingSourceInformation *Source,
	const std::string& Content,
	enum tt__RecordingStatus RecordingStatus)
{	tt__RecordingInformation *_p = soap_new_tt__RecordingInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RecordingInformation::RecordingToken = RecordingToken;
		_p->tt__RecordingInformation::Source = Source;
		_p->tt__RecordingInformation::Content = Content;
		_p->tt__RecordingInformation::RecordingStatus = RecordingStatus;
	}
	return _p;
}

inline tt__RecordingInformation * soap_new_set_tt__RecordingInformation(
	struct soap *soap,
	const std::string& RecordingToken,
	tt__RecordingSourceInformation *Source,
	time_t *EarliestRecording,
	time_t *LatestRecording,
	const std::string& Content,
	const std::vector<tt__TrackInformation *> & Track,
	enum tt__RecordingStatus RecordingStatus)
{	tt__RecordingInformation *_p = soap_new_tt__RecordingInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RecordingInformation::RecordingToken = RecordingToken;
		_p->tt__RecordingInformation::Source = Source;
		_p->tt__RecordingInformation::EarliestRecording = EarliestRecording;
		_p->tt__RecordingInformation::LatestRecording = LatestRecording;
		_p->tt__RecordingInformation::Content = Content;
		_p->tt__RecordingInformation::Track = Track;
		_p->tt__RecordingInformation::RecordingStatus = RecordingStatus;
	}
	return _p;
}

#ifndef soap_write_tt__RecordingInformation
#define soap_write_tt__RecordingInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:RecordingInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingInformation * SOAP_FMAC4 soap_get_tt__RecordingInformation(struct soap*, tt__RecordingInformation *, const char*, const char*);

#ifndef soap_read_tt__RecordingInformation
#define soap_read_tt__RecordingInformation(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RecordingInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__FindMetadataResult
#define SOAP_TYPE_tt__FindMetadataResult (702)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FindMetadataResult(struct soap*, const char*, int, const tt__FindMetadataResult *, const char*);
SOAP_FMAC3 tt__FindMetadataResult * SOAP_FMAC4 soap_in_tt__FindMetadataResult(struct soap*, const char*, tt__FindMetadataResult *, const char*);
SOAP_FMAC1 tt__FindMetadataResult * SOAP_FMAC2 soap_instantiate_tt__FindMetadataResult(struct soap*, int, const char*, const char*, size_t*);

inline tt__FindMetadataResult * soap_new_tt__FindMetadataResult(struct soap *soap, int n = -1) { return soap_instantiate_tt__FindMetadataResult(soap, n, NULL, NULL, NULL); }

inline tt__FindMetadataResult * soap_new_req_tt__FindMetadataResult(
	struct soap *soap,
	const std::string& RecordingToken,
	const std::string& TrackToken,
	time_t Time)
{	tt__FindMetadataResult *_p = soap_new_tt__FindMetadataResult(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FindMetadataResult::RecordingToken = RecordingToken;
		_p->tt__FindMetadataResult::TrackToken = TrackToken;
		_p->tt__FindMetadataResult::Time = Time;
	}
	return _p;
}

inline tt__FindMetadataResult * soap_new_set_tt__FindMetadataResult(
	struct soap *soap,
	const std::string& RecordingToken,
	const std::string& TrackToken,
	time_t Time)
{	tt__FindMetadataResult *_p = soap_new_tt__FindMetadataResult(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FindMetadataResult::RecordingToken = RecordingToken;
		_p->tt__FindMetadataResult::TrackToken = TrackToken;
		_p->tt__FindMetadataResult::Time = Time;
	}
	return _p;
}

#ifndef soap_write_tt__FindMetadataResult
#define soap_write_tt__FindMetadataResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:FindMetadataResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FindMetadataResult * SOAP_FMAC4 soap_get_tt__FindMetadataResult(struct soap*, tt__FindMetadataResult *, const char*, const char*);

#ifndef soap_read_tt__FindMetadataResult
#define soap_read_tt__FindMetadataResult(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__FindMetadataResult(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__FindMetadataResultList
#define SOAP_TYPE_tt__FindMetadataResultList (701)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FindMetadataResultList(struct soap*, const char*, int, const tt__FindMetadataResultList *, const char*);
SOAP_FMAC3 tt__FindMetadataResultList * SOAP_FMAC4 soap_in_tt__FindMetadataResultList(struct soap*, const char*, tt__FindMetadataResultList *, const char*);
SOAP_FMAC1 tt__FindMetadataResultList * SOAP_FMAC2 soap_instantiate_tt__FindMetadataResultList(struct soap*, int, const char*, const char*, size_t*);

inline tt__FindMetadataResultList * soap_new_tt__FindMetadataResultList(struct soap *soap, int n = -1) { return soap_instantiate_tt__FindMetadataResultList(soap, n, NULL, NULL, NULL); }

inline tt__FindMetadataResultList * soap_new_req_tt__FindMetadataResultList(
	struct soap *soap,
	enum tt__SearchState SearchState)
{	tt__FindMetadataResultList *_p = soap_new_tt__FindMetadataResultList(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FindMetadataResultList::SearchState = SearchState;
	}
	return _p;
}

inline tt__FindMetadataResultList * soap_new_set_tt__FindMetadataResultList(
	struct soap *soap,
	enum tt__SearchState SearchState,
	const std::vector<tt__FindMetadataResult *> & Result)
{	tt__FindMetadataResultList *_p = soap_new_tt__FindMetadataResultList(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FindMetadataResultList::SearchState = SearchState;
		_p->tt__FindMetadataResultList::Result = Result;
	}
	return _p;
}

#ifndef soap_write_tt__FindMetadataResultList
#define soap_write_tt__FindMetadataResultList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:FindMetadataResultList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FindMetadataResultList * SOAP_FMAC4 soap_get_tt__FindMetadataResultList(struct soap*, tt__FindMetadataResultList *, const char*, const char*);

#ifndef soap_read_tt__FindMetadataResultList
#define soap_read_tt__FindMetadataResultList(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__FindMetadataResultList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__FindPTZPositionResult
#define SOAP_TYPE_tt__FindPTZPositionResult (700)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FindPTZPositionResult(struct soap*, const char*, int, const tt__FindPTZPositionResult *, const char*);
SOAP_FMAC3 tt__FindPTZPositionResult * SOAP_FMAC4 soap_in_tt__FindPTZPositionResult(struct soap*, const char*, tt__FindPTZPositionResult *, const char*);
SOAP_FMAC1 tt__FindPTZPositionResult * SOAP_FMAC2 soap_instantiate_tt__FindPTZPositionResult(struct soap*, int, const char*, const char*, size_t*);

inline tt__FindPTZPositionResult * soap_new_tt__FindPTZPositionResult(struct soap *soap, int n = -1) { return soap_instantiate_tt__FindPTZPositionResult(soap, n, NULL, NULL, NULL); }

inline tt__FindPTZPositionResult * soap_new_req_tt__FindPTZPositionResult(
	struct soap *soap,
	const std::string& RecordingToken,
	const std::string& TrackToken,
	time_t Time,
	tt__PTZVector *Position)
{	tt__FindPTZPositionResult *_p = soap_new_tt__FindPTZPositionResult(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FindPTZPositionResult::RecordingToken = RecordingToken;
		_p->tt__FindPTZPositionResult::TrackToken = TrackToken;
		_p->tt__FindPTZPositionResult::Time = Time;
		_p->tt__FindPTZPositionResult::Position = Position;
	}
	return _p;
}

inline tt__FindPTZPositionResult * soap_new_set_tt__FindPTZPositionResult(
	struct soap *soap,
	const std::string& RecordingToken,
	const std::string& TrackToken,
	time_t Time,
	tt__PTZVector *Position)
{	tt__FindPTZPositionResult *_p = soap_new_tt__FindPTZPositionResult(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FindPTZPositionResult::RecordingToken = RecordingToken;
		_p->tt__FindPTZPositionResult::TrackToken = TrackToken;
		_p->tt__FindPTZPositionResult::Time = Time;
		_p->tt__FindPTZPositionResult::Position = Position;
	}
	return _p;
}

#ifndef soap_write_tt__FindPTZPositionResult
#define soap_write_tt__FindPTZPositionResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:FindPTZPositionResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FindPTZPositionResult * SOAP_FMAC4 soap_get_tt__FindPTZPositionResult(struct soap*, tt__FindPTZPositionResult *, const char*, const char*);

#ifndef soap_read_tt__FindPTZPositionResult
#define soap_read_tt__FindPTZPositionResult(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__FindPTZPositionResult(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__FindPTZPositionResultList
#define SOAP_TYPE_tt__FindPTZPositionResultList (699)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FindPTZPositionResultList(struct soap*, const char*, int, const tt__FindPTZPositionResultList *, const char*);
SOAP_FMAC3 tt__FindPTZPositionResultList * SOAP_FMAC4 soap_in_tt__FindPTZPositionResultList(struct soap*, const char*, tt__FindPTZPositionResultList *, const char*);
SOAP_FMAC1 tt__FindPTZPositionResultList * SOAP_FMAC2 soap_instantiate_tt__FindPTZPositionResultList(struct soap*, int, const char*, const char*, size_t*);

inline tt__FindPTZPositionResultList * soap_new_tt__FindPTZPositionResultList(struct soap *soap, int n = -1) { return soap_instantiate_tt__FindPTZPositionResultList(soap, n, NULL, NULL, NULL); }

inline tt__FindPTZPositionResultList * soap_new_req_tt__FindPTZPositionResultList(
	struct soap *soap,
	enum tt__SearchState SearchState)
{	tt__FindPTZPositionResultList *_p = soap_new_tt__FindPTZPositionResultList(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FindPTZPositionResultList::SearchState = SearchState;
	}
	return _p;
}

inline tt__FindPTZPositionResultList * soap_new_set_tt__FindPTZPositionResultList(
	struct soap *soap,
	enum tt__SearchState SearchState,
	const std::vector<tt__FindPTZPositionResult *> & Result)
{	tt__FindPTZPositionResultList *_p = soap_new_tt__FindPTZPositionResultList(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FindPTZPositionResultList::SearchState = SearchState;
		_p->tt__FindPTZPositionResultList::Result = Result;
	}
	return _p;
}

#ifndef soap_write_tt__FindPTZPositionResultList
#define soap_write_tt__FindPTZPositionResultList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:FindPTZPositionResultList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FindPTZPositionResultList * SOAP_FMAC4 soap_get_tt__FindPTZPositionResultList(struct soap*, tt__FindPTZPositionResultList *, const char*, const char*);

#ifndef soap_read_tt__FindPTZPositionResultList
#define soap_read_tt__FindPTZPositionResultList(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__FindPTZPositionResultList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__FindEventResult
#define SOAP_TYPE_tt__FindEventResult (698)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FindEventResult(struct soap*, const char*, int, const tt__FindEventResult *, const char*);
SOAP_FMAC3 tt__FindEventResult * SOAP_FMAC4 soap_in_tt__FindEventResult(struct soap*, const char*, tt__FindEventResult *, const char*);
SOAP_FMAC1 tt__FindEventResult * SOAP_FMAC2 soap_instantiate_tt__FindEventResult(struct soap*, int, const char*, const char*, size_t*);

inline tt__FindEventResult * soap_new_tt__FindEventResult(struct soap *soap, int n = -1) { return soap_instantiate_tt__FindEventResult(soap, n, NULL, NULL, NULL); }

inline tt__FindEventResult * soap_new_req_tt__FindEventResult(
	struct soap *soap,
	const std::string& RecordingToken,
	const std::string& TrackToken,
	time_t Time,
	wsnt__NotificationMessageHolderType *Event,
	bool StartStateEvent)
{	tt__FindEventResult *_p = soap_new_tt__FindEventResult(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FindEventResult::RecordingToken = RecordingToken;
		_p->tt__FindEventResult::TrackToken = TrackToken;
		_p->tt__FindEventResult::Time = Time;
		_p->tt__FindEventResult::Event = Event;
		_p->tt__FindEventResult::StartStateEvent = StartStateEvent;
	}
	return _p;
}

inline tt__FindEventResult * soap_new_set_tt__FindEventResult(
	struct soap *soap,
	const std::string& RecordingToken,
	const std::string& TrackToken,
	time_t Time,
	wsnt__NotificationMessageHolderType *Event,
	bool StartStateEvent)
{	tt__FindEventResult *_p = soap_new_tt__FindEventResult(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FindEventResult::RecordingToken = RecordingToken;
		_p->tt__FindEventResult::TrackToken = TrackToken;
		_p->tt__FindEventResult::Time = Time;
		_p->tt__FindEventResult::Event = Event;
		_p->tt__FindEventResult::StartStateEvent = StartStateEvent;
	}
	return _p;
}

#ifndef soap_write_tt__FindEventResult
#define soap_write_tt__FindEventResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:FindEventResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FindEventResult * SOAP_FMAC4 soap_get_tt__FindEventResult(struct soap*, tt__FindEventResult *, const char*, const char*);

#ifndef soap_read_tt__FindEventResult
#define soap_read_tt__FindEventResult(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__FindEventResult(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__FindEventResultList
#define SOAP_TYPE_tt__FindEventResultList (697)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FindEventResultList(struct soap*, const char*, int, const tt__FindEventResultList *, const char*);
SOAP_FMAC3 tt__FindEventResultList * SOAP_FMAC4 soap_in_tt__FindEventResultList(struct soap*, const char*, tt__FindEventResultList *, const char*);
SOAP_FMAC1 tt__FindEventResultList * SOAP_FMAC2 soap_instantiate_tt__FindEventResultList(struct soap*, int, const char*, const char*, size_t*);

inline tt__FindEventResultList * soap_new_tt__FindEventResultList(struct soap *soap, int n = -1) { return soap_instantiate_tt__FindEventResultList(soap, n, NULL, NULL, NULL); }

inline tt__FindEventResultList * soap_new_req_tt__FindEventResultList(
	struct soap *soap,
	enum tt__SearchState SearchState)
{	tt__FindEventResultList *_p = soap_new_tt__FindEventResultList(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FindEventResultList::SearchState = SearchState;
	}
	return _p;
}

inline tt__FindEventResultList * soap_new_set_tt__FindEventResultList(
	struct soap *soap,
	enum tt__SearchState SearchState,
	const std::vector<tt__FindEventResult *> & Result)
{	tt__FindEventResultList *_p = soap_new_tt__FindEventResultList(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FindEventResultList::SearchState = SearchState;
		_p->tt__FindEventResultList::Result = Result;
	}
	return _p;
}

#ifndef soap_write_tt__FindEventResultList
#define soap_write_tt__FindEventResultList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:FindEventResultList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FindEventResultList * SOAP_FMAC4 soap_get_tt__FindEventResultList(struct soap*, tt__FindEventResultList *, const char*, const char*);

#ifndef soap_read_tt__FindEventResultList
#define soap_read_tt__FindEventResultList(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__FindEventResultList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__FindRecordingResultList
#define SOAP_TYPE_tt__FindRecordingResultList (696)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FindRecordingResultList(struct soap*, const char*, int, const tt__FindRecordingResultList *, const char*);
SOAP_FMAC3 tt__FindRecordingResultList * SOAP_FMAC4 soap_in_tt__FindRecordingResultList(struct soap*, const char*, tt__FindRecordingResultList *, const char*);
SOAP_FMAC1 tt__FindRecordingResultList * SOAP_FMAC2 soap_instantiate_tt__FindRecordingResultList(struct soap*, int, const char*, const char*, size_t*);

inline tt__FindRecordingResultList * soap_new_tt__FindRecordingResultList(struct soap *soap, int n = -1) { return soap_instantiate_tt__FindRecordingResultList(soap, n, NULL, NULL, NULL); }

inline tt__FindRecordingResultList * soap_new_req_tt__FindRecordingResultList(
	struct soap *soap,
	enum tt__SearchState SearchState)
{	tt__FindRecordingResultList *_p = soap_new_tt__FindRecordingResultList(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FindRecordingResultList::SearchState = SearchState;
	}
	return _p;
}

inline tt__FindRecordingResultList * soap_new_set_tt__FindRecordingResultList(
	struct soap *soap,
	enum tt__SearchState SearchState,
	const std::vector<tt__RecordingInformation *> & RecordingInformation)
{	tt__FindRecordingResultList *_p = soap_new_tt__FindRecordingResultList(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FindRecordingResultList::SearchState = SearchState;
		_p->tt__FindRecordingResultList::RecordingInformation = RecordingInformation;
	}
	return _p;
}

#ifndef soap_write_tt__FindRecordingResultList
#define soap_write_tt__FindRecordingResultList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:FindRecordingResultList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FindRecordingResultList * SOAP_FMAC4 soap_get_tt__FindRecordingResultList(struct soap*, tt__FindRecordingResultList *, const char*, const char*);

#ifndef soap_read_tt__FindRecordingResultList
#define soap_read_tt__FindRecordingResultList(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__FindRecordingResultList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__MetadataFilter
#define SOAP_TYPE_tt__MetadataFilter (695)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MetadataFilter(struct soap*, const char*, int, const tt__MetadataFilter *, const char*);
SOAP_FMAC3 tt__MetadataFilter * SOAP_FMAC4 soap_in_tt__MetadataFilter(struct soap*, const char*, tt__MetadataFilter *, const char*);
SOAP_FMAC1 tt__MetadataFilter * SOAP_FMAC2 soap_instantiate_tt__MetadataFilter(struct soap*, int, const char*, const char*, size_t*);

inline tt__MetadataFilter * soap_new_tt__MetadataFilter(struct soap *soap, int n = -1) { return soap_instantiate_tt__MetadataFilter(soap, n, NULL, NULL, NULL); }

inline tt__MetadataFilter * soap_new_req_tt__MetadataFilter(
	struct soap *soap,
	const std::string& MetadataStreamFilter)
{	tt__MetadataFilter *_p = soap_new_tt__MetadataFilter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__MetadataFilter::MetadataStreamFilter = MetadataStreamFilter;
	}
	return _p;
}

inline tt__MetadataFilter * soap_new_set_tt__MetadataFilter(
	struct soap *soap,
	const std::string& MetadataStreamFilter)
{	tt__MetadataFilter *_p = soap_new_tt__MetadataFilter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__MetadataFilter::MetadataStreamFilter = MetadataStreamFilter;
	}
	return _p;
}

#ifndef soap_write_tt__MetadataFilter
#define soap_write_tt__MetadataFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:MetadataFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataFilter * SOAP_FMAC4 soap_get_tt__MetadataFilter(struct soap*, tt__MetadataFilter *, const char*, const char*);

#ifndef soap_read_tt__MetadataFilter
#define soap_read_tt__MetadataFilter(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MetadataFilter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZPositionFilter
#define SOAP_TYPE_tt__PTZPositionFilter (694)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPositionFilter(struct soap*, const char*, int, const tt__PTZPositionFilter *, const char*);
SOAP_FMAC3 tt__PTZPositionFilter * SOAP_FMAC4 soap_in_tt__PTZPositionFilter(struct soap*, const char*, tt__PTZPositionFilter *, const char*);
SOAP_FMAC1 tt__PTZPositionFilter * SOAP_FMAC2 soap_instantiate_tt__PTZPositionFilter(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPositionFilter * soap_new_tt__PTZPositionFilter(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPositionFilter(soap, n, NULL, NULL, NULL); }

inline tt__PTZPositionFilter * soap_new_req_tt__PTZPositionFilter(
	struct soap *soap,
	tt__PTZVector *MinPosition,
	tt__PTZVector *MaxPosition,
	bool EnterOrExit)
{	tt__PTZPositionFilter *_p = soap_new_tt__PTZPositionFilter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZPositionFilter::MinPosition = MinPosition;
		_p->tt__PTZPositionFilter::MaxPosition = MaxPosition;
		_p->tt__PTZPositionFilter::EnterOrExit = EnterOrExit;
	}
	return _p;
}

inline tt__PTZPositionFilter * soap_new_set_tt__PTZPositionFilter(
	struct soap *soap,
	tt__PTZVector *MinPosition,
	tt__PTZVector *MaxPosition,
	bool EnterOrExit)
{	tt__PTZPositionFilter *_p = soap_new_tt__PTZPositionFilter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZPositionFilter::MinPosition = MinPosition;
		_p->tt__PTZPositionFilter::MaxPosition = MaxPosition;
		_p->tt__PTZPositionFilter::EnterOrExit = EnterOrExit;
	}
	return _p;
}

#ifndef soap_write_tt__PTZPositionFilter
#define soap_write_tt__PTZPositionFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZPositionFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPositionFilter * SOAP_FMAC4 soap_get_tt__PTZPositionFilter(struct soap*, tt__PTZPositionFilter *, const char*, const char*);

#ifndef soap_read_tt__PTZPositionFilter
#define soap_read_tt__PTZPositionFilter(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZPositionFilter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__EventFilter
#define SOAP_TYPE_tt__EventFilter (693)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__EventFilter(struct soap*, const char*, int, const tt__EventFilter *, const char*);
SOAP_FMAC3 tt__EventFilter * SOAP_FMAC4 soap_in_tt__EventFilter(struct soap*, const char*, tt__EventFilter *, const char*);
SOAP_FMAC1 tt__EventFilter * SOAP_FMAC2 soap_instantiate_tt__EventFilter(struct soap*, int, const char*, const char*, size_t*);

inline tt__EventFilter * soap_new_tt__EventFilter(struct soap *soap, int n = -1) { return soap_instantiate_tt__EventFilter(soap, n, NULL, NULL, NULL); }

inline tt__EventFilter * soap_new_req_tt__EventFilter(
	struct soap *soap)
{	tt__EventFilter *_p = soap_new_tt__EventFilter(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__EventFilter * soap_new_set_tt__EventFilter(
	struct soap *soap)
{	tt__EventFilter *_p = soap_new_tt__EventFilter(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__EventFilter
#define soap_write_tt__EventFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:EventFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EventFilter * SOAP_FMAC4 soap_get_tt__EventFilter(struct soap*, tt__EventFilter *, const char*, const char*);

#ifndef soap_read_tt__EventFilter
#define soap_read_tt__EventFilter(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__EventFilter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SearchScopeExtension
#define SOAP_TYPE_tt__SearchScopeExtension (692)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SearchScopeExtension(struct soap*, const char*, int, const tt__SearchScopeExtension *, const char*);
SOAP_FMAC3 tt__SearchScopeExtension * SOAP_FMAC4 soap_in_tt__SearchScopeExtension(struct soap*, const char*, tt__SearchScopeExtension *, const char*);
SOAP_FMAC1 tt__SearchScopeExtension * SOAP_FMAC2 soap_instantiate_tt__SearchScopeExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__SearchScopeExtension * soap_new_tt__SearchScopeExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__SearchScopeExtension(soap, n, NULL, NULL, NULL); }

inline tt__SearchScopeExtension * soap_new_req_tt__SearchScopeExtension(
	struct soap *soap)
{	tt__SearchScopeExtension *_p = soap_new_tt__SearchScopeExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__SearchScopeExtension * soap_new_set_tt__SearchScopeExtension(
	struct soap *soap)
{	tt__SearchScopeExtension *_p = soap_new_tt__SearchScopeExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__SearchScopeExtension
#define soap_write_tt__SearchScopeExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:SearchScopeExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SearchScopeExtension * SOAP_FMAC4 soap_get_tt__SearchScopeExtension(struct soap*, tt__SearchScopeExtension *, const char*, const char*);

#ifndef soap_read_tt__SearchScopeExtension
#define soap_read_tt__SearchScopeExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__SearchScopeExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SearchScope
#define SOAP_TYPE_tt__SearchScope (691)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SearchScope(struct soap*, const char*, int, const tt__SearchScope *, const char*);
SOAP_FMAC3 tt__SearchScope * SOAP_FMAC4 soap_in_tt__SearchScope(struct soap*, const char*, tt__SearchScope *, const char*);
SOAP_FMAC1 tt__SearchScope * SOAP_FMAC2 soap_instantiate_tt__SearchScope(struct soap*, int, const char*, const char*, size_t*);

inline tt__SearchScope * soap_new_tt__SearchScope(struct soap *soap, int n = -1) { return soap_instantiate_tt__SearchScope(soap, n, NULL, NULL, NULL); }

inline tt__SearchScope * soap_new_req_tt__SearchScope(
	struct soap *soap)
{	tt__SearchScope *_p = soap_new_tt__SearchScope(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__SearchScope * soap_new_set_tt__SearchScope(
	struct soap *soap,
	const std::vector<tt__SourceReference *> & IncludedSources,
	const std::vector<std::string> & IncludedRecordings,
	std::string *RecordingInformationFilter,
	tt__SearchScopeExtension *Extension)
{	tt__SearchScope *_p = soap_new_tt__SearchScope(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__SearchScope::IncludedSources = IncludedSources;
		_p->tt__SearchScope::IncludedRecordings = IncludedRecordings;
		_p->tt__SearchScope::RecordingInformationFilter = RecordingInformationFilter;
		_p->tt__SearchScope::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__SearchScope
#define soap_write_tt__SearchScope(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:SearchScope", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SearchScope * SOAP_FMAC4 soap_get_tt__SearchScope(struct soap*, tt__SearchScope *, const char*, const char*);

#ifndef soap_read_tt__SearchScope
#define soap_read_tt__SearchScope(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__SearchScope(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RecordingSummary
#define SOAP_TYPE_tt__RecordingSummary (690)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingSummary(struct soap*, const char*, int, const tt__RecordingSummary *, const char*);
SOAP_FMAC3 tt__RecordingSummary * SOAP_FMAC4 soap_in_tt__RecordingSummary(struct soap*, const char*, tt__RecordingSummary *, const char*);
SOAP_FMAC1 tt__RecordingSummary * SOAP_FMAC2 soap_instantiate_tt__RecordingSummary(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingSummary * soap_new_tt__RecordingSummary(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingSummary(soap, n, NULL, NULL, NULL); }

inline tt__RecordingSummary * soap_new_req_tt__RecordingSummary(
	struct soap *soap,
	time_t DataFrom,
	time_t DataUntil,
	int NumberRecordings)
{	tt__RecordingSummary *_p = soap_new_tt__RecordingSummary(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RecordingSummary::DataFrom = DataFrom;
		_p->tt__RecordingSummary::DataUntil = DataUntil;
		_p->tt__RecordingSummary::NumberRecordings = NumberRecordings;
	}
	return _p;
}

inline tt__RecordingSummary * soap_new_set_tt__RecordingSummary(
	struct soap *soap,
	time_t DataFrom,
	time_t DataUntil,
	int NumberRecordings)
{	tt__RecordingSummary *_p = soap_new_tt__RecordingSummary(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RecordingSummary::DataFrom = DataFrom;
		_p->tt__RecordingSummary::DataUntil = DataUntil;
		_p->tt__RecordingSummary::NumberRecordings = NumberRecordings;
	}
	return _p;
}

#ifndef soap_write_tt__RecordingSummary
#define soap_write_tt__RecordingSummary(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:RecordingSummary", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingSummary * SOAP_FMAC4 soap_get_tt__RecordingSummary(struct soap*, tt__RecordingSummary *, const char*, const char*);

#ifndef soap_read_tt__RecordingSummary
#define soap_read_tt__RecordingSummary(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RecordingSummary(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__DateTimeRange
#define SOAP_TYPE_tt__DateTimeRange (689)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DateTimeRange(struct soap*, const char*, int, const tt__DateTimeRange *, const char*);
SOAP_FMAC3 tt__DateTimeRange * SOAP_FMAC4 soap_in_tt__DateTimeRange(struct soap*, const char*, tt__DateTimeRange *, const char*);
SOAP_FMAC1 tt__DateTimeRange * SOAP_FMAC2 soap_instantiate_tt__DateTimeRange(struct soap*, int, const char*, const char*, size_t*);

inline tt__DateTimeRange * soap_new_tt__DateTimeRange(struct soap *soap, int n = -1) { return soap_instantiate_tt__DateTimeRange(soap, n, NULL, NULL, NULL); }

inline tt__DateTimeRange * soap_new_req_tt__DateTimeRange(
	struct soap *soap,
	time_t From,
	time_t Until)
{	tt__DateTimeRange *_p = soap_new_tt__DateTimeRange(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__DateTimeRange::From = From;
		_p->tt__DateTimeRange::Until = Until;
	}
	return _p;
}

inline tt__DateTimeRange * soap_new_set_tt__DateTimeRange(
	struct soap *soap,
	time_t From,
	time_t Until)
{	tt__DateTimeRange *_p = soap_new_tt__DateTimeRange(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__DateTimeRange::From = From;
		_p->tt__DateTimeRange::Until = Until;
	}
	return _p;
}

#ifndef soap_write_tt__DateTimeRange
#define soap_write_tt__DateTimeRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:DateTimeRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DateTimeRange * SOAP_FMAC4 soap_get_tt__DateTimeRange(struct soap*, tt__DateTimeRange *, const char*, const char*);

#ifndef soap_read_tt__DateTimeRange
#define soap_read_tt__DateTimeRange(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__DateTimeRange(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SourceReference
#define SOAP_TYPE_tt__SourceReference (688)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SourceReference(struct soap*, const char*, int, const tt__SourceReference *, const char*);
SOAP_FMAC3 tt__SourceReference * SOAP_FMAC4 soap_in_tt__SourceReference(struct soap*, const char*, tt__SourceReference *, const char*);
SOAP_FMAC1 tt__SourceReference * SOAP_FMAC2 soap_instantiate_tt__SourceReference(struct soap*, int, const char*, const char*, size_t*);

inline tt__SourceReference * soap_new_tt__SourceReference(struct soap *soap, int n = -1) { return soap_instantiate_tt__SourceReference(soap, n, NULL, NULL, NULL); }

inline tt__SourceReference * soap_new_req_tt__SourceReference(
	struct soap *soap,
	const std::string& Token)
{	tt__SourceReference *_p = soap_new_tt__SourceReference(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__SourceReference::Token = Token;
	}
	return _p;
}

inline tt__SourceReference * soap_new_set_tt__SourceReference(
	struct soap *soap,
	const std::string& Token,
	const std::string& Type)
{	tt__SourceReference *_p = soap_new_tt__SourceReference(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__SourceReference::Token = Token;
		_p->tt__SourceReference::Type = Type;
	}
	return _p;
}

#ifndef soap_write_tt__SourceReference
#define soap_write_tt__SourceReference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:SourceReference", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SourceReference * SOAP_FMAC4 soap_get_tt__SourceReference(struct soap*, tt__SourceReference *, const char*, const char*);

#ifndef soap_read_tt__SourceReference
#define soap_read_tt__SourceReference(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__SourceReference(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ReceiverStateInformation
#define SOAP_TYPE_tt__ReceiverStateInformation (687)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ReceiverStateInformation(struct soap*, const char*, int, const tt__ReceiverStateInformation *, const char*);
SOAP_FMAC3 tt__ReceiverStateInformation * SOAP_FMAC4 soap_in_tt__ReceiverStateInformation(struct soap*, const char*, tt__ReceiverStateInformation *, const char*);
SOAP_FMAC1 tt__ReceiverStateInformation * SOAP_FMAC2 soap_instantiate_tt__ReceiverStateInformation(struct soap*, int, const char*, const char*, size_t*);

inline tt__ReceiverStateInformation * soap_new_tt__ReceiverStateInformation(struct soap *soap, int n = -1) { return soap_instantiate_tt__ReceiverStateInformation(soap, n, NULL, NULL, NULL); }

inline tt__ReceiverStateInformation * soap_new_req_tt__ReceiverStateInformation(
	struct soap *soap,
	enum tt__ReceiverState State,
	bool AutoCreated)
{	tt__ReceiverStateInformation *_p = soap_new_tt__ReceiverStateInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ReceiverStateInformation::State = State;
		_p->tt__ReceiverStateInformation::AutoCreated = AutoCreated;
	}
	return _p;
}

inline tt__ReceiverStateInformation * soap_new_set_tt__ReceiverStateInformation(
	struct soap *soap,
	enum tt__ReceiverState State,
	bool AutoCreated)
{	tt__ReceiverStateInformation *_p = soap_new_tt__ReceiverStateInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ReceiverStateInformation::State = State;
		_p->tt__ReceiverStateInformation::AutoCreated = AutoCreated;
	}
	return _p;
}

#ifndef soap_write_tt__ReceiverStateInformation
#define soap_write_tt__ReceiverStateInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ReceiverStateInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ReceiverStateInformation * SOAP_FMAC4 soap_get_tt__ReceiverStateInformation(struct soap*, tt__ReceiverStateInformation *, const char*, const char*);

#ifndef soap_read_tt__ReceiverStateInformation
#define soap_read_tt__ReceiverStateInformation(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ReceiverStateInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ReceiverConfiguration
#define SOAP_TYPE_tt__ReceiverConfiguration (686)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ReceiverConfiguration(struct soap*, const char*, int, const tt__ReceiverConfiguration *, const char*);
SOAP_FMAC3 tt__ReceiverConfiguration * SOAP_FMAC4 soap_in_tt__ReceiverConfiguration(struct soap*, const char*, tt__ReceiverConfiguration *, const char*);
SOAP_FMAC1 tt__ReceiverConfiguration * SOAP_FMAC2 soap_instantiate_tt__ReceiverConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__ReceiverConfiguration * soap_new_tt__ReceiverConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__ReceiverConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__ReceiverConfiguration * soap_new_req_tt__ReceiverConfiguration(
	struct soap *soap,
	enum tt__ReceiverMode Mode,
	const std::string& MediaUri,
	tt__StreamSetup *StreamSetup)
{	tt__ReceiverConfiguration *_p = soap_new_tt__ReceiverConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ReceiverConfiguration::Mode = Mode;
		_p->tt__ReceiverConfiguration::MediaUri = MediaUri;
		_p->tt__ReceiverConfiguration::StreamSetup = StreamSetup;
	}
	return _p;
}

inline tt__ReceiverConfiguration * soap_new_set_tt__ReceiverConfiguration(
	struct soap *soap,
	enum tt__ReceiverMode Mode,
	const std::string& MediaUri,
	tt__StreamSetup *StreamSetup)
{	tt__ReceiverConfiguration *_p = soap_new_tt__ReceiverConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ReceiverConfiguration::Mode = Mode;
		_p->tt__ReceiverConfiguration::MediaUri = MediaUri;
		_p->tt__ReceiverConfiguration::StreamSetup = StreamSetup;
	}
	return _p;
}

#ifndef soap_write_tt__ReceiverConfiguration
#define soap_write_tt__ReceiverConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ReceiverConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ReceiverConfiguration * SOAP_FMAC4 soap_get_tt__ReceiverConfiguration(struct soap*, tt__ReceiverConfiguration *, const char*, const char*);

#ifndef soap_read_tt__ReceiverConfiguration
#define soap_read_tt__ReceiverConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ReceiverConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Receiver
#define SOAP_TYPE_tt__Receiver (685)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Receiver(struct soap*, const char*, int, const tt__Receiver *, const char*);
SOAP_FMAC3 tt__Receiver * SOAP_FMAC4 soap_in_tt__Receiver(struct soap*, const char*, tt__Receiver *, const char*);
SOAP_FMAC1 tt__Receiver * SOAP_FMAC2 soap_instantiate_tt__Receiver(struct soap*, int, const char*, const char*, size_t*);

inline tt__Receiver * soap_new_tt__Receiver(struct soap *soap, int n = -1) { return soap_instantiate_tt__Receiver(soap, n, NULL, NULL, NULL); }

inline tt__Receiver * soap_new_req_tt__Receiver(
	struct soap *soap,
	const std::string& Token,
	tt__ReceiverConfiguration *Configuration)
{	tt__Receiver *_p = soap_new_tt__Receiver(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Receiver::Token = Token;
		_p->tt__Receiver::Configuration = Configuration;
	}
	return _p;
}

inline tt__Receiver * soap_new_set_tt__Receiver(
	struct soap *soap,
	const std::string& Token,
	tt__ReceiverConfiguration *Configuration)
{	tt__Receiver *_p = soap_new_tt__Receiver(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Receiver::Token = Token;
		_p->tt__Receiver::Configuration = Configuration;
	}
	return _p;
}

#ifndef soap_write_tt__Receiver
#define soap_write_tt__Receiver(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Receiver", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Receiver * SOAP_FMAC4 soap_get_tt__Receiver(struct soap*, tt__Receiver *, const char*, const char*);

#ifndef soap_read_tt__Receiver
#define soap_read_tt__Receiver(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Receiver(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PaneOptionExtension
#define SOAP_TYPE_tt__PaneOptionExtension (684)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PaneOptionExtension(struct soap*, const char*, int, const tt__PaneOptionExtension *, const char*);
SOAP_FMAC3 tt__PaneOptionExtension * SOAP_FMAC4 soap_in_tt__PaneOptionExtension(struct soap*, const char*, tt__PaneOptionExtension *, const char*);
SOAP_FMAC1 tt__PaneOptionExtension * SOAP_FMAC2 soap_instantiate_tt__PaneOptionExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PaneOptionExtension * soap_new_tt__PaneOptionExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PaneOptionExtension(soap, n, NULL, NULL, NULL); }

inline tt__PaneOptionExtension * soap_new_req_tt__PaneOptionExtension(
	struct soap *soap)
{	tt__PaneOptionExtension *_p = soap_new_tt__PaneOptionExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__PaneOptionExtension * soap_new_set_tt__PaneOptionExtension(
	struct soap *soap)
{	tt__PaneOptionExtension *_p = soap_new_tt__PaneOptionExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__PaneOptionExtension
#define soap_write_tt__PaneOptionExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PaneOptionExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PaneOptionExtension * SOAP_FMAC4 soap_get_tt__PaneOptionExtension(struct soap*, tt__PaneOptionExtension *, const char*, const char*);

#ifndef soap_read_tt__PaneOptionExtension
#define soap_read_tt__PaneOptionExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PaneOptionExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PaneLayoutOptions
#define SOAP_TYPE_tt__PaneLayoutOptions (683)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PaneLayoutOptions(struct soap*, const char*, int, const tt__PaneLayoutOptions *, const char*);
SOAP_FMAC3 tt__PaneLayoutOptions * SOAP_FMAC4 soap_in_tt__PaneLayoutOptions(struct soap*, const char*, tt__PaneLayoutOptions *, const char*);
SOAP_FMAC1 tt__PaneLayoutOptions * SOAP_FMAC2 soap_instantiate_tt__PaneLayoutOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__PaneLayoutOptions * soap_new_tt__PaneLayoutOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__PaneLayoutOptions(soap, n, NULL, NULL, NULL); }

inline tt__PaneLayoutOptions * soap_new_req_tt__PaneLayoutOptions(
	struct soap *soap,
	const std::vector<tt__Rectangle *> & Area)
{	tt__PaneLayoutOptions *_p = soap_new_tt__PaneLayoutOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PaneLayoutOptions::Area = Area;
	}
	return _p;
}

inline tt__PaneLayoutOptions * soap_new_set_tt__PaneLayoutOptions(
	struct soap *soap,
	const std::vector<tt__Rectangle *> & Area,
	tt__PaneOptionExtension *Extension)
{	tt__PaneLayoutOptions *_p = soap_new_tt__PaneLayoutOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PaneLayoutOptions::Area = Area;
		_p->tt__PaneLayoutOptions::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__PaneLayoutOptions
#define soap_write_tt__PaneLayoutOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PaneLayoutOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PaneLayoutOptions * SOAP_FMAC4 soap_get_tt__PaneLayoutOptions(struct soap*, tt__PaneLayoutOptions *, const char*, const char*);

#ifndef soap_read_tt__PaneLayoutOptions
#define soap_read_tt__PaneLayoutOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PaneLayoutOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__LayoutOptionsExtension
#define SOAP_TYPE_tt__LayoutOptionsExtension (682)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__LayoutOptionsExtension(struct soap*, const char*, int, const tt__LayoutOptionsExtension *, const char*);
SOAP_FMAC3 tt__LayoutOptionsExtension * SOAP_FMAC4 soap_in_tt__LayoutOptionsExtension(struct soap*, const char*, tt__LayoutOptionsExtension *, const char*);
SOAP_FMAC1 tt__LayoutOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__LayoutOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__LayoutOptionsExtension * soap_new_tt__LayoutOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__LayoutOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__LayoutOptionsExtension * soap_new_req_tt__LayoutOptionsExtension(
	struct soap *soap)
{	tt__LayoutOptionsExtension *_p = soap_new_tt__LayoutOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__LayoutOptionsExtension * soap_new_set_tt__LayoutOptionsExtension(
	struct soap *soap)
{	tt__LayoutOptionsExtension *_p = soap_new_tt__LayoutOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__LayoutOptionsExtension
#define soap_write_tt__LayoutOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:LayoutOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__LayoutOptionsExtension * SOAP_FMAC4 soap_get_tt__LayoutOptionsExtension(struct soap*, tt__LayoutOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__LayoutOptionsExtension
#define soap_read_tt__LayoutOptionsExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__LayoutOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__LayoutOptions
#define SOAP_TYPE_tt__LayoutOptions (681)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__LayoutOptions(struct soap*, const char*, int, const tt__LayoutOptions *, const char*);
SOAP_FMAC3 tt__LayoutOptions * SOAP_FMAC4 soap_in_tt__LayoutOptions(struct soap*, const char*, tt__LayoutOptions *, const char*);
SOAP_FMAC1 tt__LayoutOptions * SOAP_FMAC2 soap_instantiate_tt__LayoutOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__LayoutOptions * soap_new_tt__LayoutOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__LayoutOptions(soap, n, NULL, NULL, NULL); }

inline tt__LayoutOptions * soap_new_req_tt__LayoutOptions(
	struct soap *soap,
	const std::vector<tt__PaneLayoutOptions *> & PaneLayoutOptions)
{	tt__LayoutOptions *_p = soap_new_tt__LayoutOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__LayoutOptions::PaneLayoutOptions = PaneLayoutOptions;
	}
	return _p;
}

inline tt__LayoutOptions * soap_new_set_tt__LayoutOptions(
	struct soap *soap,
	const std::vector<tt__PaneLayoutOptions *> & PaneLayoutOptions,
	tt__LayoutOptionsExtension *Extension)
{	tt__LayoutOptions *_p = soap_new_tt__LayoutOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__LayoutOptions::PaneLayoutOptions = PaneLayoutOptions;
		_p->tt__LayoutOptions::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__LayoutOptions
#define soap_write_tt__LayoutOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:LayoutOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__LayoutOptions * SOAP_FMAC4 soap_get_tt__LayoutOptions(struct soap*, tt__LayoutOptions *, const char*, const char*);

#ifndef soap_read_tt__LayoutOptions
#define soap_read_tt__LayoutOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__LayoutOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__CodingCapabilities
#define SOAP_TYPE_tt__CodingCapabilities (680)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__CodingCapabilities(struct soap*, const char*, int, const tt__CodingCapabilities *, const char*);
SOAP_FMAC3 tt__CodingCapabilities * SOAP_FMAC4 soap_in_tt__CodingCapabilities(struct soap*, const char*, tt__CodingCapabilities *, const char*);
SOAP_FMAC1 tt__CodingCapabilities * SOAP_FMAC2 soap_instantiate_tt__CodingCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__CodingCapabilities * soap_new_tt__CodingCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__CodingCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__CodingCapabilities * soap_new_req_tt__CodingCapabilities(
	struct soap *soap,
	tt__VideoDecoderConfigurationOptions *VideoDecodingCapabilities)
{	tt__CodingCapabilities *_p = soap_new_tt__CodingCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__CodingCapabilities::VideoDecodingCapabilities = VideoDecodingCapabilities;
	}
	return _p;
}

inline tt__CodingCapabilities * soap_new_set_tt__CodingCapabilities(
	struct soap *soap,
	tt__AudioEncoderConfigurationOptions *AudioEncodingCapabilities,
	tt__AudioDecoderConfigurationOptions *AudioDecodingCapabilities,
	tt__VideoDecoderConfigurationOptions *VideoDecodingCapabilities)
{	tt__CodingCapabilities *_p = soap_new_tt__CodingCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__CodingCapabilities::AudioEncodingCapabilities = AudioEncodingCapabilities;
		_p->tt__CodingCapabilities::AudioDecodingCapabilities = AudioDecodingCapabilities;
		_p->tt__CodingCapabilities::VideoDecodingCapabilities = VideoDecodingCapabilities;
	}
	return _p;
}

#ifndef soap_write_tt__CodingCapabilities
#define soap_write_tt__CodingCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:CodingCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CodingCapabilities * SOAP_FMAC4 soap_get_tt__CodingCapabilities(struct soap*, tt__CodingCapabilities *, const char*, const char*);

#ifndef soap_read_tt__CodingCapabilities
#define soap_read_tt__CodingCapabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__CodingCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__LayoutExtension
#define SOAP_TYPE_tt__LayoutExtension (679)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__LayoutExtension(struct soap*, const char*, int, const tt__LayoutExtension *, const char*);
SOAP_FMAC3 tt__LayoutExtension * SOAP_FMAC4 soap_in_tt__LayoutExtension(struct soap*, const char*, tt__LayoutExtension *, const char*);
SOAP_FMAC1 tt__LayoutExtension * SOAP_FMAC2 soap_instantiate_tt__LayoutExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__LayoutExtension * soap_new_tt__LayoutExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__LayoutExtension(soap, n, NULL, NULL, NULL); }

inline tt__LayoutExtension * soap_new_req_tt__LayoutExtension(
	struct soap *soap)
{	tt__LayoutExtension *_p = soap_new_tt__LayoutExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__LayoutExtension * soap_new_set_tt__LayoutExtension(
	struct soap *soap)
{	tt__LayoutExtension *_p = soap_new_tt__LayoutExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__LayoutExtension
#define soap_write_tt__LayoutExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:LayoutExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__LayoutExtension * SOAP_FMAC4 soap_get_tt__LayoutExtension(struct soap*, tt__LayoutExtension *, const char*, const char*);

#ifndef soap_read_tt__LayoutExtension
#define soap_read_tt__LayoutExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__LayoutExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Layout
#define SOAP_TYPE_tt__Layout (678)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Layout(struct soap*, const char*, int, const tt__Layout *, const char*);
SOAP_FMAC3 tt__Layout * SOAP_FMAC4 soap_in_tt__Layout(struct soap*, const char*, tt__Layout *, const char*);
SOAP_FMAC1 tt__Layout * SOAP_FMAC2 soap_instantiate_tt__Layout(struct soap*, int, const char*, const char*, size_t*);

inline tt__Layout * soap_new_tt__Layout(struct soap *soap, int n = -1) { return soap_instantiate_tt__Layout(soap, n, NULL, NULL, NULL); }

inline tt__Layout * soap_new_req_tt__Layout(
	struct soap *soap,
	const std::vector<tt__PaneLayout *> & PaneLayout)
{	tt__Layout *_p = soap_new_tt__Layout(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Layout::PaneLayout = PaneLayout;
	}
	return _p;
}

inline tt__Layout * soap_new_set_tt__Layout(
	struct soap *soap,
	const std::vector<tt__PaneLayout *> & PaneLayout,
	tt__LayoutExtension *Extension)
{	tt__Layout *_p = soap_new_tt__Layout(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Layout::PaneLayout = PaneLayout;
		_p->tt__Layout::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__Layout
#define soap_write_tt__Layout(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Layout", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Layout * SOAP_FMAC4 soap_get_tt__Layout(struct soap*, tt__Layout *, const char*, const char*);

#ifndef soap_read_tt__Layout
#define soap_read_tt__Layout(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Layout(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PaneLayout
#define SOAP_TYPE_tt__PaneLayout (677)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PaneLayout(struct soap*, const char*, int, const tt__PaneLayout *, const char*);
SOAP_FMAC3 tt__PaneLayout * SOAP_FMAC4 soap_in_tt__PaneLayout(struct soap*, const char*, tt__PaneLayout *, const char*);
SOAP_FMAC1 tt__PaneLayout * SOAP_FMAC2 soap_instantiate_tt__PaneLayout(struct soap*, int, const char*, const char*, size_t*);

inline tt__PaneLayout * soap_new_tt__PaneLayout(struct soap *soap, int n = -1) { return soap_instantiate_tt__PaneLayout(soap, n, NULL, NULL, NULL); }

inline tt__PaneLayout * soap_new_req_tt__PaneLayout(
	struct soap *soap,
	const std::string& Pane,
	tt__Rectangle *Area)
{	tt__PaneLayout *_p = soap_new_tt__PaneLayout(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PaneLayout::Pane = Pane;
		_p->tt__PaneLayout::Area = Area;
	}
	return _p;
}

inline tt__PaneLayout * soap_new_set_tt__PaneLayout(
	struct soap *soap,
	const std::string& Pane,
	tt__Rectangle *Area)
{	tt__PaneLayout *_p = soap_new_tt__PaneLayout(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PaneLayout::Pane = Pane;
		_p->tt__PaneLayout::Area = Area;
	}
	return _p;
}

#ifndef soap_write_tt__PaneLayout
#define soap_write_tt__PaneLayout(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PaneLayout", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PaneLayout * SOAP_FMAC4 soap_get_tt__PaneLayout(struct soap*, tt__PaneLayout *, const char*, const char*);

#ifndef soap_read_tt__PaneLayout
#define soap_read_tt__PaneLayout(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PaneLayout(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PaneConfiguration
#define SOAP_TYPE_tt__PaneConfiguration (676)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PaneConfiguration(struct soap*, const char*, int, const tt__PaneConfiguration *, const char*);
SOAP_FMAC3 tt__PaneConfiguration * SOAP_FMAC4 soap_in_tt__PaneConfiguration(struct soap*, const char*, tt__PaneConfiguration *, const char*);
SOAP_FMAC1 tt__PaneConfiguration * SOAP_FMAC2 soap_instantiate_tt__PaneConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__PaneConfiguration * soap_new_tt__PaneConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__PaneConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__PaneConfiguration * soap_new_req_tt__PaneConfiguration(
	struct soap *soap,
	const std::string& Token)
{	tt__PaneConfiguration *_p = soap_new_tt__PaneConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PaneConfiguration::Token = Token;
	}
	return _p;
}

inline tt__PaneConfiguration * soap_new_set_tt__PaneConfiguration(
	struct soap *soap,
	std::string *PaneName,
	std::string *AudioOutputToken,
	std::string *AudioSourceToken,
	tt__AudioEncoderConfiguration *AudioEncoderConfiguration,
	std::string *ReceiverToken,
	const std::string& Token)
{	tt__PaneConfiguration *_p = soap_new_tt__PaneConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PaneConfiguration::PaneName = PaneName;
		_p->tt__PaneConfiguration::AudioOutputToken = AudioOutputToken;
		_p->tt__PaneConfiguration::AudioSourceToken = AudioSourceToken;
		_p->tt__PaneConfiguration::AudioEncoderConfiguration = AudioEncoderConfiguration;
		_p->tt__PaneConfiguration::ReceiverToken = ReceiverToken;
		_p->tt__PaneConfiguration::Token = Token;
	}
	return _p;
}

#ifndef soap_write_tt__PaneConfiguration
#define soap_write_tt__PaneConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PaneConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PaneConfiguration * SOAP_FMAC4 soap_get_tt__PaneConfiguration(struct soap*, tt__PaneConfiguration *, const char*, const char*);

#ifndef soap_read_tt__PaneConfiguration
#define soap_read_tt__PaneConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PaneConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__CellLayout
#define SOAP_TYPE_tt__CellLayout (675)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__CellLayout(struct soap*, const char*, int, const tt__CellLayout *, const char*);
SOAP_FMAC3 tt__CellLayout * SOAP_FMAC4 soap_in_tt__CellLayout(struct soap*, const char*, tt__CellLayout *, const char*);
SOAP_FMAC1 tt__CellLayout * SOAP_FMAC2 soap_instantiate_tt__CellLayout(struct soap*, int, const char*, const char*, size_t*);

inline tt__CellLayout * soap_new_tt__CellLayout(struct soap *soap, int n = -1) { return soap_instantiate_tt__CellLayout(soap, n, NULL, NULL, NULL); }

inline tt__CellLayout * soap_new_req_tt__CellLayout(
	struct soap *soap,
	tt__Transformation *Transformation,
	const std::string& Columns,
	const std::string& Rows)
{	tt__CellLayout *_p = soap_new_tt__CellLayout(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__CellLayout::Transformation = Transformation;
		_p->tt__CellLayout::Columns = Columns;
		_p->tt__CellLayout::Rows = Rows;
	}
	return _p;
}

inline tt__CellLayout * soap_new_set_tt__CellLayout(
	struct soap *soap,
	tt__Transformation *Transformation,
	const std::string& Columns,
	const std::string& Rows)
{	tt__CellLayout *_p = soap_new_tt__CellLayout(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__CellLayout::Transformation = Transformation;
		_p->tt__CellLayout::Columns = Columns;
		_p->tt__CellLayout::Rows = Rows;
	}
	return _p;
}

#ifndef soap_write_tt__CellLayout
#define soap_write_tt__CellLayout(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:CellLayout", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CellLayout * SOAP_FMAC4 soap_get_tt__CellLayout(struct soap*, tt__CellLayout *, const char*, const char*);

#ifndef soap_read_tt__CellLayout
#define soap_read_tt__CellLayout(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__CellLayout(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__MotionExpressionConfiguration
#define SOAP_TYPE_tt__MotionExpressionConfiguration (674)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MotionExpressionConfiguration(struct soap*, const char*, int, const tt__MotionExpressionConfiguration *, const char*);
SOAP_FMAC3 tt__MotionExpressionConfiguration * SOAP_FMAC4 soap_in_tt__MotionExpressionConfiguration(struct soap*, const char*, tt__MotionExpressionConfiguration *, const char*);
SOAP_FMAC1 tt__MotionExpressionConfiguration * SOAP_FMAC2 soap_instantiate_tt__MotionExpressionConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__MotionExpressionConfiguration * soap_new_tt__MotionExpressionConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__MotionExpressionConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__MotionExpressionConfiguration * soap_new_req_tt__MotionExpressionConfiguration(
	struct soap *soap,
	tt__MotionExpression *MotionExpression)
{	tt__MotionExpressionConfiguration *_p = soap_new_tt__MotionExpressionConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__MotionExpressionConfiguration::MotionExpression = MotionExpression;
	}
	return _p;
}

inline tt__MotionExpressionConfiguration * soap_new_set_tt__MotionExpressionConfiguration(
	struct soap *soap,
	tt__MotionExpression *MotionExpression)
{	tt__MotionExpressionConfiguration *_p = soap_new_tt__MotionExpressionConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__MotionExpressionConfiguration::MotionExpression = MotionExpression;
	}
	return _p;
}

#ifndef soap_write_tt__MotionExpressionConfiguration
#define soap_write_tt__MotionExpressionConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:MotionExpressionConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MotionExpressionConfiguration * SOAP_FMAC4 soap_get_tt__MotionExpressionConfiguration(struct soap*, tt__MotionExpressionConfiguration *, const char*, const char*);

#ifndef soap_read_tt__MotionExpressionConfiguration
#define soap_read_tt__MotionExpressionConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MotionExpressionConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__MotionExpression
#define SOAP_TYPE_tt__MotionExpression (673)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MotionExpression(struct soap*, const char*, int, const tt__MotionExpression *, const char*);
SOAP_FMAC3 tt__MotionExpression * SOAP_FMAC4 soap_in_tt__MotionExpression(struct soap*, const char*, tt__MotionExpression *, const char*);
SOAP_FMAC1 tt__MotionExpression * SOAP_FMAC2 soap_instantiate_tt__MotionExpression(struct soap*, int, const char*, const char*, size_t*);

inline tt__MotionExpression * soap_new_tt__MotionExpression(struct soap *soap, int n = -1) { return soap_instantiate_tt__MotionExpression(soap, n, NULL, NULL, NULL); }

inline tt__MotionExpression * soap_new_req_tt__MotionExpression(
	struct soap *soap,
	const std::string& Expression)
{	tt__MotionExpression *_p = soap_new_tt__MotionExpression(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__MotionExpression::Expression = Expression;
	}
	return _p;
}

inline tt__MotionExpression * soap_new_set_tt__MotionExpression(
	struct soap *soap,
	const std::string& Expression,
	std::string *Type)
{	tt__MotionExpression *_p = soap_new_tt__MotionExpression(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__MotionExpression::Expression = Expression;
		_p->tt__MotionExpression::Type = Type;
	}
	return _p;
}

#ifndef soap_write_tt__MotionExpression
#define soap_write_tt__MotionExpression(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:MotionExpression", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MotionExpression * SOAP_FMAC4 soap_get_tt__MotionExpression(struct soap*, tt__MotionExpression *, const char*, const char*);

#ifndef soap_read_tt__MotionExpression
#define soap_read_tt__MotionExpression(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MotionExpression(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PolylineArrayConfiguration
#define SOAP_TYPE_tt__PolylineArrayConfiguration (672)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PolylineArrayConfiguration(struct soap*, const char*, int, const tt__PolylineArrayConfiguration *, const char*);
SOAP_FMAC3 tt__PolylineArrayConfiguration * SOAP_FMAC4 soap_in_tt__PolylineArrayConfiguration(struct soap*, const char*, tt__PolylineArrayConfiguration *, const char*);
SOAP_FMAC1 tt__PolylineArrayConfiguration * SOAP_FMAC2 soap_instantiate_tt__PolylineArrayConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__PolylineArrayConfiguration * soap_new_tt__PolylineArrayConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__PolylineArrayConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__PolylineArrayConfiguration * soap_new_req_tt__PolylineArrayConfiguration(
	struct soap *soap,
	tt__PolylineArray *PolylineArray)
{	tt__PolylineArrayConfiguration *_p = soap_new_tt__PolylineArrayConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PolylineArrayConfiguration::PolylineArray = PolylineArray;
	}
	return _p;
}

inline tt__PolylineArrayConfiguration * soap_new_set_tt__PolylineArrayConfiguration(
	struct soap *soap,
	tt__PolylineArray *PolylineArray)
{	tt__PolylineArrayConfiguration *_p = soap_new_tt__PolylineArrayConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PolylineArrayConfiguration::PolylineArray = PolylineArray;
	}
	return _p;
}

#ifndef soap_write_tt__PolylineArrayConfiguration
#define soap_write_tt__PolylineArrayConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PolylineArrayConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PolylineArrayConfiguration * SOAP_FMAC4 soap_get_tt__PolylineArrayConfiguration(struct soap*, tt__PolylineArrayConfiguration *, const char*, const char*);

#ifndef soap_read_tt__PolylineArrayConfiguration
#define soap_read_tt__PolylineArrayConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PolylineArrayConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PolylineArrayExtension
#define SOAP_TYPE_tt__PolylineArrayExtension (671)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PolylineArrayExtension(struct soap*, const char*, int, const tt__PolylineArrayExtension *, const char*);
SOAP_FMAC3 tt__PolylineArrayExtension * SOAP_FMAC4 soap_in_tt__PolylineArrayExtension(struct soap*, const char*, tt__PolylineArrayExtension *, const char*);
SOAP_FMAC1 tt__PolylineArrayExtension * SOAP_FMAC2 soap_instantiate_tt__PolylineArrayExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PolylineArrayExtension * soap_new_tt__PolylineArrayExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PolylineArrayExtension(soap, n, NULL, NULL, NULL); }

inline tt__PolylineArrayExtension * soap_new_req_tt__PolylineArrayExtension(
	struct soap *soap)
{	tt__PolylineArrayExtension *_p = soap_new_tt__PolylineArrayExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__PolylineArrayExtension * soap_new_set_tt__PolylineArrayExtension(
	struct soap *soap)
{	tt__PolylineArrayExtension *_p = soap_new_tt__PolylineArrayExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__PolylineArrayExtension
#define soap_write_tt__PolylineArrayExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PolylineArrayExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PolylineArrayExtension * SOAP_FMAC4 soap_get_tt__PolylineArrayExtension(struct soap*, tt__PolylineArrayExtension *, const char*, const char*);

#ifndef soap_read_tt__PolylineArrayExtension
#define soap_read_tt__PolylineArrayExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PolylineArrayExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PolylineArray
#define SOAP_TYPE_tt__PolylineArray (670)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PolylineArray(struct soap*, const char*, int, const tt__PolylineArray *, const char*);
SOAP_FMAC3 tt__PolylineArray * SOAP_FMAC4 soap_in_tt__PolylineArray(struct soap*, const char*, tt__PolylineArray *, const char*);
SOAP_FMAC1 tt__PolylineArray * SOAP_FMAC2 soap_instantiate_tt__PolylineArray(struct soap*, int, const char*, const char*, size_t*);

inline tt__PolylineArray * soap_new_tt__PolylineArray(struct soap *soap, int n = -1) { return soap_instantiate_tt__PolylineArray(soap, n, NULL, NULL, NULL); }

inline tt__PolylineArray * soap_new_req_tt__PolylineArray(
	struct soap *soap,
	const std::vector<tt__Polyline *> & Segment)
{	tt__PolylineArray *_p = soap_new_tt__PolylineArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PolylineArray::Segment = Segment;
	}
	return _p;
}

inline tt__PolylineArray * soap_new_set_tt__PolylineArray(
	struct soap *soap,
	const std::vector<tt__Polyline *> & Segment,
	tt__PolylineArrayExtension *Extension)
{	tt__PolylineArray *_p = soap_new_tt__PolylineArray(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PolylineArray::Segment = Segment;
		_p->tt__PolylineArray::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__PolylineArray
#define soap_write_tt__PolylineArray(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PolylineArray", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PolylineArray * SOAP_FMAC4 soap_get_tt__PolylineArray(struct soap*, tt__PolylineArray *, const char*, const char*);

#ifndef soap_read_tt__PolylineArray
#define soap_read_tt__PolylineArray(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PolylineArray(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PolygonConfiguration
#define SOAP_TYPE_tt__PolygonConfiguration (669)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PolygonConfiguration(struct soap*, const char*, int, const tt__PolygonConfiguration *, const char*);
SOAP_FMAC3 tt__PolygonConfiguration * SOAP_FMAC4 soap_in_tt__PolygonConfiguration(struct soap*, const char*, tt__PolygonConfiguration *, const char*);
SOAP_FMAC1 tt__PolygonConfiguration * SOAP_FMAC2 soap_instantiate_tt__PolygonConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__PolygonConfiguration * soap_new_tt__PolygonConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__PolygonConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__PolygonConfiguration * soap_new_req_tt__PolygonConfiguration(
	struct soap *soap,
	tt__Polygon *Polygon)
{	tt__PolygonConfiguration *_p = soap_new_tt__PolygonConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PolygonConfiguration::Polygon = Polygon;
	}
	return _p;
}

inline tt__PolygonConfiguration * soap_new_set_tt__PolygonConfiguration(
	struct soap *soap,
	tt__Polygon *Polygon)
{	tt__PolygonConfiguration *_p = soap_new_tt__PolygonConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PolygonConfiguration::Polygon = Polygon;
	}
	return _p;
}

#ifndef soap_write_tt__PolygonConfiguration
#define soap_write_tt__PolygonConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PolygonConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PolygonConfiguration * SOAP_FMAC4 soap_get_tt__PolygonConfiguration(struct soap*, tt__PolygonConfiguration *, const char*, const char*);

#ifndef soap_read_tt__PolygonConfiguration
#define soap_read_tt__PolygonConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PolygonConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SupportedAnalyticsModulesExtension
#define SOAP_TYPE_tt__SupportedAnalyticsModulesExtension (668)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SupportedAnalyticsModulesExtension(struct soap*, const char*, int, const tt__SupportedAnalyticsModulesExtension *, const char*);
SOAP_FMAC3 tt__SupportedAnalyticsModulesExtension * SOAP_FMAC4 soap_in_tt__SupportedAnalyticsModulesExtension(struct soap*, const char*, tt__SupportedAnalyticsModulesExtension *, const char*);
SOAP_FMAC1 tt__SupportedAnalyticsModulesExtension * SOAP_FMAC2 soap_instantiate_tt__SupportedAnalyticsModulesExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__SupportedAnalyticsModulesExtension * soap_new_tt__SupportedAnalyticsModulesExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__SupportedAnalyticsModulesExtension(soap, n, NULL, NULL, NULL); }

inline tt__SupportedAnalyticsModulesExtension * soap_new_req_tt__SupportedAnalyticsModulesExtension(
	struct soap *soap)
{	tt__SupportedAnalyticsModulesExtension *_p = soap_new_tt__SupportedAnalyticsModulesExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__SupportedAnalyticsModulesExtension * soap_new_set_tt__SupportedAnalyticsModulesExtension(
	struct soap *soap)
{	tt__SupportedAnalyticsModulesExtension *_p = soap_new_tt__SupportedAnalyticsModulesExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__SupportedAnalyticsModulesExtension
#define soap_write_tt__SupportedAnalyticsModulesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:SupportedAnalyticsModulesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SupportedAnalyticsModulesExtension * SOAP_FMAC4 soap_get_tt__SupportedAnalyticsModulesExtension(struct soap*, tt__SupportedAnalyticsModulesExtension *, const char*, const char*);

#ifndef soap_read_tt__SupportedAnalyticsModulesExtension
#define soap_read_tt__SupportedAnalyticsModulesExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__SupportedAnalyticsModulesExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SupportedAnalyticsModules
#define SOAP_TYPE_tt__SupportedAnalyticsModules (667)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SupportedAnalyticsModules(struct soap*, const char*, int, const tt__SupportedAnalyticsModules *, const char*);
SOAP_FMAC3 tt__SupportedAnalyticsModules * SOAP_FMAC4 soap_in_tt__SupportedAnalyticsModules(struct soap*, const char*, tt__SupportedAnalyticsModules *, const char*);
SOAP_FMAC1 tt__SupportedAnalyticsModules * SOAP_FMAC2 soap_instantiate_tt__SupportedAnalyticsModules(struct soap*, int, const char*, const char*, size_t*);

inline tt__SupportedAnalyticsModules * soap_new_tt__SupportedAnalyticsModules(struct soap *soap, int n = -1) { return soap_instantiate_tt__SupportedAnalyticsModules(soap, n, NULL, NULL, NULL); }

inline tt__SupportedAnalyticsModules * soap_new_req_tt__SupportedAnalyticsModules(
	struct soap *soap)
{	tt__SupportedAnalyticsModules *_p = soap_new_tt__SupportedAnalyticsModules(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__SupportedAnalyticsModules * soap_new_set_tt__SupportedAnalyticsModules(
	struct soap *soap,
	const std::vector<std::string> & AnalyticsModuleContentSchemaLocation,
	const std::vector<tt__ConfigDescription *> & AnalyticsModuleDescription,
	tt__SupportedAnalyticsModulesExtension *Extension)
{	tt__SupportedAnalyticsModules *_p = soap_new_tt__SupportedAnalyticsModules(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__SupportedAnalyticsModules::AnalyticsModuleContentSchemaLocation = AnalyticsModuleContentSchemaLocation;
		_p->tt__SupportedAnalyticsModules::AnalyticsModuleDescription = AnalyticsModuleDescription;
		_p->tt__SupportedAnalyticsModules::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__SupportedAnalyticsModules
#define soap_write_tt__SupportedAnalyticsModules(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:SupportedAnalyticsModules", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SupportedAnalyticsModules * SOAP_FMAC4 soap_get_tt__SupportedAnalyticsModules(struct soap*, tt__SupportedAnalyticsModules *, const char*, const char*);

#ifndef soap_read_tt__SupportedAnalyticsModules
#define soap_read_tt__SupportedAnalyticsModules(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__SupportedAnalyticsModules(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SupportedRulesExtension
#define SOAP_TYPE_tt__SupportedRulesExtension (666)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SupportedRulesExtension(struct soap*, const char*, int, const tt__SupportedRulesExtension *, const char*);
SOAP_FMAC3 tt__SupportedRulesExtension * SOAP_FMAC4 soap_in_tt__SupportedRulesExtension(struct soap*, const char*, tt__SupportedRulesExtension *, const char*);
SOAP_FMAC1 tt__SupportedRulesExtension * SOAP_FMAC2 soap_instantiate_tt__SupportedRulesExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__SupportedRulesExtension * soap_new_tt__SupportedRulesExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__SupportedRulesExtension(soap, n, NULL, NULL, NULL); }

inline tt__SupportedRulesExtension * soap_new_req_tt__SupportedRulesExtension(
	struct soap *soap)
{	tt__SupportedRulesExtension *_p = soap_new_tt__SupportedRulesExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__SupportedRulesExtension * soap_new_set_tt__SupportedRulesExtension(
	struct soap *soap)
{	tt__SupportedRulesExtension *_p = soap_new_tt__SupportedRulesExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__SupportedRulesExtension
#define soap_write_tt__SupportedRulesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:SupportedRulesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SupportedRulesExtension * SOAP_FMAC4 soap_get_tt__SupportedRulesExtension(struct soap*, tt__SupportedRulesExtension *, const char*, const char*);

#ifndef soap_read_tt__SupportedRulesExtension
#define soap_read_tt__SupportedRulesExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__SupportedRulesExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SupportedRules
#define SOAP_TYPE_tt__SupportedRules (665)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SupportedRules(struct soap*, const char*, int, const tt__SupportedRules *, const char*);
SOAP_FMAC3 tt__SupportedRules * SOAP_FMAC4 soap_in_tt__SupportedRules(struct soap*, const char*, tt__SupportedRules *, const char*);
SOAP_FMAC1 tt__SupportedRules * SOAP_FMAC2 soap_instantiate_tt__SupportedRules(struct soap*, int, const char*, const char*, size_t*);

inline tt__SupportedRules * soap_new_tt__SupportedRules(struct soap *soap, int n = -1) { return soap_instantiate_tt__SupportedRules(soap, n, NULL, NULL, NULL); }

inline tt__SupportedRules * soap_new_req_tt__SupportedRules(
	struct soap *soap)
{	tt__SupportedRules *_p = soap_new_tt__SupportedRules(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__SupportedRules * soap_new_set_tt__SupportedRules(
	struct soap *soap,
	const std::vector<std::string> & RuleContentSchemaLocation,
	const std::vector<tt__ConfigDescription *> & RuleDescription,
	tt__SupportedRulesExtension *Extension)
{	tt__SupportedRules *_p = soap_new_tt__SupportedRules(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__SupportedRules::RuleContentSchemaLocation = RuleContentSchemaLocation;
		_p->tt__SupportedRules::RuleDescription = RuleDescription;
		_p->tt__SupportedRules::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__SupportedRules
#define soap_write_tt__SupportedRules(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:SupportedRules", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SupportedRules * SOAP_FMAC4 soap_get_tt__SupportedRules(struct soap*, tt__SupportedRules *, const char*, const char*);

#ifndef soap_read_tt__SupportedRules
#define soap_read_tt__SupportedRules(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__SupportedRules(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ConfigDescriptionExtension
#define SOAP_TYPE_tt__ConfigDescriptionExtension (664)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ConfigDescriptionExtension(struct soap*, const char*, int, const tt__ConfigDescriptionExtension *, const char*);
SOAP_FMAC3 tt__ConfigDescriptionExtension * SOAP_FMAC4 soap_in_tt__ConfigDescriptionExtension(struct soap*, const char*, tt__ConfigDescriptionExtension *, const char*);
SOAP_FMAC1 tt__ConfigDescriptionExtension * SOAP_FMAC2 soap_instantiate_tt__ConfigDescriptionExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ConfigDescriptionExtension * soap_new_tt__ConfigDescriptionExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ConfigDescriptionExtension(soap, n, NULL, NULL, NULL); }

inline tt__ConfigDescriptionExtension * soap_new_req_tt__ConfigDescriptionExtension(
	struct soap *soap)
{	tt__ConfigDescriptionExtension *_p = soap_new_tt__ConfigDescriptionExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ConfigDescriptionExtension * soap_new_set_tt__ConfigDescriptionExtension(
	struct soap *soap)
{	tt__ConfigDescriptionExtension *_p = soap_new_tt__ConfigDescriptionExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__ConfigDescriptionExtension
#define soap_write_tt__ConfigDescriptionExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ConfigDescriptionExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ConfigDescriptionExtension * SOAP_FMAC4 soap_get_tt__ConfigDescriptionExtension(struct soap*, tt__ConfigDescriptionExtension *, const char*, const char*);

#ifndef soap_read_tt__ConfigDescriptionExtension
#define soap_read_tt__ConfigDescriptionExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ConfigDescriptionExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ConfigDescription
#define SOAP_TYPE_tt__ConfigDescription (663)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ConfigDescription(struct soap*, const char*, int, const tt__ConfigDescription *, const char*);
SOAP_FMAC3 tt__ConfigDescription * SOAP_FMAC4 soap_in_tt__ConfigDescription(struct soap*, const char*, tt__ConfigDescription *, const char*);
SOAP_FMAC1 tt__ConfigDescription * SOAP_FMAC2 soap_instantiate_tt__ConfigDescription(struct soap*, int, const char*, const char*, size_t*);

inline tt__ConfigDescription * soap_new_tt__ConfigDescription(struct soap *soap, int n = -1) { return soap_instantiate_tt__ConfigDescription(soap, n, NULL, NULL, NULL); }

inline tt__ConfigDescription * soap_new_req_tt__ConfigDescription(
	struct soap *soap,
	tt__ItemListDescription *Parameters,
	const std::string& Name)
{	tt__ConfigDescription *_p = soap_new_tt__ConfigDescription(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ConfigDescription::Parameters = Parameters;
		_p->tt__ConfigDescription::Name = Name;
	}
	return _p;
}

inline tt__ConfigDescription * soap_new_set_tt__ConfigDescription(
	struct soap *soap,
	tt__ItemListDescription *Parameters,
	std::vector<_tt__ConfigDescription_Messages> *Messages,
	tt__ConfigDescriptionExtension *Extension,
	const std::string& Name,
	bool *fixed,
	std::string *maxInstances)
{	tt__ConfigDescription *_p = soap_new_tt__ConfigDescription(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ConfigDescription::Parameters = Parameters;
		_p->tt__ConfigDescription::Messages = Messages;
		_p->tt__ConfigDescription::Extension = Extension;
		_p->tt__ConfigDescription::Name = Name;
		_p->tt__ConfigDescription::fixed = fixed;
		_p->tt__ConfigDescription::maxInstances = maxInstances;
	}
	return _p;
}

#ifndef soap_write_tt__ConfigDescription
#define soap_write_tt__ConfigDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ConfigDescription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ConfigDescription * SOAP_FMAC4 soap_get_tt__ConfigDescription(struct soap*, tt__ConfigDescription *, const char*, const char*);

#ifndef soap_read_tt__ConfigDescription
#define soap_read_tt__ConfigDescription(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ConfigDescription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Config
#define SOAP_TYPE_tt__Config (662)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Config(struct soap*, const char*, int, const tt__Config *, const char*);
SOAP_FMAC3 tt__Config * SOAP_FMAC4 soap_in_tt__Config(struct soap*, const char*, tt__Config *, const char*);
SOAP_FMAC1 tt__Config * SOAP_FMAC2 soap_instantiate_tt__Config(struct soap*, int, const char*, const char*, size_t*);

inline tt__Config * soap_new_tt__Config(struct soap *soap, int n = -1) { return soap_instantiate_tt__Config(soap, n, NULL, NULL, NULL); }

inline tt__Config * soap_new_req_tt__Config(
	struct soap *soap,
	tt__ItemList *Parameters,
	const std::string& Name,
	const std::string& Type)
{	tt__Config *_p = soap_new_tt__Config(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Config::Parameters = Parameters;
		_p->tt__Config::Name = Name;
		_p->tt__Config::Type = Type;
	}
	return _p;
}

inline tt__Config * soap_new_set_tt__Config(
	struct soap *soap,
	tt__ItemList *Parameters,
	const std::string& Name,
	const std::string& Type)
{	tt__Config *_p = soap_new_tt__Config(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Config::Parameters = Parameters;
		_p->tt__Config::Name = Name;
		_p->tt__Config::Type = Type;
	}
	return _p;
}

#ifndef soap_write_tt__Config
#define soap_write_tt__Config(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Config", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Config * SOAP_FMAC4 soap_get_tt__Config(struct soap*, tt__Config *, const char*, const char*);

#ifndef soap_read_tt__Config
#define soap_read_tt__Config(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Config(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RuleEngineConfigurationExtension
#define SOAP_TYPE_tt__RuleEngineConfigurationExtension (661)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RuleEngineConfigurationExtension(struct soap*, const char*, int, const tt__RuleEngineConfigurationExtension *, const char*);
SOAP_FMAC3 tt__RuleEngineConfigurationExtension * SOAP_FMAC4 soap_in_tt__RuleEngineConfigurationExtension(struct soap*, const char*, tt__RuleEngineConfigurationExtension *, const char*);
SOAP_FMAC1 tt__RuleEngineConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__RuleEngineConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__RuleEngineConfigurationExtension * soap_new_tt__RuleEngineConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__RuleEngineConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__RuleEngineConfigurationExtension * soap_new_req_tt__RuleEngineConfigurationExtension(
	struct soap *soap)
{	tt__RuleEngineConfigurationExtension *_p = soap_new_tt__RuleEngineConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__RuleEngineConfigurationExtension * soap_new_set_tt__RuleEngineConfigurationExtension(
	struct soap *soap)
{	tt__RuleEngineConfigurationExtension *_p = soap_new_tt__RuleEngineConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__RuleEngineConfigurationExtension
#define soap_write_tt__RuleEngineConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:RuleEngineConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RuleEngineConfigurationExtension * SOAP_FMAC4 soap_get_tt__RuleEngineConfigurationExtension(struct soap*, tt__RuleEngineConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__RuleEngineConfigurationExtension
#define soap_read_tt__RuleEngineConfigurationExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RuleEngineConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RuleEngineConfiguration
#define SOAP_TYPE_tt__RuleEngineConfiguration (660)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RuleEngineConfiguration(struct soap*, const char*, int, const tt__RuleEngineConfiguration *, const char*);
SOAP_FMAC3 tt__RuleEngineConfiguration * SOAP_FMAC4 soap_in_tt__RuleEngineConfiguration(struct soap*, const char*, tt__RuleEngineConfiguration *, const char*);
SOAP_FMAC1 tt__RuleEngineConfiguration * SOAP_FMAC2 soap_instantiate_tt__RuleEngineConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__RuleEngineConfiguration * soap_new_tt__RuleEngineConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__RuleEngineConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__RuleEngineConfiguration * soap_new_req_tt__RuleEngineConfiguration(
	struct soap *soap)
{	tt__RuleEngineConfiguration *_p = soap_new_tt__RuleEngineConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__RuleEngineConfiguration * soap_new_set_tt__RuleEngineConfiguration(
	struct soap *soap,
	const std::vector<tt__Config *> & Rule,
	tt__RuleEngineConfigurationExtension *Extension)
{	tt__RuleEngineConfiguration *_p = soap_new_tt__RuleEngineConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RuleEngineConfiguration::Rule = Rule;
		_p->tt__RuleEngineConfiguration::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__RuleEngineConfiguration
#define soap_write_tt__RuleEngineConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:RuleEngineConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RuleEngineConfiguration * SOAP_FMAC4 soap_get_tt__RuleEngineConfiguration(struct soap*, tt__RuleEngineConfiguration *, const char*, const char*);

#ifndef soap_read_tt__RuleEngineConfiguration
#define soap_read_tt__RuleEngineConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RuleEngineConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AnalyticsEngineConfigurationExtension
#define SOAP_TYPE_tt__AnalyticsEngineConfigurationExtension (659)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnalyticsEngineConfigurationExtension(struct soap*, const char*, int, const tt__AnalyticsEngineConfigurationExtension *, const char*);
SOAP_FMAC3 tt__AnalyticsEngineConfigurationExtension * SOAP_FMAC4 soap_in_tt__AnalyticsEngineConfigurationExtension(struct soap*, const char*, tt__AnalyticsEngineConfigurationExtension *, const char*);
SOAP_FMAC1 tt__AnalyticsEngineConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__AnalyticsEngineConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnalyticsEngineConfigurationExtension * soap_new_tt__AnalyticsEngineConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnalyticsEngineConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__AnalyticsEngineConfigurationExtension * soap_new_req_tt__AnalyticsEngineConfigurationExtension(
	struct soap *soap)
{	tt__AnalyticsEngineConfigurationExtension *_p = soap_new_tt__AnalyticsEngineConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__AnalyticsEngineConfigurationExtension * soap_new_set_tt__AnalyticsEngineConfigurationExtension(
	struct soap *soap)
{	tt__AnalyticsEngineConfigurationExtension *_p = soap_new_tt__AnalyticsEngineConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__AnalyticsEngineConfigurationExtension
#define soap_write_tt__AnalyticsEngineConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AnalyticsEngineConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsEngineConfigurationExtension * SOAP_FMAC4 soap_get_tt__AnalyticsEngineConfigurationExtension(struct soap*, tt__AnalyticsEngineConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__AnalyticsEngineConfigurationExtension
#define soap_read_tt__AnalyticsEngineConfigurationExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AnalyticsEngineConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AnalyticsEngineConfiguration
#define SOAP_TYPE_tt__AnalyticsEngineConfiguration (658)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnalyticsEngineConfiguration(struct soap*, const char*, int, const tt__AnalyticsEngineConfiguration *, const char*);
SOAP_FMAC3 tt__AnalyticsEngineConfiguration * SOAP_FMAC4 soap_in_tt__AnalyticsEngineConfiguration(struct soap*, const char*, tt__AnalyticsEngineConfiguration *, const char*);
SOAP_FMAC1 tt__AnalyticsEngineConfiguration * SOAP_FMAC2 soap_instantiate_tt__AnalyticsEngineConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnalyticsEngineConfiguration * soap_new_tt__AnalyticsEngineConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnalyticsEngineConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__AnalyticsEngineConfiguration * soap_new_req_tt__AnalyticsEngineConfiguration(
	struct soap *soap)
{	tt__AnalyticsEngineConfiguration *_p = soap_new_tt__AnalyticsEngineConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__AnalyticsEngineConfiguration * soap_new_set_tt__AnalyticsEngineConfiguration(
	struct soap *soap,
	const std::vector<tt__Config *> & AnalyticsModule,
	tt__AnalyticsEngineConfigurationExtension *Extension)
{	tt__AnalyticsEngineConfiguration *_p = soap_new_tt__AnalyticsEngineConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AnalyticsEngineConfiguration::AnalyticsModule = AnalyticsModule;
		_p->tt__AnalyticsEngineConfiguration::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__AnalyticsEngineConfiguration
#define soap_write_tt__AnalyticsEngineConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AnalyticsEngineConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsEngineConfiguration * SOAP_FMAC4 soap_get_tt__AnalyticsEngineConfiguration(struct soap*, tt__AnalyticsEngineConfiguration *, const char*, const char*);

#ifndef soap_read_tt__AnalyticsEngineConfiguration
#define soap_read_tt__AnalyticsEngineConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AnalyticsEngineConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Polyline
#define SOAP_TYPE_tt__Polyline (657)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Polyline(struct soap*, const char*, int, const tt__Polyline *, const char*);
SOAP_FMAC3 tt__Polyline * SOAP_FMAC4 soap_in_tt__Polyline(struct soap*, const char*, tt__Polyline *, const char*);
SOAP_FMAC1 tt__Polyline * SOAP_FMAC2 soap_instantiate_tt__Polyline(struct soap*, int, const char*, const char*, size_t*);

inline tt__Polyline * soap_new_tt__Polyline(struct soap *soap, int n = -1) { return soap_instantiate_tt__Polyline(soap, n, NULL, NULL, NULL); }

inline tt__Polyline * soap_new_req_tt__Polyline(
	struct soap *soap,
	const std::vector<tt__Vector *> & Point)
{	tt__Polyline *_p = soap_new_tt__Polyline(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Polyline::Point = Point;
	}
	return _p;
}

inline tt__Polyline * soap_new_set_tt__Polyline(
	struct soap *soap,
	const std::vector<tt__Vector *> & Point)
{	tt__Polyline *_p = soap_new_tt__Polyline(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Polyline::Point = Point;
	}
	return _p;
}

#ifndef soap_write_tt__Polyline
#define soap_write_tt__Polyline(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Polyline", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Polyline * SOAP_FMAC4 soap_get_tt__Polyline(struct soap*, tt__Polyline *, const char*, const char*);

#ifndef soap_read_tt__Polyline
#define soap_read_tt__Polyline(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Polyline(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ItemListDescriptionExtension
#define SOAP_TYPE_tt__ItemListDescriptionExtension (656)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ItemListDescriptionExtension(struct soap*, const char*, int, const tt__ItemListDescriptionExtension *, const char*);
SOAP_FMAC3 tt__ItemListDescriptionExtension * SOAP_FMAC4 soap_in_tt__ItemListDescriptionExtension(struct soap*, const char*, tt__ItemListDescriptionExtension *, const char*);
SOAP_FMAC1 tt__ItemListDescriptionExtension * SOAP_FMAC2 soap_instantiate_tt__ItemListDescriptionExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ItemListDescriptionExtension * soap_new_tt__ItemListDescriptionExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ItemListDescriptionExtension(soap, n, NULL, NULL, NULL); }

inline tt__ItemListDescriptionExtension * soap_new_req_tt__ItemListDescriptionExtension(
	struct soap *soap)
{	tt__ItemListDescriptionExtension *_p = soap_new_tt__ItemListDescriptionExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ItemListDescriptionExtension * soap_new_set_tt__ItemListDescriptionExtension(
	struct soap *soap)
{	tt__ItemListDescriptionExtension *_p = soap_new_tt__ItemListDescriptionExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__ItemListDescriptionExtension
#define soap_write_tt__ItemListDescriptionExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ItemListDescriptionExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ItemListDescriptionExtension * SOAP_FMAC4 soap_get_tt__ItemListDescriptionExtension(struct soap*, tt__ItemListDescriptionExtension *, const char*, const char*);

#ifndef soap_read_tt__ItemListDescriptionExtension
#define soap_read_tt__ItemListDescriptionExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ItemListDescriptionExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ItemListDescription
#define SOAP_TYPE_tt__ItemListDescription (655)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ItemListDescription(struct soap*, const char*, int, const tt__ItemListDescription *, const char*);
SOAP_FMAC3 tt__ItemListDescription * SOAP_FMAC4 soap_in_tt__ItemListDescription(struct soap*, const char*, tt__ItemListDescription *, const char*);
SOAP_FMAC1 tt__ItemListDescription * SOAP_FMAC2 soap_instantiate_tt__ItemListDescription(struct soap*, int, const char*, const char*, size_t*);

inline tt__ItemListDescription * soap_new_tt__ItemListDescription(struct soap *soap, int n = -1) { return soap_instantiate_tt__ItemListDescription(soap, n, NULL, NULL, NULL); }

inline tt__ItemListDescription * soap_new_req_tt__ItemListDescription(
	struct soap *soap)
{	tt__ItemListDescription *_p = soap_new_tt__ItemListDescription(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ItemListDescription * soap_new_set_tt__ItemListDescription(
	struct soap *soap,
	std::vector<_tt__ItemListDescription_SimpleItemDescription> *SimpleItemDescription,
	std::vector<_tt__ItemListDescription_ElementItemDescription> *ElementItemDescription,
	tt__ItemListDescriptionExtension *Extension)
{	tt__ItemListDescription *_p = soap_new_tt__ItemListDescription(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ItemListDescription::SimpleItemDescription = SimpleItemDescription;
		_p->tt__ItemListDescription::ElementItemDescription = ElementItemDescription;
		_p->tt__ItemListDescription::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__ItemListDescription
#define soap_write_tt__ItemListDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ItemListDescription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ItemListDescription * SOAP_FMAC4 soap_get_tt__ItemListDescription(struct soap*, tt__ItemListDescription *, const char*, const char*);

#ifndef soap_read_tt__ItemListDescription
#define soap_read_tt__ItemListDescription(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ItemListDescription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__MessageDescriptionExtension
#define SOAP_TYPE_tt__MessageDescriptionExtension (654)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MessageDescriptionExtension(struct soap*, const char*, int, const tt__MessageDescriptionExtension *, const char*);
SOAP_FMAC3 tt__MessageDescriptionExtension * SOAP_FMAC4 soap_in_tt__MessageDescriptionExtension(struct soap*, const char*, tt__MessageDescriptionExtension *, const char*);
SOAP_FMAC1 tt__MessageDescriptionExtension * SOAP_FMAC2 soap_instantiate_tt__MessageDescriptionExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__MessageDescriptionExtension * soap_new_tt__MessageDescriptionExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__MessageDescriptionExtension(soap, n, NULL, NULL, NULL); }

inline tt__MessageDescriptionExtension * soap_new_req_tt__MessageDescriptionExtension(
	struct soap *soap)
{	tt__MessageDescriptionExtension *_p = soap_new_tt__MessageDescriptionExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__MessageDescriptionExtension * soap_new_set_tt__MessageDescriptionExtension(
	struct soap *soap)
{	tt__MessageDescriptionExtension *_p = soap_new_tt__MessageDescriptionExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__MessageDescriptionExtension
#define soap_write_tt__MessageDescriptionExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:MessageDescriptionExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MessageDescriptionExtension * SOAP_FMAC4 soap_get_tt__MessageDescriptionExtension(struct soap*, tt__MessageDescriptionExtension *, const char*, const char*);

#ifndef soap_read_tt__MessageDescriptionExtension
#define soap_read_tt__MessageDescriptionExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MessageDescriptionExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__MessageDescription
#define SOAP_TYPE_tt__MessageDescription (653)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MessageDescription(struct soap*, const char*, int, const tt__MessageDescription *, const char*);
SOAP_FMAC3 tt__MessageDescription * SOAP_FMAC4 soap_in_tt__MessageDescription(struct soap*, const char*, tt__MessageDescription *, const char*);
SOAP_FMAC1 tt__MessageDescription * SOAP_FMAC2 soap_instantiate_tt__MessageDescription(struct soap*, int, const char*, const char*, size_t*);

inline tt__MessageDescription * soap_new_tt__MessageDescription(struct soap *soap, int n = -1) { return soap_instantiate_tt__MessageDescription(soap, n, NULL, NULL, NULL); }

inline tt__MessageDescription * soap_new_req_tt__MessageDescription(
	struct soap *soap)
{	tt__MessageDescription *_p = soap_new_tt__MessageDescription(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__MessageDescription * soap_new_set_tt__MessageDescription(
	struct soap *soap,
	tt__ItemListDescription *Source,
	tt__ItemListDescription *Key,
	tt__ItemListDescription *Data,
	tt__MessageDescriptionExtension *Extension,
	bool *IsProperty)
{	tt__MessageDescription *_p = soap_new_tt__MessageDescription(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__MessageDescription::Source = Source;
		_p->tt__MessageDescription::Key = Key;
		_p->tt__MessageDescription::Data = Data;
		_p->tt__MessageDescription::Extension = Extension;
		_p->tt__MessageDescription::IsProperty = IsProperty;
	}
	return _p;
}

#ifndef soap_write_tt__MessageDescription
#define soap_write_tt__MessageDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:MessageDescription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MessageDescription * SOAP_FMAC4 soap_get_tt__MessageDescription(struct soap*, tt__MessageDescription *, const char*, const char*);

#ifndef soap_read_tt__MessageDescription
#define soap_read_tt__MessageDescription(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MessageDescription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ItemListExtension
#define SOAP_TYPE_tt__ItemListExtension (652)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ItemListExtension(struct soap*, const char*, int, const tt__ItemListExtension *, const char*);
SOAP_FMAC3 tt__ItemListExtension * SOAP_FMAC4 soap_in_tt__ItemListExtension(struct soap*, const char*, tt__ItemListExtension *, const char*);
SOAP_FMAC1 tt__ItemListExtension * SOAP_FMAC2 soap_instantiate_tt__ItemListExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ItemListExtension * soap_new_tt__ItemListExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ItemListExtension(soap, n, NULL, NULL, NULL); }

inline tt__ItemListExtension * soap_new_req_tt__ItemListExtension(
	struct soap *soap)
{	tt__ItemListExtension *_p = soap_new_tt__ItemListExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ItemListExtension * soap_new_set_tt__ItemListExtension(
	struct soap *soap)
{	tt__ItemListExtension *_p = soap_new_tt__ItemListExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__ItemListExtension
#define soap_write_tt__ItemListExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ItemListExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ItemListExtension * SOAP_FMAC4 soap_get_tt__ItemListExtension(struct soap*, tt__ItemListExtension *, const char*, const char*);

#ifndef soap_read_tt__ItemListExtension
#define soap_read_tt__ItemListExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ItemListExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ItemList
#define SOAP_TYPE_tt__ItemList (651)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ItemList(struct soap*, const char*, int, const tt__ItemList *, const char*);
SOAP_FMAC3 tt__ItemList * SOAP_FMAC4 soap_in_tt__ItemList(struct soap*, const char*, tt__ItemList *, const char*);
SOAP_FMAC1 tt__ItemList * SOAP_FMAC2 soap_instantiate_tt__ItemList(struct soap*, int, const char*, const char*, size_t*);

inline tt__ItemList * soap_new_tt__ItemList(struct soap *soap, int n = -1) { return soap_instantiate_tt__ItemList(soap, n, NULL, NULL, NULL); }

inline tt__ItemList * soap_new_req_tt__ItemList(
	struct soap *soap)
{	tt__ItemList *_p = soap_new_tt__ItemList(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ItemList * soap_new_set_tt__ItemList(
	struct soap *soap,
	std::vector<_tt__ItemList_SimpleItem> *SimpleItem,
	std::vector<_tt__ItemList_ElementItem> *ElementItem,
	tt__ItemListExtension *Extension)
{	tt__ItemList *_p = soap_new_tt__ItemList(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ItemList::SimpleItem = SimpleItem;
		_p->tt__ItemList::ElementItem = ElementItem;
		_p->tt__ItemList::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__ItemList
#define soap_write_tt__ItemList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ItemList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ItemList * SOAP_FMAC4 soap_get_tt__ItemList(struct soap*, tt__ItemList *, const char*, const char*);

#ifndef soap_read_tt__ItemList
#define soap_read_tt__ItemList(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ItemList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__MessageExtension
#define SOAP_TYPE_tt__MessageExtension (650)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MessageExtension(struct soap*, const char*, int, const tt__MessageExtension *, const char*);
SOAP_FMAC3 tt__MessageExtension * SOAP_FMAC4 soap_in_tt__MessageExtension(struct soap*, const char*, tt__MessageExtension *, const char*);
SOAP_FMAC1 tt__MessageExtension * SOAP_FMAC2 soap_instantiate_tt__MessageExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__MessageExtension * soap_new_tt__MessageExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__MessageExtension(soap, n, NULL, NULL, NULL); }

inline tt__MessageExtension * soap_new_req_tt__MessageExtension(
	struct soap *soap)
{	tt__MessageExtension *_p = soap_new_tt__MessageExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__MessageExtension * soap_new_set_tt__MessageExtension(
	struct soap *soap)
{	tt__MessageExtension *_p = soap_new_tt__MessageExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__MessageExtension
#define soap_write_tt__MessageExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:MessageExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MessageExtension * SOAP_FMAC4 soap_get_tt__MessageExtension(struct soap*, tt__MessageExtension *, const char*, const char*);

#ifndef soap_read_tt__MessageExtension
#define soap_read_tt__MessageExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MessageExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__NoiseReductionOptions
#define SOAP_TYPE_tt__NoiseReductionOptions (649)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NoiseReductionOptions(struct soap*, const char*, int, const tt__NoiseReductionOptions *, const char*);
SOAP_FMAC3 tt__NoiseReductionOptions * SOAP_FMAC4 soap_in_tt__NoiseReductionOptions(struct soap*, const char*, tt__NoiseReductionOptions *, const char*);
SOAP_FMAC1 tt__NoiseReductionOptions * SOAP_FMAC2 soap_instantiate_tt__NoiseReductionOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__NoiseReductionOptions * soap_new_tt__NoiseReductionOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__NoiseReductionOptions(soap, n, NULL, NULL, NULL); }

inline tt__NoiseReductionOptions * soap_new_req_tt__NoiseReductionOptions(
	struct soap *soap,
	bool Level)
{	tt__NoiseReductionOptions *_p = soap_new_tt__NoiseReductionOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__NoiseReductionOptions::Level = Level;
	}
	return _p;
}

inline tt__NoiseReductionOptions * soap_new_set_tt__NoiseReductionOptions(
	struct soap *soap,
	bool Level)
{	tt__NoiseReductionOptions *_p = soap_new_tt__NoiseReductionOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__NoiseReductionOptions::Level = Level;
	}
	return _p;
}

#ifndef soap_write_tt__NoiseReductionOptions
#define soap_write_tt__NoiseReductionOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:NoiseReductionOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NoiseReductionOptions * SOAP_FMAC4 soap_get_tt__NoiseReductionOptions(struct soap*, tt__NoiseReductionOptions *, const char*, const char*);

#ifndef soap_read_tt__NoiseReductionOptions
#define soap_read_tt__NoiseReductionOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__NoiseReductionOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__DefoggingOptions
#define SOAP_TYPE_tt__DefoggingOptions (648)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DefoggingOptions(struct soap*, const char*, int, const tt__DefoggingOptions *, const char*);
SOAP_FMAC3 tt__DefoggingOptions * SOAP_FMAC4 soap_in_tt__DefoggingOptions(struct soap*, const char*, tt__DefoggingOptions *, const char*);
SOAP_FMAC1 tt__DefoggingOptions * SOAP_FMAC2 soap_instantiate_tt__DefoggingOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__DefoggingOptions * soap_new_tt__DefoggingOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__DefoggingOptions(soap, n, NULL, NULL, NULL); }

inline tt__DefoggingOptions * soap_new_req_tt__DefoggingOptions(
	struct soap *soap,
	const std::vector<std::string> & Mode,
	bool Level)
{	tt__DefoggingOptions *_p = soap_new_tt__DefoggingOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__DefoggingOptions::Mode = Mode;
		_p->tt__DefoggingOptions::Level = Level;
	}
	return _p;
}

inline tt__DefoggingOptions * soap_new_set_tt__DefoggingOptions(
	struct soap *soap,
	const std::vector<std::string> & Mode,
	bool Level)
{	tt__DefoggingOptions *_p = soap_new_tt__DefoggingOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__DefoggingOptions::Mode = Mode;
		_p->tt__DefoggingOptions::Level = Level;
	}
	return _p;
}

#ifndef soap_write_tt__DefoggingOptions
#define soap_write_tt__DefoggingOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:DefoggingOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DefoggingOptions * SOAP_FMAC4 soap_get_tt__DefoggingOptions(struct soap*, tt__DefoggingOptions *, const char*, const char*);

#ifndef soap_read_tt__DefoggingOptions
#define soap_read_tt__DefoggingOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__DefoggingOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ToneCompensationOptions
#define SOAP_TYPE_tt__ToneCompensationOptions (647)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ToneCompensationOptions(struct soap*, const char*, int, const tt__ToneCompensationOptions *, const char*);
SOAP_FMAC3 tt__ToneCompensationOptions * SOAP_FMAC4 soap_in_tt__ToneCompensationOptions(struct soap*, const char*, tt__ToneCompensationOptions *, const char*);
SOAP_FMAC1 tt__ToneCompensationOptions * SOAP_FMAC2 soap_instantiate_tt__ToneCompensationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__ToneCompensationOptions * soap_new_tt__ToneCompensationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__ToneCompensationOptions(soap, n, NULL, NULL, NULL); }

inline tt__ToneCompensationOptions * soap_new_req_tt__ToneCompensationOptions(
	struct soap *soap,
	const std::vector<std::string> & Mode,
	bool Level)
{	tt__ToneCompensationOptions *_p = soap_new_tt__ToneCompensationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ToneCompensationOptions::Mode = Mode;
		_p->tt__ToneCompensationOptions::Level = Level;
	}
	return _p;
}

inline tt__ToneCompensationOptions * soap_new_set_tt__ToneCompensationOptions(
	struct soap *soap,
	const std::vector<std::string> & Mode,
	bool Level)
{	tt__ToneCompensationOptions *_p = soap_new_tt__ToneCompensationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ToneCompensationOptions::Mode = Mode;
		_p->tt__ToneCompensationOptions::Level = Level;
	}
	return _p;
}

#ifndef soap_write_tt__ToneCompensationOptions
#define soap_write_tt__ToneCompensationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ToneCompensationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ToneCompensationOptions * SOAP_FMAC4 soap_get_tt__ToneCompensationOptions(struct soap*, tt__ToneCompensationOptions *, const char*, const char*);

#ifndef soap_read_tt__ToneCompensationOptions
#define soap_read_tt__ToneCompensationOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ToneCompensationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__FocusOptions20Extension
#define SOAP_TYPE_tt__FocusOptions20Extension (646)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FocusOptions20Extension(struct soap*, const char*, int, const tt__FocusOptions20Extension *, const char*);
SOAP_FMAC3 tt__FocusOptions20Extension * SOAP_FMAC4 soap_in_tt__FocusOptions20Extension(struct soap*, const char*, tt__FocusOptions20Extension *, const char*);
SOAP_FMAC1 tt__FocusOptions20Extension * SOAP_FMAC2 soap_instantiate_tt__FocusOptions20Extension(struct soap*, int, const char*, const char*, size_t*);

inline tt__FocusOptions20Extension * soap_new_tt__FocusOptions20Extension(struct soap *soap, int n = -1) { return soap_instantiate_tt__FocusOptions20Extension(soap, n, NULL, NULL, NULL); }

inline tt__FocusOptions20Extension * soap_new_req_tt__FocusOptions20Extension(
	struct soap *soap)
{	tt__FocusOptions20Extension *_p = soap_new_tt__FocusOptions20Extension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__FocusOptions20Extension * soap_new_set_tt__FocusOptions20Extension(
	struct soap *soap)
{	tt__FocusOptions20Extension *_p = soap_new_tt__FocusOptions20Extension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__FocusOptions20Extension
#define soap_write_tt__FocusOptions20Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:FocusOptions20Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusOptions20Extension * SOAP_FMAC4 soap_get_tt__FocusOptions20Extension(struct soap*, tt__FocusOptions20Extension *, const char*, const char*);

#ifndef soap_read_tt__FocusOptions20Extension
#define soap_read_tt__FocusOptions20Extension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__FocusOptions20Extension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__FocusOptions20
#define SOAP_TYPE_tt__FocusOptions20 (645)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FocusOptions20(struct soap*, const char*, int, const tt__FocusOptions20 *, const char*);
SOAP_FMAC3 tt__FocusOptions20 * SOAP_FMAC4 soap_in_tt__FocusOptions20(struct soap*, const char*, tt__FocusOptions20 *, const char*);
SOAP_FMAC1 tt__FocusOptions20 * SOAP_FMAC2 soap_instantiate_tt__FocusOptions20(struct soap*, int, const char*, const char*, size_t*);

inline tt__FocusOptions20 * soap_new_tt__FocusOptions20(struct soap *soap, int n = -1) { return soap_instantiate_tt__FocusOptions20(soap, n, NULL, NULL, NULL); }

inline tt__FocusOptions20 * soap_new_req_tt__FocusOptions20(
	struct soap *soap)
{	tt__FocusOptions20 *_p = soap_new_tt__FocusOptions20(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__FocusOptions20 * soap_new_set_tt__FocusOptions20(
	struct soap *soap,
	const std::vector<enum tt__AutoFocusMode> & AutoFocusModes,
	tt__FloatRange *DefaultSpeed,
	tt__FloatRange *NearLimit,
	tt__FloatRange *FarLimit,
	tt__FocusOptions20Extension *Extension)
{	tt__FocusOptions20 *_p = soap_new_tt__FocusOptions20(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FocusOptions20::AutoFocusModes = AutoFocusModes;
		_p->tt__FocusOptions20::DefaultSpeed = DefaultSpeed;
		_p->tt__FocusOptions20::NearLimit = NearLimit;
		_p->tt__FocusOptions20::FarLimit = FarLimit;
		_p->tt__FocusOptions20::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__FocusOptions20
#define soap_write_tt__FocusOptions20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:FocusOptions20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusOptions20 * SOAP_FMAC4 soap_get_tt__FocusOptions20(struct soap*, tt__FocusOptions20 *, const char*, const char*);

#ifndef soap_read_tt__FocusOptions20
#define soap_read_tt__FocusOptions20(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__FocusOptions20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__WhiteBalanceOptions20Extension
#define SOAP_TYPE_tt__WhiteBalanceOptions20Extension (644)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__WhiteBalanceOptions20Extension(struct soap*, const char*, int, const tt__WhiteBalanceOptions20Extension *, const char*);
SOAP_FMAC3 tt__WhiteBalanceOptions20Extension * SOAP_FMAC4 soap_in_tt__WhiteBalanceOptions20Extension(struct soap*, const char*, tt__WhiteBalanceOptions20Extension *, const char*);
SOAP_FMAC1 tt__WhiteBalanceOptions20Extension * SOAP_FMAC2 soap_instantiate_tt__WhiteBalanceOptions20Extension(struct soap*, int, const char*, const char*, size_t*);

inline tt__WhiteBalanceOptions20Extension * soap_new_tt__WhiteBalanceOptions20Extension(struct soap *soap, int n = -1) { return soap_instantiate_tt__WhiteBalanceOptions20Extension(soap, n, NULL, NULL, NULL); }

inline tt__WhiteBalanceOptions20Extension * soap_new_req_tt__WhiteBalanceOptions20Extension(
	struct soap *soap)
{	tt__WhiteBalanceOptions20Extension *_p = soap_new_tt__WhiteBalanceOptions20Extension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__WhiteBalanceOptions20Extension * soap_new_set_tt__WhiteBalanceOptions20Extension(
	struct soap *soap)
{	tt__WhiteBalanceOptions20Extension *_p = soap_new_tt__WhiteBalanceOptions20Extension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__WhiteBalanceOptions20Extension
#define soap_write_tt__WhiteBalanceOptions20Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:WhiteBalanceOptions20Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WhiteBalanceOptions20Extension * SOAP_FMAC4 soap_get_tt__WhiteBalanceOptions20Extension(struct soap*, tt__WhiteBalanceOptions20Extension *, const char*, const char*);

#ifndef soap_read_tt__WhiteBalanceOptions20Extension
#define soap_read_tt__WhiteBalanceOptions20Extension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__WhiteBalanceOptions20Extension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__WhiteBalanceOptions20
#define SOAP_TYPE_tt__WhiteBalanceOptions20 (643)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__WhiteBalanceOptions20(struct soap*, const char*, int, const tt__WhiteBalanceOptions20 *, const char*);
SOAP_FMAC3 tt__WhiteBalanceOptions20 * SOAP_FMAC4 soap_in_tt__WhiteBalanceOptions20(struct soap*, const char*, tt__WhiteBalanceOptions20 *, const char*);
SOAP_FMAC1 tt__WhiteBalanceOptions20 * SOAP_FMAC2 soap_instantiate_tt__WhiteBalanceOptions20(struct soap*, int, const char*, const char*, size_t*);

inline tt__WhiteBalanceOptions20 * soap_new_tt__WhiteBalanceOptions20(struct soap *soap, int n = -1) { return soap_instantiate_tt__WhiteBalanceOptions20(soap, n, NULL, NULL, NULL); }

inline tt__WhiteBalanceOptions20 * soap_new_req_tt__WhiteBalanceOptions20(
	struct soap *soap,
	const std::vector<enum tt__WhiteBalanceMode> & Mode)
{	tt__WhiteBalanceOptions20 *_p = soap_new_tt__WhiteBalanceOptions20(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__WhiteBalanceOptions20::Mode = Mode;
	}
	return _p;
}

inline tt__WhiteBalanceOptions20 * soap_new_set_tt__WhiteBalanceOptions20(
	struct soap *soap,
	const std::vector<enum tt__WhiteBalanceMode> & Mode,
	tt__FloatRange *YrGain,
	tt__FloatRange *YbGain,
	tt__WhiteBalanceOptions20Extension *Extension)
{	tt__WhiteBalanceOptions20 *_p = soap_new_tt__WhiteBalanceOptions20(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__WhiteBalanceOptions20::Mode = Mode;
		_p->tt__WhiteBalanceOptions20::YrGain = YrGain;
		_p->tt__WhiteBalanceOptions20::YbGain = YbGain;
		_p->tt__WhiteBalanceOptions20::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__WhiteBalanceOptions20
#define soap_write_tt__WhiteBalanceOptions20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:WhiteBalanceOptions20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WhiteBalanceOptions20 * SOAP_FMAC4 soap_get_tt__WhiteBalanceOptions20(struct soap*, tt__WhiteBalanceOptions20 *, const char*, const char*);

#ifndef soap_read_tt__WhiteBalanceOptions20
#define soap_read_tt__WhiteBalanceOptions20(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__WhiteBalanceOptions20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__FocusConfiguration20Extension
#define SOAP_TYPE_tt__FocusConfiguration20Extension (642)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FocusConfiguration20Extension(struct soap*, const char*, int, const tt__FocusConfiguration20Extension *, const char*);
SOAP_FMAC3 tt__FocusConfiguration20Extension * SOAP_FMAC4 soap_in_tt__FocusConfiguration20Extension(struct soap*, const char*, tt__FocusConfiguration20Extension *, const char*);
SOAP_FMAC1 tt__FocusConfiguration20Extension * SOAP_FMAC2 soap_instantiate_tt__FocusConfiguration20Extension(struct soap*, int, const char*, const char*, size_t*);

inline tt__FocusConfiguration20Extension * soap_new_tt__FocusConfiguration20Extension(struct soap *soap, int n = -1) { return soap_instantiate_tt__FocusConfiguration20Extension(soap, n, NULL, NULL, NULL); }

inline tt__FocusConfiguration20Extension * soap_new_req_tt__FocusConfiguration20Extension(
	struct soap *soap)
{	tt__FocusConfiguration20Extension *_p = soap_new_tt__FocusConfiguration20Extension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__FocusConfiguration20Extension * soap_new_set_tt__FocusConfiguration20Extension(
	struct soap *soap)
{	tt__FocusConfiguration20Extension *_p = soap_new_tt__FocusConfiguration20Extension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__FocusConfiguration20Extension
#define soap_write_tt__FocusConfiguration20Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:FocusConfiguration20Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusConfiguration20Extension * SOAP_FMAC4 soap_get_tt__FocusConfiguration20Extension(struct soap*, tt__FocusConfiguration20Extension *, const char*, const char*);

#ifndef soap_read_tt__FocusConfiguration20Extension
#define soap_read_tt__FocusConfiguration20Extension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__FocusConfiguration20Extension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__FocusConfiguration20
#define SOAP_TYPE_tt__FocusConfiguration20 (641)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FocusConfiguration20(struct soap*, const char*, int, const tt__FocusConfiguration20 *, const char*);
SOAP_FMAC3 tt__FocusConfiguration20 * SOAP_FMAC4 soap_in_tt__FocusConfiguration20(struct soap*, const char*, tt__FocusConfiguration20 *, const char*);
SOAP_FMAC1 tt__FocusConfiguration20 * SOAP_FMAC2 soap_instantiate_tt__FocusConfiguration20(struct soap*, int, const char*, const char*, size_t*);

inline tt__FocusConfiguration20 * soap_new_tt__FocusConfiguration20(struct soap *soap, int n = -1) { return soap_instantiate_tt__FocusConfiguration20(soap, n, NULL, NULL, NULL); }

inline tt__FocusConfiguration20 * soap_new_req_tt__FocusConfiguration20(
	struct soap *soap,
	enum tt__AutoFocusMode AutoFocusMode)
{	tt__FocusConfiguration20 *_p = soap_new_tt__FocusConfiguration20(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FocusConfiguration20::AutoFocusMode = AutoFocusMode;
	}
	return _p;
}

inline tt__FocusConfiguration20 * soap_new_set_tt__FocusConfiguration20(
	struct soap *soap,
	enum tt__AutoFocusMode AutoFocusMode,
	float *DefaultSpeed,
	float *NearLimit,
	float *FarLimit,
	tt__FocusConfiguration20Extension *Extension)
{	tt__FocusConfiguration20 *_p = soap_new_tt__FocusConfiguration20(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FocusConfiguration20::AutoFocusMode = AutoFocusMode;
		_p->tt__FocusConfiguration20::DefaultSpeed = DefaultSpeed;
		_p->tt__FocusConfiguration20::NearLimit = NearLimit;
		_p->tt__FocusConfiguration20::FarLimit = FarLimit;
		_p->tt__FocusConfiguration20::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__FocusConfiguration20
#define soap_write_tt__FocusConfiguration20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:FocusConfiguration20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusConfiguration20 * SOAP_FMAC4 soap_get_tt__FocusConfiguration20(struct soap*, tt__FocusConfiguration20 *, const char*, const char*);

#ifndef soap_read_tt__FocusConfiguration20
#define soap_read_tt__FocusConfiguration20(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__FocusConfiguration20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__WhiteBalance20Extension
#define SOAP_TYPE_tt__WhiteBalance20Extension (640)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__WhiteBalance20Extension(struct soap*, const char*, int, const tt__WhiteBalance20Extension *, const char*);
SOAP_FMAC3 tt__WhiteBalance20Extension * SOAP_FMAC4 soap_in_tt__WhiteBalance20Extension(struct soap*, const char*, tt__WhiteBalance20Extension *, const char*);
SOAP_FMAC1 tt__WhiteBalance20Extension * SOAP_FMAC2 soap_instantiate_tt__WhiteBalance20Extension(struct soap*, int, const char*, const char*, size_t*);

inline tt__WhiteBalance20Extension * soap_new_tt__WhiteBalance20Extension(struct soap *soap, int n = -1) { return soap_instantiate_tt__WhiteBalance20Extension(soap, n, NULL, NULL, NULL); }

inline tt__WhiteBalance20Extension * soap_new_req_tt__WhiteBalance20Extension(
	struct soap *soap)
{	tt__WhiteBalance20Extension *_p = soap_new_tt__WhiteBalance20Extension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__WhiteBalance20Extension * soap_new_set_tt__WhiteBalance20Extension(
	struct soap *soap)
{	tt__WhiteBalance20Extension *_p = soap_new_tt__WhiteBalance20Extension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__WhiteBalance20Extension
#define soap_write_tt__WhiteBalance20Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:WhiteBalance20Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WhiteBalance20Extension * SOAP_FMAC4 soap_get_tt__WhiteBalance20Extension(struct soap*, tt__WhiteBalance20Extension *, const char*, const char*);

#ifndef soap_read_tt__WhiteBalance20Extension
#define soap_read_tt__WhiteBalance20Extension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__WhiteBalance20Extension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__WhiteBalance20
#define SOAP_TYPE_tt__WhiteBalance20 (639)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__WhiteBalance20(struct soap*, const char*, int, const tt__WhiteBalance20 *, const char*);
SOAP_FMAC3 tt__WhiteBalance20 * SOAP_FMAC4 soap_in_tt__WhiteBalance20(struct soap*, const char*, tt__WhiteBalance20 *, const char*);
SOAP_FMAC1 tt__WhiteBalance20 * SOAP_FMAC2 soap_instantiate_tt__WhiteBalance20(struct soap*, int, const char*, const char*, size_t*);

inline tt__WhiteBalance20 * soap_new_tt__WhiteBalance20(struct soap *soap, int n = -1) { return soap_instantiate_tt__WhiteBalance20(soap, n, NULL, NULL, NULL); }

inline tt__WhiteBalance20 * soap_new_req_tt__WhiteBalance20(
	struct soap *soap,
	enum tt__WhiteBalanceMode Mode)
{	tt__WhiteBalance20 *_p = soap_new_tt__WhiteBalance20(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__WhiteBalance20::Mode = Mode;
	}
	return _p;
}

inline tt__WhiteBalance20 * soap_new_set_tt__WhiteBalance20(
	struct soap *soap,
	enum tt__WhiteBalanceMode Mode,
	float *CrGain,
	float *CbGain,
	tt__WhiteBalance20Extension *Extension)
{	tt__WhiteBalance20 *_p = soap_new_tt__WhiteBalance20(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__WhiteBalance20::Mode = Mode;
		_p->tt__WhiteBalance20::CrGain = CrGain;
		_p->tt__WhiteBalance20::CbGain = CbGain;
		_p->tt__WhiteBalance20::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__WhiteBalance20
#define soap_write_tt__WhiteBalance20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:WhiteBalance20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WhiteBalance20 * SOAP_FMAC4 soap_get_tt__WhiteBalance20(struct soap*, tt__WhiteBalance20 *, const char*, const char*);

#ifndef soap_read_tt__WhiteBalance20
#define soap_read_tt__WhiteBalance20(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__WhiteBalance20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RelativeFocusOptions20
#define SOAP_TYPE_tt__RelativeFocusOptions20 (638)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RelativeFocusOptions20(struct soap*, const char*, int, const tt__RelativeFocusOptions20 *, const char*);
SOAP_FMAC3 tt__RelativeFocusOptions20 * SOAP_FMAC4 soap_in_tt__RelativeFocusOptions20(struct soap*, const char*, tt__RelativeFocusOptions20 *, const char*);
SOAP_FMAC1 tt__RelativeFocusOptions20 * SOAP_FMAC2 soap_instantiate_tt__RelativeFocusOptions20(struct soap*, int, const char*, const char*, size_t*);

inline tt__RelativeFocusOptions20 * soap_new_tt__RelativeFocusOptions20(struct soap *soap, int n = -1) { return soap_instantiate_tt__RelativeFocusOptions20(soap, n, NULL, NULL, NULL); }

inline tt__RelativeFocusOptions20 * soap_new_req_tt__RelativeFocusOptions20(
	struct soap *soap,
	tt__FloatRange *Distance)
{	tt__RelativeFocusOptions20 *_p = soap_new_tt__RelativeFocusOptions20(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RelativeFocusOptions20::Distance = Distance;
	}
	return _p;
}

inline tt__RelativeFocusOptions20 * soap_new_set_tt__RelativeFocusOptions20(
	struct soap *soap,
	tt__FloatRange *Distance,
	tt__FloatRange *Speed)
{	tt__RelativeFocusOptions20 *_p = soap_new_tt__RelativeFocusOptions20(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RelativeFocusOptions20::Distance = Distance;
		_p->tt__RelativeFocusOptions20::Speed = Speed;
	}
	return _p;
}

#ifndef soap_write_tt__RelativeFocusOptions20
#define soap_write_tt__RelativeFocusOptions20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:RelativeFocusOptions20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RelativeFocusOptions20 * SOAP_FMAC4 soap_get_tt__RelativeFocusOptions20(struct soap*, tt__RelativeFocusOptions20 *, const char*, const char*);

#ifndef soap_read_tt__RelativeFocusOptions20
#define soap_read_tt__RelativeFocusOptions20(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RelativeFocusOptions20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__MoveOptions20
#define SOAP_TYPE_tt__MoveOptions20 (637)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MoveOptions20(struct soap*, const char*, int, const tt__MoveOptions20 *, const char*);
SOAP_FMAC3 tt__MoveOptions20 * SOAP_FMAC4 soap_in_tt__MoveOptions20(struct soap*, const char*, tt__MoveOptions20 *, const char*);
SOAP_FMAC1 tt__MoveOptions20 * SOAP_FMAC2 soap_instantiate_tt__MoveOptions20(struct soap*, int, const char*, const char*, size_t*);

inline tt__MoveOptions20 * soap_new_tt__MoveOptions20(struct soap *soap, int n = -1) { return soap_instantiate_tt__MoveOptions20(soap, n, NULL, NULL, NULL); }

inline tt__MoveOptions20 * soap_new_req_tt__MoveOptions20(
	struct soap *soap)
{	tt__MoveOptions20 *_p = soap_new_tt__MoveOptions20(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__MoveOptions20 * soap_new_set_tt__MoveOptions20(
	struct soap *soap,
	tt__AbsoluteFocusOptions *Absolute,
	tt__RelativeFocusOptions20 *Relative,
	tt__ContinuousFocusOptions *Continuous)
{	tt__MoveOptions20 *_p = soap_new_tt__MoveOptions20(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__MoveOptions20::Absolute = Absolute;
		_p->tt__MoveOptions20::Relative = Relative;
		_p->tt__MoveOptions20::Continuous = Continuous;
	}
	return _p;
}

#ifndef soap_write_tt__MoveOptions20
#define soap_write_tt__MoveOptions20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:MoveOptions20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MoveOptions20 * SOAP_FMAC4 soap_get_tt__MoveOptions20(struct soap*, tt__MoveOptions20 *, const char*, const char*);

#ifndef soap_read_tt__MoveOptions20
#define soap_read_tt__MoveOptions20(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MoveOptions20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ExposureOptions20
#define SOAP_TYPE_tt__ExposureOptions20 (636)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ExposureOptions20(struct soap*, const char*, int, const tt__ExposureOptions20 *, const char*);
SOAP_FMAC3 tt__ExposureOptions20 * SOAP_FMAC4 soap_in_tt__ExposureOptions20(struct soap*, const char*, tt__ExposureOptions20 *, const char*);
SOAP_FMAC1 tt__ExposureOptions20 * SOAP_FMAC2 soap_instantiate_tt__ExposureOptions20(struct soap*, int, const char*, const char*, size_t*);

inline tt__ExposureOptions20 * soap_new_tt__ExposureOptions20(struct soap *soap, int n = -1) { return soap_instantiate_tt__ExposureOptions20(soap, n, NULL, NULL, NULL); }

inline tt__ExposureOptions20 * soap_new_req_tt__ExposureOptions20(
	struct soap *soap,
	const std::vector<enum tt__ExposureMode> & Mode)
{	tt__ExposureOptions20 *_p = soap_new_tt__ExposureOptions20(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ExposureOptions20::Mode = Mode;
	}
	return _p;
}

inline tt__ExposureOptions20 * soap_new_set_tt__ExposureOptions20(
	struct soap *soap,
	const std::vector<enum tt__ExposureMode> & Mode,
	const std::vector<enum tt__ExposurePriority> & Priority,
	tt__FloatRange *MinExposureTime,
	tt__FloatRange *MaxExposureTime,
	tt__FloatRange *MinGain,
	tt__FloatRange *MaxGain,
	tt__FloatRange *MinIris,
	tt__FloatRange *MaxIris,
	tt__FloatRange *ExposureTime,
	tt__FloatRange *Gain,
	tt__FloatRange *Iris)
{	tt__ExposureOptions20 *_p = soap_new_tt__ExposureOptions20(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ExposureOptions20::Mode = Mode;
		_p->tt__ExposureOptions20::Priority = Priority;
		_p->tt__ExposureOptions20::MinExposureTime = MinExposureTime;
		_p->tt__ExposureOptions20::MaxExposureTime = MaxExposureTime;
		_p->tt__ExposureOptions20::MinGain = MinGain;
		_p->tt__ExposureOptions20::MaxGain = MaxGain;
		_p->tt__ExposureOptions20::MinIris = MinIris;
		_p->tt__ExposureOptions20::MaxIris = MaxIris;
		_p->tt__ExposureOptions20::ExposureTime = ExposureTime;
		_p->tt__ExposureOptions20::Gain = Gain;
		_p->tt__ExposureOptions20::Iris = Iris;
	}
	return _p;
}

#ifndef soap_write_tt__ExposureOptions20
#define soap_write_tt__ExposureOptions20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ExposureOptions20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ExposureOptions20 * SOAP_FMAC4 soap_get_tt__ExposureOptions20(struct soap*, tt__ExposureOptions20 *, const char*, const char*);

#ifndef soap_read_tt__ExposureOptions20
#define soap_read_tt__ExposureOptions20(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ExposureOptions20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__BacklightCompensationOptions20
#define SOAP_TYPE_tt__BacklightCompensationOptions20 (635)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__BacklightCompensationOptions20(struct soap*, const char*, int, const tt__BacklightCompensationOptions20 *, const char*);
SOAP_FMAC3 tt__BacklightCompensationOptions20 * SOAP_FMAC4 soap_in_tt__BacklightCompensationOptions20(struct soap*, const char*, tt__BacklightCompensationOptions20 *, const char*);
SOAP_FMAC1 tt__BacklightCompensationOptions20 * SOAP_FMAC2 soap_instantiate_tt__BacklightCompensationOptions20(struct soap*, int, const char*, const char*, size_t*);

inline tt__BacklightCompensationOptions20 * soap_new_tt__BacklightCompensationOptions20(struct soap *soap, int n = -1) { return soap_instantiate_tt__BacklightCompensationOptions20(soap, n, NULL, NULL, NULL); }

inline tt__BacklightCompensationOptions20 * soap_new_req_tt__BacklightCompensationOptions20(
	struct soap *soap,
	const std::vector<enum tt__BacklightCompensationMode> & Mode)
{	tt__BacklightCompensationOptions20 *_p = soap_new_tt__BacklightCompensationOptions20(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__BacklightCompensationOptions20::Mode = Mode;
	}
	return _p;
}

inline tt__BacklightCompensationOptions20 * soap_new_set_tt__BacklightCompensationOptions20(
	struct soap *soap,
	const std::vector<enum tt__BacklightCompensationMode> & Mode,
	tt__FloatRange *Level)
{	tt__BacklightCompensationOptions20 *_p = soap_new_tt__BacklightCompensationOptions20(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__BacklightCompensationOptions20::Mode = Mode;
		_p->tt__BacklightCompensationOptions20::Level = Level;
	}
	return _p;
}

#ifndef soap_write_tt__BacklightCompensationOptions20
#define soap_write_tt__BacklightCompensationOptions20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:BacklightCompensationOptions20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__BacklightCompensationOptions20 * SOAP_FMAC4 soap_get_tt__BacklightCompensationOptions20(struct soap*, tt__BacklightCompensationOptions20 *, const char*, const char*);

#ifndef soap_read_tt__BacklightCompensationOptions20
#define soap_read_tt__BacklightCompensationOptions20(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__BacklightCompensationOptions20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__WideDynamicRangeOptions20
#define SOAP_TYPE_tt__WideDynamicRangeOptions20 (634)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__WideDynamicRangeOptions20(struct soap*, const char*, int, const tt__WideDynamicRangeOptions20 *, const char*);
SOAP_FMAC3 tt__WideDynamicRangeOptions20 * SOAP_FMAC4 soap_in_tt__WideDynamicRangeOptions20(struct soap*, const char*, tt__WideDynamicRangeOptions20 *, const char*);
SOAP_FMAC1 tt__WideDynamicRangeOptions20 * SOAP_FMAC2 soap_instantiate_tt__WideDynamicRangeOptions20(struct soap*, int, const char*, const char*, size_t*);

inline tt__WideDynamicRangeOptions20 * soap_new_tt__WideDynamicRangeOptions20(struct soap *soap, int n = -1) { return soap_instantiate_tt__WideDynamicRangeOptions20(soap, n, NULL, NULL, NULL); }

inline tt__WideDynamicRangeOptions20 * soap_new_req_tt__WideDynamicRangeOptions20(
	struct soap *soap,
	const std::vector<enum tt__WideDynamicMode> & Mode)
{	tt__WideDynamicRangeOptions20 *_p = soap_new_tt__WideDynamicRangeOptions20(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__WideDynamicRangeOptions20::Mode = Mode;
	}
	return _p;
}

inline tt__WideDynamicRangeOptions20 * soap_new_set_tt__WideDynamicRangeOptions20(
	struct soap *soap,
	const std::vector<enum tt__WideDynamicMode> & Mode,
	tt__FloatRange *Level)
{	tt__WideDynamicRangeOptions20 *_p = soap_new_tt__WideDynamicRangeOptions20(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__WideDynamicRangeOptions20::Mode = Mode;
		_p->tt__WideDynamicRangeOptions20::Level = Level;
	}
	return _p;
}

#ifndef soap_write_tt__WideDynamicRangeOptions20
#define soap_write_tt__WideDynamicRangeOptions20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:WideDynamicRangeOptions20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WideDynamicRangeOptions20 * SOAP_FMAC4 soap_get_tt__WideDynamicRangeOptions20(struct soap*, tt__WideDynamicRangeOptions20 *, const char*, const char*);

#ifndef soap_read_tt__WideDynamicRangeOptions20
#define soap_read_tt__WideDynamicRangeOptions20(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__WideDynamicRangeOptions20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IrCutFilterAutoAdjustmentOptionsExtension
#define SOAP_TYPE_tt__IrCutFilterAutoAdjustmentOptionsExtension (633)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IrCutFilterAutoAdjustmentOptionsExtension(struct soap*, const char*, int, const tt__IrCutFilterAutoAdjustmentOptionsExtension *, const char*);
SOAP_FMAC3 tt__IrCutFilterAutoAdjustmentOptionsExtension * SOAP_FMAC4 soap_in_tt__IrCutFilterAutoAdjustmentOptionsExtension(struct soap*, const char*, tt__IrCutFilterAutoAdjustmentOptionsExtension *, const char*);
SOAP_FMAC1 tt__IrCutFilterAutoAdjustmentOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__IrCutFilterAutoAdjustmentOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__IrCutFilterAutoAdjustmentOptionsExtension * soap_new_tt__IrCutFilterAutoAdjustmentOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__IrCutFilterAutoAdjustmentOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__IrCutFilterAutoAdjustmentOptionsExtension * soap_new_req_tt__IrCutFilterAutoAdjustmentOptionsExtension(
	struct soap *soap)
{	tt__IrCutFilterAutoAdjustmentOptionsExtension *_p = soap_new_tt__IrCutFilterAutoAdjustmentOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__IrCutFilterAutoAdjustmentOptionsExtension * soap_new_set_tt__IrCutFilterAutoAdjustmentOptionsExtension(
	struct soap *soap)
{	tt__IrCutFilterAutoAdjustmentOptionsExtension *_p = soap_new_tt__IrCutFilterAutoAdjustmentOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__IrCutFilterAutoAdjustmentOptionsExtension
#define soap_write_tt__IrCutFilterAutoAdjustmentOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:IrCutFilterAutoAdjustmentOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IrCutFilterAutoAdjustmentOptionsExtension * SOAP_FMAC4 soap_get_tt__IrCutFilterAutoAdjustmentOptionsExtension(struct soap*, tt__IrCutFilterAutoAdjustmentOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__IrCutFilterAutoAdjustmentOptionsExtension
#define soap_read_tt__IrCutFilterAutoAdjustmentOptionsExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IrCutFilterAutoAdjustmentOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IrCutFilterAutoAdjustmentOptions
#define SOAP_TYPE_tt__IrCutFilterAutoAdjustmentOptions (632)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IrCutFilterAutoAdjustmentOptions(struct soap*, const char*, int, const tt__IrCutFilterAutoAdjustmentOptions *, const char*);
SOAP_FMAC3 tt__IrCutFilterAutoAdjustmentOptions * SOAP_FMAC4 soap_in_tt__IrCutFilterAutoAdjustmentOptions(struct soap*, const char*, tt__IrCutFilterAutoAdjustmentOptions *, const char*);
SOAP_FMAC1 tt__IrCutFilterAutoAdjustmentOptions * SOAP_FMAC2 soap_instantiate_tt__IrCutFilterAutoAdjustmentOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__IrCutFilterAutoAdjustmentOptions * soap_new_tt__IrCutFilterAutoAdjustmentOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__IrCutFilterAutoAdjustmentOptions(soap, n, NULL, NULL, NULL); }

inline tt__IrCutFilterAutoAdjustmentOptions * soap_new_req_tt__IrCutFilterAutoAdjustmentOptions(
	struct soap *soap,
	const std::vector<std::string> & BoundaryType)
{	tt__IrCutFilterAutoAdjustmentOptions *_p = soap_new_tt__IrCutFilterAutoAdjustmentOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__IrCutFilterAutoAdjustmentOptions::BoundaryType = BoundaryType;
	}
	return _p;
}

inline tt__IrCutFilterAutoAdjustmentOptions * soap_new_set_tt__IrCutFilterAutoAdjustmentOptions(
	struct soap *soap,
	const std::vector<std::string> & BoundaryType,
	bool *BoundaryOffset,
	tt__DurationRange *ResponseTimeRange,
	tt__IrCutFilterAutoAdjustmentOptionsExtension *Extension)
{	tt__IrCutFilterAutoAdjustmentOptions *_p = soap_new_tt__IrCutFilterAutoAdjustmentOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__IrCutFilterAutoAdjustmentOptions::BoundaryType = BoundaryType;
		_p->tt__IrCutFilterAutoAdjustmentOptions::BoundaryOffset = BoundaryOffset;
		_p->tt__IrCutFilterAutoAdjustmentOptions::ResponseTimeRange = ResponseTimeRange;
		_p->tt__IrCutFilterAutoAdjustmentOptions::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__IrCutFilterAutoAdjustmentOptions
#define soap_write_tt__IrCutFilterAutoAdjustmentOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:IrCutFilterAutoAdjustmentOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IrCutFilterAutoAdjustmentOptions * SOAP_FMAC4 soap_get_tt__IrCutFilterAutoAdjustmentOptions(struct soap*, tt__IrCutFilterAutoAdjustmentOptions *, const char*, const char*);

#ifndef soap_read_tt__IrCutFilterAutoAdjustmentOptions
#define soap_read_tt__IrCutFilterAutoAdjustmentOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IrCutFilterAutoAdjustmentOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ImageStabilizationOptionsExtension
#define SOAP_TYPE_tt__ImageStabilizationOptionsExtension (631)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImageStabilizationOptionsExtension(struct soap*, const char*, int, const tt__ImageStabilizationOptionsExtension *, const char*);
SOAP_FMAC3 tt__ImageStabilizationOptionsExtension * SOAP_FMAC4 soap_in_tt__ImageStabilizationOptionsExtension(struct soap*, const char*, tt__ImageStabilizationOptionsExtension *, const char*);
SOAP_FMAC1 tt__ImageStabilizationOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__ImageStabilizationOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImageStabilizationOptionsExtension * soap_new_tt__ImageStabilizationOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImageStabilizationOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__ImageStabilizationOptionsExtension * soap_new_req_tt__ImageStabilizationOptionsExtension(
	struct soap *soap)
{	tt__ImageStabilizationOptionsExtension *_p = soap_new_tt__ImageStabilizationOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ImageStabilizationOptionsExtension * soap_new_set_tt__ImageStabilizationOptionsExtension(
	struct soap *soap)
{	tt__ImageStabilizationOptionsExtension *_p = soap_new_tt__ImageStabilizationOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__ImageStabilizationOptionsExtension
#define soap_write_tt__ImageStabilizationOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ImageStabilizationOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImageStabilizationOptionsExtension * SOAP_FMAC4 soap_get_tt__ImageStabilizationOptionsExtension(struct soap*, tt__ImageStabilizationOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__ImageStabilizationOptionsExtension
#define soap_read_tt__ImageStabilizationOptionsExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ImageStabilizationOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ImageStabilizationOptions
#define SOAP_TYPE_tt__ImageStabilizationOptions (630)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImageStabilizationOptions(struct soap*, const char*, int, const tt__ImageStabilizationOptions *, const char*);
SOAP_FMAC3 tt__ImageStabilizationOptions * SOAP_FMAC4 soap_in_tt__ImageStabilizationOptions(struct soap*, const char*, tt__ImageStabilizationOptions *, const char*);
SOAP_FMAC1 tt__ImageStabilizationOptions * SOAP_FMAC2 soap_instantiate_tt__ImageStabilizationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImageStabilizationOptions * soap_new_tt__ImageStabilizationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImageStabilizationOptions(soap, n, NULL, NULL, NULL); }

inline tt__ImageStabilizationOptions * soap_new_req_tt__ImageStabilizationOptions(
	struct soap *soap,
	const std::vector<enum tt__ImageStabilizationMode> & Mode)
{	tt__ImageStabilizationOptions *_p = soap_new_tt__ImageStabilizationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ImageStabilizationOptions::Mode = Mode;
	}
	return _p;
}

inline tt__ImageStabilizationOptions * soap_new_set_tt__ImageStabilizationOptions(
	struct soap *soap,
	const std::vector<enum tt__ImageStabilizationMode> & Mode,
	tt__FloatRange *Level,
	tt__ImageStabilizationOptionsExtension *Extension)
{	tt__ImageStabilizationOptions *_p = soap_new_tt__ImageStabilizationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ImageStabilizationOptions::Mode = Mode;
		_p->tt__ImageStabilizationOptions::Level = Level;
		_p->tt__ImageStabilizationOptions::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__ImageStabilizationOptions
#define soap_write_tt__ImageStabilizationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ImageStabilizationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImageStabilizationOptions * SOAP_FMAC4 soap_get_tt__ImageStabilizationOptions(struct soap*, tt__ImageStabilizationOptions *, const char*, const char*);

#ifndef soap_read_tt__ImageStabilizationOptions
#define soap_read_tt__ImageStabilizationOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ImageStabilizationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ImagingOptions20Extension4
#define SOAP_TYPE_tt__ImagingOptions20Extension4 (629)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingOptions20Extension4(struct soap*, const char*, int, const tt__ImagingOptions20Extension4 *, const char*);
SOAP_FMAC3 tt__ImagingOptions20Extension4 * SOAP_FMAC4 soap_in_tt__ImagingOptions20Extension4(struct soap*, const char*, tt__ImagingOptions20Extension4 *, const char*);
SOAP_FMAC1 tt__ImagingOptions20Extension4 * SOAP_FMAC2 soap_instantiate_tt__ImagingOptions20Extension4(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingOptions20Extension4 * soap_new_tt__ImagingOptions20Extension4(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingOptions20Extension4(soap, n, NULL, NULL, NULL); }

inline tt__ImagingOptions20Extension4 * soap_new_req_tt__ImagingOptions20Extension4(
	struct soap *soap)
{	tt__ImagingOptions20Extension4 *_p = soap_new_tt__ImagingOptions20Extension4(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ImagingOptions20Extension4 * soap_new_set_tt__ImagingOptions20Extension4(
	struct soap *soap)
{	tt__ImagingOptions20Extension4 *_p = soap_new_tt__ImagingOptions20Extension4(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__ImagingOptions20Extension4
#define soap_write_tt__ImagingOptions20Extension4(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ImagingOptions20Extension4", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingOptions20Extension4 * SOAP_FMAC4 soap_get_tt__ImagingOptions20Extension4(struct soap*, tt__ImagingOptions20Extension4 *, const char*, const char*);

#ifndef soap_read_tt__ImagingOptions20Extension4
#define soap_read_tt__ImagingOptions20Extension4(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ImagingOptions20Extension4(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ImagingOptions20Extension3
#define SOAP_TYPE_tt__ImagingOptions20Extension3 (628)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingOptions20Extension3(struct soap*, const char*, int, const tt__ImagingOptions20Extension3 *, const char*);
SOAP_FMAC3 tt__ImagingOptions20Extension3 * SOAP_FMAC4 soap_in_tt__ImagingOptions20Extension3(struct soap*, const char*, tt__ImagingOptions20Extension3 *, const char*);
SOAP_FMAC1 tt__ImagingOptions20Extension3 * SOAP_FMAC2 soap_instantiate_tt__ImagingOptions20Extension3(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingOptions20Extension3 * soap_new_tt__ImagingOptions20Extension3(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingOptions20Extension3(soap, n, NULL, NULL, NULL); }

inline tt__ImagingOptions20Extension3 * soap_new_req_tt__ImagingOptions20Extension3(
	struct soap *soap)
{	tt__ImagingOptions20Extension3 *_p = soap_new_tt__ImagingOptions20Extension3(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ImagingOptions20Extension3 * soap_new_set_tt__ImagingOptions20Extension3(
	struct soap *soap,
	tt__ToneCompensationOptions *ToneCompensationOptions,
	tt__DefoggingOptions *DefoggingOptions,
	tt__NoiseReductionOptions *NoiseReductionOptions,
	tt__ImagingOptions20Extension4 *Extension)
{	tt__ImagingOptions20Extension3 *_p = soap_new_tt__ImagingOptions20Extension3(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ImagingOptions20Extension3::ToneCompensationOptions = ToneCompensationOptions;
		_p->tt__ImagingOptions20Extension3::DefoggingOptions = DefoggingOptions;
		_p->tt__ImagingOptions20Extension3::NoiseReductionOptions = NoiseReductionOptions;
		_p->tt__ImagingOptions20Extension3::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__ImagingOptions20Extension3
#define soap_write_tt__ImagingOptions20Extension3(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ImagingOptions20Extension3", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingOptions20Extension3 * SOAP_FMAC4 soap_get_tt__ImagingOptions20Extension3(struct soap*, tt__ImagingOptions20Extension3 *, const char*, const char*);

#ifndef soap_read_tt__ImagingOptions20Extension3
#define soap_read_tt__ImagingOptions20Extension3(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ImagingOptions20Extension3(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ImagingOptions20Extension2
#define SOAP_TYPE_tt__ImagingOptions20Extension2 (627)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingOptions20Extension2(struct soap*, const char*, int, const tt__ImagingOptions20Extension2 *, const char*);
SOAP_FMAC3 tt__ImagingOptions20Extension2 * SOAP_FMAC4 soap_in_tt__ImagingOptions20Extension2(struct soap*, const char*, tt__ImagingOptions20Extension2 *, const char*);
SOAP_FMAC1 tt__ImagingOptions20Extension2 * SOAP_FMAC2 soap_instantiate_tt__ImagingOptions20Extension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingOptions20Extension2 * soap_new_tt__ImagingOptions20Extension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingOptions20Extension2(soap, n, NULL, NULL, NULL); }

inline tt__ImagingOptions20Extension2 * soap_new_req_tt__ImagingOptions20Extension2(
	struct soap *soap)
{	tt__ImagingOptions20Extension2 *_p = soap_new_tt__ImagingOptions20Extension2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ImagingOptions20Extension2 * soap_new_set_tt__ImagingOptions20Extension2(
	struct soap *soap,
	tt__IrCutFilterAutoAdjustmentOptions *IrCutFilterAutoAdjustment,
	tt__ImagingOptions20Extension3 *Extension)
{	tt__ImagingOptions20Extension2 *_p = soap_new_tt__ImagingOptions20Extension2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ImagingOptions20Extension2::IrCutFilterAutoAdjustment = IrCutFilterAutoAdjustment;
		_p->tt__ImagingOptions20Extension2::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__ImagingOptions20Extension2
#define soap_write_tt__ImagingOptions20Extension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ImagingOptions20Extension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingOptions20Extension2 * SOAP_FMAC4 soap_get_tt__ImagingOptions20Extension2(struct soap*, tt__ImagingOptions20Extension2 *, const char*, const char*);

#ifndef soap_read_tt__ImagingOptions20Extension2
#define soap_read_tt__ImagingOptions20Extension2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ImagingOptions20Extension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ImagingOptions20Extension
#define SOAP_TYPE_tt__ImagingOptions20Extension (626)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingOptions20Extension(struct soap*, const char*, int, const tt__ImagingOptions20Extension *, const char*);
SOAP_FMAC3 tt__ImagingOptions20Extension * SOAP_FMAC4 soap_in_tt__ImagingOptions20Extension(struct soap*, const char*, tt__ImagingOptions20Extension *, const char*);
SOAP_FMAC1 tt__ImagingOptions20Extension * SOAP_FMAC2 soap_instantiate_tt__ImagingOptions20Extension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingOptions20Extension * soap_new_tt__ImagingOptions20Extension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingOptions20Extension(soap, n, NULL, NULL, NULL); }

inline tt__ImagingOptions20Extension * soap_new_req_tt__ImagingOptions20Extension(
	struct soap *soap)
{	tt__ImagingOptions20Extension *_p = soap_new_tt__ImagingOptions20Extension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ImagingOptions20Extension * soap_new_set_tt__ImagingOptions20Extension(
	struct soap *soap,
	tt__ImageStabilizationOptions *ImageStabilization,
	tt__ImagingOptions20Extension2 *Extension)
{	tt__ImagingOptions20Extension *_p = soap_new_tt__ImagingOptions20Extension(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ImagingOptions20Extension::ImageStabilization = ImageStabilization;
		_p->tt__ImagingOptions20Extension::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__ImagingOptions20Extension
#define soap_write_tt__ImagingOptions20Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ImagingOptions20Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingOptions20Extension * SOAP_FMAC4 soap_get_tt__ImagingOptions20Extension(struct soap*, tt__ImagingOptions20Extension *, const char*, const char*);

#ifndef soap_read_tt__ImagingOptions20Extension
#define soap_read_tt__ImagingOptions20Extension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ImagingOptions20Extension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ImagingOptions20
#define SOAP_TYPE_tt__ImagingOptions20 (625)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingOptions20(struct soap*, const char*, int, const tt__ImagingOptions20 *, const char*);
SOAP_FMAC3 tt__ImagingOptions20 * SOAP_FMAC4 soap_in_tt__ImagingOptions20(struct soap*, const char*, tt__ImagingOptions20 *, const char*);
SOAP_FMAC1 tt__ImagingOptions20 * SOAP_FMAC2 soap_instantiate_tt__ImagingOptions20(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingOptions20 * soap_new_tt__ImagingOptions20(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingOptions20(soap, n, NULL, NULL, NULL); }

inline tt__ImagingOptions20 * soap_new_req_tt__ImagingOptions20(
	struct soap *soap)
{	tt__ImagingOptions20 *_p = soap_new_tt__ImagingOptions20(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ImagingOptions20 * soap_new_set_tt__ImagingOptions20(
	struct soap *soap,
	tt__BacklightCompensationOptions20 *BacklightCompensation,
	tt__FloatRange *Brightness,
	tt__FloatRange *ColorSaturation,
	tt__FloatRange *Contrast,
	tt__ExposureOptions20 *Exposure,
	tt__FocusOptions20 *Focus,
	const std::vector<enum tt__IrCutFilterMode> & IrCutFilterModes,
	tt__FloatRange *Sharpness,
	tt__WideDynamicRangeOptions20 *WideDynamicRange,
	tt__WhiteBalanceOptions20 *WhiteBalance,
	tt__ImagingOptions20Extension *Extension)
{	tt__ImagingOptions20 *_p = soap_new_tt__ImagingOptions20(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ImagingOptions20::BacklightCompensation = BacklightCompensation;
		_p->tt__ImagingOptions20::Brightness = Brightness;
		_p->tt__ImagingOptions20::ColorSaturation = ColorSaturation;
		_p->tt__ImagingOptions20::Contrast = Contrast;
		_p->tt__ImagingOptions20::Exposure = Exposure;
		_p->tt__ImagingOptions20::Focus = Focus;
		_p->tt__ImagingOptions20::IrCutFilterModes = IrCutFilterModes;
		_p->tt__ImagingOptions20::Sharpness = Sharpness;
		_p->tt__ImagingOptions20::WideDynamicRange = WideDynamicRange;
		_p->tt__ImagingOptions20::WhiteBalance = WhiteBalance;
		_p->tt__ImagingOptions20::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__ImagingOptions20
#define soap_write_tt__ImagingOptions20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ImagingOptions20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingOptions20 * SOAP_FMAC4 soap_get_tt__ImagingOptions20(struct soap*, tt__ImagingOptions20 *, const char*, const char*);

#ifndef soap_read_tt__ImagingOptions20
#define soap_read_tt__ImagingOptions20(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ImagingOptions20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__NoiseReduction
#define SOAP_TYPE_tt__NoiseReduction (624)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NoiseReduction(struct soap*, const char*, int, const tt__NoiseReduction *, const char*);
SOAP_FMAC3 tt__NoiseReduction * SOAP_FMAC4 soap_in_tt__NoiseReduction(struct soap*, const char*, tt__NoiseReduction *, const char*);
SOAP_FMAC1 tt__NoiseReduction * SOAP_FMAC2 soap_instantiate_tt__NoiseReduction(struct soap*, int, const char*, const char*, size_t*);

inline tt__NoiseReduction * soap_new_tt__NoiseReduction(struct soap *soap, int n = -1) { return soap_instantiate_tt__NoiseReduction(soap, n, NULL, NULL, NULL); }

inline tt__NoiseReduction * soap_new_req_tt__NoiseReduction(
	struct soap *soap,
	float Level)
{	tt__NoiseReduction *_p = soap_new_tt__NoiseReduction(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__NoiseReduction::Level = Level;
	}
	return _p;
}

inline tt__NoiseReduction * soap_new_set_tt__NoiseReduction(
	struct soap *soap,
	float Level)
{	tt__NoiseReduction *_p = soap_new_tt__NoiseReduction(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__NoiseReduction::Level = Level;
	}
	return _p;
}

#ifndef soap_write_tt__NoiseReduction
#define soap_write_tt__NoiseReduction(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:NoiseReduction", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NoiseReduction * SOAP_FMAC4 soap_get_tt__NoiseReduction(struct soap*, tt__NoiseReduction *, const char*, const char*);

#ifndef soap_read_tt__NoiseReduction
#define soap_read_tt__NoiseReduction(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__NoiseReduction(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__DefoggingExtension
#define SOAP_TYPE_tt__DefoggingExtension (623)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DefoggingExtension(struct soap*, const char*, int, const tt__DefoggingExtension *, const char*);
SOAP_FMAC3 tt__DefoggingExtension * SOAP_FMAC4 soap_in_tt__DefoggingExtension(struct soap*, const char*, tt__DefoggingExtension *, const char*);
SOAP_FMAC1 tt__DefoggingExtension * SOAP_FMAC2 soap_instantiate_tt__DefoggingExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__DefoggingExtension * soap_new_tt__DefoggingExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__DefoggingExtension(soap, n, NULL, NULL, NULL); }

inline tt__DefoggingExtension * soap_new_req_tt__DefoggingExtension(
	struct soap *soap)
{	tt__DefoggingExtension *_p = soap_new_tt__DefoggingExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__DefoggingExtension * soap_new_set_tt__DefoggingExtension(
	struct soap *soap)
{	tt__DefoggingExtension *_p = soap_new_tt__DefoggingExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__DefoggingExtension
#define soap_write_tt__DefoggingExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:DefoggingExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DefoggingExtension * SOAP_FMAC4 soap_get_tt__DefoggingExtension(struct soap*, tt__DefoggingExtension *, const char*, const char*);

#ifndef soap_read_tt__DefoggingExtension
#define soap_read_tt__DefoggingExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__DefoggingExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Defogging
#define SOAP_TYPE_tt__Defogging (622)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Defogging(struct soap*, const char*, int, const tt__Defogging *, const char*);
SOAP_FMAC3 tt__Defogging * SOAP_FMAC4 soap_in_tt__Defogging(struct soap*, const char*, tt__Defogging *, const char*);
SOAP_FMAC1 tt__Defogging * SOAP_FMAC2 soap_instantiate_tt__Defogging(struct soap*, int, const char*, const char*, size_t*);

inline tt__Defogging * soap_new_tt__Defogging(struct soap *soap, int n = -1) { return soap_instantiate_tt__Defogging(soap, n, NULL, NULL, NULL); }

inline tt__Defogging * soap_new_req_tt__Defogging(
	struct soap *soap,
	const std::string& Mode)
{	tt__Defogging *_p = soap_new_tt__Defogging(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Defogging::Mode = Mode;
	}
	return _p;
}

inline tt__Defogging * soap_new_set_tt__Defogging(
	struct soap *soap,
	const std::string& Mode,
	float *Level,
	tt__DefoggingExtension *Extension)
{	tt__Defogging *_p = soap_new_tt__Defogging(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Defogging::Mode = Mode;
		_p->tt__Defogging::Level = Level;
		_p->tt__Defogging::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__Defogging
#define soap_write_tt__Defogging(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Defogging", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Defogging * SOAP_FMAC4 soap_get_tt__Defogging(struct soap*, tt__Defogging *, const char*, const char*);

#ifndef soap_read_tt__Defogging
#define soap_read_tt__Defogging(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Defogging(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ToneCompensationExtension
#define SOAP_TYPE_tt__ToneCompensationExtension (621)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ToneCompensationExtension(struct soap*, const char*, int, const tt__ToneCompensationExtension *, const char*);
SOAP_FMAC3 tt__ToneCompensationExtension * SOAP_FMAC4 soap_in_tt__ToneCompensationExtension(struct soap*, const char*, tt__ToneCompensationExtension *, const char*);
SOAP_FMAC1 tt__ToneCompensationExtension * SOAP_FMAC2 soap_instantiate_tt__ToneCompensationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ToneCompensationExtension * soap_new_tt__ToneCompensationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ToneCompensationExtension(soap, n, NULL, NULL, NULL); }

inline tt__ToneCompensationExtension * soap_new_req_tt__ToneCompensationExtension(
	struct soap *soap)
{	tt__ToneCompensationExtension *_p = soap_new_tt__ToneCompensationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ToneCompensationExtension * soap_new_set_tt__ToneCompensationExtension(
	struct soap *soap)
{	tt__ToneCompensationExtension *_p = soap_new_tt__ToneCompensationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__ToneCompensationExtension
#define soap_write_tt__ToneCompensationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ToneCompensationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ToneCompensationExtension * SOAP_FMAC4 soap_get_tt__ToneCompensationExtension(struct soap*, tt__ToneCompensationExtension *, const char*, const char*);

#ifndef soap_read_tt__ToneCompensationExtension
#define soap_read_tt__ToneCompensationExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ToneCompensationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ToneCompensation
#define SOAP_TYPE_tt__ToneCompensation (620)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ToneCompensation(struct soap*, const char*, int, const tt__ToneCompensation *, const char*);
SOAP_FMAC3 tt__ToneCompensation * SOAP_FMAC4 soap_in_tt__ToneCompensation(struct soap*, const char*, tt__ToneCompensation *, const char*);
SOAP_FMAC1 tt__ToneCompensation * SOAP_FMAC2 soap_instantiate_tt__ToneCompensation(struct soap*, int, const char*, const char*, size_t*);

inline tt__ToneCompensation * soap_new_tt__ToneCompensation(struct soap *soap, int n = -1) { return soap_instantiate_tt__ToneCompensation(soap, n, NULL, NULL, NULL); }

inline tt__ToneCompensation * soap_new_req_tt__ToneCompensation(
	struct soap *soap,
	const std::string& Mode)
{	tt__ToneCompensation *_p = soap_new_tt__ToneCompensation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ToneCompensation::Mode = Mode;
	}
	return _p;
}

inline tt__ToneCompensation * soap_new_set_tt__ToneCompensation(
	struct soap *soap,
	const std::string& Mode,
	float *Level,
	tt__ToneCompensationExtension *Extension)
{	tt__ToneCompensation *_p = soap_new_tt__ToneCompensation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ToneCompensation::Mode = Mode;
		_p->tt__ToneCompensation::Level = Level;
		_p->tt__ToneCompensation::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__ToneCompensation
#define soap_write_tt__ToneCompensation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ToneCompensation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ToneCompensation * SOAP_FMAC4 soap_get_tt__ToneCompensation(struct soap*, tt__ToneCompensation *, const char*, const char*);

#ifndef soap_read_tt__ToneCompensation
#define soap_read_tt__ToneCompensation(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ToneCompensation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Exposure20
#define SOAP_TYPE_tt__Exposure20 (619)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Exposure20(struct soap*, const char*, int, const tt__Exposure20 *, const char*);
SOAP_FMAC3 tt__Exposure20 * SOAP_FMAC4 soap_in_tt__Exposure20(struct soap*, const char*, tt__Exposure20 *, const char*);
SOAP_FMAC1 tt__Exposure20 * SOAP_FMAC2 soap_instantiate_tt__Exposure20(struct soap*, int, const char*, const char*, size_t*);

inline tt__Exposure20 * soap_new_tt__Exposure20(struct soap *soap, int n = -1) { return soap_instantiate_tt__Exposure20(soap, n, NULL, NULL, NULL); }

inline tt__Exposure20 * soap_new_req_tt__Exposure20(
	struct soap *soap,
	enum tt__ExposureMode Mode)
{	tt__Exposure20 *_p = soap_new_tt__Exposure20(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Exposure20::Mode = Mode;
	}
	return _p;
}

inline tt__Exposure20 * soap_new_set_tt__Exposure20(
	struct soap *soap,
	enum tt__ExposureMode Mode,
	enum tt__ExposurePriority *Priority,
	tt__Rectangle *Window,
	float *MinExposureTime,
	float *MaxExposureTime,
	float *MinGain,
	float *MaxGain,
	float *MinIris,
	float *MaxIris,
	float *ExposureTime,
	float *Gain,
	float *Iris)
{	tt__Exposure20 *_p = soap_new_tt__Exposure20(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Exposure20::Mode = Mode;
		_p->tt__Exposure20::Priority = Priority;
		_p->tt__Exposure20::Window = Window;
		_p->tt__Exposure20::MinExposureTime = MinExposureTime;
		_p->tt__Exposure20::MaxExposureTime = MaxExposureTime;
		_p->tt__Exposure20::MinGain = MinGain;
		_p->tt__Exposure20::MaxGain = MaxGain;
		_p->tt__Exposure20::MinIris = MinIris;
		_p->tt__Exposure20::MaxIris = MaxIris;
		_p->tt__Exposure20::ExposureTime = ExposureTime;
		_p->tt__Exposure20::Gain = Gain;
		_p->tt__Exposure20::Iris = Iris;
	}
	return _p;
}

#ifndef soap_write_tt__Exposure20
#define soap_write_tt__Exposure20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Exposure20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Exposure20 * SOAP_FMAC4 soap_get_tt__Exposure20(struct soap*, tt__Exposure20 *, const char*, const char*);

#ifndef soap_read_tt__Exposure20
#define soap_read_tt__Exposure20(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Exposure20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__BacklightCompensation20
#define SOAP_TYPE_tt__BacklightCompensation20 (618)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__BacklightCompensation20(struct soap*, const char*, int, const tt__BacklightCompensation20 *, const char*);
SOAP_FMAC3 tt__BacklightCompensation20 * SOAP_FMAC4 soap_in_tt__BacklightCompensation20(struct soap*, const char*, tt__BacklightCompensation20 *, const char*);
SOAP_FMAC1 tt__BacklightCompensation20 * SOAP_FMAC2 soap_instantiate_tt__BacklightCompensation20(struct soap*, int, const char*, const char*, size_t*);

inline tt__BacklightCompensation20 * soap_new_tt__BacklightCompensation20(struct soap *soap, int n = -1) { return soap_instantiate_tt__BacklightCompensation20(soap, n, NULL, NULL, NULL); }

inline tt__BacklightCompensation20 * soap_new_req_tt__BacklightCompensation20(
	struct soap *soap,
	enum tt__BacklightCompensationMode Mode)
{	tt__BacklightCompensation20 *_p = soap_new_tt__BacklightCompensation20(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__BacklightCompensation20::Mode = Mode;
	}
	return _p;
}

inline tt__BacklightCompensation20 * soap_new_set_tt__BacklightCompensation20(
	struct soap *soap,
	enum tt__BacklightCompensationMode Mode,
	float *Level)
{	tt__BacklightCompensation20 *_p = soap_new_tt__BacklightCompensation20(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__BacklightCompensation20::Mode = Mode;
		_p->tt__BacklightCompensation20::Level = Level;
	}
	return _p;
}

#ifndef soap_write_tt__BacklightCompensation20
#define soap_write_tt__BacklightCompensation20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:BacklightCompensation20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__BacklightCompensation20 * SOAP_FMAC4 soap_get_tt__BacklightCompensation20(struct soap*, tt__BacklightCompensation20 *, const char*, const char*);

#ifndef soap_read_tt__BacklightCompensation20
#define soap_read_tt__BacklightCompensation20(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__BacklightCompensation20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__WideDynamicRange20
#define SOAP_TYPE_tt__WideDynamicRange20 (617)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__WideDynamicRange20(struct soap*, const char*, int, const tt__WideDynamicRange20 *, const char*);
SOAP_FMAC3 tt__WideDynamicRange20 * SOAP_FMAC4 soap_in_tt__WideDynamicRange20(struct soap*, const char*, tt__WideDynamicRange20 *, const char*);
SOAP_FMAC1 tt__WideDynamicRange20 * SOAP_FMAC2 soap_instantiate_tt__WideDynamicRange20(struct soap*, int, const char*, const char*, size_t*);

inline tt__WideDynamicRange20 * soap_new_tt__WideDynamicRange20(struct soap *soap, int n = -1) { return soap_instantiate_tt__WideDynamicRange20(soap, n, NULL, NULL, NULL); }

inline tt__WideDynamicRange20 * soap_new_req_tt__WideDynamicRange20(
	struct soap *soap,
	enum tt__WideDynamicMode Mode)
{	tt__WideDynamicRange20 *_p = soap_new_tt__WideDynamicRange20(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__WideDynamicRange20::Mode = Mode;
	}
	return _p;
}

inline tt__WideDynamicRange20 * soap_new_set_tt__WideDynamicRange20(
	struct soap *soap,
	enum tt__WideDynamicMode Mode,
	float *Level)
{	tt__WideDynamicRange20 *_p = soap_new_tt__WideDynamicRange20(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__WideDynamicRange20::Mode = Mode;
		_p->tt__WideDynamicRange20::Level = Level;
	}
	return _p;
}

#ifndef soap_write_tt__WideDynamicRange20
#define soap_write_tt__WideDynamicRange20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:WideDynamicRange20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WideDynamicRange20 * SOAP_FMAC4 soap_get_tt__WideDynamicRange20(struct soap*, tt__WideDynamicRange20 *, const char*, const char*);

#ifndef soap_read_tt__WideDynamicRange20
#define soap_read_tt__WideDynamicRange20(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__WideDynamicRange20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IrCutFilterAutoAdjustmentExtension
#define SOAP_TYPE_tt__IrCutFilterAutoAdjustmentExtension (616)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IrCutFilterAutoAdjustmentExtension(struct soap*, const char*, int, const tt__IrCutFilterAutoAdjustmentExtension *, const char*);
SOAP_FMAC3 tt__IrCutFilterAutoAdjustmentExtension * SOAP_FMAC4 soap_in_tt__IrCutFilterAutoAdjustmentExtension(struct soap*, const char*, tt__IrCutFilterAutoAdjustmentExtension *, const char*);
SOAP_FMAC1 tt__IrCutFilterAutoAdjustmentExtension * SOAP_FMAC2 soap_instantiate_tt__IrCutFilterAutoAdjustmentExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__IrCutFilterAutoAdjustmentExtension * soap_new_tt__IrCutFilterAutoAdjustmentExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__IrCutFilterAutoAdjustmentExtension(soap, n, NULL, NULL, NULL); }

inline tt__IrCutFilterAutoAdjustmentExtension * soap_new_req_tt__IrCutFilterAutoAdjustmentExtension(
	struct soap *soap)
{	tt__IrCutFilterAutoAdjustmentExtension *_p = soap_new_tt__IrCutFilterAutoAdjustmentExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__IrCutFilterAutoAdjustmentExtension * soap_new_set_tt__IrCutFilterAutoAdjustmentExtension(
	struct soap *soap)
{	tt__IrCutFilterAutoAdjustmentExtension *_p = soap_new_tt__IrCutFilterAutoAdjustmentExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__IrCutFilterAutoAdjustmentExtension
#define soap_write_tt__IrCutFilterAutoAdjustmentExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:IrCutFilterAutoAdjustmentExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IrCutFilterAutoAdjustmentExtension * SOAP_FMAC4 soap_get_tt__IrCutFilterAutoAdjustmentExtension(struct soap*, tt__IrCutFilterAutoAdjustmentExtension *, const char*, const char*);

#ifndef soap_read_tt__IrCutFilterAutoAdjustmentExtension
#define soap_read_tt__IrCutFilterAutoAdjustmentExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IrCutFilterAutoAdjustmentExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IrCutFilterAutoAdjustment
#define SOAP_TYPE_tt__IrCutFilterAutoAdjustment (615)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IrCutFilterAutoAdjustment(struct soap*, const char*, int, const tt__IrCutFilterAutoAdjustment *, const char*);
SOAP_FMAC3 tt__IrCutFilterAutoAdjustment * SOAP_FMAC4 soap_in_tt__IrCutFilterAutoAdjustment(struct soap*, const char*, tt__IrCutFilterAutoAdjustment *, const char*);
SOAP_FMAC1 tt__IrCutFilterAutoAdjustment * SOAP_FMAC2 soap_instantiate_tt__IrCutFilterAutoAdjustment(struct soap*, int, const char*, const char*, size_t*);

inline tt__IrCutFilterAutoAdjustment * soap_new_tt__IrCutFilterAutoAdjustment(struct soap *soap, int n = -1) { return soap_instantiate_tt__IrCutFilterAutoAdjustment(soap, n, NULL, NULL, NULL); }

inline tt__IrCutFilterAutoAdjustment * soap_new_req_tt__IrCutFilterAutoAdjustment(
	struct soap *soap,
	const std::string& BoundaryType)
{	tt__IrCutFilterAutoAdjustment *_p = soap_new_tt__IrCutFilterAutoAdjustment(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__IrCutFilterAutoAdjustment::BoundaryType = BoundaryType;
	}
	return _p;
}

inline tt__IrCutFilterAutoAdjustment * soap_new_set_tt__IrCutFilterAutoAdjustment(
	struct soap *soap,
	const std::string& BoundaryType,
	float *BoundaryOffset,
	LONG64 *ResponseTime,
	tt__IrCutFilterAutoAdjustmentExtension *Extension)
{	tt__IrCutFilterAutoAdjustment *_p = soap_new_tt__IrCutFilterAutoAdjustment(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__IrCutFilterAutoAdjustment::BoundaryType = BoundaryType;
		_p->tt__IrCutFilterAutoAdjustment::BoundaryOffset = BoundaryOffset;
		_p->tt__IrCutFilterAutoAdjustment::ResponseTime = ResponseTime;
		_p->tt__IrCutFilterAutoAdjustment::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__IrCutFilterAutoAdjustment
#define soap_write_tt__IrCutFilterAutoAdjustment(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:IrCutFilterAutoAdjustment", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IrCutFilterAutoAdjustment * SOAP_FMAC4 soap_get_tt__IrCutFilterAutoAdjustment(struct soap*, tt__IrCutFilterAutoAdjustment *, const char*, const char*);

#ifndef soap_read_tt__IrCutFilterAutoAdjustment
#define soap_read_tt__IrCutFilterAutoAdjustment(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IrCutFilterAutoAdjustment(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ImageStabilizationExtension
#define SOAP_TYPE_tt__ImageStabilizationExtension (614)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImageStabilizationExtension(struct soap*, const char*, int, const tt__ImageStabilizationExtension *, const char*);
SOAP_FMAC3 tt__ImageStabilizationExtension * SOAP_FMAC4 soap_in_tt__ImageStabilizationExtension(struct soap*, const char*, tt__ImageStabilizationExtension *, const char*);
SOAP_FMAC1 tt__ImageStabilizationExtension * SOAP_FMAC2 soap_instantiate_tt__ImageStabilizationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImageStabilizationExtension * soap_new_tt__ImageStabilizationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImageStabilizationExtension(soap, n, NULL, NULL, NULL); }

inline tt__ImageStabilizationExtension * soap_new_req_tt__ImageStabilizationExtension(
	struct soap *soap)
{	tt__ImageStabilizationExtension *_p = soap_new_tt__ImageStabilizationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ImageStabilizationExtension * soap_new_set_tt__ImageStabilizationExtension(
	struct soap *soap)
{	tt__ImageStabilizationExtension *_p = soap_new_tt__ImageStabilizationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__ImageStabilizationExtension
#define soap_write_tt__ImageStabilizationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ImageStabilizationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImageStabilizationExtension * SOAP_FMAC4 soap_get_tt__ImageStabilizationExtension(struct soap*, tt__ImageStabilizationExtension *, const char*, const char*);

#ifndef soap_read_tt__ImageStabilizationExtension
#define soap_read_tt__ImageStabilizationExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ImageStabilizationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ImageStabilization
#define SOAP_TYPE_tt__ImageStabilization (613)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImageStabilization(struct soap*, const char*, int, const tt__ImageStabilization *, const char*);
SOAP_FMAC3 tt__ImageStabilization * SOAP_FMAC4 soap_in_tt__ImageStabilization(struct soap*, const char*, tt__ImageStabilization *, const char*);
SOAP_FMAC1 tt__ImageStabilization * SOAP_FMAC2 soap_instantiate_tt__ImageStabilization(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImageStabilization * soap_new_tt__ImageStabilization(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImageStabilization(soap, n, NULL, NULL, NULL); }

inline tt__ImageStabilization * soap_new_req_tt__ImageStabilization(
	struct soap *soap,
	enum tt__ImageStabilizationMode Mode)
{	tt__ImageStabilization *_p = soap_new_tt__ImageStabilization(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ImageStabilization::Mode = Mode;
	}
	return _p;
}

inline tt__ImageStabilization * soap_new_set_tt__ImageStabilization(
	struct soap *soap,
	enum tt__ImageStabilizationMode Mode,
	float *Level,
	tt__ImageStabilizationExtension *Extension)
{	tt__ImageStabilization *_p = soap_new_tt__ImageStabilization(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ImageStabilization::Mode = Mode;
		_p->tt__ImageStabilization::Level = Level;
		_p->tt__ImageStabilization::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__ImageStabilization
#define soap_write_tt__ImageStabilization(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ImageStabilization", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImageStabilization * SOAP_FMAC4 soap_get_tt__ImageStabilization(struct soap*, tt__ImageStabilization *, const char*, const char*);

#ifndef soap_read_tt__ImageStabilization
#define soap_read_tt__ImageStabilization(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ImageStabilization(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ImagingSettingsExtension204
#define SOAP_TYPE_tt__ImagingSettingsExtension204 (612)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingSettingsExtension204(struct soap*, const char*, int, const tt__ImagingSettingsExtension204 *, const char*);
SOAP_FMAC3 tt__ImagingSettingsExtension204 * SOAP_FMAC4 soap_in_tt__ImagingSettingsExtension204(struct soap*, const char*, tt__ImagingSettingsExtension204 *, const char*);
SOAP_FMAC1 tt__ImagingSettingsExtension204 * SOAP_FMAC2 soap_instantiate_tt__ImagingSettingsExtension204(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingSettingsExtension204 * soap_new_tt__ImagingSettingsExtension204(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingSettingsExtension204(soap, n, NULL, NULL, NULL); }

inline tt__ImagingSettingsExtension204 * soap_new_req_tt__ImagingSettingsExtension204(
	struct soap *soap)
{	tt__ImagingSettingsExtension204 *_p = soap_new_tt__ImagingSettingsExtension204(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ImagingSettingsExtension204 * soap_new_set_tt__ImagingSettingsExtension204(
	struct soap *soap)
{	tt__ImagingSettingsExtension204 *_p = soap_new_tt__ImagingSettingsExtension204(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__ImagingSettingsExtension204
#define soap_write_tt__ImagingSettingsExtension204(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ImagingSettingsExtension204", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingSettingsExtension204 * SOAP_FMAC4 soap_get_tt__ImagingSettingsExtension204(struct soap*, tt__ImagingSettingsExtension204 *, const char*, const char*);

#ifndef soap_read_tt__ImagingSettingsExtension204
#define soap_read_tt__ImagingSettingsExtension204(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ImagingSettingsExtension204(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ImagingSettingsExtension203
#define SOAP_TYPE_tt__ImagingSettingsExtension203 (611)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingSettingsExtension203(struct soap*, const char*, int, const tt__ImagingSettingsExtension203 *, const char*);
SOAP_FMAC3 tt__ImagingSettingsExtension203 * SOAP_FMAC4 soap_in_tt__ImagingSettingsExtension203(struct soap*, const char*, tt__ImagingSettingsExtension203 *, const char*);
SOAP_FMAC1 tt__ImagingSettingsExtension203 * SOAP_FMAC2 soap_instantiate_tt__ImagingSettingsExtension203(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingSettingsExtension203 * soap_new_tt__ImagingSettingsExtension203(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingSettingsExtension203(soap, n, NULL, NULL, NULL); }

inline tt__ImagingSettingsExtension203 * soap_new_req_tt__ImagingSettingsExtension203(
	struct soap *soap)
{	tt__ImagingSettingsExtension203 *_p = soap_new_tt__ImagingSettingsExtension203(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ImagingSettingsExtension203 * soap_new_set_tt__ImagingSettingsExtension203(
	struct soap *soap,
	tt__ToneCompensation *ToneCompensation,
	tt__Defogging *Defogging,
	tt__NoiseReduction *NoiseReduction,
	tt__ImagingSettingsExtension204 *Extension)
{	tt__ImagingSettingsExtension203 *_p = soap_new_tt__ImagingSettingsExtension203(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ImagingSettingsExtension203::ToneCompensation = ToneCompensation;
		_p->tt__ImagingSettingsExtension203::Defogging = Defogging;
		_p->tt__ImagingSettingsExtension203::NoiseReduction = NoiseReduction;
		_p->tt__ImagingSettingsExtension203::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__ImagingSettingsExtension203
#define soap_write_tt__ImagingSettingsExtension203(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ImagingSettingsExtension203", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingSettingsExtension203 * SOAP_FMAC4 soap_get_tt__ImagingSettingsExtension203(struct soap*, tt__ImagingSettingsExtension203 *, const char*, const char*);

#ifndef soap_read_tt__ImagingSettingsExtension203
#define soap_read_tt__ImagingSettingsExtension203(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ImagingSettingsExtension203(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ImagingSettingsExtension202
#define SOAP_TYPE_tt__ImagingSettingsExtension202 (610)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingSettingsExtension202(struct soap*, const char*, int, const tt__ImagingSettingsExtension202 *, const char*);
SOAP_FMAC3 tt__ImagingSettingsExtension202 * SOAP_FMAC4 soap_in_tt__ImagingSettingsExtension202(struct soap*, const char*, tt__ImagingSettingsExtension202 *, const char*);
SOAP_FMAC1 tt__ImagingSettingsExtension202 * SOAP_FMAC2 soap_instantiate_tt__ImagingSettingsExtension202(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingSettingsExtension202 * soap_new_tt__ImagingSettingsExtension202(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingSettingsExtension202(soap, n, NULL, NULL, NULL); }

inline tt__ImagingSettingsExtension202 * soap_new_req_tt__ImagingSettingsExtension202(
	struct soap *soap)
{	tt__ImagingSettingsExtension202 *_p = soap_new_tt__ImagingSettingsExtension202(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ImagingSettingsExtension202 * soap_new_set_tt__ImagingSettingsExtension202(
	struct soap *soap,
	const std::vector<tt__IrCutFilterAutoAdjustment *> & IrCutFilterAutoAdjustment,
	tt__ImagingSettingsExtension203 *Extension)
{	tt__ImagingSettingsExtension202 *_p = soap_new_tt__ImagingSettingsExtension202(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ImagingSettingsExtension202::IrCutFilterAutoAdjustment = IrCutFilterAutoAdjustment;
		_p->tt__ImagingSettingsExtension202::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__ImagingSettingsExtension202
#define soap_write_tt__ImagingSettingsExtension202(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ImagingSettingsExtension202", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingSettingsExtension202 * SOAP_FMAC4 soap_get_tt__ImagingSettingsExtension202(struct soap*, tt__ImagingSettingsExtension202 *, const char*, const char*);

#ifndef soap_read_tt__ImagingSettingsExtension202
#define soap_read_tt__ImagingSettingsExtension202(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ImagingSettingsExtension202(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ImagingSettingsExtension20
#define SOAP_TYPE_tt__ImagingSettingsExtension20 (609)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingSettingsExtension20(struct soap*, const char*, int, const tt__ImagingSettingsExtension20 *, const char*);
SOAP_FMAC3 tt__ImagingSettingsExtension20 * SOAP_FMAC4 soap_in_tt__ImagingSettingsExtension20(struct soap*, const char*, tt__ImagingSettingsExtension20 *, const char*);
SOAP_FMAC1 tt__ImagingSettingsExtension20 * SOAP_FMAC2 soap_instantiate_tt__ImagingSettingsExtension20(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingSettingsExtension20 * soap_new_tt__ImagingSettingsExtension20(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingSettingsExtension20(soap, n, NULL, NULL, NULL); }

inline tt__ImagingSettingsExtension20 * soap_new_req_tt__ImagingSettingsExtension20(
	struct soap *soap)
{	tt__ImagingSettingsExtension20 *_p = soap_new_tt__ImagingSettingsExtension20(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ImagingSettingsExtension20 * soap_new_set_tt__ImagingSettingsExtension20(
	struct soap *soap,
	tt__ImageStabilization *ImageStabilization,
	tt__ImagingSettingsExtension202 *Extension)
{	tt__ImagingSettingsExtension20 *_p = soap_new_tt__ImagingSettingsExtension20(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ImagingSettingsExtension20::ImageStabilization = ImageStabilization;
		_p->tt__ImagingSettingsExtension20::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__ImagingSettingsExtension20
#define soap_write_tt__ImagingSettingsExtension20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ImagingSettingsExtension20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingSettingsExtension20 * SOAP_FMAC4 soap_get_tt__ImagingSettingsExtension20(struct soap*, tt__ImagingSettingsExtension20 *, const char*, const char*);

#ifndef soap_read_tt__ImagingSettingsExtension20
#define soap_read_tt__ImagingSettingsExtension20(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ImagingSettingsExtension20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ImagingSettings20
#define SOAP_TYPE_tt__ImagingSettings20 (608)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingSettings20(struct soap*, const char*, int, const tt__ImagingSettings20 *, const char*);
SOAP_FMAC3 tt__ImagingSettings20 * SOAP_FMAC4 soap_in_tt__ImagingSettings20(struct soap*, const char*, tt__ImagingSettings20 *, const char*);
SOAP_FMAC1 tt__ImagingSettings20 * SOAP_FMAC2 soap_instantiate_tt__ImagingSettings20(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingSettings20 * soap_new_tt__ImagingSettings20(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingSettings20(soap, n, NULL, NULL, NULL); }

inline tt__ImagingSettings20 * soap_new_req_tt__ImagingSettings20(
	struct soap *soap)
{	tt__ImagingSettings20 *_p = soap_new_tt__ImagingSettings20(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ImagingSettings20 * soap_new_set_tt__ImagingSettings20(
	struct soap *soap,
	tt__BacklightCompensation20 *BacklightCompensation,
	float *Brightness,
	float *ColorSaturation,
	float *Contrast,
	tt__Exposure20 *Exposure,
	tt__FocusConfiguration20 *Focus,
	enum tt__IrCutFilterMode *IrCutFilter,
	float *Sharpness,
	tt__WideDynamicRange20 *WideDynamicRange,
	tt__WhiteBalance20 *WhiteBalance,
	tt__ImagingSettingsExtension20 *Extension)
{	tt__ImagingSettings20 *_p = soap_new_tt__ImagingSettings20(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ImagingSettings20::BacklightCompensation = BacklightCompensation;
		_p->tt__ImagingSettings20::Brightness = Brightness;
		_p->tt__ImagingSettings20::ColorSaturation = ColorSaturation;
		_p->tt__ImagingSettings20::Contrast = Contrast;
		_p->tt__ImagingSettings20::Exposure = Exposure;
		_p->tt__ImagingSettings20::Focus = Focus;
		_p->tt__ImagingSettings20::IrCutFilter = IrCutFilter;
		_p->tt__ImagingSettings20::Sharpness = Sharpness;
		_p->tt__ImagingSettings20::WideDynamicRange = WideDynamicRange;
		_p->tt__ImagingSettings20::WhiteBalance = WhiteBalance;
		_p->tt__ImagingSettings20::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__ImagingSettings20
#define soap_write_tt__ImagingSettings20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ImagingSettings20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingSettings20 * SOAP_FMAC4 soap_get_tt__ImagingSettings20(struct soap*, tt__ImagingSettings20 *, const char*, const char*);

#ifndef soap_read_tt__ImagingSettings20
#define soap_read_tt__ImagingSettings20(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ImagingSettings20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__FocusStatus20Extension
#define SOAP_TYPE_tt__FocusStatus20Extension (607)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FocusStatus20Extension(struct soap*, const char*, int, const tt__FocusStatus20Extension *, const char*);
SOAP_FMAC3 tt__FocusStatus20Extension * SOAP_FMAC4 soap_in_tt__FocusStatus20Extension(struct soap*, const char*, tt__FocusStatus20Extension *, const char*);
SOAP_FMAC1 tt__FocusStatus20Extension * SOAP_FMAC2 soap_instantiate_tt__FocusStatus20Extension(struct soap*, int, const char*, const char*, size_t*);

inline tt__FocusStatus20Extension * soap_new_tt__FocusStatus20Extension(struct soap *soap, int n = -1) { return soap_instantiate_tt__FocusStatus20Extension(soap, n, NULL, NULL, NULL); }

inline tt__FocusStatus20Extension * soap_new_req_tt__FocusStatus20Extension(
	struct soap *soap)
{	tt__FocusStatus20Extension *_p = soap_new_tt__FocusStatus20Extension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__FocusStatus20Extension * soap_new_set_tt__FocusStatus20Extension(
	struct soap *soap)
{	tt__FocusStatus20Extension *_p = soap_new_tt__FocusStatus20Extension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__FocusStatus20Extension
#define soap_write_tt__FocusStatus20Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:FocusStatus20Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusStatus20Extension * SOAP_FMAC4 soap_get_tt__FocusStatus20Extension(struct soap*, tt__FocusStatus20Extension *, const char*, const char*);

#ifndef soap_read_tt__FocusStatus20Extension
#define soap_read_tt__FocusStatus20Extension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__FocusStatus20Extension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__FocusStatus20
#define SOAP_TYPE_tt__FocusStatus20 (606)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FocusStatus20(struct soap*, const char*, int, const tt__FocusStatus20 *, const char*);
SOAP_FMAC3 tt__FocusStatus20 * SOAP_FMAC4 soap_in_tt__FocusStatus20(struct soap*, const char*, tt__FocusStatus20 *, const char*);
SOAP_FMAC1 tt__FocusStatus20 * SOAP_FMAC2 soap_instantiate_tt__FocusStatus20(struct soap*, int, const char*, const char*, size_t*);

inline tt__FocusStatus20 * soap_new_tt__FocusStatus20(struct soap *soap, int n = -1) { return soap_instantiate_tt__FocusStatus20(soap, n, NULL, NULL, NULL); }

inline tt__FocusStatus20 * soap_new_req_tt__FocusStatus20(
	struct soap *soap,
	float Position,
	enum tt__MoveStatus MoveStatus)
{	tt__FocusStatus20 *_p = soap_new_tt__FocusStatus20(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FocusStatus20::Position = Position;
		_p->tt__FocusStatus20::MoveStatus = MoveStatus;
	}
	return _p;
}

inline tt__FocusStatus20 * soap_new_set_tt__FocusStatus20(
	struct soap *soap,
	float Position,
	enum tt__MoveStatus MoveStatus,
	std::string *Error,
	tt__FocusStatus20Extension *Extension)
{	tt__FocusStatus20 *_p = soap_new_tt__FocusStatus20(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FocusStatus20::Position = Position;
		_p->tt__FocusStatus20::MoveStatus = MoveStatus;
		_p->tt__FocusStatus20::Error = Error;
		_p->tt__FocusStatus20::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__FocusStatus20
#define soap_write_tt__FocusStatus20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:FocusStatus20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusStatus20 * SOAP_FMAC4 soap_get_tt__FocusStatus20(struct soap*, tt__FocusStatus20 *, const char*, const char*);

#ifndef soap_read_tt__FocusStatus20
#define soap_read_tt__FocusStatus20(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__FocusStatus20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ImagingStatus20Extension
#define SOAP_TYPE_tt__ImagingStatus20Extension (605)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingStatus20Extension(struct soap*, const char*, int, const tt__ImagingStatus20Extension *, const char*);
SOAP_FMAC3 tt__ImagingStatus20Extension * SOAP_FMAC4 soap_in_tt__ImagingStatus20Extension(struct soap*, const char*, tt__ImagingStatus20Extension *, const char*);
SOAP_FMAC1 tt__ImagingStatus20Extension * SOAP_FMAC2 soap_instantiate_tt__ImagingStatus20Extension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingStatus20Extension * soap_new_tt__ImagingStatus20Extension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingStatus20Extension(soap, n, NULL, NULL, NULL); }

inline tt__ImagingStatus20Extension * soap_new_req_tt__ImagingStatus20Extension(
	struct soap *soap)
{	tt__ImagingStatus20Extension *_p = soap_new_tt__ImagingStatus20Extension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ImagingStatus20Extension * soap_new_set_tt__ImagingStatus20Extension(
	struct soap *soap)
{	tt__ImagingStatus20Extension *_p = soap_new_tt__ImagingStatus20Extension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__ImagingStatus20Extension
#define soap_write_tt__ImagingStatus20Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ImagingStatus20Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingStatus20Extension * SOAP_FMAC4 soap_get_tt__ImagingStatus20Extension(struct soap*, tt__ImagingStatus20Extension *, const char*, const char*);

#ifndef soap_read_tt__ImagingStatus20Extension
#define soap_read_tt__ImagingStatus20Extension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ImagingStatus20Extension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ImagingStatus20
#define SOAP_TYPE_tt__ImagingStatus20 (604)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingStatus20(struct soap*, const char*, int, const tt__ImagingStatus20 *, const char*);
SOAP_FMAC3 tt__ImagingStatus20 * SOAP_FMAC4 soap_in_tt__ImagingStatus20(struct soap*, const char*, tt__ImagingStatus20 *, const char*);
SOAP_FMAC1 tt__ImagingStatus20 * SOAP_FMAC2 soap_instantiate_tt__ImagingStatus20(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingStatus20 * soap_new_tt__ImagingStatus20(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingStatus20(soap, n, NULL, NULL, NULL); }

inline tt__ImagingStatus20 * soap_new_req_tt__ImagingStatus20(
	struct soap *soap)
{	tt__ImagingStatus20 *_p = soap_new_tt__ImagingStatus20(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ImagingStatus20 * soap_new_set_tt__ImagingStatus20(
	struct soap *soap,
	tt__FocusStatus20 *FocusStatus20,
	tt__ImagingStatus20Extension *Extension)
{	tt__ImagingStatus20 *_p = soap_new_tt__ImagingStatus20(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ImagingStatus20::FocusStatus20 = FocusStatus20;
		_p->tt__ImagingStatus20::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__ImagingStatus20
#define soap_write_tt__ImagingStatus20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ImagingStatus20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingStatus20 * SOAP_FMAC4 soap_get_tt__ImagingStatus20(struct soap*, tt__ImagingStatus20 *, const char*, const char*);

#ifndef soap_read_tt__ImagingStatus20
#define soap_read_tt__ImagingStatus20(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ImagingStatus20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__WhiteBalance
#define SOAP_TYPE_tt__WhiteBalance (603)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__WhiteBalance(struct soap*, const char*, int, const tt__WhiteBalance *, const char*);
SOAP_FMAC3 tt__WhiteBalance * SOAP_FMAC4 soap_in_tt__WhiteBalance(struct soap*, const char*, tt__WhiteBalance *, const char*);
SOAP_FMAC1 tt__WhiteBalance * SOAP_FMAC2 soap_instantiate_tt__WhiteBalance(struct soap*, int, const char*, const char*, size_t*);

inline tt__WhiteBalance * soap_new_tt__WhiteBalance(struct soap *soap, int n = -1) { return soap_instantiate_tt__WhiteBalance(soap, n, NULL, NULL, NULL); }

inline tt__WhiteBalance * soap_new_req_tt__WhiteBalance(
	struct soap *soap,
	enum tt__WhiteBalanceMode Mode,
	float CrGain,
	float CbGain)
{	tt__WhiteBalance *_p = soap_new_tt__WhiteBalance(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__WhiteBalance::Mode = Mode;
		_p->tt__WhiteBalance::CrGain = CrGain;
		_p->tt__WhiteBalance::CbGain = CbGain;
	}
	return _p;
}

inline tt__WhiteBalance * soap_new_set_tt__WhiteBalance(
	struct soap *soap,
	enum tt__WhiteBalanceMode Mode,
	float CrGain,
	float CbGain)
{	tt__WhiteBalance *_p = soap_new_tt__WhiteBalance(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__WhiteBalance::Mode = Mode;
		_p->tt__WhiteBalance::CrGain = CrGain;
		_p->tt__WhiteBalance::CbGain = CbGain;
	}
	return _p;
}

#ifndef soap_write_tt__WhiteBalance
#define soap_write_tt__WhiteBalance(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:WhiteBalance", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WhiteBalance * SOAP_FMAC4 soap_get_tt__WhiteBalance(struct soap*, tt__WhiteBalance *, const char*, const char*);

#ifndef soap_read_tt__WhiteBalance
#define soap_read_tt__WhiteBalance(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__WhiteBalance(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ContinuousFocusOptions
#define SOAP_TYPE_tt__ContinuousFocusOptions (602)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ContinuousFocusOptions(struct soap*, const char*, int, const tt__ContinuousFocusOptions *, const char*);
SOAP_FMAC3 tt__ContinuousFocusOptions * SOAP_FMAC4 soap_in_tt__ContinuousFocusOptions(struct soap*, const char*, tt__ContinuousFocusOptions *, const char*);
SOAP_FMAC1 tt__ContinuousFocusOptions * SOAP_FMAC2 soap_instantiate_tt__ContinuousFocusOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__ContinuousFocusOptions * soap_new_tt__ContinuousFocusOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__ContinuousFocusOptions(soap, n, NULL, NULL, NULL); }

inline tt__ContinuousFocusOptions * soap_new_req_tt__ContinuousFocusOptions(
	struct soap *soap,
	tt__FloatRange *Speed)
{	tt__ContinuousFocusOptions *_p = soap_new_tt__ContinuousFocusOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ContinuousFocusOptions::Speed = Speed;
	}
	return _p;
}

inline tt__ContinuousFocusOptions * soap_new_set_tt__ContinuousFocusOptions(
	struct soap *soap,
	tt__FloatRange *Speed)
{	tt__ContinuousFocusOptions *_p = soap_new_tt__ContinuousFocusOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ContinuousFocusOptions::Speed = Speed;
	}
	return _p;
}

#ifndef soap_write_tt__ContinuousFocusOptions
#define soap_write_tt__ContinuousFocusOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ContinuousFocusOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ContinuousFocusOptions * SOAP_FMAC4 soap_get_tt__ContinuousFocusOptions(struct soap*, tt__ContinuousFocusOptions *, const char*, const char*);

#ifndef soap_read_tt__ContinuousFocusOptions
#define soap_read_tt__ContinuousFocusOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ContinuousFocusOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RelativeFocusOptions
#define SOAP_TYPE_tt__RelativeFocusOptions (601)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RelativeFocusOptions(struct soap*, const char*, int, const tt__RelativeFocusOptions *, const char*);
SOAP_FMAC3 tt__RelativeFocusOptions * SOAP_FMAC4 soap_in_tt__RelativeFocusOptions(struct soap*, const char*, tt__RelativeFocusOptions *, const char*);
SOAP_FMAC1 tt__RelativeFocusOptions * SOAP_FMAC2 soap_instantiate_tt__RelativeFocusOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__RelativeFocusOptions * soap_new_tt__RelativeFocusOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__RelativeFocusOptions(soap, n, NULL, NULL, NULL); }

inline tt__RelativeFocusOptions * soap_new_req_tt__RelativeFocusOptions(
	struct soap *soap,
	tt__FloatRange *Distance,
	tt__FloatRange *Speed)
{	tt__RelativeFocusOptions *_p = soap_new_tt__RelativeFocusOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RelativeFocusOptions::Distance = Distance;
		_p->tt__RelativeFocusOptions::Speed = Speed;
	}
	return _p;
}

inline tt__RelativeFocusOptions * soap_new_set_tt__RelativeFocusOptions(
	struct soap *soap,
	tt__FloatRange *Distance,
	tt__FloatRange *Speed)
{	tt__RelativeFocusOptions *_p = soap_new_tt__RelativeFocusOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RelativeFocusOptions::Distance = Distance;
		_p->tt__RelativeFocusOptions::Speed = Speed;
	}
	return _p;
}

#ifndef soap_write_tt__RelativeFocusOptions
#define soap_write_tt__RelativeFocusOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:RelativeFocusOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RelativeFocusOptions * SOAP_FMAC4 soap_get_tt__RelativeFocusOptions(struct soap*, tt__RelativeFocusOptions *, const char*, const char*);

#ifndef soap_read_tt__RelativeFocusOptions
#define soap_read_tt__RelativeFocusOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RelativeFocusOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AbsoluteFocusOptions
#define SOAP_TYPE_tt__AbsoluteFocusOptions (600)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AbsoluteFocusOptions(struct soap*, const char*, int, const tt__AbsoluteFocusOptions *, const char*);
SOAP_FMAC3 tt__AbsoluteFocusOptions * SOAP_FMAC4 soap_in_tt__AbsoluteFocusOptions(struct soap*, const char*, tt__AbsoluteFocusOptions *, const char*);
SOAP_FMAC1 tt__AbsoluteFocusOptions * SOAP_FMAC2 soap_instantiate_tt__AbsoluteFocusOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__AbsoluteFocusOptions * soap_new_tt__AbsoluteFocusOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__AbsoluteFocusOptions(soap, n, NULL, NULL, NULL); }

inline tt__AbsoluteFocusOptions * soap_new_req_tt__AbsoluteFocusOptions(
	struct soap *soap,
	tt__FloatRange *Position)
{	tt__AbsoluteFocusOptions *_p = soap_new_tt__AbsoluteFocusOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AbsoluteFocusOptions::Position = Position;
	}
	return _p;
}

inline tt__AbsoluteFocusOptions * soap_new_set_tt__AbsoluteFocusOptions(
	struct soap *soap,
	tt__FloatRange *Position,
	tt__FloatRange *Speed)
{	tt__AbsoluteFocusOptions *_p = soap_new_tt__AbsoluteFocusOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AbsoluteFocusOptions::Position = Position;
		_p->tt__AbsoluteFocusOptions::Speed = Speed;
	}
	return _p;
}

#ifndef soap_write_tt__AbsoluteFocusOptions
#define soap_write_tt__AbsoluteFocusOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AbsoluteFocusOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AbsoluteFocusOptions * SOAP_FMAC4 soap_get_tt__AbsoluteFocusOptions(struct soap*, tt__AbsoluteFocusOptions *, const char*, const char*);

#ifndef soap_read_tt__AbsoluteFocusOptions
#define soap_read_tt__AbsoluteFocusOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AbsoluteFocusOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__MoveOptions
#define SOAP_TYPE_tt__MoveOptions (599)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MoveOptions(struct soap*, const char*, int, const tt__MoveOptions *, const char*);
SOAP_FMAC3 tt__MoveOptions * SOAP_FMAC4 soap_in_tt__MoveOptions(struct soap*, const char*, tt__MoveOptions *, const char*);
SOAP_FMAC1 tt__MoveOptions * SOAP_FMAC2 soap_instantiate_tt__MoveOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__MoveOptions * soap_new_tt__MoveOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__MoveOptions(soap, n, NULL, NULL, NULL); }

inline tt__MoveOptions * soap_new_req_tt__MoveOptions(
	struct soap *soap)
{	tt__MoveOptions *_p = soap_new_tt__MoveOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__MoveOptions * soap_new_set_tt__MoveOptions(
	struct soap *soap,
	tt__AbsoluteFocusOptions *Absolute,
	tt__RelativeFocusOptions *Relative,
	tt__ContinuousFocusOptions *Continuous)
{	tt__MoveOptions *_p = soap_new_tt__MoveOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__MoveOptions::Absolute = Absolute;
		_p->tt__MoveOptions::Relative = Relative;
		_p->tt__MoveOptions::Continuous = Continuous;
	}
	return _p;
}

#ifndef soap_write_tt__MoveOptions
#define soap_write_tt__MoveOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:MoveOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MoveOptions * SOAP_FMAC4 soap_get_tt__MoveOptions(struct soap*, tt__MoveOptions *, const char*, const char*);

#ifndef soap_read_tt__MoveOptions
#define soap_read_tt__MoveOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MoveOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ContinuousFocus
#define SOAP_TYPE_tt__ContinuousFocus (598)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ContinuousFocus(struct soap*, const char*, int, const tt__ContinuousFocus *, const char*);
SOAP_FMAC3 tt__ContinuousFocus * SOAP_FMAC4 soap_in_tt__ContinuousFocus(struct soap*, const char*, tt__ContinuousFocus *, const char*);
SOAP_FMAC1 tt__ContinuousFocus * SOAP_FMAC2 soap_instantiate_tt__ContinuousFocus(struct soap*, int, const char*, const char*, size_t*);

inline tt__ContinuousFocus * soap_new_tt__ContinuousFocus(struct soap *soap, int n = -1) { return soap_instantiate_tt__ContinuousFocus(soap, n, NULL, NULL, NULL); }

inline tt__ContinuousFocus * soap_new_req_tt__ContinuousFocus(
	struct soap *soap,
	float Speed)
{	tt__ContinuousFocus *_p = soap_new_tt__ContinuousFocus(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ContinuousFocus::Speed = Speed;
	}
	return _p;
}

inline tt__ContinuousFocus * soap_new_set_tt__ContinuousFocus(
	struct soap *soap,
	float Speed)
{	tt__ContinuousFocus *_p = soap_new_tt__ContinuousFocus(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ContinuousFocus::Speed = Speed;
	}
	return _p;
}

#ifndef soap_write_tt__ContinuousFocus
#define soap_write_tt__ContinuousFocus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ContinuousFocus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ContinuousFocus * SOAP_FMAC4 soap_get_tt__ContinuousFocus(struct soap*, tt__ContinuousFocus *, const char*, const char*);

#ifndef soap_read_tt__ContinuousFocus
#define soap_read_tt__ContinuousFocus(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ContinuousFocus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RelativeFocus
#define SOAP_TYPE_tt__RelativeFocus (597)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RelativeFocus(struct soap*, const char*, int, const tt__RelativeFocus *, const char*);
SOAP_FMAC3 tt__RelativeFocus * SOAP_FMAC4 soap_in_tt__RelativeFocus(struct soap*, const char*, tt__RelativeFocus *, const char*);
SOAP_FMAC1 tt__RelativeFocus * SOAP_FMAC2 soap_instantiate_tt__RelativeFocus(struct soap*, int, const char*, const char*, size_t*);

inline tt__RelativeFocus * soap_new_tt__RelativeFocus(struct soap *soap, int n = -1) { return soap_instantiate_tt__RelativeFocus(soap, n, NULL, NULL, NULL); }

inline tt__RelativeFocus * soap_new_req_tt__RelativeFocus(
	struct soap *soap,
	float Distance)
{	tt__RelativeFocus *_p = soap_new_tt__RelativeFocus(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RelativeFocus::Distance = Distance;
	}
	return _p;
}

inline tt__RelativeFocus * soap_new_set_tt__RelativeFocus(
	struct soap *soap,
	float Distance,
	float *Speed)
{	tt__RelativeFocus *_p = soap_new_tt__RelativeFocus(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RelativeFocus::Distance = Distance;
		_p->tt__RelativeFocus::Speed = Speed;
	}
	return _p;
}

#ifndef soap_write_tt__RelativeFocus
#define soap_write_tt__RelativeFocus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:RelativeFocus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RelativeFocus * SOAP_FMAC4 soap_get_tt__RelativeFocus(struct soap*, tt__RelativeFocus *, const char*, const char*);

#ifndef soap_read_tt__RelativeFocus
#define soap_read_tt__RelativeFocus(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RelativeFocus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AbsoluteFocus
#define SOAP_TYPE_tt__AbsoluteFocus (596)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AbsoluteFocus(struct soap*, const char*, int, const tt__AbsoluteFocus *, const char*);
SOAP_FMAC3 tt__AbsoluteFocus * SOAP_FMAC4 soap_in_tt__AbsoluteFocus(struct soap*, const char*, tt__AbsoluteFocus *, const char*);
SOAP_FMAC1 tt__AbsoluteFocus * SOAP_FMAC2 soap_instantiate_tt__AbsoluteFocus(struct soap*, int, const char*, const char*, size_t*);

inline tt__AbsoluteFocus * soap_new_tt__AbsoluteFocus(struct soap *soap, int n = -1) { return soap_instantiate_tt__AbsoluteFocus(soap, n, NULL, NULL, NULL); }

inline tt__AbsoluteFocus * soap_new_req_tt__AbsoluteFocus(
	struct soap *soap,
	float Position)
{	tt__AbsoluteFocus *_p = soap_new_tt__AbsoluteFocus(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AbsoluteFocus::Position = Position;
	}
	return _p;
}

inline tt__AbsoluteFocus * soap_new_set_tt__AbsoluteFocus(
	struct soap *soap,
	float Position,
	float *Speed)
{	tt__AbsoluteFocus *_p = soap_new_tt__AbsoluteFocus(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AbsoluteFocus::Position = Position;
		_p->tt__AbsoluteFocus::Speed = Speed;
	}
	return _p;
}

#ifndef soap_write_tt__AbsoluteFocus
#define soap_write_tt__AbsoluteFocus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AbsoluteFocus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AbsoluteFocus * SOAP_FMAC4 soap_get_tt__AbsoluteFocus(struct soap*, tt__AbsoluteFocus *, const char*, const char*);

#ifndef soap_read_tt__AbsoluteFocus
#define soap_read_tt__AbsoluteFocus(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AbsoluteFocus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__FocusMove
#define SOAP_TYPE_tt__FocusMove (595)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FocusMove(struct soap*, const char*, int, const tt__FocusMove *, const char*);
SOAP_FMAC3 tt__FocusMove * SOAP_FMAC4 soap_in_tt__FocusMove(struct soap*, const char*, tt__FocusMove *, const char*);
SOAP_FMAC1 tt__FocusMove * SOAP_FMAC2 soap_instantiate_tt__FocusMove(struct soap*, int, const char*, const char*, size_t*);

inline tt__FocusMove * soap_new_tt__FocusMove(struct soap *soap, int n = -1) { return soap_instantiate_tt__FocusMove(soap, n, NULL, NULL, NULL); }

inline tt__FocusMove * soap_new_req_tt__FocusMove(
	struct soap *soap)
{	tt__FocusMove *_p = soap_new_tt__FocusMove(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__FocusMove * soap_new_set_tt__FocusMove(
	struct soap *soap,
	tt__AbsoluteFocus *Absolute,
	tt__RelativeFocus *Relative,
	tt__ContinuousFocus *Continuous)
{	tt__FocusMove *_p = soap_new_tt__FocusMove(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FocusMove::Absolute = Absolute;
		_p->tt__FocusMove::Relative = Relative;
		_p->tt__FocusMove::Continuous = Continuous;
	}
	return _p;
}

#ifndef soap_write_tt__FocusMove
#define soap_write_tt__FocusMove(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:FocusMove", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusMove * SOAP_FMAC4 soap_get_tt__FocusMove(struct soap*, tt__FocusMove *, const char*, const char*);

#ifndef soap_read_tt__FocusMove
#define soap_read_tt__FocusMove(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__FocusMove(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__WhiteBalanceOptions
#define SOAP_TYPE_tt__WhiteBalanceOptions (594)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__WhiteBalanceOptions(struct soap*, const char*, int, const tt__WhiteBalanceOptions *, const char*);
SOAP_FMAC3 tt__WhiteBalanceOptions * SOAP_FMAC4 soap_in_tt__WhiteBalanceOptions(struct soap*, const char*, tt__WhiteBalanceOptions *, const char*);
SOAP_FMAC1 tt__WhiteBalanceOptions * SOAP_FMAC2 soap_instantiate_tt__WhiteBalanceOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__WhiteBalanceOptions * soap_new_tt__WhiteBalanceOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__WhiteBalanceOptions(soap, n, NULL, NULL, NULL); }

inline tt__WhiteBalanceOptions * soap_new_req_tt__WhiteBalanceOptions(
	struct soap *soap,
	const std::vector<enum tt__WhiteBalanceMode> & Mode,
	tt__FloatRange *YrGain,
	tt__FloatRange *YbGain)
{	tt__WhiteBalanceOptions *_p = soap_new_tt__WhiteBalanceOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__WhiteBalanceOptions::Mode = Mode;
		_p->tt__WhiteBalanceOptions::YrGain = YrGain;
		_p->tt__WhiteBalanceOptions::YbGain = YbGain;
	}
	return _p;
}

inline tt__WhiteBalanceOptions * soap_new_set_tt__WhiteBalanceOptions(
	struct soap *soap,
	const std::vector<enum tt__WhiteBalanceMode> & Mode,
	tt__FloatRange *YrGain,
	tt__FloatRange *YbGain)
{	tt__WhiteBalanceOptions *_p = soap_new_tt__WhiteBalanceOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__WhiteBalanceOptions::Mode = Mode;
		_p->tt__WhiteBalanceOptions::YrGain = YrGain;
		_p->tt__WhiteBalanceOptions::YbGain = YbGain;
	}
	return _p;
}

#ifndef soap_write_tt__WhiteBalanceOptions
#define soap_write_tt__WhiteBalanceOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:WhiteBalanceOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WhiteBalanceOptions * SOAP_FMAC4 soap_get_tt__WhiteBalanceOptions(struct soap*, tt__WhiteBalanceOptions *, const char*, const char*);

#ifndef soap_read_tt__WhiteBalanceOptions
#define soap_read_tt__WhiteBalanceOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__WhiteBalanceOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ExposureOptions
#define SOAP_TYPE_tt__ExposureOptions (593)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ExposureOptions(struct soap*, const char*, int, const tt__ExposureOptions *, const char*);
SOAP_FMAC3 tt__ExposureOptions * SOAP_FMAC4 soap_in_tt__ExposureOptions(struct soap*, const char*, tt__ExposureOptions *, const char*);
SOAP_FMAC1 tt__ExposureOptions * SOAP_FMAC2 soap_instantiate_tt__ExposureOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__ExposureOptions * soap_new_tt__ExposureOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__ExposureOptions(soap, n, NULL, NULL, NULL); }

inline tt__ExposureOptions * soap_new_req_tt__ExposureOptions(
	struct soap *soap,
	const std::vector<enum tt__ExposureMode> & Mode,
	const std::vector<enum tt__ExposurePriority> & Priority,
	tt__FloatRange *MinExposureTime,
	tt__FloatRange *MaxExposureTime,
	tt__FloatRange *MinGain,
	tt__FloatRange *MaxGain,
	tt__FloatRange *MinIris,
	tt__FloatRange *MaxIris,
	tt__FloatRange *ExposureTime,
	tt__FloatRange *Gain,
	tt__FloatRange *Iris)
{	tt__ExposureOptions *_p = soap_new_tt__ExposureOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ExposureOptions::Mode = Mode;
		_p->tt__ExposureOptions::Priority = Priority;
		_p->tt__ExposureOptions::MinExposureTime = MinExposureTime;
		_p->tt__ExposureOptions::MaxExposureTime = MaxExposureTime;
		_p->tt__ExposureOptions::MinGain = MinGain;
		_p->tt__ExposureOptions::MaxGain = MaxGain;
		_p->tt__ExposureOptions::MinIris = MinIris;
		_p->tt__ExposureOptions::MaxIris = MaxIris;
		_p->tt__ExposureOptions::ExposureTime = ExposureTime;
		_p->tt__ExposureOptions::Gain = Gain;
		_p->tt__ExposureOptions::Iris = Iris;
	}
	return _p;
}

inline tt__ExposureOptions * soap_new_set_tt__ExposureOptions(
	struct soap *soap,
	const std::vector<enum tt__ExposureMode> & Mode,
	const std::vector<enum tt__ExposurePriority> & Priority,
	tt__FloatRange *MinExposureTime,
	tt__FloatRange *MaxExposureTime,
	tt__FloatRange *MinGain,
	tt__FloatRange *MaxGain,
	tt__FloatRange *MinIris,
	tt__FloatRange *MaxIris,
	tt__FloatRange *ExposureTime,
	tt__FloatRange *Gain,
	tt__FloatRange *Iris)
{	tt__ExposureOptions *_p = soap_new_tt__ExposureOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ExposureOptions::Mode = Mode;
		_p->tt__ExposureOptions::Priority = Priority;
		_p->tt__ExposureOptions::MinExposureTime = MinExposureTime;
		_p->tt__ExposureOptions::MaxExposureTime = MaxExposureTime;
		_p->tt__ExposureOptions::MinGain = MinGain;
		_p->tt__ExposureOptions::MaxGain = MaxGain;
		_p->tt__ExposureOptions::MinIris = MinIris;
		_p->tt__ExposureOptions::MaxIris = MaxIris;
		_p->tt__ExposureOptions::ExposureTime = ExposureTime;
		_p->tt__ExposureOptions::Gain = Gain;
		_p->tt__ExposureOptions::Iris = Iris;
	}
	return _p;
}

#ifndef soap_write_tt__ExposureOptions
#define soap_write_tt__ExposureOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ExposureOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ExposureOptions * SOAP_FMAC4 soap_get_tt__ExposureOptions(struct soap*, tt__ExposureOptions *, const char*, const char*);

#ifndef soap_read_tt__ExposureOptions
#define soap_read_tt__ExposureOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ExposureOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__FocusOptions
#define SOAP_TYPE_tt__FocusOptions (592)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FocusOptions(struct soap*, const char*, int, const tt__FocusOptions *, const char*);
SOAP_FMAC3 tt__FocusOptions * SOAP_FMAC4 soap_in_tt__FocusOptions(struct soap*, const char*, tt__FocusOptions *, const char*);
SOAP_FMAC1 tt__FocusOptions * SOAP_FMAC2 soap_instantiate_tt__FocusOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__FocusOptions * soap_new_tt__FocusOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__FocusOptions(soap, n, NULL, NULL, NULL); }

inline tt__FocusOptions * soap_new_req_tt__FocusOptions(
	struct soap *soap,
	tt__FloatRange *DefaultSpeed,
	tt__FloatRange *NearLimit,
	tt__FloatRange *FarLimit)
{	tt__FocusOptions *_p = soap_new_tt__FocusOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FocusOptions::DefaultSpeed = DefaultSpeed;
		_p->tt__FocusOptions::NearLimit = NearLimit;
		_p->tt__FocusOptions::FarLimit = FarLimit;
	}
	return _p;
}

inline tt__FocusOptions * soap_new_set_tt__FocusOptions(
	struct soap *soap,
	const std::vector<enum tt__AutoFocusMode> & AutoFocusModes,
	tt__FloatRange *DefaultSpeed,
	tt__FloatRange *NearLimit,
	tt__FloatRange *FarLimit)
{	tt__FocusOptions *_p = soap_new_tt__FocusOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FocusOptions::AutoFocusModes = AutoFocusModes;
		_p->tt__FocusOptions::DefaultSpeed = DefaultSpeed;
		_p->tt__FocusOptions::NearLimit = NearLimit;
		_p->tt__FocusOptions::FarLimit = FarLimit;
	}
	return _p;
}

#ifndef soap_write_tt__FocusOptions
#define soap_write_tt__FocusOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:FocusOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusOptions * SOAP_FMAC4 soap_get_tt__FocusOptions(struct soap*, tt__FocusOptions *, const char*, const char*);

#ifndef soap_read_tt__FocusOptions
#define soap_read_tt__FocusOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__FocusOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__BacklightCompensationOptions
#define SOAP_TYPE_tt__BacklightCompensationOptions (591)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__BacklightCompensationOptions(struct soap*, const char*, int, const tt__BacklightCompensationOptions *, const char*);
SOAP_FMAC3 tt__BacklightCompensationOptions * SOAP_FMAC4 soap_in_tt__BacklightCompensationOptions(struct soap*, const char*, tt__BacklightCompensationOptions *, const char*);
SOAP_FMAC1 tt__BacklightCompensationOptions * SOAP_FMAC2 soap_instantiate_tt__BacklightCompensationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__BacklightCompensationOptions * soap_new_tt__BacklightCompensationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__BacklightCompensationOptions(soap, n, NULL, NULL, NULL); }

inline tt__BacklightCompensationOptions * soap_new_req_tt__BacklightCompensationOptions(
	struct soap *soap,
	const std::vector<enum tt__WideDynamicMode> & Mode,
	tt__FloatRange *Level)
{	tt__BacklightCompensationOptions *_p = soap_new_tt__BacklightCompensationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__BacklightCompensationOptions::Mode = Mode;
		_p->tt__BacklightCompensationOptions::Level = Level;
	}
	return _p;
}

inline tt__BacklightCompensationOptions * soap_new_set_tt__BacklightCompensationOptions(
	struct soap *soap,
	const std::vector<enum tt__WideDynamicMode> & Mode,
	tt__FloatRange *Level)
{	tt__BacklightCompensationOptions *_p = soap_new_tt__BacklightCompensationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__BacklightCompensationOptions::Mode = Mode;
		_p->tt__BacklightCompensationOptions::Level = Level;
	}
	return _p;
}

#ifndef soap_write_tt__BacklightCompensationOptions
#define soap_write_tt__BacklightCompensationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:BacklightCompensationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__BacklightCompensationOptions * SOAP_FMAC4 soap_get_tt__BacklightCompensationOptions(struct soap*, tt__BacklightCompensationOptions *, const char*, const char*);

#ifndef soap_read_tt__BacklightCompensationOptions
#define soap_read_tt__BacklightCompensationOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__BacklightCompensationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__WideDynamicRangeOptions
#define SOAP_TYPE_tt__WideDynamicRangeOptions (590)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__WideDynamicRangeOptions(struct soap*, const char*, int, const tt__WideDynamicRangeOptions *, const char*);
SOAP_FMAC3 tt__WideDynamicRangeOptions * SOAP_FMAC4 soap_in_tt__WideDynamicRangeOptions(struct soap*, const char*, tt__WideDynamicRangeOptions *, const char*);
SOAP_FMAC1 tt__WideDynamicRangeOptions * SOAP_FMAC2 soap_instantiate_tt__WideDynamicRangeOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__WideDynamicRangeOptions * soap_new_tt__WideDynamicRangeOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__WideDynamicRangeOptions(soap, n, NULL, NULL, NULL); }

inline tt__WideDynamicRangeOptions * soap_new_req_tt__WideDynamicRangeOptions(
	struct soap *soap,
	const std::vector<enum tt__WideDynamicMode> & Mode,
	tt__FloatRange *Level)
{	tt__WideDynamicRangeOptions *_p = soap_new_tt__WideDynamicRangeOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__WideDynamicRangeOptions::Mode = Mode;
		_p->tt__WideDynamicRangeOptions::Level = Level;
	}
	return _p;
}

inline tt__WideDynamicRangeOptions * soap_new_set_tt__WideDynamicRangeOptions(
	struct soap *soap,
	const std::vector<enum tt__WideDynamicMode> & Mode,
	tt__FloatRange *Level)
{	tt__WideDynamicRangeOptions *_p = soap_new_tt__WideDynamicRangeOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__WideDynamicRangeOptions::Mode = Mode;
		_p->tt__WideDynamicRangeOptions::Level = Level;
	}
	return _p;
}

#ifndef soap_write_tt__WideDynamicRangeOptions
#define soap_write_tt__WideDynamicRangeOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:WideDynamicRangeOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WideDynamicRangeOptions * SOAP_FMAC4 soap_get_tt__WideDynamicRangeOptions(struct soap*, tt__WideDynamicRangeOptions *, const char*, const char*);

#ifndef soap_read_tt__WideDynamicRangeOptions
#define soap_read_tt__WideDynamicRangeOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__WideDynamicRangeOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ImagingOptions
#define SOAP_TYPE_tt__ImagingOptions (589)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingOptions(struct soap*, const char*, int, const tt__ImagingOptions *, const char*);
SOAP_FMAC3 tt__ImagingOptions * SOAP_FMAC4 soap_in_tt__ImagingOptions(struct soap*, const char*, tt__ImagingOptions *, const char*);
SOAP_FMAC1 tt__ImagingOptions * SOAP_FMAC2 soap_instantiate_tt__ImagingOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingOptions * soap_new_tt__ImagingOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingOptions(soap, n, NULL, NULL, NULL); }

inline tt__ImagingOptions * soap_new_req_tt__ImagingOptions(
	struct soap *soap,
	tt__BacklightCompensationOptions *BacklightCompensation,
	tt__FloatRange *Brightness,
	tt__FloatRange *ColorSaturation,
	tt__FloatRange *Contrast,
	tt__ExposureOptions *Exposure,
	tt__FocusOptions *Focus,
	const std::vector<enum tt__IrCutFilterMode> & IrCutFilterModes,
	tt__FloatRange *Sharpness,
	tt__WideDynamicRangeOptions *WideDynamicRange,
	tt__WhiteBalanceOptions *WhiteBalance)
{	tt__ImagingOptions *_p = soap_new_tt__ImagingOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ImagingOptions::BacklightCompensation = BacklightCompensation;
		_p->tt__ImagingOptions::Brightness = Brightness;
		_p->tt__ImagingOptions::ColorSaturation = ColorSaturation;
		_p->tt__ImagingOptions::Contrast = Contrast;
		_p->tt__ImagingOptions::Exposure = Exposure;
		_p->tt__ImagingOptions::Focus = Focus;
		_p->tt__ImagingOptions::IrCutFilterModes = IrCutFilterModes;
		_p->tt__ImagingOptions::Sharpness = Sharpness;
		_p->tt__ImagingOptions::WideDynamicRange = WideDynamicRange;
		_p->tt__ImagingOptions::WhiteBalance = WhiteBalance;
	}
	return _p;
}

inline tt__ImagingOptions * soap_new_set_tt__ImagingOptions(
	struct soap *soap,
	tt__BacklightCompensationOptions *BacklightCompensation,
	tt__FloatRange *Brightness,
	tt__FloatRange *ColorSaturation,
	tt__FloatRange *Contrast,
	tt__ExposureOptions *Exposure,
	tt__FocusOptions *Focus,
	const std::vector<enum tt__IrCutFilterMode> & IrCutFilterModes,
	tt__FloatRange *Sharpness,
	tt__WideDynamicRangeOptions *WideDynamicRange,
	tt__WhiteBalanceOptions *WhiteBalance)
{	tt__ImagingOptions *_p = soap_new_tt__ImagingOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ImagingOptions::BacklightCompensation = BacklightCompensation;
		_p->tt__ImagingOptions::Brightness = Brightness;
		_p->tt__ImagingOptions::ColorSaturation = ColorSaturation;
		_p->tt__ImagingOptions::Contrast = Contrast;
		_p->tt__ImagingOptions::Exposure = Exposure;
		_p->tt__ImagingOptions::Focus = Focus;
		_p->tt__ImagingOptions::IrCutFilterModes = IrCutFilterModes;
		_p->tt__ImagingOptions::Sharpness = Sharpness;
		_p->tt__ImagingOptions::WideDynamicRange = WideDynamicRange;
		_p->tt__ImagingOptions::WhiteBalance = WhiteBalance;
	}
	return _p;
}

#ifndef soap_write_tt__ImagingOptions
#define soap_write_tt__ImagingOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ImagingOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingOptions * SOAP_FMAC4 soap_get_tt__ImagingOptions(struct soap*, tt__ImagingOptions *, const char*, const char*);

#ifndef soap_read_tt__ImagingOptions
#define soap_read_tt__ImagingOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ImagingOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__BacklightCompensation
#define SOAP_TYPE_tt__BacklightCompensation (588)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__BacklightCompensation(struct soap*, const char*, int, const tt__BacklightCompensation *, const char*);
SOAP_FMAC3 tt__BacklightCompensation * SOAP_FMAC4 soap_in_tt__BacklightCompensation(struct soap*, const char*, tt__BacklightCompensation *, const char*);
SOAP_FMAC1 tt__BacklightCompensation * SOAP_FMAC2 soap_instantiate_tt__BacklightCompensation(struct soap*, int, const char*, const char*, size_t*);

inline tt__BacklightCompensation * soap_new_tt__BacklightCompensation(struct soap *soap, int n = -1) { return soap_instantiate_tt__BacklightCompensation(soap, n, NULL, NULL, NULL); }

inline tt__BacklightCompensation * soap_new_req_tt__BacklightCompensation(
	struct soap *soap,
	enum tt__BacklightCompensationMode Mode,
	float Level)
{	tt__BacklightCompensation *_p = soap_new_tt__BacklightCompensation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__BacklightCompensation::Mode = Mode;
		_p->tt__BacklightCompensation::Level = Level;
	}
	return _p;
}

inline tt__BacklightCompensation * soap_new_set_tt__BacklightCompensation(
	struct soap *soap,
	enum tt__BacklightCompensationMode Mode,
	float Level)
{	tt__BacklightCompensation *_p = soap_new_tt__BacklightCompensation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__BacklightCompensation::Mode = Mode;
		_p->tt__BacklightCompensation::Level = Level;
	}
	return _p;
}

#ifndef soap_write_tt__BacklightCompensation
#define soap_write_tt__BacklightCompensation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:BacklightCompensation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__BacklightCompensation * SOAP_FMAC4 soap_get_tt__BacklightCompensation(struct soap*, tt__BacklightCompensation *, const char*, const char*);

#ifndef soap_read_tt__BacklightCompensation
#define soap_read_tt__BacklightCompensation(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__BacklightCompensation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__WideDynamicRange
#define SOAP_TYPE_tt__WideDynamicRange (587)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__WideDynamicRange(struct soap*, const char*, int, const tt__WideDynamicRange *, const char*);
SOAP_FMAC3 tt__WideDynamicRange * SOAP_FMAC4 soap_in_tt__WideDynamicRange(struct soap*, const char*, tt__WideDynamicRange *, const char*);
SOAP_FMAC1 tt__WideDynamicRange * SOAP_FMAC2 soap_instantiate_tt__WideDynamicRange(struct soap*, int, const char*, const char*, size_t*);

inline tt__WideDynamicRange * soap_new_tt__WideDynamicRange(struct soap *soap, int n = -1) { return soap_instantiate_tt__WideDynamicRange(soap, n, NULL, NULL, NULL); }

inline tt__WideDynamicRange * soap_new_req_tt__WideDynamicRange(
	struct soap *soap,
	enum tt__WideDynamicMode Mode,
	float Level)
{	tt__WideDynamicRange *_p = soap_new_tt__WideDynamicRange(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__WideDynamicRange::Mode = Mode;
		_p->tt__WideDynamicRange::Level = Level;
	}
	return _p;
}

inline tt__WideDynamicRange * soap_new_set_tt__WideDynamicRange(
	struct soap *soap,
	enum tt__WideDynamicMode Mode,
	float Level)
{	tt__WideDynamicRange *_p = soap_new_tt__WideDynamicRange(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__WideDynamicRange::Mode = Mode;
		_p->tt__WideDynamicRange::Level = Level;
	}
	return _p;
}

#ifndef soap_write_tt__WideDynamicRange
#define soap_write_tt__WideDynamicRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:WideDynamicRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WideDynamicRange * SOAP_FMAC4 soap_get_tt__WideDynamicRange(struct soap*, tt__WideDynamicRange *, const char*, const char*);

#ifndef soap_read_tt__WideDynamicRange
#define soap_read_tt__WideDynamicRange(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__WideDynamicRange(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Exposure
#define SOAP_TYPE_tt__Exposure (586)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Exposure(struct soap*, const char*, int, const tt__Exposure *, const char*);
SOAP_FMAC3 tt__Exposure * SOAP_FMAC4 soap_in_tt__Exposure(struct soap*, const char*, tt__Exposure *, const char*);
SOAP_FMAC1 tt__Exposure * SOAP_FMAC2 soap_instantiate_tt__Exposure(struct soap*, int, const char*, const char*, size_t*);

inline tt__Exposure * soap_new_tt__Exposure(struct soap *soap, int n = -1) { return soap_instantiate_tt__Exposure(soap, n, NULL, NULL, NULL); }

inline tt__Exposure * soap_new_req_tt__Exposure(
	struct soap *soap,
	enum tt__ExposureMode Mode,
	enum tt__ExposurePriority Priority,
	tt__Rectangle *Window,
	float MinExposureTime,
	float MaxExposureTime,
	float MinGain,
	float MaxGain,
	float MinIris,
	float MaxIris,
	float ExposureTime,
	float Gain,
	float Iris)
{	tt__Exposure *_p = soap_new_tt__Exposure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Exposure::Mode = Mode;
		_p->tt__Exposure::Priority = Priority;
		_p->tt__Exposure::Window = Window;
		_p->tt__Exposure::MinExposureTime = MinExposureTime;
		_p->tt__Exposure::MaxExposureTime = MaxExposureTime;
		_p->tt__Exposure::MinGain = MinGain;
		_p->tt__Exposure::MaxGain = MaxGain;
		_p->tt__Exposure::MinIris = MinIris;
		_p->tt__Exposure::MaxIris = MaxIris;
		_p->tt__Exposure::ExposureTime = ExposureTime;
		_p->tt__Exposure::Gain = Gain;
		_p->tt__Exposure::Iris = Iris;
	}
	return _p;
}

inline tt__Exposure * soap_new_set_tt__Exposure(
	struct soap *soap,
	enum tt__ExposureMode Mode,
	enum tt__ExposurePriority Priority,
	tt__Rectangle *Window,
	float MinExposureTime,
	float MaxExposureTime,
	float MinGain,
	float MaxGain,
	float MinIris,
	float MaxIris,
	float ExposureTime,
	float Gain,
	float Iris)
{	tt__Exposure *_p = soap_new_tt__Exposure(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Exposure::Mode = Mode;
		_p->tt__Exposure::Priority = Priority;
		_p->tt__Exposure::Window = Window;
		_p->tt__Exposure::MinExposureTime = MinExposureTime;
		_p->tt__Exposure::MaxExposureTime = MaxExposureTime;
		_p->tt__Exposure::MinGain = MinGain;
		_p->tt__Exposure::MaxGain = MaxGain;
		_p->tt__Exposure::MinIris = MinIris;
		_p->tt__Exposure::MaxIris = MaxIris;
		_p->tt__Exposure::ExposureTime = ExposureTime;
		_p->tt__Exposure::Gain = Gain;
		_p->tt__Exposure::Iris = Iris;
	}
	return _p;
}

#ifndef soap_write_tt__Exposure
#define soap_write_tt__Exposure(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Exposure", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Exposure * SOAP_FMAC4 soap_get_tt__Exposure(struct soap*, tt__Exposure *, const char*, const char*);

#ifndef soap_read_tt__Exposure
#define soap_read_tt__Exposure(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Exposure(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ImagingSettingsExtension
#define SOAP_TYPE_tt__ImagingSettingsExtension (585)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingSettingsExtension(struct soap*, const char*, int, const tt__ImagingSettingsExtension *, const char*);
SOAP_FMAC3 tt__ImagingSettingsExtension * SOAP_FMAC4 soap_in_tt__ImagingSettingsExtension(struct soap*, const char*, tt__ImagingSettingsExtension *, const char*);
SOAP_FMAC1 tt__ImagingSettingsExtension * SOAP_FMAC2 soap_instantiate_tt__ImagingSettingsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingSettingsExtension * soap_new_tt__ImagingSettingsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingSettingsExtension(soap, n, NULL, NULL, NULL); }

inline tt__ImagingSettingsExtension * soap_new_req_tt__ImagingSettingsExtension(
	struct soap *soap)
{	tt__ImagingSettingsExtension *_p = soap_new_tt__ImagingSettingsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ImagingSettingsExtension * soap_new_set_tt__ImagingSettingsExtension(
	struct soap *soap)
{	tt__ImagingSettingsExtension *_p = soap_new_tt__ImagingSettingsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__ImagingSettingsExtension
#define soap_write_tt__ImagingSettingsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ImagingSettingsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingSettingsExtension * SOAP_FMAC4 soap_get_tt__ImagingSettingsExtension(struct soap*, tt__ImagingSettingsExtension *, const char*, const char*);

#ifndef soap_read_tt__ImagingSettingsExtension
#define soap_read_tt__ImagingSettingsExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ImagingSettingsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ImagingSettings
#define SOAP_TYPE_tt__ImagingSettings (584)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingSettings(struct soap*, const char*, int, const tt__ImagingSettings *, const char*);
SOAP_FMAC3 tt__ImagingSettings * SOAP_FMAC4 soap_in_tt__ImagingSettings(struct soap*, const char*, tt__ImagingSettings *, const char*);
SOAP_FMAC1 tt__ImagingSettings * SOAP_FMAC2 soap_instantiate_tt__ImagingSettings(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingSettings * soap_new_tt__ImagingSettings(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingSettings(soap, n, NULL, NULL, NULL); }

inline tt__ImagingSettings * soap_new_req_tt__ImagingSettings(
	struct soap *soap)
{	tt__ImagingSettings *_p = soap_new_tt__ImagingSettings(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ImagingSettings * soap_new_set_tt__ImagingSettings(
	struct soap *soap,
	tt__BacklightCompensation *BacklightCompensation,
	float *Brightness,
	float *ColorSaturation,
	float *Contrast,
	tt__Exposure *Exposure,
	tt__FocusConfiguration *Focus,
	enum tt__IrCutFilterMode *IrCutFilter,
	float *Sharpness,
	tt__WideDynamicRange *WideDynamicRange,
	tt__WhiteBalance *WhiteBalance,
	tt__ImagingSettingsExtension *Extension)
{	tt__ImagingSettings *_p = soap_new_tt__ImagingSettings(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ImagingSettings::BacklightCompensation = BacklightCompensation;
		_p->tt__ImagingSettings::Brightness = Brightness;
		_p->tt__ImagingSettings::ColorSaturation = ColorSaturation;
		_p->tt__ImagingSettings::Contrast = Contrast;
		_p->tt__ImagingSettings::Exposure = Exposure;
		_p->tt__ImagingSettings::Focus = Focus;
		_p->tt__ImagingSettings::IrCutFilter = IrCutFilter;
		_p->tt__ImagingSettings::Sharpness = Sharpness;
		_p->tt__ImagingSettings::WideDynamicRange = WideDynamicRange;
		_p->tt__ImagingSettings::WhiteBalance = WhiteBalance;
		_p->tt__ImagingSettings::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__ImagingSettings
#define soap_write_tt__ImagingSettings(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ImagingSettings", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingSettings * SOAP_FMAC4 soap_get_tt__ImagingSettings(struct soap*, tt__ImagingSettings *, const char*, const char*);

#ifndef soap_read_tt__ImagingSettings
#define soap_read_tt__ImagingSettings(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ImagingSettings(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__FocusConfiguration
#define SOAP_TYPE_tt__FocusConfiguration (583)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FocusConfiguration(struct soap*, const char*, int, const tt__FocusConfiguration *, const char*);
SOAP_FMAC3 tt__FocusConfiguration * SOAP_FMAC4 soap_in_tt__FocusConfiguration(struct soap*, const char*, tt__FocusConfiguration *, const char*);
SOAP_FMAC1 tt__FocusConfiguration * SOAP_FMAC2 soap_instantiate_tt__FocusConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__FocusConfiguration * soap_new_tt__FocusConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__FocusConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__FocusConfiguration * soap_new_req_tt__FocusConfiguration(
	struct soap *soap,
	enum tt__AutoFocusMode AutoFocusMode,
	float DefaultSpeed,
	float NearLimit,
	float FarLimit)
{	tt__FocusConfiguration *_p = soap_new_tt__FocusConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FocusConfiguration::AutoFocusMode = AutoFocusMode;
		_p->tt__FocusConfiguration::DefaultSpeed = DefaultSpeed;
		_p->tt__FocusConfiguration::NearLimit = NearLimit;
		_p->tt__FocusConfiguration::FarLimit = FarLimit;
	}
	return _p;
}

inline tt__FocusConfiguration * soap_new_set_tt__FocusConfiguration(
	struct soap *soap,
	enum tt__AutoFocusMode AutoFocusMode,
	float DefaultSpeed,
	float NearLimit,
	float FarLimit)
{	tt__FocusConfiguration *_p = soap_new_tt__FocusConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FocusConfiguration::AutoFocusMode = AutoFocusMode;
		_p->tt__FocusConfiguration::DefaultSpeed = DefaultSpeed;
		_p->tt__FocusConfiguration::NearLimit = NearLimit;
		_p->tt__FocusConfiguration::FarLimit = FarLimit;
	}
	return _p;
}

#ifndef soap_write_tt__FocusConfiguration
#define soap_write_tt__FocusConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:FocusConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusConfiguration * SOAP_FMAC4 soap_get_tt__FocusConfiguration(struct soap*, tt__FocusConfiguration *, const char*, const char*);

#ifndef soap_read_tt__FocusConfiguration
#define soap_read_tt__FocusConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__FocusConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__FocusStatus
#define SOAP_TYPE_tt__FocusStatus (582)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FocusStatus(struct soap*, const char*, int, const tt__FocusStatus *, const char*);
SOAP_FMAC3 tt__FocusStatus * SOAP_FMAC4 soap_in_tt__FocusStatus(struct soap*, const char*, tt__FocusStatus *, const char*);
SOAP_FMAC1 tt__FocusStatus * SOAP_FMAC2 soap_instantiate_tt__FocusStatus(struct soap*, int, const char*, const char*, size_t*);

inline tt__FocusStatus * soap_new_tt__FocusStatus(struct soap *soap, int n = -1) { return soap_instantiate_tt__FocusStatus(soap, n, NULL, NULL, NULL); }

inline tt__FocusStatus * soap_new_req_tt__FocusStatus(
	struct soap *soap,
	float Position,
	enum tt__MoveStatus MoveStatus,
	const std::string& Error)
{	tt__FocusStatus *_p = soap_new_tt__FocusStatus(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FocusStatus::Position = Position;
		_p->tt__FocusStatus::MoveStatus = MoveStatus;
		_p->tt__FocusStatus::Error = Error;
	}
	return _p;
}

inline tt__FocusStatus * soap_new_set_tt__FocusStatus(
	struct soap *soap,
	float Position,
	enum tt__MoveStatus MoveStatus,
	const std::string& Error)
{	tt__FocusStatus *_p = soap_new_tt__FocusStatus(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FocusStatus::Position = Position;
		_p->tt__FocusStatus::MoveStatus = MoveStatus;
		_p->tt__FocusStatus::Error = Error;
	}
	return _p;
}

#ifndef soap_write_tt__FocusStatus
#define soap_write_tt__FocusStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:FocusStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusStatus * SOAP_FMAC4 soap_get_tt__FocusStatus(struct soap*, tt__FocusStatus *, const char*, const char*);

#ifndef soap_read_tt__FocusStatus
#define soap_read_tt__FocusStatus(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__FocusStatus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ImagingStatus
#define SOAP_TYPE_tt__ImagingStatus (581)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingStatus(struct soap*, const char*, int, const tt__ImagingStatus *, const char*);
SOAP_FMAC3 tt__ImagingStatus * SOAP_FMAC4 soap_in_tt__ImagingStatus(struct soap*, const char*, tt__ImagingStatus *, const char*);
SOAP_FMAC1 tt__ImagingStatus * SOAP_FMAC2 soap_instantiate_tt__ImagingStatus(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingStatus * soap_new_tt__ImagingStatus(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingStatus(soap, n, NULL, NULL, NULL); }

inline tt__ImagingStatus * soap_new_req_tt__ImagingStatus(
	struct soap *soap,
	tt__FocusStatus *FocusStatus)
{	tt__ImagingStatus *_p = soap_new_tt__ImagingStatus(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ImagingStatus::FocusStatus = FocusStatus;
	}
	return _p;
}

inline tt__ImagingStatus * soap_new_set_tt__ImagingStatus(
	struct soap *soap,
	tt__FocusStatus *FocusStatus)
{	tt__ImagingStatus *_p = soap_new_tt__ImagingStatus(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ImagingStatus::FocusStatus = FocusStatus;
	}
	return _p;
}

#ifndef soap_write_tt__ImagingStatus
#define soap_write_tt__ImagingStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ImagingStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingStatus * SOAP_FMAC4 soap_get_tt__ImagingStatus(struct soap*, tt__ImagingStatus *, const char*, const char*);

#ifndef soap_read_tt__ImagingStatus
#define soap_read_tt__ImagingStatus(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ImagingStatus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZPresetTourStartingConditionOptionsExtension
#define SOAP_TYPE_tt__PTZPresetTourStartingConditionOptionsExtension (580)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourStartingConditionOptionsExtension(struct soap*, const char*, int, const tt__PTZPresetTourStartingConditionOptionsExtension *, const char*);
SOAP_FMAC3 tt__PTZPresetTourStartingConditionOptionsExtension * SOAP_FMAC4 soap_in_tt__PTZPresetTourStartingConditionOptionsExtension(struct soap*, const char*, tt__PTZPresetTourStartingConditionOptionsExtension *, const char*);
SOAP_FMAC1 tt__PTZPresetTourStartingConditionOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourStartingConditionOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourStartingConditionOptionsExtension * soap_new_tt__PTZPresetTourStartingConditionOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourStartingConditionOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourStartingConditionOptionsExtension * soap_new_req_tt__PTZPresetTourStartingConditionOptionsExtension(
	struct soap *soap)
{	tt__PTZPresetTourStartingConditionOptionsExtension *_p = soap_new_tt__PTZPresetTourStartingConditionOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__PTZPresetTourStartingConditionOptionsExtension * soap_new_set_tt__PTZPresetTourStartingConditionOptionsExtension(
	struct soap *soap)
{	tt__PTZPresetTourStartingConditionOptionsExtension *_p = soap_new_tt__PTZPresetTourStartingConditionOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__PTZPresetTourStartingConditionOptionsExtension
#define soap_write_tt__PTZPresetTourStartingConditionOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZPresetTourStartingConditionOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourStartingConditionOptionsExtension * SOAP_FMAC4 soap_get_tt__PTZPresetTourStartingConditionOptionsExtension(struct soap*, tt__PTZPresetTourStartingConditionOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourStartingConditionOptionsExtension
#define soap_read_tt__PTZPresetTourStartingConditionOptionsExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourStartingConditionOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZPresetTourStartingConditionOptions
#define SOAP_TYPE_tt__PTZPresetTourStartingConditionOptions (579)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourStartingConditionOptions(struct soap*, const char*, int, const tt__PTZPresetTourStartingConditionOptions *, const char*);
SOAP_FMAC3 tt__PTZPresetTourStartingConditionOptions * SOAP_FMAC4 soap_in_tt__PTZPresetTourStartingConditionOptions(struct soap*, const char*, tt__PTZPresetTourStartingConditionOptions *, const char*);
SOAP_FMAC1 tt__PTZPresetTourStartingConditionOptions * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourStartingConditionOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourStartingConditionOptions * soap_new_tt__PTZPresetTourStartingConditionOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourStartingConditionOptions(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourStartingConditionOptions * soap_new_req_tt__PTZPresetTourStartingConditionOptions(
	struct soap *soap)
{	tt__PTZPresetTourStartingConditionOptions *_p = soap_new_tt__PTZPresetTourStartingConditionOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__PTZPresetTourStartingConditionOptions * soap_new_set_tt__PTZPresetTourStartingConditionOptions(
	struct soap *soap,
	tt__IntRange *RecurringTime,
	tt__DurationRange *RecurringDuration,
	const std::vector<enum tt__PTZPresetTourDirection> & Direction,
	tt__PTZPresetTourStartingConditionOptionsExtension *Extension)
{	tt__PTZPresetTourStartingConditionOptions *_p = soap_new_tt__PTZPresetTourStartingConditionOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZPresetTourStartingConditionOptions::RecurringTime = RecurringTime;
		_p->tt__PTZPresetTourStartingConditionOptions::RecurringDuration = RecurringDuration;
		_p->tt__PTZPresetTourStartingConditionOptions::Direction = Direction;
		_p->tt__PTZPresetTourStartingConditionOptions::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__PTZPresetTourStartingConditionOptions
#define soap_write_tt__PTZPresetTourStartingConditionOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZPresetTourStartingConditionOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourStartingConditionOptions * SOAP_FMAC4 soap_get_tt__PTZPresetTourStartingConditionOptions(struct soap*, tt__PTZPresetTourStartingConditionOptions *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourStartingConditionOptions
#define soap_read_tt__PTZPresetTourStartingConditionOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourStartingConditionOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZPresetTourPresetDetailOptionsExtension
#define SOAP_TYPE_tt__PTZPresetTourPresetDetailOptionsExtension (578)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourPresetDetailOptionsExtension(struct soap*, const char*, int, const tt__PTZPresetTourPresetDetailOptionsExtension *, const char*);
SOAP_FMAC3 tt__PTZPresetTourPresetDetailOptionsExtension * SOAP_FMAC4 soap_in_tt__PTZPresetTourPresetDetailOptionsExtension(struct soap*, const char*, tt__PTZPresetTourPresetDetailOptionsExtension *, const char*);
SOAP_FMAC1 tt__PTZPresetTourPresetDetailOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourPresetDetailOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourPresetDetailOptionsExtension * soap_new_tt__PTZPresetTourPresetDetailOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourPresetDetailOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourPresetDetailOptionsExtension * soap_new_req_tt__PTZPresetTourPresetDetailOptionsExtension(
	struct soap *soap)
{	tt__PTZPresetTourPresetDetailOptionsExtension *_p = soap_new_tt__PTZPresetTourPresetDetailOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__PTZPresetTourPresetDetailOptionsExtension * soap_new_set_tt__PTZPresetTourPresetDetailOptionsExtension(
	struct soap *soap)
{	tt__PTZPresetTourPresetDetailOptionsExtension *_p = soap_new_tt__PTZPresetTourPresetDetailOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__PTZPresetTourPresetDetailOptionsExtension
#define soap_write_tt__PTZPresetTourPresetDetailOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZPresetTourPresetDetailOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourPresetDetailOptionsExtension * SOAP_FMAC4 soap_get_tt__PTZPresetTourPresetDetailOptionsExtension(struct soap*, tt__PTZPresetTourPresetDetailOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourPresetDetailOptionsExtension
#define soap_read_tt__PTZPresetTourPresetDetailOptionsExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourPresetDetailOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZPresetTourPresetDetailOptions
#define SOAP_TYPE_tt__PTZPresetTourPresetDetailOptions (577)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourPresetDetailOptions(struct soap*, const char*, int, const tt__PTZPresetTourPresetDetailOptions *, const char*);
SOAP_FMAC3 tt__PTZPresetTourPresetDetailOptions * SOAP_FMAC4 soap_in_tt__PTZPresetTourPresetDetailOptions(struct soap*, const char*, tt__PTZPresetTourPresetDetailOptions *, const char*);
SOAP_FMAC1 tt__PTZPresetTourPresetDetailOptions * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourPresetDetailOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourPresetDetailOptions * soap_new_tt__PTZPresetTourPresetDetailOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourPresetDetailOptions(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourPresetDetailOptions * soap_new_req_tt__PTZPresetTourPresetDetailOptions(
	struct soap *soap)
{	tt__PTZPresetTourPresetDetailOptions *_p = soap_new_tt__PTZPresetTourPresetDetailOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__PTZPresetTourPresetDetailOptions * soap_new_set_tt__PTZPresetTourPresetDetailOptions(
	struct soap *soap,
	const std::vector<std::string> & PresetToken,
	bool *Home,
	tt__Space2DDescription *PanTiltPositionSpace,
	tt__Space1DDescription *ZoomPositionSpace,
	tt__PTZPresetTourPresetDetailOptionsExtension *Extension)
{	tt__PTZPresetTourPresetDetailOptions *_p = soap_new_tt__PTZPresetTourPresetDetailOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZPresetTourPresetDetailOptions::PresetToken = PresetToken;
		_p->tt__PTZPresetTourPresetDetailOptions::Home = Home;
		_p->tt__PTZPresetTourPresetDetailOptions::PanTiltPositionSpace = PanTiltPositionSpace;
		_p->tt__PTZPresetTourPresetDetailOptions::ZoomPositionSpace = ZoomPositionSpace;
		_p->tt__PTZPresetTourPresetDetailOptions::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__PTZPresetTourPresetDetailOptions
#define soap_write_tt__PTZPresetTourPresetDetailOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZPresetTourPresetDetailOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourPresetDetailOptions * SOAP_FMAC4 soap_get_tt__PTZPresetTourPresetDetailOptions(struct soap*, tt__PTZPresetTourPresetDetailOptions *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourPresetDetailOptions
#define soap_read_tt__PTZPresetTourPresetDetailOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourPresetDetailOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZPresetTourSpotOptions
#define SOAP_TYPE_tt__PTZPresetTourSpotOptions (576)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourSpotOptions(struct soap*, const char*, int, const tt__PTZPresetTourSpotOptions *, const char*);
SOAP_FMAC3 tt__PTZPresetTourSpotOptions * SOAP_FMAC4 soap_in_tt__PTZPresetTourSpotOptions(struct soap*, const char*, tt__PTZPresetTourSpotOptions *, const char*);
SOAP_FMAC1 tt__PTZPresetTourSpotOptions * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourSpotOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourSpotOptions * soap_new_tt__PTZPresetTourSpotOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourSpotOptions(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourSpotOptions * soap_new_req_tt__PTZPresetTourSpotOptions(
	struct soap *soap,
	tt__PTZPresetTourPresetDetailOptions *PresetDetail,
	tt__DurationRange *StayTime)
{	tt__PTZPresetTourSpotOptions *_p = soap_new_tt__PTZPresetTourSpotOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZPresetTourSpotOptions::PresetDetail = PresetDetail;
		_p->tt__PTZPresetTourSpotOptions::StayTime = StayTime;
	}
	return _p;
}

inline tt__PTZPresetTourSpotOptions * soap_new_set_tt__PTZPresetTourSpotOptions(
	struct soap *soap,
	tt__PTZPresetTourPresetDetailOptions *PresetDetail,
	tt__DurationRange *StayTime)
{	tt__PTZPresetTourSpotOptions *_p = soap_new_tt__PTZPresetTourSpotOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZPresetTourSpotOptions::PresetDetail = PresetDetail;
		_p->tt__PTZPresetTourSpotOptions::StayTime = StayTime;
	}
	return _p;
}

#ifndef soap_write_tt__PTZPresetTourSpotOptions
#define soap_write_tt__PTZPresetTourSpotOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZPresetTourSpotOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourSpotOptions * SOAP_FMAC4 soap_get_tt__PTZPresetTourSpotOptions(struct soap*, tt__PTZPresetTourSpotOptions *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourSpotOptions
#define soap_read_tt__PTZPresetTourSpotOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourSpotOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZPresetTourOptions
#define SOAP_TYPE_tt__PTZPresetTourOptions (575)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourOptions(struct soap*, const char*, int, const tt__PTZPresetTourOptions *, const char*);
SOAP_FMAC3 tt__PTZPresetTourOptions * SOAP_FMAC4 soap_in_tt__PTZPresetTourOptions(struct soap*, const char*, tt__PTZPresetTourOptions *, const char*);
SOAP_FMAC1 tt__PTZPresetTourOptions * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourOptions * soap_new_tt__PTZPresetTourOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourOptions(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourOptions * soap_new_req_tt__PTZPresetTourOptions(
	struct soap *soap,
	bool AutoStart,
	tt__PTZPresetTourStartingConditionOptions *StartingCondition,
	tt__PTZPresetTourSpotOptions *TourSpot)
{	tt__PTZPresetTourOptions *_p = soap_new_tt__PTZPresetTourOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZPresetTourOptions::AutoStart = AutoStart;
		_p->tt__PTZPresetTourOptions::StartingCondition = StartingCondition;
		_p->tt__PTZPresetTourOptions::TourSpot = TourSpot;
	}
	return _p;
}

inline tt__PTZPresetTourOptions * soap_new_set_tt__PTZPresetTourOptions(
	struct soap *soap,
	bool AutoStart,
	tt__PTZPresetTourStartingConditionOptions *StartingCondition,
	tt__PTZPresetTourSpotOptions *TourSpot)
{	tt__PTZPresetTourOptions *_p = soap_new_tt__PTZPresetTourOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZPresetTourOptions::AutoStart = AutoStart;
		_p->tt__PTZPresetTourOptions::StartingCondition = StartingCondition;
		_p->tt__PTZPresetTourOptions::TourSpot = TourSpot;
	}
	return _p;
}

#ifndef soap_write_tt__PTZPresetTourOptions
#define soap_write_tt__PTZPresetTourOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZPresetTourOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourOptions * SOAP_FMAC4 soap_get_tt__PTZPresetTourOptions(struct soap*, tt__PTZPresetTourOptions *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourOptions
#define soap_read_tt__PTZPresetTourOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZPresetTourStartingConditionExtension
#define SOAP_TYPE_tt__PTZPresetTourStartingConditionExtension (574)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourStartingConditionExtension(struct soap*, const char*, int, const tt__PTZPresetTourStartingConditionExtension *, const char*);
SOAP_FMAC3 tt__PTZPresetTourStartingConditionExtension * SOAP_FMAC4 soap_in_tt__PTZPresetTourStartingConditionExtension(struct soap*, const char*, tt__PTZPresetTourStartingConditionExtension *, const char*);
SOAP_FMAC1 tt__PTZPresetTourStartingConditionExtension * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourStartingConditionExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourStartingConditionExtension * soap_new_tt__PTZPresetTourStartingConditionExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourStartingConditionExtension(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourStartingConditionExtension * soap_new_req_tt__PTZPresetTourStartingConditionExtension(
	struct soap *soap)
{	tt__PTZPresetTourStartingConditionExtension *_p = soap_new_tt__PTZPresetTourStartingConditionExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__PTZPresetTourStartingConditionExtension * soap_new_set_tt__PTZPresetTourStartingConditionExtension(
	struct soap *soap)
{	tt__PTZPresetTourStartingConditionExtension *_p = soap_new_tt__PTZPresetTourStartingConditionExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__PTZPresetTourStartingConditionExtension
#define soap_write_tt__PTZPresetTourStartingConditionExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZPresetTourStartingConditionExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourStartingConditionExtension * SOAP_FMAC4 soap_get_tt__PTZPresetTourStartingConditionExtension(struct soap*, tt__PTZPresetTourStartingConditionExtension *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourStartingConditionExtension
#define soap_read_tt__PTZPresetTourStartingConditionExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourStartingConditionExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZPresetTourStartingCondition
#define SOAP_TYPE_tt__PTZPresetTourStartingCondition (573)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourStartingCondition(struct soap*, const char*, int, const tt__PTZPresetTourStartingCondition *, const char*);
SOAP_FMAC3 tt__PTZPresetTourStartingCondition * SOAP_FMAC4 soap_in_tt__PTZPresetTourStartingCondition(struct soap*, const char*, tt__PTZPresetTourStartingCondition *, const char*);
SOAP_FMAC1 tt__PTZPresetTourStartingCondition * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourStartingCondition(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourStartingCondition * soap_new_tt__PTZPresetTourStartingCondition(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourStartingCondition(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourStartingCondition * soap_new_req_tt__PTZPresetTourStartingCondition(
	struct soap *soap)
{	tt__PTZPresetTourStartingCondition *_p = soap_new_tt__PTZPresetTourStartingCondition(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__PTZPresetTourStartingCondition * soap_new_set_tt__PTZPresetTourStartingCondition(
	struct soap *soap,
	int *RecurringTime,
	LONG64 *RecurringDuration,
	enum tt__PTZPresetTourDirection *Direction,
	tt__PTZPresetTourStartingConditionExtension *Extension,
	bool *RandomPresetOrder)
{	tt__PTZPresetTourStartingCondition *_p = soap_new_tt__PTZPresetTourStartingCondition(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZPresetTourStartingCondition::RecurringTime = RecurringTime;
		_p->tt__PTZPresetTourStartingCondition::RecurringDuration = RecurringDuration;
		_p->tt__PTZPresetTourStartingCondition::Direction = Direction;
		_p->tt__PTZPresetTourStartingCondition::Extension = Extension;
		_p->tt__PTZPresetTourStartingCondition::RandomPresetOrder = RandomPresetOrder;
	}
	return _p;
}

#ifndef soap_write_tt__PTZPresetTourStartingCondition
#define soap_write_tt__PTZPresetTourStartingCondition(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZPresetTourStartingCondition", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourStartingCondition * SOAP_FMAC4 soap_get_tt__PTZPresetTourStartingCondition(struct soap*, tt__PTZPresetTourStartingCondition *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourStartingCondition
#define soap_read_tt__PTZPresetTourStartingCondition(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourStartingCondition(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZPresetTourStatusExtension
#define SOAP_TYPE_tt__PTZPresetTourStatusExtension (572)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourStatusExtension(struct soap*, const char*, int, const tt__PTZPresetTourStatusExtension *, const char*);
SOAP_FMAC3 tt__PTZPresetTourStatusExtension * SOAP_FMAC4 soap_in_tt__PTZPresetTourStatusExtension(struct soap*, const char*, tt__PTZPresetTourStatusExtension *, const char*);
SOAP_FMAC1 tt__PTZPresetTourStatusExtension * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourStatusExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourStatusExtension * soap_new_tt__PTZPresetTourStatusExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourStatusExtension(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourStatusExtension * soap_new_req_tt__PTZPresetTourStatusExtension(
	struct soap *soap)
{	tt__PTZPresetTourStatusExtension *_p = soap_new_tt__PTZPresetTourStatusExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__PTZPresetTourStatusExtension * soap_new_set_tt__PTZPresetTourStatusExtension(
	struct soap *soap)
{	tt__PTZPresetTourStatusExtension *_p = soap_new_tt__PTZPresetTourStatusExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__PTZPresetTourStatusExtension
#define soap_write_tt__PTZPresetTourStatusExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZPresetTourStatusExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourStatusExtension * SOAP_FMAC4 soap_get_tt__PTZPresetTourStatusExtension(struct soap*, tt__PTZPresetTourStatusExtension *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourStatusExtension
#define soap_read_tt__PTZPresetTourStatusExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourStatusExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZPresetTourStatus
#define SOAP_TYPE_tt__PTZPresetTourStatus (571)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourStatus(struct soap*, const char*, int, const tt__PTZPresetTourStatus *, const char*);
SOAP_FMAC3 tt__PTZPresetTourStatus * SOAP_FMAC4 soap_in_tt__PTZPresetTourStatus(struct soap*, const char*, tt__PTZPresetTourStatus *, const char*);
SOAP_FMAC1 tt__PTZPresetTourStatus * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourStatus(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourStatus * soap_new_tt__PTZPresetTourStatus(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourStatus(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourStatus * soap_new_req_tt__PTZPresetTourStatus(
	struct soap *soap,
	enum tt__PTZPresetTourState State)
{	tt__PTZPresetTourStatus *_p = soap_new_tt__PTZPresetTourStatus(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZPresetTourStatus::State = State;
	}
	return _p;
}

inline tt__PTZPresetTourStatus * soap_new_set_tt__PTZPresetTourStatus(
	struct soap *soap,
	enum tt__PTZPresetTourState State,
	tt__PTZPresetTourSpot *CurrentTourSpot,
	tt__PTZPresetTourStatusExtension *Extension)
{	tt__PTZPresetTourStatus *_p = soap_new_tt__PTZPresetTourStatus(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZPresetTourStatus::State = State;
		_p->tt__PTZPresetTourStatus::CurrentTourSpot = CurrentTourSpot;
		_p->tt__PTZPresetTourStatus::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__PTZPresetTourStatus
#define soap_write_tt__PTZPresetTourStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZPresetTourStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourStatus * SOAP_FMAC4 soap_get_tt__PTZPresetTourStatus(struct soap*, tt__PTZPresetTourStatus *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourStatus
#define soap_read_tt__PTZPresetTourStatus(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourStatus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZPresetTourTypeExtension
#define SOAP_TYPE_tt__PTZPresetTourTypeExtension (570)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourTypeExtension(struct soap*, const char*, int, const tt__PTZPresetTourTypeExtension *, const char*);
SOAP_FMAC3 tt__PTZPresetTourTypeExtension * SOAP_FMAC4 soap_in_tt__PTZPresetTourTypeExtension(struct soap*, const char*, tt__PTZPresetTourTypeExtension *, const char*);
SOAP_FMAC1 tt__PTZPresetTourTypeExtension * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourTypeExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourTypeExtension * soap_new_tt__PTZPresetTourTypeExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourTypeExtension(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourTypeExtension * soap_new_req_tt__PTZPresetTourTypeExtension(
	struct soap *soap)
{	tt__PTZPresetTourTypeExtension *_p = soap_new_tt__PTZPresetTourTypeExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__PTZPresetTourTypeExtension * soap_new_set_tt__PTZPresetTourTypeExtension(
	struct soap *soap)
{	tt__PTZPresetTourTypeExtension *_p = soap_new_tt__PTZPresetTourTypeExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__PTZPresetTourTypeExtension
#define soap_write_tt__PTZPresetTourTypeExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZPresetTourTypeExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourTypeExtension * SOAP_FMAC4 soap_get_tt__PTZPresetTourTypeExtension(struct soap*, tt__PTZPresetTourTypeExtension *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourTypeExtension
#define soap_read_tt__PTZPresetTourTypeExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourTypeExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZPresetTourPresetDetail
#define SOAP_TYPE_tt__PTZPresetTourPresetDetail (569)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourPresetDetail(struct soap*, const char*, int, const tt__PTZPresetTourPresetDetail *, const char*);
SOAP_FMAC3 tt__PTZPresetTourPresetDetail * SOAP_FMAC4 soap_in_tt__PTZPresetTourPresetDetail(struct soap*, const char*, tt__PTZPresetTourPresetDetail *, const char*);
SOAP_FMAC1 tt__PTZPresetTourPresetDetail * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourPresetDetail(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourPresetDetail * soap_new_tt__PTZPresetTourPresetDetail(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourPresetDetail(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourPresetDetail * soap_new_req_tt__PTZPresetTourPresetDetail(
	struct soap *soap,
	int __union_PTZPresetTourPresetDetail,
	const union _tt__union_PTZPresetTourPresetDetail& union_PTZPresetTourPresetDetail)
{	tt__PTZPresetTourPresetDetail *_p = soap_new_tt__PTZPresetTourPresetDetail(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZPresetTourPresetDetail::__union_PTZPresetTourPresetDetail = __union_PTZPresetTourPresetDetail;
		_p->tt__PTZPresetTourPresetDetail::union_PTZPresetTourPresetDetail = union_PTZPresetTourPresetDetail;
	}
	return _p;
}

inline tt__PTZPresetTourPresetDetail * soap_new_set_tt__PTZPresetTourPresetDetail(
	struct soap *soap,
	int __union_PTZPresetTourPresetDetail,
	const union _tt__union_PTZPresetTourPresetDetail& union_PTZPresetTourPresetDetail)
{	tt__PTZPresetTourPresetDetail *_p = soap_new_tt__PTZPresetTourPresetDetail(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZPresetTourPresetDetail::__union_PTZPresetTourPresetDetail = __union_PTZPresetTourPresetDetail;
		_p->tt__PTZPresetTourPresetDetail::union_PTZPresetTourPresetDetail = union_PTZPresetTourPresetDetail;
	}
	return _p;
}

#ifndef soap_write_tt__PTZPresetTourPresetDetail
#define soap_write_tt__PTZPresetTourPresetDetail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZPresetTourPresetDetail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourPresetDetail * SOAP_FMAC4 soap_get_tt__PTZPresetTourPresetDetail(struct soap*, tt__PTZPresetTourPresetDetail *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourPresetDetail
#define soap_read_tt__PTZPresetTourPresetDetail(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourPresetDetail(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZPresetTourSpotExtension
#define SOAP_TYPE_tt__PTZPresetTourSpotExtension (568)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourSpotExtension(struct soap*, const char*, int, const tt__PTZPresetTourSpotExtension *, const char*);
SOAP_FMAC3 tt__PTZPresetTourSpotExtension * SOAP_FMAC4 soap_in_tt__PTZPresetTourSpotExtension(struct soap*, const char*, tt__PTZPresetTourSpotExtension *, const char*);
SOAP_FMAC1 tt__PTZPresetTourSpotExtension * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourSpotExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourSpotExtension * soap_new_tt__PTZPresetTourSpotExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourSpotExtension(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourSpotExtension * soap_new_req_tt__PTZPresetTourSpotExtension(
	struct soap *soap)
{	tt__PTZPresetTourSpotExtension *_p = soap_new_tt__PTZPresetTourSpotExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__PTZPresetTourSpotExtension * soap_new_set_tt__PTZPresetTourSpotExtension(
	struct soap *soap)
{	tt__PTZPresetTourSpotExtension *_p = soap_new_tt__PTZPresetTourSpotExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__PTZPresetTourSpotExtension
#define soap_write_tt__PTZPresetTourSpotExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZPresetTourSpotExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourSpotExtension * SOAP_FMAC4 soap_get_tt__PTZPresetTourSpotExtension(struct soap*, tt__PTZPresetTourSpotExtension *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourSpotExtension
#define soap_read_tt__PTZPresetTourSpotExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourSpotExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZPresetTourSpot
#define SOAP_TYPE_tt__PTZPresetTourSpot (567)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourSpot(struct soap*, const char*, int, const tt__PTZPresetTourSpot *, const char*);
SOAP_FMAC3 tt__PTZPresetTourSpot * SOAP_FMAC4 soap_in_tt__PTZPresetTourSpot(struct soap*, const char*, tt__PTZPresetTourSpot *, const char*);
SOAP_FMAC1 tt__PTZPresetTourSpot * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourSpot(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourSpot * soap_new_tt__PTZPresetTourSpot(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourSpot(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourSpot * soap_new_req_tt__PTZPresetTourSpot(
	struct soap *soap,
	tt__PTZPresetTourPresetDetail *PresetDetail)
{	tt__PTZPresetTourSpot *_p = soap_new_tt__PTZPresetTourSpot(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZPresetTourSpot::PresetDetail = PresetDetail;
	}
	return _p;
}

inline tt__PTZPresetTourSpot * soap_new_set_tt__PTZPresetTourSpot(
	struct soap *soap,
	tt__PTZPresetTourPresetDetail *PresetDetail,
	tt__PTZSpeed *Speed,
	LONG64 *StayTime,
	tt__PTZPresetTourSpotExtension *Extension)
{	tt__PTZPresetTourSpot *_p = soap_new_tt__PTZPresetTourSpot(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZPresetTourSpot::PresetDetail = PresetDetail;
		_p->tt__PTZPresetTourSpot::Speed = Speed;
		_p->tt__PTZPresetTourSpot::StayTime = StayTime;
		_p->tt__PTZPresetTourSpot::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__PTZPresetTourSpot
#define soap_write_tt__PTZPresetTourSpot(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZPresetTourSpot", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourSpot * SOAP_FMAC4 soap_get_tt__PTZPresetTourSpot(struct soap*, tt__PTZPresetTourSpot *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourSpot
#define soap_read_tt__PTZPresetTourSpot(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourSpot(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZPresetTourExtension
#define SOAP_TYPE_tt__PTZPresetTourExtension (566)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourExtension(struct soap*, const char*, int, const tt__PTZPresetTourExtension *, const char*);
SOAP_FMAC3 tt__PTZPresetTourExtension * SOAP_FMAC4 soap_in_tt__PTZPresetTourExtension(struct soap*, const char*, tt__PTZPresetTourExtension *, const char*);
SOAP_FMAC1 tt__PTZPresetTourExtension * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourExtension * soap_new_tt__PTZPresetTourExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourExtension(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourExtension * soap_new_req_tt__PTZPresetTourExtension(
	struct soap *soap)
{	tt__PTZPresetTourExtension *_p = soap_new_tt__PTZPresetTourExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__PTZPresetTourExtension * soap_new_set_tt__PTZPresetTourExtension(
	struct soap *soap)
{	tt__PTZPresetTourExtension *_p = soap_new_tt__PTZPresetTourExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__PTZPresetTourExtension
#define soap_write_tt__PTZPresetTourExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZPresetTourExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourExtension * SOAP_FMAC4 soap_get_tt__PTZPresetTourExtension(struct soap*, tt__PTZPresetTourExtension *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourExtension
#define soap_read_tt__PTZPresetTourExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PresetTour
#define SOAP_TYPE_tt__PresetTour (565)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PresetTour(struct soap*, const char*, int, const tt__PresetTour *, const char*);
SOAP_FMAC3 tt__PresetTour * SOAP_FMAC4 soap_in_tt__PresetTour(struct soap*, const char*, tt__PresetTour *, const char*);
SOAP_FMAC1 tt__PresetTour * SOAP_FMAC2 soap_instantiate_tt__PresetTour(struct soap*, int, const char*, const char*, size_t*);

inline tt__PresetTour * soap_new_tt__PresetTour(struct soap *soap, int n = -1) { return soap_instantiate_tt__PresetTour(soap, n, NULL, NULL, NULL); }

inline tt__PresetTour * soap_new_req_tt__PresetTour(
	struct soap *soap,
	tt__PTZPresetTourStatus *Status,
	bool AutoStart,
	tt__PTZPresetTourStartingCondition *StartingCondition)
{	tt__PresetTour *_p = soap_new_tt__PresetTour(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PresetTour::Status = Status;
		_p->tt__PresetTour::AutoStart = AutoStart;
		_p->tt__PresetTour::StartingCondition = StartingCondition;
	}
	return _p;
}

inline tt__PresetTour * soap_new_set_tt__PresetTour(
	struct soap *soap,
	std::string *Name,
	tt__PTZPresetTourStatus *Status,
	bool AutoStart,
	tt__PTZPresetTourStartingCondition *StartingCondition,
	const std::vector<tt__PTZPresetTourSpot *> & TourSpot,
	tt__PTZPresetTourExtension *Extension,
	std::string *token)
{	tt__PresetTour *_p = soap_new_tt__PresetTour(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PresetTour::Name = Name;
		_p->tt__PresetTour::Status = Status;
		_p->tt__PresetTour::AutoStart = AutoStart;
		_p->tt__PresetTour::StartingCondition = StartingCondition;
		_p->tt__PresetTour::TourSpot = TourSpot;
		_p->tt__PresetTour::Extension = Extension;
		_p->tt__PresetTour::token = token;
	}
	return _p;
}

#ifndef soap_write_tt__PresetTour
#define soap_write_tt__PresetTour(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PresetTour", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PresetTour * SOAP_FMAC4 soap_get_tt__PresetTour(struct soap*, tt__PresetTour *, const char*, const char*);

#ifndef soap_read_tt__PresetTour
#define soap_read_tt__PresetTour(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PresetTour(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZPreset
#define SOAP_TYPE_tt__PTZPreset (564)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPreset(struct soap*, const char*, int, const tt__PTZPreset *, const char*);
SOAP_FMAC3 tt__PTZPreset * SOAP_FMAC4 soap_in_tt__PTZPreset(struct soap*, const char*, tt__PTZPreset *, const char*);
SOAP_FMAC1 tt__PTZPreset * SOAP_FMAC2 soap_instantiate_tt__PTZPreset(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPreset * soap_new_tt__PTZPreset(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPreset(soap, n, NULL, NULL, NULL); }

inline tt__PTZPreset * soap_new_req_tt__PTZPreset(
	struct soap *soap)
{	tt__PTZPreset *_p = soap_new_tt__PTZPreset(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__PTZPreset * soap_new_set_tt__PTZPreset(
	struct soap *soap,
	std::string *Name,
	tt__PTZVector *PTZPosition,
	std::string *token)
{	tt__PTZPreset *_p = soap_new_tt__PTZPreset(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZPreset::Name = Name;
		_p->tt__PTZPreset::PTZPosition = PTZPosition;
		_p->tt__PTZPreset::token = token;
	}
	return _p;
}

#ifndef soap_write_tt__PTZPreset
#define soap_write_tt__PTZPreset(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZPreset", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPreset * SOAP_FMAC4 soap_get_tt__PTZPreset(struct soap*, tt__PTZPreset *, const char*, const char*);

#ifndef soap_read_tt__PTZPreset
#define soap_read_tt__PTZPreset(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZPreset(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZSpeed
#define SOAP_TYPE_tt__PTZSpeed (563)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZSpeed(struct soap*, const char*, int, const tt__PTZSpeed *, const char*);
SOAP_FMAC3 tt__PTZSpeed * SOAP_FMAC4 soap_in_tt__PTZSpeed(struct soap*, const char*, tt__PTZSpeed *, const char*);
SOAP_FMAC1 tt__PTZSpeed * SOAP_FMAC2 soap_instantiate_tt__PTZSpeed(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZSpeed * soap_new_tt__PTZSpeed(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZSpeed(soap, n, NULL, NULL, NULL); }

inline tt__PTZSpeed * soap_new_req_tt__PTZSpeed(
	struct soap *soap)
{	tt__PTZSpeed *_p = soap_new_tt__PTZSpeed(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__PTZSpeed * soap_new_set_tt__PTZSpeed(
	struct soap *soap,
	tt__Vector2D *PanTilt,
	tt__Vector1D *Zoom)
{	tt__PTZSpeed *_p = soap_new_tt__PTZSpeed(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZSpeed::PanTilt = PanTilt;
		_p->tt__PTZSpeed::Zoom = Zoom;
	}
	return _p;
}

#ifndef soap_write_tt__PTZSpeed
#define soap_write_tt__PTZSpeed(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZSpeed", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZSpeed * SOAP_FMAC4 soap_get_tt__PTZSpeed(struct soap*, tt__PTZSpeed *, const char*, const char*);

#ifndef soap_read_tt__PTZSpeed
#define soap_read_tt__PTZSpeed(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZSpeed(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Space1DDescription
#define SOAP_TYPE_tt__Space1DDescription (562)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Space1DDescription(struct soap*, const char*, int, const tt__Space1DDescription *, const char*);
SOAP_FMAC3 tt__Space1DDescription * SOAP_FMAC4 soap_in_tt__Space1DDescription(struct soap*, const char*, tt__Space1DDescription *, const char*);
SOAP_FMAC1 tt__Space1DDescription * SOAP_FMAC2 soap_instantiate_tt__Space1DDescription(struct soap*, int, const char*, const char*, size_t*);

inline tt__Space1DDescription * soap_new_tt__Space1DDescription(struct soap *soap, int n = -1) { return soap_instantiate_tt__Space1DDescription(soap, n, NULL, NULL, NULL); }

inline tt__Space1DDescription * soap_new_req_tt__Space1DDescription(
	struct soap *soap,
	const std::string& URI,
	tt__FloatRange *XRange)
{	tt__Space1DDescription *_p = soap_new_tt__Space1DDescription(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Space1DDescription::URI = URI;
		_p->tt__Space1DDescription::XRange = XRange;
	}
	return _p;
}

inline tt__Space1DDescription * soap_new_set_tt__Space1DDescription(
	struct soap *soap,
	const std::string& URI,
	tt__FloatRange *XRange)
{	tt__Space1DDescription *_p = soap_new_tt__Space1DDescription(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Space1DDescription::URI = URI;
		_p->tt__Space1DDescription::XRange = XRange;
	}
	return _p;
}

#ifndef soap_write_tt__Space1DDescription
#define soap_write_tt__Space1DDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Space1DDescription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Space1DDescription * SOAP_FMAC4 soap_get_tt__Space1DDescription(struct soap*, tt__Space1DDescription *, const char*, const char*);

#ifndef soap_read_tt__Space1DDescription
#define soap_read_tt__Space1DDescription(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Space1DDescription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Space2DDescription
#define SOAP_TYPE_tt__Space2DDescription (561)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Space2DDescription(struct soap*, const char*, int, const tt__Space2DDescription *, const char*);
SOAP_FMAC3 tt__Space2DDescription * SOAP_FMAC4 soap_in_tt__Space2DDescription(struct soap*, const char*, tt__Space2DDescription *, const char*);
SOAP_FMAC1 tt__Space2DDescription * SOAP_FMAC2 soap_instantiate_tt__Space2DDescription(struct soap*, int, const char*, const char*, size_t*);

inline tt__Space2DDescription * soap_new_tt__Space2DDescription(struct soap *soap, int n = -1) { return soap_instantiate_tt__Space2DDescription(soap, n, NULL, NULL, NULL); }

inline tt__Space2DDescription * soap_new_req_tt__Space2DDescription(
	struct soap *soap,
	const std::string& URI,
	tt__FloatRange *XRange,
	tt__FloatRange *YRange)
{	tt__Space2DDescription *_p = soap_new_tt__Space2DDescription(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Space2DDescription::URI = URI;
		_p->tt__Space2DDescription::XRange = XRange;
		_p->tt__Space2DDescription::YRange = YRange;
	}
	return _p;
}

inline tt__Space2DDescription * soap_new_set_tt__Space2DDescription(
	struct soap *soap,
	const std::string& URI,
	tt__FloatRange *XRange,
	tt__FloatRange *YRange)
{	tt__Space2DDescription *_p = soap_new_tt__Space2DDescription(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Space2DDescription::URI = URI;
		_p->tt__Space2DDescription::XRange = XRange;
		_p->tt__Space2DDescription::YRange = YRange;
	}
	return _p;
}

#ifndef soap_write_tt__Space2DDescription
#define soap_write_tt__Space2DDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Space2DDescription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Space2DDescription * SOAP_FMAC4 soap_get_tt__Space2DDescription(struct soap*, tt__Space2DDescription *, const char*, const char*);

#ifndef soap_read_tt__Space2DDescription
#define soap_read_tt__Space2DDescription(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Space2DDescription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZSpacesExtension
#define SOAP_TYPE_tt__PTZSpacesExtension (560)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZSpacesExtension(struct soap*, const char*, int, const tt__PTZSpacesExtension *, const char*);
SOAP_FMAC3 tt__PTZSpacesExtension * SOAP_FMAC4 soap_in_tt__PTZSpacesExtension(struct soap*, const char*, tt__PTZSpacesExtension *, const char*);
SOAP_FMAC1 tt__PTZSpacesExtension * SOAP_FMAC2 soap_instantiate_tt__PTZSpacesExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZSpacesExtension * soap_new_tt__PTZSpacesExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZSpacesExtension(soap, n, NULL, NULL, NULL); }

inline tt__PTZSpacesExtension * soap_new_req_tt__PTZSpacesExtension(
	struct soap *soap)
{	tt__PTZSpacesExtension *_p = soap_new_tt__PTZSpacesExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__PTZSpacesExtension * soap_new_set_tt__PTZSpacesExtension(
	struct soap *soap)
{	tt__PTZSpacesExtension *_p = soap_new_tt__PTZSpacesExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__PTZSpacesExtension
#define soap_write_tt__PTZSpacesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZSpacesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZSpacesExtension * SOAP_FMAC4 soap_get_tt__PTZSpacesExtension(struct soap*, tt__PTZSpacesExtension *, const char*, const char*);

#ifndef soap_read_tt__PTZSpacesExtension
#define soap_read_tt__PTZSpacesExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZSpacesExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZSpaces
#define SOAP_TYPE_tt__PTZSpaces (559)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZSpaces(struct soap*, const char*, int, const tt__PTZSpaces *, const char*);
SOAP_FMAC3 tt__PTZSpaces * SOAP_FMAC4 soap_in_tt__PTZSpaces(struct soap*, const char*, tt__PTZSpaces *, const char*);
SOAP_FMAC1 tt__PTZSpaces * SOAP_FMAC2 soap_instantiate_tt__PTZSpaces(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZSpaces * soap_new_tt__PTZSpaces(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZSpaces(soap, n, NULL, NULL, NULL); }

inline tt__PTZSpaces * soap_new_req_tt__PTZSpaces(
	struct soap *soap)
{	tt__PTZSpaces *_p = soap_new_tt__PTZSpaces(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__PTZSpaces * soap_new_set_tt__PTZSpaces(
	struct soap *soap,
	const std::vector<tt__Space2DDescription *> & AbsolutePanTiltPositionSpace,
	const std::vector<tt__Space1DDescription *> & AbsoluteZoomPositionSpace,
	const std::vector<tt__Space2DDescription *> & RelativePanTiltTranslationSpace,
	const std::vector<tt__Space1DDescription *> & RelativeZoomTranslationSpace,
	const std::vector<tt__Space2DDescription *> & ContinuousPanTiltVelocitySpace,
	const std::vector<tt__Space1DDescription *> & ContinuousZoomVelocitySpace,
	const std::vector<tt__Space1DDescription *> & PanTiltSpeedSpace,
	const std::vector<tt__Space1DDescription *> & ZoomSpeedSpace,
	tt__PTZSpacesExtension *Extension)
{	tt__PTZSpaces *_p = soap_new_tt__PTZSpaces(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZSpaces::AbsolutePanTiltPositionSpace = AbsolutePanTiltPositionSpace;
		_p->tt__PTZSpaces::AbsoluteZoomPositionSpace = AbsoluteZoomPositionSpace;
		_p->tt__PTZSpaces::RelativePanTiltTranslationSpace = RelativePanTiltTranslationSpace;
		_p->tt__PTZSpaces::RelativeZoomTranslationSpace = RelativeZoomTranslationSpace;
		_p->tt__PTZSpaces::ContinuousPanTiltVelocitySpace = ContinuousPanTiltVelocitySpace;
		_p->tt__PTZSpaces::ContinuousZoomVelocitySpace = ContinuousZoomVelocitySpace;
		_p->tt__PTZSpaces::PanTiltSpeedSpace = PanTiltSpeedSpace;
		_p->tt__PTZSpaces::ZoomSpeedSpace = ZoomSpeedSpace;
		_p->tt__PTZSpaces::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__PTZSpaces
#define soap_write_tt__PTZSpaces(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZSpaces", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZSpaces * SOAP_FMAC4 soap_get_tt__PTZSpaces(struct soap*, tt__PTZSpaces *, const char*, const char*);

#ifndef soap_read_tt__PTZSpaces
#define soap_read_tt__PTZSpaces(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZSpaces(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ZoomLimits
#define SOAP_TYPE_tt__ZoomLimits (558)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ZoomLimits(struct soap*, const char*, int, const tt__ZoomLimits *, const char*);
SOAP_FMAC3 tt__ZoomLimits * SOAP_FMAC4 soap_in_tt__ZoomLimits(struct soap*, const char*, tt__ZoomLimits *, const char*);
SOAP_FMAC1 tt__ZoomLimits * SOAP_FMAC2 soap_instantiate_tt__ZoomLimits(struct soap*, int, const char*, const char*, size_t*);

inline tt__ZoomLimits * soap_new_tt__ZoomLimits(struct soap *soap, int n = -1) { return soap_instantiate_tt__ZoomLimits(soap, n, NULL, NULL, NULL); }

inline tt__ZoomLimits * soap_new_req_tt__ZoomLimits(
	struct soap *soap,
	tt__Space1DDescription *Range)
{	tt__ZoomLimits *_p = soap_new_tt__ZoomLimits(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ZoomLimits::Range = Range;
	}
	return _p;
}

inline tt__ZoomLimits * soap_new_set_tt__ZoomLimits(
	struct soap *soap,
	tt__Space1DDescription *Range)
{	tt__ZoomLimits *_p = soap_new_tt__ZoomLimits(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ZoomLimits::Range = Range;
	}
	return _p;
}

#ifndef soap_write_tt__ZoomLimits
#define soap_write_tt__ZoomLimits(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ZoomLimits", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ZoomLimits * SOAP_FMAC4 soap_get_tt__ZoomLimits(struct soap*, tt__ZoomLimits *, const char*, const char*);

#ifndef soap_read_tt__ZoomLimits
#define soap_read_tt__ZoomLimits(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ZoomLimits(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PanTiltLimits
#define SOAP_TYPE_tt__PanTiltLimits (557)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PanTiltLimits(struct soap*, const char*, int, const tt__PanTiltLimits *, const char*);
SOAP_FMAC3 tt__PanTiltLimits * SOAP_FMAC4 soap_in_tt__PanTiltLimits(struct soap*, const char*, tt__PanTiltLimits *, const char*);
SOAP_FMAC1 tt__PanTiltLimits * SOAP_FMAC2 soap_instantiate_tt__PanTiltLimits(struct soap*, int, const char*, const char*, size_t*);

inline tt__PanTiltLimits * soap_new_tt__PanTiltLimits(struct soap *soap, int n = -1) { return soap_instantiate_tt__PanTiltLimits(soap, n, NULL, NULL, NULL); }

inline tt__PanTiltLimits * soap_new_req_tt__PanTiltLimits(
	struct soap *soap,
	tt__Space2DDescription *Range)
{	tt__PanTiltLimits *_p = soap_new_tt__PanTiltLimits(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PanTiltLimits::Range = Range;
	}
	return _p;
}

inline tt__PanTiltLimits * soap_new_set_tt__PanTiltLimits(
	struct soap *soap,
	tt__Space2DDescription *Range)
{	tt__PanTiltLimits *_p = soap_new_tt__PanTiltLimits(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PanTiltLimits::Range = Range;
	}
	return _p;
}

#ifndef soap_write_tt__PanTiltLimits
#define soap_write_tt__PanTiltLimits(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PanTiltLimits", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PanTiltLimits * SOAP_FMAC4 soap_get_tt__PanTiltLimits(struct soap*, tt__PanTiltLimits *, const char*, const char*);

#ifndef soap_read_tt__PanTiltLimits
#define soap_read_tt__PanTiltLimits(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PanTiltLimits(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ReverseOptionsExtension
#define SOAP_TYPE_tt__ReverseOptionsExtension (556)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ReverseOptionsExtension(struct soap*, const char*, int, const tt__ReverseOptionsExtension *, const char*);
SOAP_FMAC3 tt__ReverseOptionsExtension * SOAP_FMAC4 soap_in_tt__ReverseOptionsExtension(struct soap*, const char*, tt__ReverseOptionsExtension *, const char*);
SOAP_FMAC1 tt__ReverseOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__ReverseOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ReverseOptionsExtension * soap_new_tt__ReverseOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ReverseOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__ReverseOptionsExtension * soap_new_req_tt__ReverseOptionsExtension(
	struct soap *soap)
{	tt__ReverseOptionsExtension *_p = soap_new_tt__ReverseOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ReverseOptionsExtension * soap_new_set_tt__ReverseOptionsExtension(
	struct soap *soap)
{	tt__ReverseOptionsExtension *_p = soap_new_tt__ReverseOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__ReverseOptionsExtension
#define soap_write_tt__ReverseOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ReverseOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ReverseOptionsExtension * SOAP_FMAC4 soap_get_tt__ReverseOptionsExtension(struct soap*, tt__ReverseOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__ReverseOptionsExtension
#define soap_read_tt__ReverseOptionsExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ReverseOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ReverseOptions
#define SOAP_TYPE_tt__ReverseOptions (555)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ReverseOptions(struct soap*, const char*, int, const tt__ReverseOptions *, const char*);
SOAP_FMAC3 tt__ReverseOptions * SOAP_FMAC4 soap_in_tt__ReverseOptions(struct soap*, const char*, tt__ReverseOptions *, const char*);
SOAP_FMAC1 tt__ReverseOptions * SOAP_FMAC2 soap_instantiate_tt__ReverseOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__ReverseOptions * soap_new_tt__ReverseOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__ReverseOptions(soap, n, NULL, NULL, NULL); }

inline tt__ReverseOptions * soap_new_req_tt__ReverseOptions(
	struct soap *soap)
{	tt__ReverseOptions *_p = soap_new_tt__ReverseOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ReverseOptions * soap_new_set_tt__ReverseOptions(
	struct soap *soap,
	const std::vector<enum tt__ReverseMode> & Mode,
	tt__ReverseOptionsExtension *Extension)
{	tt__ReverseOptions *_p = soap_new_tt__ReverseOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ReverseOptions::Mode = Mode;
		_p->tt__ReverseOptions::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__ReverseOptions
#define soap_write_tt__ReverseOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ReverseOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ReverseOptions * SOAP_FMAC4 soap_get_tt__ReverseOptions(struct soap*, tt__ReverseOptions *, const char*, const char*);

#ifndef soap_read_tt__ReverseOptions
#define soap_read_tt__ReverseOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ReverseOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__EFlipOptionsExtension
#define SOAP_TYPE_tt__EFlipOptionsExtension (554)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__EFlipOptionsExtension(struct soap*, const char*, int, const tt__EFlipOptionsExtension *, const char*);
SOAP_FMAC3 tt__EFlipOptionsExtension * SOAP_FMAC4 soap_in_tt__EFlipOptionsExtension(struct soap*, const char*, tt__EFlipOptionsExtension *, const char*);
SOAP_FMAC1 tt__EFlipOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__EFlipOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__EFlipOptionsExtension * soap_new_tt__EFlipOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__EFlipOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__EFlipOptionsExtension * soap_new_req_tt__EFlipOptionsExtension(
	struct soap *soap)
{	tt__EFlipOptionsExtension *_p = soap_new_tt__EFlipOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__EFlipOptionsExtension * soap_new_set_tt__EFlipOptionsExtension(
	struct soap *soap)
{	tt__EFlipOptionsExtension *_p = soap_new_tt__EFlipOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__EFlipOptionsExtension
#define soap_write_tt__EFlipOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:EFlipOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EFlipOptionsExtension * SOAP_FMAC4 soap_get_tt__EFlipOptionsExtension(struct soap*, tt__EFlipOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__EFlipOptionsExtension
#define soap_read_tt__EFlipOptionsExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__EFlipOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__EFlipOptions
#define SOAP_TYPE_tt__EFlipOptions (553)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__EFlipOptions(struct soap*, const char*, int, const tt__EFlipOptions *, const char*);
SOAP_FMAC3 tt__EFlipOptions * SOAP_FMAC4 soap_in_tt__EFlipOptions(struct soap*, const char*, tt__EFlipOptions *, const char*);
SOAP_FMAC1 tt__EFlipOptions * SOAP_FMAC2 soap_instantiate_tt__EFlipOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__EFlipOptions * soap_new_tt__EFlipOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__EFlipOptions(soap, n, NULL, NULL, NULL); }

inline tt__EFlipOptions * soap_new_req_tt__EFlipOptions(
	struct soap *soap)
{	tt__EFlipOptions *_p = soap_new_tt__EFlipOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__EFlipOptions * soap_new_set_tt__EFlipOptions(
	struct soap *soap,
	const std::vector<enum tt__EFlipMode> & Mode,
	tt__EFlipOptionsExtension *Extension)
{	tt__EFlipOptions *_p = soap_new_tt__EFlipOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__EFlipOptions::Mode = Mode;
		_p->tt__EFlipOptions::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__EFlipOptions
#define soap_write_tt__EFlipOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:EFlipOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EFlipOptions * SOAP_FMAC4 soap_get_tt__EFlipOptions(struct soap*, tt__EFlipOptions *, const char*, const char*);

#ifndef soap_read_tt__EFlipOptions
#define soap_read_tt__EFlipOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__EFlipOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTControlDirectionOptionsExtension
#define SOAP_TYPE_tt__PTControlDirectionOptionsExtension (552)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTControlDirectionOptionsExtension(struct soap*, const char*, int, const tt__PTControlDirectionOptionsExtension *, const char*);
SOAP_FMAC3 tt__PTControlDirectionOptionsExtension * SOAP_FMAC4 soap_in_tt__PTControlDirectionOptionsExtension(struct soap*, const char*, tt__PTControlDirectionOptionsExtension *, const char*);
SOAP_FMAC1 tt__PTControlDirectionOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__PTControlDirectionOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTControlDirectionOptionsExtension * soap_new_tt__PTControlDirectionOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTControlDirectionOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__PTControlDirectionOptionsExtension * soap_new_req_tt__PTControlDirectionOptionsExtension(
	struct soap *soap)
{	tt__PTControlDirectionOptionsExtension *_p = soap_new_tt__PTControlDirectionOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__PTControlDirectionOptionsExtension * soap_new_set_tt__PTControlDirectionOptionsExtension(
	struct soap *soap)
{	tt__PTControlDirectionOptionsExtension *_p = soap_new_tt__PTControlDirectionOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__PTControlDirectionOptionsExtension
#define soap_write_tt__PTControlDirectionOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTControlDirectionOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTControlDirectionOptionsExtension * SOAP_FMAC4 soap_get_tt__PTControlDirectionOptionsExtension(struct soap*, tt__PTControlDirectionOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__PTControlDirectionOptionsExtension
#define soap_read_tt__PTControlDirectionOptionsExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTControlDirectionOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTControlDirectionOptions
#define SOAP_TYPE_tt__PTControlDirectionOptions (551)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTControlDirectionOptions(struct soap*, const char*, int, const tt__PTControlDirectionOptions *, const char*);
SOAP_FMAC3 tt__PTControlDirectionOptions * SOAP_FMAC4 soap_in_tt__PTControlDirectionOptions(struct soap*, const char*, tt__PTControlDirectionOptions *, const char*);
SOAP_FMAC1 tt__PTControlDirectionOptions * SOAP_FMAC2 soap_instantiate_tt__PTControlDirectionOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTControlDirectionOptions * soap_new_tt__PTControlDirectionOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTControlDirectionOptions(soap, n, NULL, NULL, NULL); }

inline tt__PTControlDirectionOptions * soap_new_req_tt__PTControlDirectionOptions(
	struct soap *soap)
{	tt__PTControlDirectionOptions *_p = soap_new_tt__PTControlDirectionOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__PTControlDirectionOptions * soap_new_set_tt__PTControlDirectionOptions(
	struct soap *soap,
	tt__EFlipOptions *EFlip,
	tt__ReverseOptions *Reverse,
	tt__PTControlDirectionOptionsExtension *Extension)
{	tt__PTControlDirectionOptions *_p = soap_new_tt__PTControlDirectionOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTControlDirectionOptions::EFlip = EFlip;
		_p->tt__PTControlDirectionOptions::Reverse = Reverse;
		_p->tt__PTControlDirectionOptions::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__PTControlDirectionOptions
#define soap_write_tt__PTControlDirectionOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTControlDirectionOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTControlDirectionOptions * SOAP_FMAC4 soap_get_tt__PTControlDirectionOptions(struct soap*, tt__PTControlDirectionOptions *, const char*, const char*);

#ifndef soap_read_tt__PTControlDirectionOptions
#define soap_read_tt__PTControlDirectionOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTControlDirectionOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZConfigurationOptions2
#define SOAP_TYPE_tt__PTZConfigurationOptions2 (550)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZConfigurationOptions2(struct soap*, const char*, int, const tt__PTZConfigurationOptions2 *, const char*);
SOAP_FMAC3 tt__PTZConfigurationOptions2 * SOAP_FMAC4 soap_in_tt__PTZConfigurationOptions2(struct soap*, const char*, tt__PTZConfigurationOptions2 *, const char*);
SOAP_FMAC1 tt__PTZConfigurationOptions2 * SOAP_FMAC2 soap_instantiate_tt__PTZConfigurationOptions2(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZConfigurationOptions2 * soap_new_tt__PTZConfigurationOptions2(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZConfigurationOptions2(soap, n, NULL, NULL, NULL); }

inline tt__PTZConfigurationOptions2 * soap_new_req_tt__PTZConfigurationOptions2(
	struct soap *soap)
{	tt__PTZConfigurationOptions2 *_p = soap_new_tt__PTZConfigurationOptions2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__PTZConfigurationOptions2 * soap_new_set_tt__PTZConfigurationOptions2(
	struct soap *soap)
{	tt__PTZConfigurationOptions2 *_p = soap_new_tt__PTZConfigurationOptions2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__PTZConfigurationOptions2
#define soap_write_tt__PTZConfigurationOptions2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZConfigurationOptions2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZConfigurationOptions2 * SOAP_FMAC4 soap_get_tt__PTZConfigurationOptions2(struct soap*, tt__PTZConfigurationOptions2 *, const char*, const char*);

#ifndef soap_read_tt__PTZConfigurationOptions2
#define soap_read_tt__PTZConfigurationOptions2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZConfigurationOptions2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZConfigurationOptions
#define SOAP_TYPE_tt__PTZConfigurationOptions (549)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZConfigurationOptions(struct soap*, const char*, int, const tt__PTZConfigurationOptions *, const char*);
SOAP_FMAC3 tt__PTZConfigurationOptions * SOAP_FMAC4 soap_in_tt__PTZConfigurationOptions(struct soap*, const char*, tt__PTZConfigurationOptions *, const char*);
SOAP_FMAC1 tt__PTZConfigurationOptions * SOAP_FMAC2 soap_instantiate_tt__PTZConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZConfigurationOptions * soap_new_tt__PTZConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline tt__PTZConfigurationOptions * soap_new_req_tt__PTZConfigurationOptions(
	struct soap *soap,
	tt__PTZSpaces *Spaces,
	tt__DurationRange *PTZTimeout)
{	tt__PTZConfigurationOptions *_p = soap_new_tt__PTZConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZConfigurationOptions::Spaces = Spaces;
		_p->tt__PTZConfigurationOptions::PTZTimeout = PTZTimeout;
	}
	return _p;
}

inline tt__PTZConfigurationOptions * soap_new_set_tt__PTZConfigurationOptions(
	struct soap *soap,
	tt__PTZSpaces *Spaces,
	tt__DurationRange *PTZTimeout,
	tt__PTControlDirectionOptions *PTControlDirection,
	tt__PTZConfigurationOptions2 *Extension,
	std::string *PTZRamps)
{	tt__PTZConfigurationOptions *_p = soap_new_tt__PTZConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZConfigurationOptions::Spaces = Spaces;
		_p->tt__PTZConfigurationOptions::PTZTimeout = PTZTimeout;
		_p->tt__PTZConfigurationOptions::PTControlDirection = PTControlDirection;
		_p->tt__PTZConfigurationOptions::Extension = Extension;
		_p->tt__PTZConfigurationOptions::PTZRamps = PTZRamps;
	}
	return _p;
}

#ifndef soap_write_tt__PTZConfigurationOptions
#define soap_write_tt__PTZConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZConfigurationOptions * SOAP_FMAC4 soap_get_tt__PTZConfigurationOptions(struct soap*, tt__PTZConfigurationOptions *, const char*, const char*);

#ifndef soap_read_tt__PTZConfigurationOptions
#define soap_read_tt__PTZConfigurationOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Reverse
#define SOAP_TYPE_tt__Reverse (548)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Reverse(struct soap*, const char*, int, const tt__Reverse *, const char*);
SOAP_FMAC3 tt__Reverse * SOAP_FMAC4 soap_in_tt__Reverse(struct soap*, const char*, tt__Reverse *, const char*);
SOAP_FMAC1 tt__Reverse * SOAP_FMAC2 soap_instantiate_tt__Reverse(struct soap*, int, const char*, const char*, size_t*);

inline tt__Reverse * soap_new_tt__Reverse(struct soap *soap, int n = -1) { return soap_instantiate_tt__Reverse(soap, n, NULL, NULL, NULL); }

inline tt__Reverse * soap_new_req_tt__Reverse(
	struct soap *soap,
	enum tt__ReverseMode Mode)
{	tt__Reverse *_p = soap_new_tt__Reverse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Reverse::Mode = Mode;
	}
	return _p;
}

inline tt__Reverse * soap_new_set_tt__Reverse(
	struct soap *soap,
	enum tt__ReverseMode Mode)
{	tt__Reverse *_p = soap_new_tt__Reverse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Reverse::Mode = Mode;
	}
	return _p;
}

#ifndef soap_write_tt__Reverse
#define soap_write_tt__Reverse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Reverse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Reverse * SOAP_FMAC4 soap_get_tt__Reverse(struct soap*, tt__Reverse *, const char*, const char*);

#ifndef soap_read_tt__Reverse
#define soap_read_tt__Reverse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Reverse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__EFlip
#define SOAP_TYPE_tt__EFlip (547)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__EFlip(struct soap*, const char*, int, const tt__EFlip *, const char*);
SOAP_FMAC3 tt__EFlip * SOAP_FMAC4 soap_in_tt__EFlip(struct soap*, const char*, tt__EFlip *, const char*);
SOAP_FMAC1 tt__EFlip * SOAP_FMAC2 soap_instantiate_tt__EFlip(struct soap*, int, const char*, const char*, size_t*);

inline tt__EFlip * soap_new_tt__EFlip(struct soap *soap, int n = -1) { return soap_instantiate_tt__EFlip(soap, n, NULL, NULL, NULL); }

inline tt__EFlip * soap_new_req_tt__EFlip(
	struct soap *soap,
	enum tt__EFlipMode Mode)
{	tt__EFlip *_p = soap_new_tt__EFlip(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__EFlip::Mode = Mode;
	}
	return _p;
}

inline tt__EFlip * soap_new_set_tt__EFlip(
	struct soap *soap,
	enum tt__EFlipMode Mode)
{	tt__EFlip *_p = soap_new_tt__EFlip(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__EFlip::Mode = Mode;
	}
	return _p;
}

#ifndef soap_write_tt__EFlip
#define soap_write_tt__EFlip(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:EFlip", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EFlip * SOAP_FMAC4 soap_get_tt__EFlip(struct soap*, tt__EFlip *, const char*, const char*);

#ifndef soap_read_tt__EFlip
#define soap_read_tt__EFlip(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__EFlip(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTControlDirectionExtension
#define SOAP_TYPE_tt__PTControlDirectionExtension (546)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTControlDirectionExtension(struct soap*, const char*, int, const tt__PTControlDirectionExtension *, const char*);
SOAP_FMAC3 tt__PTControlDirectionExtension * SOAP_FMAC4 soap_in_tt__PTControlDirectionExtension(struct soap*, const char*, tt__PTControlDirectionExtension *, const char*);
SOAP_FMAC1 tt__PTControlDirectionExtension * SOAP_FMAC2 soap_instantiate_tt__PTControlDirectionExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTControlDirectionExtension * soap_new_tt__PTControlDirectionExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTControlDirectionExtension(soap, n, NULL, NULL, NULL); }

inline tt__PTControlDirectionExtension * soap_new_req_tt__PTControlDirectionExtension(
	struct soap *soap)
{	tt__PTControlDirectionExtension *_p = soap_new_tt__PTControlDirectionExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__PTControlDirectionExtension * soap_new_set_tt__PTControlDirectionExtension(
	struct soap *soap)
{	tt__PTControlDirectionExtension *_p = soap_new_tt__PTControlDirectionExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__PTControlDirectionExtension
#define soap_write_tt__PTControlDirectionExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTControlDirectionExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTControlDirectionExtension * SOAP_FMAC4 soap_get_tt__PTControlDirectionExtension(struct soap*, tt__PTControlDirectionExtension *, const char*, const char*);

#ifndef soap_read_tt__PTControlDirectionExtension
#define soap_read_tt__PTControlDirectionExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTControlDirectionExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTControlDirection
#define SOAP_TYPE_tt__PTControlDirection (545)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTControlDirection(struct soap*, const char*, int, const tt__PTControlDirection *, const char*);
SOAP_FMAC3 tt__PTControlDirection * SOAP_FMAC4 soap_in_tt__PTControlDirection(struct soap*, const char*, tt__PTControlDirection *, const char*);
SOAP_FMAC1 tt__PTControlDirection * SOAP_FMAC2 soap_instantiate_tt__PTControlDirection(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTControlDirection * soap_new_tt__PTControlDirection(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTControlDirection(soap, n, NULL, NULL, NULL); }

inline tt__PTControlDirection * soap_new_req_tt__PTControlDirection(
	struct soap *soap)
{	tt__PTControlDirection *_p = soap_new_tt__PTControlDirection(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__PTControlDirection * soap_new_set_tt__PTControlDirection(
	struct soap *soap,
	tt__EFlip *EFlip,
	tt__Reverse *Reverse,
	tt__PTControlDirectionExtension *Extension)
{	tt__PTControlDirection *_p = soap_new_tt__PTControlDirection(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTControlDirection::EFlip = EFlip;
		_p->tt__PTControlDirection::Reverse = Reverse;
		_p->tt__PTControlDirection::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__PTControlDirection
#define soap_write_tt__PTControlDirection(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTControlDirection", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTControlDirection * SOAP_FMAC4 soap_get_tt__PTControlDirection(struct soap*, tt__PTControlDirection *, const char*, const char*);

#ifndef soap_read_tt__PTControlDirection
#define soap_read_tt__PTControlDirection(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTControlDirection(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZConfigurationExtension2
#define SOAP_TYPE_tt__PTZConfigurationExtension2 (544)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZConfigurationExtension2(struct soap*, const char*, int, const tt__PTZConfigurationExtension2 *, const char*);
SOAP_FMAC3 tt__PTZConfigurationExtension2 * SOAP_FMAC4 soap_in_tt__PTZConfigurationExtension2(struct soap*, const char*, tt__PTZConfigurationExtension2 *, const char*);
SOAP_FMAC1 tt__PTZConfigurationExtension2 * SOAP_FMAC2 soap_instantiate_tt__PTZConfigurationExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZConfigurationExtension2 * soap_new_tt__PTZConfigurationExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZConfigurationExtension2(soap, n, NULL, NULL, NULL); }

inline tt__PTZConfigurationExtension2 * soap_new_req_tt__PTZConfigurationExtension2(
	struct soap *soap)
{	tt__PTZConfigurationExtension2 *_p = soap_new_tt__PTZConfigurationExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__PTZConfigurationExtension2 * soap_new_set_tt__PTZConfigurationExtension2(
	struct soap *soap)
{	tt__PTZConfigurationExtension2 *_p = soap_new_tt__PTZConfigurationExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__PTZConfigurationExtension2
#define soap_write_tt__PTZConfigurationExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZConfigurationExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZConfigurationExtension2 * SOAP_FMAC4 soap_get_tt__PTZConfigurationExtension2(struct soap*, tt__PTZConfigurationExtension2 *, const char*, const char*);

#ifndef soap_read_tt__PTZConfigurationExtension2
#define soap_read_tt__PTZConfigurationExtension2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZConfigurationExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZConfigurationExtension
#define SOAP_TYPE_tt__PTZConfigurationExtension (543)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZConfigurationExtension(struct soap*, const char*, int, const tt__PTZConfigurationExtension *, const char*);
SOAP_FMAC3 tt__PTZConfigurationExtension * SOAP_FMAC4 soap_in_tt__PTZConfigurationExtension(struct soap*, const char*, tt__PTZConfigurationExtension *, const char*);
SOAP_FMAC1 tt__PTZConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__PTZConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZConfigurationExtension * soap_new_tt__PTZConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__PTZConfigurationExtension * soap_new_req_tt__PTZConfigurationExtension(
	struct soap *soap)
{	tt__PTZConfigurationExtension *_p = soap_new_tt__PTZConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__PTZConfigurationExtension * soap_new_set_tt__PTZConfigurationExtension(
	struct soap *soap,
	tt__PTControlDirection *PTControlDirection,
	tt__PTZConfigurationExtension2 *Extension)
{	tt__PTZConfigurationExtension *_p = soap_new_tt__PTZConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZConfigurationExtension::PTControlDirection = PTControlDirection;
		_p->tt__PTZConfigurationExtension::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__PTZConfigurationExtension
#define soap_write_tt__PTZConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZConfigurationExtension * SOAP_FMAC4 soap_get_tt__PTZConfigurationExtension(struct soap*, tt__PTZConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__PTZConfigurationExtension
#define soap_read_tt__PTZConfigurationExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZConfiguration
#define SOAP_TYPE_tt__PTZConfiguration (542)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZConfiguration(struct soap*, const char*, int, const tt__PTZConfiguration *, const char*);
SOAP_FMAC3 tt__PTZConfiguration * SOAP_FMAC4 soap_in_tt__PTZConfiguration(struct soap*, const char*, tt__PTZConfiguration *, const char*);
SOAP_FMAC1 tt__PTZConfiguration * SOAP_FMAC2 soap_instantiate_tt__PTZConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZConfiguration * soap_new_tt__PTZConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__PTZConfiguration * soap_new_req_tt__PTZConfiguration(
	struct soap *soap,
	const std::string& NodeToken,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__PTZConfiguration *_p = soap_new_tt__PTZConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZConfiguration::NodeToken = NodeToken;
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

inline tt__PTZConfiguration * soap_new_set_tt__PTZConfiguration(
	struct soap *soap,
	const std::string& NodeToken,
	std::string *DefaultAbsolutePantTiltPositionSpace,
	std::string *DefaultAbsoluteZoomPositionSpace,
	std::string *DefaultRelativePanTiltTranslationSpace,
	std::string *DefaultRelativeZoomTranslationSpace,
	std::string *DefaultContinuousPanTiltVelocitySpace,
	std::string *DefaultContinuousZoomVelocitySpace,
	tt__PTZSpeed *DefaultPTZSpeed,
	LONG64 *DefaultPTZTimeout,
	tt__PanTiltLimits *PanTiltLimits,
	tt__ZoomLimits *ZoomLimits,
	tt__PTZConfigurationExtension *Extension,
	int *MoveRamp,
	int *PresetRamp,
	int *PresetTourRamp,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__PTZConfiguration *_p = soap_new_tt__PTZConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZConfiguration::NodeToken = NodeToken;
		_p->tt__PTZConfiguration::DefaultAbsolutePantTiltPositionSpace = DefaultAbsolutePantTiltPositionSpace;
		_p->tt__PTZConfiguration::DefaultAbsoluteZoomPositionSpace = DefaultAbsoluteZoomPositionSpace;
		_p->tt__PTZConfiguration::DefaultRelativePanTiltTranslationSpace = DefaultRelativePanTiltTranslationSpace;
		_p->tt__PTZConfiguration::DefaultRelativeZoomTranslationSpace = DefaultRelativeZoomTranslationSpace;
		_p->tt__PTZConfiguration::DefaultContinuousPanTiltVelocitySpace = DefaultContinuousPanTiltVelocitySpace;
		_p->tt__PTZConfiguration::DefaultContinuousZoomVelocitySpace = DefaultContinuousZoomVelocitySpace;
		_p->tt__PTZConfiguration::DefaultPTZSpeed = DefaultPTZSpeed;
		_p->tt__PTZConfiguration::DefaultPTZTimeout = DefaultPTZTimeout;
		_p->tt__PTZConfiguration::PanTiltLimits = PanTiltLimits;
		_p->tt__PTZConfiguration::ZoomLimits = ZoomLimits;
		_p->tt__PTZConfiguration::Extension = Extension;
		_p->tt__PTZConfiguration::MoveRamp = MoveRamp;
		_p->tt__PTZConfiguration::PresetRamp = PresetRamp;
		_p->tt__PTZConfiguration::PresetTourRamp = PresetTourRamp;
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

#ifndef soap_write_tt__PTZConfiguration
#define soap_write_tt__PTZConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZConfiguration * SOAP_FMAC4 soap_get_tt__PTZConfiguration(struct soap*, tt__PTZConfiguration *, const char*, const char*);

#ifndef soap_read_tt__PTZConfiguration
#define soap_read_tt__PTZConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZPresetTourSupportedExtension
#define SOAP_TYPE_tt__PTZPresetTourSupportedExtension (541)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourSupportedExtension(struct soap*, const char*, int, const tt__PTZPresetTourSupportedExtension *, const char*);
SOAP_FMAC3 tt__PTZPresetTourSupportedExtension * SOAP_FMAC4 soap_in_tt__PTZPresetTourSupportedExtension(struct soap*, const char*, tt__PTZPresetTourSupportedExtension *, const char*);
SOAP_FMAC1 tt__PTZPresetTourSupportedExtension * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourSupportedExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourSupportedExtension * soap_new_tt__PTZPresetTourSupportedExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourSupportedExtension(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourSupportedExtension * soap_new_req_tt__PTZPresetTourSupportedExtension(
	struct soap *soap)
{	tt__PTZPresetTourSupportedExtension *_p = soap_new_tt__PTZPresetTourSupportedExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__PTZPresetTourSupportedExtension * soap_new_set_tt__PTZPresetTourSupportedExtension(
	struct soap *soap)
{	tt__PTZPresetTourSupportedExtension *_p = soap_new_tt__PTZPresetTourSupportedExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__PTZPresetTourSupportedExtension
#define soap_write_tt__PTZPresetTourSupportedExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZPresetTourSupportedExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourSupportedExtension * SOAP_FMAC4 soap_get_tt__PTZPresetTourSupportedExtension(struct soap*, tt__PTZPresetTourSupportedExtension *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourSupportedExtension
#define soap_read_tt__PTZPresetTourSupportedExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourSupportedExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZPresetTourSupported
#define SOAP_TYPE_tt__PTZPresetTourSupported (540)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZPresetTourSupported(struct soap*, const char*, int, const tt__PTZPresetTourSupported *, const char*);
SOAP_FMAC3 tt__PTZPresetTourSupported * SOAP_FMAC4 soap_in_tt__PTZPresetTourSupported(struct soap*, const char*, tt__PTZPresetTourSupported *, const char*);
SOAP_FMAC1 tt__PTZPresetTourSupported * SOAP_FMAC2 soap_instantiate_tt__PTZPresetTourSupported(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZPresetTourSupported * soap_new_tt__PTZPresetTourSupported(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZPresetTourSupported(soap, n, NULL, NULL, NULL); }

inline tt__PTZPresetTourSupported * soap_new_req_tt__PTZPresetTourSupported(
	struct soap *soap,
	int MaximumNumberOfPresetTours)
{	tt__PTZPresetTourSupported *_p = soap_new_tt__PTZPresetTourSupported(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZPresetTourSupported::MaximumNumberOfPresetTours = MaximumNumberOfPresetTours;
	}
	return _p;
}

inline tt__PTZPresetTourSupported * soap_new_set_tt__PTZPresetTourSupported(
	struct soap *soap,
	int MaximumNumberOfPresetTours,
	const std::vector<enum tt__PTZPresetTourOperation> & PTZPresetTourOperation,
	tt__PTZPresetTourSupportedExtension *Extension)
{	tt__PTZPresetTourSupported *_p = soap_new_tt__PTZPresetTourSupported(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZPresetTourSupported::MaximumNumberOfPresetTours = MaximumNumberOfPresetTours;
		_p->tt__PTZPresetTourSupported::PTZPresetTourOperation = PTZPresetTourOperation;
		_p->tt__PTZPresetTourSupported::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__PTZPresetTourSupported
#define soap_write_tt__PTZPresetTourSupported(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZPresetTourSupported", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourSupported * SOAP_FMAC4 soap_get_tt__PTZPresetTourSupported(struct soap*, tt__PTZPresetTourSupported *, const char*, const char*);

#ifndef soap_read_tt__PTZPresetTourSupported
#define soap_read_tt__PTZPresetTourSupported(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZPresetTourSupported(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZNodeExtension2
#define SOAP_TYPE_tt__PTZNodeExtension2 (539)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZNodeExtension2(struct soap*, const char*, int, const tt__PTZNodeExtension2 *, const char*);
SOAP_FMAC3 tt__PTZNodeExtension2 * SOAP_FMAC4 soap_in_tt__PTZNodeExtension2(struct soap*, const char*, tt__PTZNodeExtension2 *, const char*);
SOAP_FMAC1 tt__PTZNodeExtension2 * SOAP_FMAC2 soap_instantiate_tt__PTZNodeExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZNodeExtension2 * soap_new_tt__PTZNodeExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZNodeExtension2(soap, n, NULL, NULL, NULL); }

inline tt__PTZNodeExtension2 * soap_new_req_tt__PTZNodeExtension2(
	struct soap *soap)
{	tt__PTZNodeExtension2 *_p = soap_new_tt__PTZNodeExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__PTZNodeExtension2 * soap_new_set_tt__PTZNodeExtension2(
	struct soap *soap)
{	tt__PTZNodeExtension2 *_p = soap_new_tt__PTZNodeExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__PTZNodeExtension2
#define soap_write_tt__PTZNodeExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZNodeExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZNodeExtension2 * SOAP_FMAC4 soap_get_tt__PTZNodeExtension2(struct soap*, tt__PTZNodeExtension2 *, const char*, const char*);

#ifndef soap_read_tt__PTZNodeExtension2
#define soap_read_tt__PTZNodeExtension2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZNodeExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZNodeExtension
#define SOAP_TYPE_tt__PTZNodeExtension (538)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZNodeExtension(struct soap*, const char*, int, const tt__PTZNodeExtension *, const char*);
SOAP_FMAC3 tt__PTZNodeExtension * SOAP_FMAC4 soap_in_tt__PTZNodeExtension(struct soap*, const char*, tt__PTZNodeExtension *, const char*);
SOAP_FMAC1 tt__PTZNodeExtension * SOAP_FMAC2 soap_instantiate_tt__PTZNodeExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZNodeExtension * soap_new_tt__PTZNodeExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZNodeExtension(soap, n, NULL, NULL, NULL); }

inline tt__PTZNodeExtension * soap_new_req_tt__PTZNodeExtension(
	struct soap *soap)
{	tt__PTZNodeExtension *_p = soap_new_tt__PTZNodeExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__PTZNodeExtension * soap_new_set_tt__PTZNodeExtension(
	struct soap *soap,
	tt__PTZPresetTourSupported *SupportedPresetTour,
	tt__PTZNodeExtension2 *Extension)
{	tt__PTZNodeExtension *_p = soap_new_tt__PTZNodeExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZNodeExtension::SupportedPresetTour = SupportedPresetTour;
		_p->tt__PTZNodeExtension::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__PTZNodeExtension
#define soap_write_tt__PTZNodeExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZNodeExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZNodeExtension * SOAP_FMAC4 soap_get_tt__PTZNodeExtension(struct soap*, tt__PTZNodeExtension *, const char*, const char*);

#ifndef soap_read_tt__PTZNodeExtension
#define soap_read_tt__PTZNodeExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZNodeExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZNode
#define SOAP_TYPE_tt__PTZNode (537)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZNode(struct soap*, const char*, int, const tt__PTZNode *, const char*);
SOAP_FMAC3 tt__PTZNode * SOAP_FMAC4 soap_in_tt__PTZNode(struct soap*, const char*, tt__PTZNode *, const char*);
SOAP_FMAC1 tt__PTZNode * SOAP_FMAC2 soap_instantiate_tt__PTZNode(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZNode * soap_new_tt__PTZNode(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZNode(soap, n, NULL, NULL, NULL); }

inline tt__PTZNode * soap_new_req_tt__PTZNode(
	struct soap *soap,
	tt__PTZSpaces *SupportedPTZSpaces,
	int MaximumNumberOfPresets,
	bool HomeSupported,
	const std::string& token1)
{	tt__PTZNode *_p = soap_new_tt__PTZNode(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZNode::SupportedPTZSpaces = SupportedPTZSpaces;
		_p->tt__PTZNode::MaximumNumberOfPresets = MaximumNumberOfPresets;
		_p->tt__PTZNode::HomeSupported = HomeSupported;
		_p->tt__DeviceEntity::token = token1;
	}
	return _p;
}

inline tt__PTZNode * soap_new_set_tt__PTZNode(
	struct soap *soap,
	std::string *Name,
	tt__PTZSpaces *SupportedPTZSpaces,
	int MaximumNumberOfPresets,
	bool HomeSupported,
	const std::vector<std::string> & AuxiliaryCommands,
	tt__PTZNodeExtension *Extension,
	bool *FixedHomePosition,
	bool *GeoMove,
	const std::string& token1)
{	tt__PTZNode *_p = soap_new_tt__PTZNode(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZNode::Name = Name;
		_p->tt__PTZNode::SupportedPTZSpaces = SupportedPTZSpaces;
		_p->tt__PTZNode::MaximumNumberOfPresets = MaximumNumberOfPresets;
		_p->tt__PTZNode::HomeSupported = HomeSupported;
		_p->tt__PTZNode::AuxiliaryCommands = AuxiliaryCommands;
		_p->tt__PTZNode::Extension = Extension;
		_p->tt__PTZNode::FixedHomePosition = FixedHomePosition;
		_p->tt__PTZNode::GeoMove = GeoMove;
		_p->tt__DeviceEntity::token = token1;
	}
	return _p;
}

#ifndef soap_write_tt__PTZNode
#define soap_write_tt__PTZNode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZNode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZNode * SOAP_FMAC4 soap_get_tt__PTZNode(struct soap*, tt__PTZNode *, const char*, const char*);

#ifndef soap_read_tt__PTZNode
#define soap_read_tt__PTZNode(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZNode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__DigitalInput
#define SOAP_TYPE_tt__DigitalInput (536)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DigitalInput(struct soap*, const char*, int, const tt__DigitalInput *, const char*);
SOAP_FMAC3 tt__DigitalInput * SOAP_FMAC4 soap_in_tt__DigitalInput(struct soap*, const char*, tt__DigitalInput *, const char*);
SOAP_FMAC1 tt__DigitalInput * SOAP_FMAC2 soap_instantiate_tt__DigitalInput(struct soap*, int, const char*, const char*, size_t*);

inline tt__DigitalInput * soap_new_tt__DigitalInput(struct soap *soap, int n = -1) { return soap_instantiate_tt__DigitalInput(soap, n, NULL, NULL, NULL); }

inline tt__DigitalInput * soap_new_req_tt__DigitalInput(
	struct soap *soap,
	const std::string& token1)
{	tt__DigitalInput *_p = soap_new_tt__DigitalInput(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__DeviceEntity::token = token1;
	}
	return _p;
}

inline tt__DigitalInput * soap_new_set_tt__DigitalInput(
	struct soap *soap,
	enum tt__DigitalIdleState *IdleState,
	const std::string& token1)
{	tt__DigitalInput *_p = soap_new_tt__DigitalInput(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__DigitalInput::IdleState = IdleState;
		_p->tt__DeviceEntity::token = token1;
	}
	return _p;
}

#ifndef soap_write_tt__DigitalInput
#define soap_write_tt__DigitalInput(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:DigitalInput", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DigitalInput * SOAP_FMAC4 soap_get_tt__DigitalInput(struct soap*, tt__DigitalInput *, const char*, const char*);

#ifndef soap_read_tt__DigitalInput
#define soap_read_tt__DigitalInput(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__DigitalInput(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RelayOutput
#define SOAP_TYPE_tt__RelayOutput (535)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RelayOutput(struct soap*, const char*, int, const tt__RelayOutput *, const char*);
SOAP_FMAC3 tt__RelayOutput * SOAP_FMAC4 soap_in_tt__RelayOutput(struct soap*, const char*, tt__RelayOutput *, const char*);
SOAP_FMAC1 tt__RelayOutput * SOAP_FMAC2 soap_instantiate_tt__RelayOutput(struct soap*, int, const char*, const char*, size_t*);

inline tt__RelayOutput * soap_new_tt__RelayOutput(struct soap *soap, int n = -1) { return soap_instantiate_tt__RelayOutput(soap, n, NULL, NULL, NULL); }

inline tt__RelayOutput * soap_new_req_tt__RelayOutput(
	struct soap *soap,
	tt__RelayOutputSettings *Properties,
	const std::string& token1)
{	tt__RelayOutput *_p = soap_new_tt__RelayOutput(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RelayOutput::Properties = Properties;
		_p->tt__DeviceEntity::token = token1;
	}
	return _p;
}

inline tt__RelayOutput * soap_new_set_tt__RelayOutput(
	struct soap *soap,
	tt__RelayOutputSettings *Properties,
	const std::string& token1)
{	tt__RelayOutput *_p = soap_new_tt__RelayOutput(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RelayOutput::Properties = Properties;
		_p->tt__DeviceEntity::token = token1;
	}
	return _p;
}

#ifndef soap_write_tt__RelayOutput
#define soap_write_tt__RelayOutput(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:RelayOutput", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RelayOutput * SOAP_FMAC4 soap_get_tt__RelayOutput(struct soap*, tt__RelayOutput *, const char*, const char*);

#ifndef soap_read_tt__RelayOutput
#define soap_read_tt__RelayOutput(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RelayOutput(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RelayOutputSettings
#define SOAP_TYPE_tt__RelayOutputSettings (534)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RelayOutputSettings(struct soap*, const char*, int, const tt__RelayOutputSettings *, const char*);
SOAP_FMAC3 tt__RelayOutputSettings * SOAP_FMAC4 soap_in_tt__RelayOutputSettings(struct soap*, const char*, tt__RelayOutputSettings *, const char*);
SOAP_FMAC1 tt__RelayOutputSettings * SOAP_FMAC2 soap_instantiate_tt__RelayOutputSettings(struct soap*, int, const char*, const char*, size_t*);

inline tt__RelayOutputSettings * soap_new_tt__RelayOutputSettings(struct soap *soap, int n = -1) { return soap_instantiate_tt__RelayOutputSettings(soap, n, NULL, NULL, NULL); }

inline tt__RelayOutputSettings * soap_new_req_tt__RelayOutputSettings(
	struct soap *soap,
	enum tt__RelayMode Mode,
	LONG64 DelayTime,
	enum tt__RelayIdleState IdleState)
{	tt__RelayOutputSettings *_p = soap_new_tt__RelayOutputSettings(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RelayOutputSettings::Mode = Mode;
		_p->tt__RelayOutputSettings::DelayTime = DelayTime;
		_p->tt__RelayOutputSettings::IdleState = IdleState;
	}
	return _p;
}

inline tt__RelayOutputSettings * soap_new_set_tt__RelayOutputSettings(
	struct soap *soap,
	enum tt__RelayMode Mode,
	LONG64 DelayTime,
	enum tt__RelayIdleState IdleState)
{	tt__RelayOutputSettings *_p = soap_new_tt__RelayOutputSettings(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RelayOutputSettings::Mode = Mode;
		_p->tt__RelayOutputSettings::DelayTime = DelayTime;
		_p->tt__RelayOutputSettings::IdleState = IdleState;
	}
	return _p;
}

#ifndef soap_write_tt__RelayOutputSettings
#define soap_write_tt__RelayOutputSettings(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:RelayOutputSettings", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RelayOutputSettings * SOAP_FMAC4 soap_get_tt__RelayOutputSettings(struct soap*, tt__RelayOutputSettings *, const char*, const char*);

#ifndef soap_read_tt__RelayOutputSettings
#define soap_read_tt__RelayOutputSettings(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RelayOutputSettings(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__GenericEapPwdConfigurationExtension
#define SOAP_TYPE_tt__GenericEapPwdConfigurationExtension (533)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__GenericEapPwdConfigurationExtension(struct soap*, const char*, int, const tt__GenericEapPwdConfigurationExtension *, const char*);
SOAP_FMAC3 tt__GenericEapPwdConfigurationExtension * SOAP_FMAC4 soap_in_tt__GenericEapPwdConfigurationExtension(struct soap*, const char*, tt__GenericEapPwdConfigurationExtension *, const char*);
SOAP_FMAC1 tt__GenericEapPwdConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__GenericEapPwdConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__GenericEapPwdConfigurationExtension * soap_new_tt__GenericEapPwdConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__GenericEapPwdConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__GenericEapPwdConfigurationExtension * soap_new_req_tt__GenericEapPwdConfigurationExtension(
	struct soap *soap)
{	tt__GenericEapPwdConfigurationExtension *_p = soap_new_tt__GenericEapPwdConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__GenericEapPwdConfigurationExtension * soap_new_set_tt__GenericEapPwdConfigurationExtension(
	struct soap *soap)
{	tt__GenericEapPwdConfigurationExtension *_p = soap_new_tt__GenericEapPwdConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__GenericEapPwdConfigurationExtension
#define soap_write_tt__GenericEapPwdConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:GenericEapPwdConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__GenericEapPwdConfigurationExtension * SOAP_FMAC4 soap_get_tt__GenericEapPwdConfigurationExtension(struct soap*, tt__GenericEapPwdConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__GenericEapPwdConfigurationExtension
#define soap_read_tt__GenericEapPwdConfigurationExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__GenericEapPwdConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__TLSConfiguration
#define SOAP_TYPE_tt__TLSConfiguration (532)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__TLSConfiguration(struct soap*, const char*, int, const tt__TLSConfiguration *, const char*);
SOAP_FMAC3 tt__TLSConfiguration * SOAP_FMAC4 soap_in_tt__TLSConfiguration(struct soap*, const char*, tt__TLSConfiguration *, const char*);
SOAP_FMAC1 tt__TLSConfiguration * SOAP_FMAC2 soap_instantiate_tt__TLSConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__TLSConfiguration * soap_new_tt__TLSConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__TLSConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__TLSConfiguration * soap_new_req_tt__TLSConfiguration(
	struct soap *soap,
	const std::string& CertificateID)
{	tt__TLSConfiguration *_p = soap_new_tt__TLSConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__TLSConfiguration::CertificateID = CertificateID;
	}
	return _p;
}

inline tt__TLSConfiguration * soap_new_set_tt__TLSConfiguration(
	struct soap *soap,
	const std::string& CertificateID)
{	tt__TLSConfiguration *_p = soap_new_tt__TLSConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__TLSConfiguration::CertificateID = CertificateID;
	}
	return _p;
}

#ifndef soap_write_tt__TLSConfiguration
#define soap_write_tt__TLSConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:TLSConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__TLSConfiguration * SOAP_FMAC4 soap_get_tt__TLSConfiguration(struct soap*, tt__TLSConfiguration *, const char*, const char*);

#ifndef soap_read_tt__TLSConfiguration
#define soap_read_tt__TLSConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__TLSConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__EapMethodExtension
#define SOAP_TYPE_tt__EapMethodExtension (531)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__EapMethodExtension(struct soap*, const char*, int, const tt__EapMethodExtension *, const char*);
SOAP_FMAC3 tt__EapMethodExtension * SOAP_FMAC4 soap_in_tt__EapMethodExtension(struct soap*, const char*, tt__EapMethodExtension *, const char*);
SOAP_FMAC1 tt__EapMethodExtension * SOAP_FMAC2 soap_instantiate_tt__EapMethodExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__EapMethodExtension * soap_new_tt__EapMethodExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__EapMethodExtension(soap, n, NULL, NULL, NULL); }

inline tt__EapMethodExtension * soap_new_req_tt__EapMethodExtension(
	struct soap *soap)
{	tt__EapMethodExtension *_p = soap_new_tt__EapMethodExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__EapMethodExtension * soap_new_set_tt__EapMethodExtension(
	struct soap *soap)
{	tt__EapMethodExtension *_p = soap_new_tt__EapMethodExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__EapMethodExtension
#define soap_write_tt__EapMethodExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:EapMethodExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EapMethodExtension * SOAP_FMAC4 soap_get_tt__EapMethodExtension(struct soap*, tt__EapMethodExtension *, const char*, const char*);

#ifndef soap_read_tt__EapMethodExtension
#define soap_read_tt__EapMethodExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__EapMethodExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__EAPMethodConfiguration
#define SOAP_TYPE_tt__EAPMethodConfiguration (530)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__EAPMethodConfiguration(struct soap*, const char*, int, const tt__EAPMethodConfiguration *, const char*);
SOAP_FMAC3 tt__EAPMethodConfiguration * SOAP_FMAC4 soap_in_tt__EAPMethodConfiguration(struct soap*, const char*, tt__EAPMethodConfiguration *, const char*);
SOAP_FMAC1 tt__EAPMethodConfiguration * SOAP_FMAC2 soap_instantiate_tt__EAPMethodConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__EAPMethodConfiguration * soap_new_tt__EAPMethodConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__EAPMethodConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__EAPMethodConfiguration * soap_new_req_tt__EAPMethodConfiguration(
	struct soap *soap)
{	tt__EAPMethodConfiguration *_p = soap_new_tt__EAPMethodConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__EAPMethodConfiguration * soap_new_set_tt__EAPMethodConfiguration(
	struct soap *soap,
	tt__TLSConfiguration *TLSConfiguration,
	std::string *Password,
	tt__EapMethodExtension *Extension)
{	tt__EAPMethodConfiguration *_p = soap_new_tt__EAPMethodConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__EAPMethodConfiguration::TLSConfiguration = TLSConfiguration;
		_p->tt__EAPMethodConfiguration::Password = Password;
		_p->tt__EAPMethodConfiguration::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__EAPMethodConfiguration
#define soap_write_tt__EAPMethodConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:EAPMethodConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EAPMethodConfiguration * SOAP_FMAC4 soap_get_tt__EAPMethodConfiguration(struct soap*, tt__EAPMethodConfiguration *, const char*, const char*);

#ifndef soap_read_tt__EAPMethodConfiguration
#define soap_read_tt__EAPMethodConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__EAPMethodConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Dot1XConfigurationExtension
#define SOAP_TYPE_tt__Dot1XConfigurationExtension (529)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot1XConfigurationExtension(struct soap*, const char*, int, const tt__Dot1XConfigurationExtension *, const char*);
SOAP_FMAC3 tt__Dot1XConfigurationExtension * SOAP_FMAC4 soap_in_tt__Dot1XConfigurationExtension(struct soap*, const char*, tt__Dot1XConfigurationExtension *, const char*);
SOAP_FMAC1 tt__Dot1XConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__Dot1XConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__Dot1XConfigurationExtension * soap_new_tt__Dot1XConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__Dot1XConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__Dot1XConfigurationExtension * soap_new_req_tt__Dot1XConfigurationExtension(
	struct soap *soap)
{	tt__Dot1XConfigurationExtension *_p = soap_new_tt__Dot1XConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__Dot1XConfigurationExtension * soap_new_set_tt__Dot1XConfigurationExtension(
	struct soap *soap)
{	tt__Dot1XConfigurationExtension *_p = soap_new_tt__Dot1XConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__Dot1XConfigurationExtension
#define soap_write_tt__Dot1XConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Dot1XConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot1XConfigurationExtension * SOAP_FMAC4 soap_get_tt__Dot1XConfigurationExtension(struct soap*, tt__Dot1XConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__Dot1XConfigurationExtension
#define soap_read_tt__Dot1XConfigurationExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Dot1XConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Dot1XConfiguration
#define SOAP_TYPE_tt__Dot1XConfiguration (528)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot1XConfiguration(struct soap*, const char*, int, const tt__Dot1XConfiguration *, const char*);
SOAP_FMAC3 tt__Dot1XConfiguration * SOAP_FMAC4 soap_in_tt__Dot1XConfiguration(struct soap*, const char*, tt__Dot1XConfiguration *, const char*);
SOAP_FMAC1 tt__Dot1XConfiguration * SOAP_FMAC2 soap_instantiate_tt__Dot1XConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__Dot1XConfiguration * soap_new_tt__Dot1XConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__Dot1XConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__Dot1XConfiguration * soap_new_req_tt__Dot1XConfiguration(
	struct soap *soap,
	const std::string& Dot1XConfigurationToken,
	const std::string& Identity,
	int EAPMethod)
{	tt__Dot1XConfiguration *_p = soap_new_tt__Dot1XConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Dot1XConfiguration::Dot1XConfigurationToken = Dot1XConfigurationToken;
		_p->tt__Dot1XConfiguration::Identity = Identity;
		_p->tt__Dot1XConfiguration::EAPMethod = EAPMethod;
	}
	return _p;
}

inline tt__Dot1XConfiguration * soap_new_set_tt__Dot1XConfiguration(
	struct soap *soap,
	const std::string& Dot1XConfigurationToken,
	const std::string& Identity,
	std::string *AnonymousID,
	int EAPMethod,
	const std::vector<std::string> & CACertificateID,
	tt__EAPMethodConfiguration *EAPMethodConfiguration,
	tt__Dot1XConfigurationExtension *Extension)
{	tt__Dot1XConfiguration *_p = soap_new_tt__Dot1XConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Dot1XConfiguration::Dot1XConfigurationToken = Dot1XConfigurationToken;
		_p->tt__Dot1XConfiguration::Identity = Identity;
		_p->tt__Dot1XConfiguration::AnonymousID = AnonymousID;
		_p->tt__Dot1XConfiguration::EAPMethod = EAPMethod;
		_p->tt__Dot1XConfiguration::CACertificateID = CACertificateID;
		_p->tt__Dot1XConfiguration::EAPMethodConfiguration = EAPMethodConfiguration;
		_p->tt__Dot1XConfiguration::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__Dot1XConfiguration
#define soap_write_tt__Dot1XConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Dot1XConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot1XConfiguration * SOAP_FMAC4 soap_get_tt__Dot1XConfiguration(struct soap*, tt__Dot1XConfiguration *, const char*, const char*);

#ifndef soap_read_tt__Dot1XConfiguration
#define soap_read_tt__Dot1XConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Dot1XConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__CertificateInformationExtension
#define SOAP_TYPE_tt__CertificateInformationExtension (527)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__CertificateInformationExtension(struct soap*, const char*, int, const tt__CertificateInformationExtension *, const char*);
SOAP_FMAC3 tt__CertificateInformationExtension * SOAP_FMAC4 soap_in_tt__CertificateInformationExtension(struct soap*, const char*, tt__CertificateInformationExtension *, const char*);
SOAP_FMAC1 tt__CertificateInformationExtension * SOAP_FMAC2 soap_instantiate_tt__CertificateInformationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__CertificateInformationExtension * soap_new_tt__CertificateInformationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__CertificateInformationExtension(soap, n, NULL, NULL, NULL); }

inline tt__CertificateInformationExtension * soap_new_req_tt__CertificateInformationExtension(
	struct soap *soap)
{	tt__CertificateInformationExtension *_p = soap_new_tt__CertificateInformationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__CertificateInformationExtension * soap_new_set_tt__CertificateInformationExtension(
	struct soap *soap)
{	tt__CertificateInformationExtension *_p = soap_new_tt__CertificateInformationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__CertificateInformationExtension
#define soap_write_tt__CertificateInformationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:CertificateInformationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CertificateInformationExtension * SOAP_FMAC4 soap_get_tt__CertificateInformationExtension(struct soap*, tt__CertificateInformationExtension *, const char*, const char*);

#ifndef soap_read_tt__CertificateInformationExtension
#define soap_read_tt__CertificateInformationExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__CertificateInformationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__CertificateUsage
#define SOAP_TYPE_tt__CertificateUsage (526)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__CertificateUsage(struct soap*, const char*, int, const tt__CertificateUsage *, const char*);
SOAP_FMAC3 tt__CertificateUsage * SOAP_FMAC4 soap_in_tt__CertificateUsage(struct soap*, const char*, tt__CertificateUsage *, const char*);
SOAP_FMAC1 tt__CertificateUsage * SOAP_FMAC2 soap_instantiate_tt__CertificateUsage(struct soap*, int, const char*, const char*, size_t*);

inline tt__CertificateUsage * soap_new_tt__CertificateUsage(struct soap *soap, int n = -1) { return soap_instantiate_tt__CertificateUsage(soap, n, NULL, NULL, NULL); }

inline tt__CertificateUsage * soap_new_req_tt__CertificateUsage(
	struct soap *soap,
	const std::string& __item,
	bool Critical)
{	tt__CertificateUsage *_p = soap_new_tt__CertificateUsage(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__CertificateUsage::__item = __item;
		_p->tt__CertificateUsage::Critical = Critical;
	}
	return _p;
}

inline tt__CertificateUsage * soap_new_set_tt__CertificateUsage(
	struct soap *soap,
	const std::string& __item,
	bool Critical)
{	tt__CertificateUsage *_p = soap_new_tt__CertificateUsage(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__CertificateUsage::__item = __item;
		_p->tt__CertificateUsage::Critical = Critical;
	}
	return _p;
}

#ifndef soap_write_tt__CertificateUsage
#define soap_write_tt__CertificateUsage(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:CertificateUsage", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CertificateUsage * SOAP_FMAC4 soap_get_tt__CertificateUsage(struct soap*, tt__CertificateUsage *, const char*, const char*);

#ifndef soap_read_tt__CertificateUsage
#define soap_read_tt__CertificateUsage(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__CertificateUsage(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__CertificateInformation
#define SOAP_TYPE_tt__CertificateInformation (525)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__CertificateInformation(struct soap*, const char*, int, const tt__CertificateInformation *, const char*);
SOAP_FMAC3 tt__CertificateInformation * SOAP_FMAC4 soap_in_tt__CertificateInformation(struct soap*, const char*, tt__CertificateInformation *, const char*);
SOAP_FMAC1 tt__CertificateInformation * SOAP_FMAC2 soap_instantiate_tt__CertificateInformation(struct soap*, int, const char*, const char*, size_t*);

inline tt__CertificateInformation * soap_new_tt__CertificateInformation(struct soap *soap, int n = -1) { return soap_instantiate_tt__CertificateInformation(soap, n, NULL, NULL, NULL); }

inline tt__CertificateInformation * soap_new_req_tt__CertificateInformation(
	struct soap *soap,
	const std::string& CertificateID)
{	tt__CertificateInformation *_p = soap_new_tt__CertificateInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__CertificateInformation::CertificateID = CertificateID;
	}
	return _p;
}

inline tt__CertificateInformation * soap_new_set_tt__CertificateInformation(
	struct soap *soap,
	const std::string& CertificateID,
	std::string *IssuerDN,
	std::string *SubjectDN,
	tt__CertificateUsage *KeyUsage,
	tt__CertificateUsage *ExtendedKeyUsage,
	int *KeyLength,
	std::string *Version,
	std::string *SerialNum,
	std::string *SignatureAlgorithm,
	tt__DateTimeRange *Validity,
	tt__CertificateInformationExtension *Extension)
{	tt__CertificateInformation *_p = soap_new_tt__CertificateInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__CertificateInformation::CertificateID = CertificateID;
		_p->tt__CertificateInformation::IssuerDN = IssuerDN;
		_p->tt__CertificateInformation::SubjectDN = SubjectDN;
		_p->tt__CertificateInformation::KeyUsage = KeyUsage;
		_p->tt__CertificateInformation::ExtendedKeyUsage = ExtendedKeyUsage;
		_p->tt__CertificateInformation::KeyLength = KeyLength;
		_p->tt__CertificateInformation::Version = Version;
		_p->tt__CertificateInformation::SerialNum = SerialNum;
		_p->tt__CertificateInformation::SignatureAlgorithm = SignatureAlgorithm;
		_p->tt__CertificateInformation::Validity = Validity;
		_p->tt__CertificateInformation::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__CertificateInformation
#define soap_write_tt__CertificateInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:CertificateInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CertificateInformation * SOAP_FMAC4 soap_get_tt__CertificateInformation(struct soap*, tt__CertificateInformation *, const char*, const char*);

#ifndef soap_read_tt__CertificateInformation
#define soap_read_tt__CertificateInformation(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__CertificateInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__CertificateWithPrivateKey
#define SOAP_TYPE_tt__CertificateWithPrivateKey (524)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__CertificateWithPrivateKey(struct soap*, const char*, int, const tt__CertificateWithPrivateKey *, const char*);
SOAP_FMAC3 tt__CertificateWithPrivateKey * SOAP_FMAC4 soap_in_tt__CertificateWithPrivateKey(struct soap*, const char*, tt__CertificateWithPrivateKey *, const char*);
SOAP_FMAC1 tt__CertificateWithPrivateKey * SOAP_FMAC2 soap_instantiate_tt__CertificateWithPrivateKey(struct soap*, int, const char*, const char*, size_t*);

inline tt__CertificateWithPrivateKey * soap_new_tt__CertificateWithPrivateKey(struct soap *soap, int n = -1) { return soap_instantiate_tt__CertificateWithPrivateKey(soap, n, NULL, NULL, NULL); }

inline tt__CertificateWithPrivateKey * soap_new_req_tt__CertificateWithPrivateKey(
	struct soap *soap,
	tt__BinaryData *Certificate,
	tt__BinaryData *PrivateKey)
{	tt__CertificateWithPrivateKey *_p = soap_new_tt__CertificateWithPrivateKey(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__CertificateWithPrivateKey::Certificate = Certificate;
		_p->tt__CertificateWithPrivateKey::PrivateKey = PrivateKey;
	}
	return _p;
}

inline tt__CertificateWithPrivateKey * soap_new_set_tt__CertificateWithPrivateKey(
	struct soap *soap,
	std::string *CertificateID,
	tt__BinaryData *Certificate,
	tt__BinaryData *PrivateKey)
{	tt__CertificateWithPrivateKey *_p = soap_new_tt__CertificateWithPrivateKey(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__CertificateWithPrivateKey::CertificateID = CertificateID;
		_p->tt__CertificateWithPrivateKey::Certificate = Certificate;
		_p->tt__CertificateWithPrivateKey::PrivateKey = PrivateKey;
	}
	return _p;
}

#ifndef soap_write_tt__CertificateWithPrivateKey
#define soap_write_tt__CertificateWithPrivateKey(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:CertificateWithPrivateKey", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CertificateWithPrivateKey * SOAP_FMAC4 soap_get_tt__CertificateWithPrivateKey(struct soap*, tt__CertificateWithPrivateKey *, const char*, const char*);

#ifndef soap_read_tt__CertificateWithPrivateKey
#define soap_read_tt__CertificateWithPrivateKey(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__CertificateWithPrivateKey(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__CertificateStatus
#define SOAP_TYPE_tt__CertificateStatus (523)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__CertificateStatus(struct soap*, const char*, int, const tt__CertificateStatus *, const char*);
SOAP_FMAC3 tt__CertificateStatus * SOAP_FMAC4 soap_in_tt__CertificateStatus(struct soap*, const char*, tt__CertificateStatus *, const char*);
SOAP_FMAC1 tt__CertificateStatus * SOAP_FMAC2 soap_instantiate_tt__CertificateStatus(struct soap*, int, const char*, const char*, size_t*);

inline tt__CertificateStatus * soap_new_tt__CertificateStatus(struct soap *soap, int n = -1) { return soap_instantiate_tt__CertificateStatus(soap, n, NULL, NULL, NULL); }

inline tt__CertificateStatus * soap_new_req_tt__CertificateStatus(
	struct soap *soap,
	const std::string& CertificateID,
	bool Status)
{	tt__CertificateStatus *_p = soap_new_tt__CertificateStatus(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__CertificateStatus::CertificateID = CertificateID;
		_p->tt__CertificateStatus::Status = Status;
	}
	return _p;
}

inline tt__CertificateStatus * soap_new_set_tt__CertificateStatus(
	struct soap *soap,
	const std::string& CertificateID,
	bool Status)
{	tt__CertificateStatus *_p = soap_new_tt__CertificateStatus(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__CertificateStatus::CertificateID = CertificateID;
		_p->tt__CertificateStatus::Status = Status;
	}
	return _p;
}

#ifndef soap_write_tt__CertificateStatus
#define soap_write_tt__CertificateStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:CertificateStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CertificateStatus * SOAP_FMAC4 soap_get_tt__CertificateStatus(struct soap*, tt__CertificateStatus *, const char*, const char*);

#ifndef soap_read_tt__CertificateStatus
#define soap_read_tt__CertificateStatus(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__CertificateStatus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Certificate
#define SOAP_TYPE_tt__Certificate (522)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Certificate(struct soap*, const char*, int, const tt__Certificate *, const char*);
SOAP_FMAC3 tt__Certificate * SOAP_FMAC4 soap_in_tt__Certificate(struct soap*, const char*, tt__Certificate *, const char*);
SOAP_FMAC1 tt__Certificate * SOAP_FMAC2 soap_instantiate_tt__Certificate(struct soap*, int, const char*, const char*, size_t*);

inline tt__Certificate * soap_new_tt__Certificate(struct soap *soap, int n = -1) { return soap_instantiate_tt__Certificate(soap, n, NULL, NULL, NULL); }

inline tt__Certificate * soap_new_req_tt__Certificate(
	struct soap *soap,
	const std::string& CertificateID,
	tt__BinaryData *Certificate)
{	tt__Certificate *_p = soap_new_tt__Certificate(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Certificate::CertificateID = CertificateID;
		_p->tt__Certificate::Certificate = Certificate;
	}
	return _p;
}

inline tt__Certificate * soap_new_set_tt__Certificate(
	struct soap *soap,
	const std::string& CertificateID,
	tt__BinaryData *Certificate)
{	tt__Certificate *_p = soap_new_tt__Certificate(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Certificate::CertificateID = CertificateID;
		_p->tt__Certificate::Certificate = Certificate;
	}
	return _p;
}

#ifndef soap_write_tt__Certificate
#define soap_write_tt__Certificate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Certificate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Certificate * SOAP_FMAC4 soap_get_tt__Certificate(struct soap*, tt__Certificate *, const char*, const char*);

#ifndef soap_read_tt__Certificate
#define soap_read_tt__Certificate(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Certificate(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__CertificateGenerationParametersExtension
#define SOAP_TYPE_tt__CertificateGenerationParametersExtension (521)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__CertificateGenerationParametersExtension(struct soap*, const char*, int, const tt__CertificateGenerationParametersExtension *, const char*);
SOAP_FMAC3 tt__CertificateGenerationParametersExtension * SOAP_FMAC4 soap_in_tt__CertificateGenerationParametersExtension(struct soap*, const char*, tt__CertificateGenerationParametersExtension *, const char*);
SOAP_FMAC1 tt__CertificateGenerationParametersExtension * SOAP_FMAC2 soap_instantiate_tt__CertificateGenerationParametersExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__CertificateGenerationParametersExtension * soap_new_tt__CertificateGenerationParametersExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__CertificateGenerationParametersExtension(soap, n, NULL, NULL, NULL); }

inline tt__CertificateGenerationParametersExtension * soap_new_req_tt__CertificateGenerationParametersExtension(
	struct soap *soap)
{	tt__CertificateGenerationParametersExtension *_p = soap_new_tt__CertificateGenerationParametersExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__CertificateGenerationParametersExtension * soap_new_set_tt__CertificateGenerationParametersExtension(
	struct soap *soap)
{	tt__CertificateGenerationParametersExtension *_p = soap_new_tt__CertificateGenerationParametersExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__CertificateGenerationParametersExtension
#define soap_write_tt__CertificateGenerationParametersExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:CertificateGenerationParametersExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CertificateGenerationParametersExtension * SOAP_FMAC4 soap_get_tt__CertificateGenerationParametersExtension(struct soap*, tt__CertificateGenerationParametersExtension *, const char*, const char*);

#ifndef soap_read_tt__CertificateGenerationParametersExtension
#define soap_read_tt__CertificateGenerationParametersExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__CertificateGenerationParametersExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__CertificateGenerationParameters
#define SOAP_TYPE_tt__CertificateGenerationParameters (520)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__CertificateGenerationParameters(struct soap*, const char*, int, const tt__CertificateGenerationParameters *, const char*);
SOAP_FMAC3 tt__CertificateGenerationParameters * SOAP_FMAC4 soap_in_tt__CertificateGenerationParameters(struct soap*, const char*, tt__CertificateGenerationParameters *, const char*);
SOAP_FMAC1 tt__CertificateGenerationParameters * SOAP_FMAC2 soap_instantiate_tt__CertificateGenerationParameters(struct soap*, int, const char*, const char*, size_t*);

inline tt__CertificateGenerationParameters * soap_new_tt__CertificateGenerationParameters(struct soap *soap, int n = -1) { return soap_instantiate_tt__CertificateGenerationParameters(soap, n, NULL, NULL, NULL); }

inline tt__CertificateGenerationParameters * soap_new_req_tt__CertificateGenerationParameters(
	struct soap *soap)
{	tt__CertificateGenerationParameters *_p = soap_new_tt__CertificateGenerationParameters(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__CertificateGenerationParameters * soap_new_set_tt__CertificateGenerationParameters(
	struct soap *soap,
	std::string *CertificateID,
	std::string *Subject,
	std::string *ValidNotBefore,
	std::string *ValidNotAfter,
	tt__CertificateGenerationParametersExtension *Extension)
{	tt__CertificateGenerationParameters *_p = soap_new_tt__CertificateGenerationParameters(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__CertificateGenerationParameters::CertificateID = CertificateID;
		_p->tt__CertificateGenerationParameters::Subject = Subject;
		_p->tt__CertificateGenerationParameters::ValidNotBefore = ValidNotBefore;
		_p->tt__CertificateGenerationParameters::ValidNotAfter = ValidNotAfter;
		_p->tt__CertificateGenerationParameters::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__CertificateGenerationParameters
#define soap_write_tt__CertificateGenerationParameters(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:CertificateGenerationParameters", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CertificateGenerationParameters * SOAP_FMAC4 soap_get_tt__CertificateGenerationParameters(struct soap*, tt__CertificateGenerationParameters *, const char*, const char*);

#ifndef soap_read_tt__CertificateGenerationParameters
#define soap_read_tt__CertificateGenerationParameters(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__CertificateGenerationParameters(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__UserExtension
#define SOAP_TYPE_tt__UserExtension (519)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__UserExtension(struct soap*, const char*, int, const tt__UserExtension *, const char*);
SOAP_FMAC3 tt__UserExtension * SOAP_FMAC4 soap_in_tt__UserExtension(struct soap*, const char*, tt__UserExtension *, const char*);
SOAP_FMAC1 tt__UserExtension * SOAP_FMAC2 soap_instantiate_tt__UserExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__UserExtension * soap_new_tt__UserExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__UserExtension(soap, n, NULL, NULL, NULL); }

inline tt__UserExtension * soap_new_req_tt__UserExtension(
	struct soap *soap)
{	tt__UserExtension *_p = soap_new_tt__UserExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__UserExtension * soap_new_set_tt__UserExtension(
	struct soap *soap)
{	tt__UserExtension *_p = soap_new_tt__UserExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__UserExtension
#define soap_write_tt__UserExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:UserExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__UserExtension * SOAP_FMAC4 soap_get_tt__UserExtension(struct soap*, tt__UserExtension *, const char*, const char*);

#ifndef soap_read_tt__UserExtension
#define soap_read_tt__UserExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__UserExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__User
#define SOAP_TYPE_tt__User (518)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__User(struct soap*, const char*, int, const tt__User *, const char*);
SOAP_FMAC3 tt__User * SOAP_FMAC4 soap_in_tt__User(struct soap*, const char*, tt__User *, const char*);
SOAP_FMAC1 tt__User * SOAP_FMAC2 soap_instantiate_tt__User(struct soap*, int, const char*, const char*, size_t*);

inline tt__User * soap_new_tt__User(struct soap *soap, int n = -1) { return soap_instantiate_tt__User(soap, n, NULL, NULL, NULL); }

inline tt__User * soap_new_req_tt__User(
	struct soap *soap,
	const std::string& Username,
	enum tt__UserLevel UserLevel)
{	tt__User *_p = soap_new_tt__User(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__User::Username = Username;
		_p->tt__User::UserLevel = UserLevel;
	}
	return _p;
}

inline tt__User * soap_new_set_tt__User(
	struct soap *soap,
	const std::string& Username,
	std::string *Password,
	enum tt__UserLevel UserLevel,
	tt__UserExtension *Extension)
{	tt__User *_p = soap_new_tt__User(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__User::Username = Username;
		_p->tt__User::Password = Password;
		_p->tt__User::UserLevel = UserLevel;
		_p->tt__User::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__User
#define soap_write_tt__User(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:User", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__User * SOAP_FMAC4 soap_get_tt__User(struct soap*, tt__User *, const char*, const char*);

#ifndef soap_read_tt__User
#define soap_read_tt__User(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__User(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RemoteUser
#define SOAP_TYPE_tt__RemoteUser (517)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RemoteUser(struct soap*, const char*, int, const tt__RemoteUser *, const char*);
SOAP_FMAC3 tt__RemoteUser * SOAP_FMAC4 soap_in_tt__RemoteUser(struct soap*, const char*, tt__RemoteUser *, const char*);
SOAP_FMAC1 tt__RemoteUser * SOAP_FMAC2 soap_instantiate_tt__RemoteUser(struct soap*, int, const char*, const char*, size_t*);

inline tt__RemoteUser * soap_new_tt__RemoteUser(struct soap *soap, int n = -1) { return soap_instantiate_tt__RemoteUser(soap, n, NULL, NULL, NULL); }

inline tt__RemoteUser * soap_new_req_tt__RemoteUser(
	struct soap *soap,
	const std::string& Username,
	bool UseDerivedPassword)
{	tt__RemoteUser *_p = soap_new_tt__RemoteUser(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RemoteUser::Username = Username;
		_p->tt__RemoteUser::UseDerivedPassword = UseDerivedPassword;
	}
	return _p;
}

inline tt__RemoteUser * soap_new_set_tt__RemoteUser(
	struct soap *soap,
	const std::string& Username,
	std::string *Password,
	bool UseDerivedPassword)
{	tt__RemoteUser *_p = soap_new_tt__RemoteUser(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RemoteUser::Username = Username;
		_p->tt__RemoteUser::Password = Password;
		_p->tt__RemoteUser::UseDerivedPassword = UseDerivedPassword;
	}
	return _p;
}

#ifndef soap_write_tt__RemoteUser
#define soap_write_tt__RemoteUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:RemoteUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RemoteUser * SOAP_FMAC4 soap_get_tt__RemoteUser(struct soap*, tt__RemoteUser *, const char*, const char*);

#ifndef soap_read_tt__RemoteUser
#define soap_read_tt__RemoteUser(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RemoteUser(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__LocationEntity
#define SOAP_TYPE_tt__LocationEntity (516)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__LocationEntity(struct soap*, const char*, int, const tt__LocationEntity *, const char*);
SOAP_FMAC3 tt__LocationEntity * SOAP_FMAC4 soap_in_tt__LocationEntity(struct soap*, const char*, tt__LocationEntity *, const char*);
SOAP_FMAC1 tt__LocationEntity * SOAP_FMAC2 soap_instantiate_tt__LocationEntity(struct soap*, int, const char*, const char*, size_t*);

inline tt__LocationEntity * soap_new_tt__LocationEntity(struct soap *soap, int n = -1) { return soap_instantiate_tt__LocationEntity(soap, n, NULL, NULL, NULL); }

inline tt__LocationEntity * soap_new_req_tt__LocationEntity(
	struct soap *soap)
{	tt__LocationEntity *_p = soap_new_tt__LocationEntity(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__LocationEntity * soap_new_set_tt__LocationEntity(
	struct soap *soap,
	tt__GeoLocation *GeoLocation,
	tt__GeoOrientation *GeoOrientation,
	tt__LocalLocation *LocalLocation,
	tt__LocalOrientation *LocalOrientation,
	std::string *Entity,
	std::string *Token,
	bool *Fixed,
	std::string *GeoSource,
	bool *AutoGeo)
{	tt__LocationEntity *_p = soap_new_tt__LocationEntity(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__LocationEntity::GeoLocation = GeoLocation;
		_p->tt__LocationEntity::GeoOrientation = GeoOrientation;
		_p->tt__LocationEntity::LocalLocation = LocalLocation;
		_p->tt__LocationEntity::LocalOrientation = LocalOrientation;
		_p->tt__LocationEntity::Entity = Entity;
		_p->tt__LocationEntity::Token = Token;
		_p->tt__LocationEntity::Fixed = Fixed;
		_p->tt__LocationEntity::GeoSource = GeoSource;
		_p->tt__LocationEntity::AutoGeo = AutoGeo;
	}
	return _p;
}

#ifndef soap_write_tt__LocationEntity
#define soap_write_tt__LocationEntity(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:LocationEntity", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__LocationEntity * SOAP_FMAC4 soap_get_tt__LocationEntity(struct soap*, tt__LocationEntity *, const char*, const char*);

#ifndef soap_read_tt__LocationEntity
#define soap_read_tt__LocationEntity(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__LocationEntity(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__LocalOrientation
#define SOAP_TYPE_tt__LocalOrientation (515)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__LocalOrientation(struct soap*, const char*, int, const tt__LocalOrientation *, const char*);
SOAP_FMAC3 tt__LocalOrientation * SOAP_FMAC4 soap_in_tt__LocalOrientation(struct soap*, const char*, tt__LocalOrientation *, const char*);
SOAP_FMAC1 tt__LocalOrientation * SOAP_FMAC2 soap_instantiate_tt__LocalOrientation(struct soap*, int, const char*, const char*, size_t*);

inline tt__LocalOrientation * soap_new_tt__LocalOrientation(struct soap *soap, int n = -1) { return soap_instantiate_tt__LocalOrientation(soap, n, NULL, NULL, NULL); }

inline tt__LocalOrientation * soap_new_req_tt__LocalOrientation(
	struct soap *soap)
{	tt__LocalOrientation *_p = soap_new_tt__LocalOrientation(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__LocalOrientation * soap_new_set_tt__LocalOrientation(
	struct soap *soap,
	float *pan,
	float *tilt,
	float *roll)
{	tt__LocalOrientation *_p = soap_new_tt__LocalOrientation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__LocalOrientation::pan = pan;
		_p->tt__LocalOrientation::tilt = tilt;
		_p->tt__LocalOrientation::roll = roll;
	}
	return _p;
}

#ifndef soap_write_tt__LocalOrientation
#define soap_write_tt__LocalOrientation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:LocalOrientation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__LocalOrientation * SOAP_FMAC4 soap_get_tt__LocalOrientation(struct soap*, tt__LocalOrientation *, const char*, const char*);

#ifndef soap_read_tt__LocalOrientation
#define soap_read_tt__LocalOrientation(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__LocalOrientation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__LocalLocation
#define SOAP_TYPE_tt__LocalLocation (514)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__LocalLocation(struct soap*, const char*, int, const tt__LocalLocation *, const char*);
SOAP_FMAC3 tt__LocalLocation * SOAP_FMAC4 soap_in_tt__LocalLocation(struct soap*, const char*, tt__LocalLocation *, const char*);
SOAP_FMAC1 tt__LocalLocation * SOAP_FMAC2 soap_instantiate_tt__LocalLocation(struct soap*, int, const char*, const char*, size_t*);

inline tt__LocalLocation * soap_new_tt__LocalLocation(struct soap *soap, int n = -1) { return soap_instantiate_tt__LocalLocation(soap, n, NULL, NULL, NULL); }

inline tt__LocalLocation * soap_new_req_tt__LocalLocation(
	struct soap *soap)
{	tt__LocalLocation *_p = soap_new_tt__LocalLocation(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__LocalLocation * soap_new_set_tt__LocalLocation(
	struct soap *soap,
	float *x,
	float *y,
	float *z)
{	tt__LocalLocation *_p = soap_new_tt__LocalLocation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__LocalLocation::x = x;
		_p->tt__LocalLocation::y = y;
		_p->tt__LocalLocation::z = z;
	}
	return _p;
}

#ifndef soap_write_tt__LocalLocation
#define soap_write_tt__LocalLocation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:LocalLocation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__LocalLocation * SOAP_FMAC4 soap_get_tt__LocalLocation(struct soap*, tt__LocalLocation *, const char*, const char*);

#ifndef soap_read_tt__LocalLocation
#define soap_read_tt__LocalLocation(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__LocalLocation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__GeoOrientation
#define SOAP_TYPE_tt__GeoOrientation (513)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__GeoOrientation(struct soap*, const char*, int, const tt__GeoOrientation *, const char*);
SOAP_FMAC3 tt__GeoOrientation * SOAP_FMAC4 soap_in_tt__GeoOrientation(struct soap*, const char*, tt__GeoOrientation *, const char*);
SOAP_FMAC1 tt__GeoOrientation * SOAP_FMAC2 soap_instantiate_tt__GeoOrientation(struct soap*, int, const char*, const char*, size_t*);

inline tt__GeoOrientation * soap_new_tt__GeoOrientation(struct soap *soap, int n = -1) { return soap_instantiate_tt__GeoOrientation(soap, n, NULL, NULL, NULL); }

inline tt__GeoOrientation * soap_new_req_tt__GeoOrientation(
	struct soap *soap)
{	tt__GeoOrientation *_p = soap_new_tt__GeoOrientation(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__GeoOrientation * soap_new_set_tt__GeoOrientation(
	struct soap *soap,
	float *roll,
	float *pitch,
	float *yaw)
{	tt__GeoOrientation *_p = soap_new_tt__GeoOrientation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__GeoOrientation::roll = roll;
		_p->tt__GeoOrientation::pitch = pitch;
		_p->tt__GeoOrientation::yaw = yaw;
	}
	return _p;
}

#ifndef soap_write_tt__GeoOrientation
#define soap_write_tt__GeoOrientation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:GeoOrientation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__GeoOrientation * SOAP_FMAC4 soap_get_tt__GeoOrientation(struct soap*, tt__GeoOrientation *, const char*, const char*);

#ifndef soap_read_tt__GeoOrientation
#define soap_read_tt__GeoOrientation(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__GeoOrientation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__GeoLocation
#define SOAP_TYPE_tt__GeoLocation (512)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__GeoLocation(struct soap*, const char*, int, const tt__GeoLocation *, const char*);
SOAP_FMAC3 tt__GeoLocation * SOAP_FMAC4 soap_in_tt__GeoLocation(struct soap*, const char*, tt__GeoLocation *, const char*);
SOAP_FMAC1 tt__GeoLocation * SOAP_FMAC2 soap_instantiate_tt__GeoLocation(struct soap*, int, const char*, const char*, size_t*);

inline tt__GeoLocation * soap_new_tt__GeoLocation(struct soap *soap, int n = -1) { return soap_instantiate_tt__GeoLocation(soap, n, NULL, NULL, NULL); }

inline tt__GeoLocation * soap_new_req_tt__GeoLocation(
	struct soap *soap)
{	tt__GeoLocation *_p = soap_new_tt__GeoLocation(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__GeoLocation * soap_new_set_tt__GeoLocation(
	struct soap *soap,
	double *lon,
	double *lat,
	float *elevation)
{	tt__GeoLocation *_p = soap_new_tt__GeoLocation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__GeoLocation::lon = lon;
		_p->tt__GeoLocation::lat = lat;
		_p->tt__GeoLocation::elevation = elevation;
	}
	return _p;
}

#ifndef soap_write_tt__GeoLocation
#define soap_write_tt__GeoLocation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:GeoLocation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__GeoLocation * SOAP_FMAC4 soap_get_tt__GeoLocation(struct soap*, tt__GeoLocation *, const char*, const char*);

#ifndef soap_read_tt__GeoLocation
#define soap_read_tt__GeoLocation(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__GeoLocation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__TimeZone
#define SOAP_TYPE_tt__TimeZone (511)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__TimeZone(struct soap*, const char*, int, const tt__TimeZone *, const char*);
SOAP_FMAC3 tt__TimeZone * SOAP_FMAC4 soap_in_tt__TimeZone(struct soap*, const char*, tt__TimeZone *, const char*);
SOAP_FMAC1 tt__TimeZone * SOAP_FMAC2 soap_instantiate_tt__TimeZone(struct soap*, int, const char*, const char*, size_t*);

inline tt__TimeZone * soap_new_tt__TimeZone(struct soap *soap, int n = -1) { return soap_instantiate_tt__TimeZone(soap, n, NULL, NULL, NULL); }

inline tt__TimeZone * soap_new_req_tt__TimeZone(
	struct soap *soap,
	const std::string& TZ)
{	tt__TimeZone *_p = soap_new_tt__TimeZone(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__TimeZone::TZ = TZ;
	}
	return _p;
}

inline tt__TimeZone * soap_new_set_tt__TimeZone(
	struct soap *soap,
	const std::string& TZ)
{	tt__TimeZone *_p = soap_new_tt__TimeZone(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__TimeZone::TZ = TZ;
	}
	return _p;
}

#ifndef soap_write_tt__TimeZone
#define soap_write_tt__TimeZone(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:TimeZone", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__TimeZone * SOAP_FMAC4 soap_get_tt__TimeZone(struct soap*, tt__TimeZone *, const char*, const char*);

#ifndef soap_read_tt__TimeZone
#define soap_read_tt__TimeZone(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__TimeZone(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Time
#define SOAP_TYPE_tt__Time (510)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Time(struct soap*, const char*, int, const tt__Time *, const char*);
SOAP_FMAC3 tt__Time * SOAP_FMAC4 soap_in_tt__Time(struct soap*, const char*, tt__Time *, const char*);
SOAP_FMAC1 tt__Time * SOAP_FMAC2 soap_instantiate_tt__Time(struct soap*, int, const char*, const char*, size_t*);

inline tt__Time * soap_new_tt__Time(struct soap *soap, int n = -1) { return soap_instantiate_tt__Time(soap, n, NULL, NULL, NULL); }

inline tt__Time * soap_new_req_tt__Time(
	struct soap *soap,
	int Hour,
	int Minute,
	int Second)
{	tt__Time *_p = soap_new_tt__Time(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Time::Hour = Hour;
		_p->tt__Time::Minute = Minute;
		_p->tt__Time::Second = Second;
	}
	return _p;
}

inline tt__Time * soap_new_set_tt__Time(
	struct soap *soap,
	int Hour,
	int Minute,
	int Second)
{	tt__Time *_p = soap_new_tt__Time(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Time::Hour = Hour;
		_p->tt__Time::Minute = Minute;
		_p->tt__Time::Second = Second;
	}
	return _p;
}

#ifndef soap_write_tt__Time
#define soap_write_tt__Time(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Time", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Time * SOAP_FMAC4 soap_get_tt__Time(struct soap*, tt__Time *, const char*, const char*);

#ifndef soap_read_tt__Time
#define soap_read_tt__Time(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Time(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Date
#define SOAP_TYPE_tt__Date (509)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Date(struct soap*, const char*, int, const tt__Date *, const char*);
SOAP_FMAC3 tt__Date * SOAP_FMAC4 soap_in_tt__Date(struct soap*, const char*, tt__Date *, const char*);
SOAP_FMAC1 tt__Date * SOAP_FMAC2 soap_instantiate_tt__Date(struct soap*, int, const char*, const char*, size_t*);

inline tt__Date * soap_new_tt__Date(struct soap *soap, int n = -1) { return soap_instantiate_tt__Date(soap, n, NULL, NULL, NULL); }

inline tt__Date * soap_new_req_tt__Date(
	struct soap *soap,
	int Year,
	int Month,
	int Day)
{	tt__Date *_p = soap_new_tt__Date(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Date::Year = Year;
		_p->tt__Date::Month = Month;
		_p->tt__Date::Day = Day;
	}
	return _p;
}

inline tt__Date * soap_new_set_tt__Date(
	struct soap *soap,
	int Year,
	int Month,
	int Day)
{	tt__Date *_p = soap_new_tt__Date(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Date::Year = Year;
		_p->tt__Date::Month = Month;
		_p->tt__Date::Day = Day;
	}
	return _p;
}

#ifndef soap_write_tt__Date
#define soap_write_tt__Date(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Date", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Date * SOAP_FMAC4 soap_get_tt__Date(struct soap*, tt__Date *, const char*, const char*);

#ifndef soap_read_tt__Date
#define soap_read_tt__Date(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Date(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__DateTime
#define SOAP_TYPE_tt__DateTime (508)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DateTime(struct soap*, const char*, int, const tt__DateTime *, const char*);
SOAP_FMAC3 tt__DateTime * SOAP_FMAC4 soap_in_tt__DateTime(struct soap*, const char*, tt__DateTime *, const char*);
SOAP_FMAC1 tt__DateTime * SOAP_FMAC2 soap_instantiate_tt__DateTime(struct soap*, int, const char*, const char*, size_t*);

inline tt__DateTime * soap_new_tt__DateTime(struct soap *soap, int n = -1) { return soap_instantiate_tt__DateTime(soap, n, NULL, NULL, NULL); }

inline tt__DateTime * soap_new_req_tt__DateTime(
	struct soap *soap,
	tt__Time *Time,
	tt__Date *Date)
{	tt__DateTime *_p = soap_new_tt__DateTime(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__DateTime::Time = Time;
		_p->tt__DateTime::Date = Date;
	}
	return _p;
}

inline tt__DateTime * soap_new_set_tt__DateTime(
	struct soap *soap,
	tt__Time *Time,
	tt__Date *Date)
{	tt__DateTime *_p = soap_new_tt__DateTime(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__DateTime::Time = Time;
		_p->tt__DateTime::Date = Date;
	}
	return _p;
}

#ifndef soap_write_tt__DateTime
#define soap_write_tt__DateTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:DateTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DateTime * SOAP_FMAC4 soap_get_tt__DateTime(struct soap*, tt__DateTime *, const char*, const char*);

#ifndef soap_read_tt__DateTime
#define soap_read_tt__DateTime(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__DateTime(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SystemDateTimeExtension
#define SOAP_TYPE_tt__SystemDateTimeExtension (507)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SystemDateTimeExtension(struct soap*, const char*, int, const tt__SystemDateTimeExtension *, const char*);
SOAP_FMAC3 tt__SystemDateTimeExtension * SOAP_FMAC4 soap_in_tt__SystemDateTimeExtension(struct soap*, const char*, tt__SystemDateTimeExtension *, const char*);
SOAP_FMAC1 tt__SystemDateTimeExtension * SOAP_FMAC2 soap_instantiate_tt__SystemDateTimeExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__SystemDateTimeExtension * soap_new_tt__SystemDateTimeExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__SystemDateTimeExtension(soap, n, NULL, NULL, NULL); }

inline tt__SystemDateTimeExtension * soap_new_req_tt__SystemDateTimeExtension(
	struct soap *soap)
{	tt__SystemDateTimeExtension *_p = soap_new_tt__SystemDateTimeExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__SystemDateTimeExtension * soap_new_set_tt__SystemDateTimeExtension(
	struct soap *soap)
{	tt__SystemDateTimeExtension *_p = soap_new_tt__SystemDateTimeExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__SystemDateTimeExtension
#define soap_write_tt__SystemDateTimeExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:SystemDateTimeExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemDateTimeExtension * SOAP_FMAC4 soap_get_tt__SystemDateTimeExtension(struct soap*, tt__SystemDateTimeExtension *, const char*, const char*);

#ifndef soap_read_tt__SystemDateTimeExtension
#define soap_read_tt__SystemDateTimeExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__SystemDateTimeExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SystemDateTime
#define SOAP_TYPE_tt__SystemDateTime (506)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SystemDateTime(struct soap*, const char*, int, const tt__SystemDateTime *, const char*);
SOAP_FMAC3 tt__SystemDateTime * SOAP_FMAC4 soap_in_tt__SystemDateTime(struct soap*, const char*, tt__SystemDateTime *, const char*);
SOAP_FMAC1 tt__SystemDateTime * SOAP_FMAC2 soap_instantiate_tt__SystemDateTime(struct soap*, int, const char*, const char*, size_t*);

inline tt__SystemDateTime * soap_new_tt__SystemDateTime(struct soap *soap, int n = -1) { return soap_instantiate_tt__SystemDateTime(soap, n, NULL, NULL, NULL); }

inline tt__SystemDateTime * soap_new_req_tt__SystemDateTime(
	struct soap *soap,
	enum tt__SetDateTimeType DateTimeType,
	bool DaylightSavings)
{	tt__SystemDateTime *_p = soap_new_tt__SystemDateTime(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__SystemDateTime::DateTimeType = DateTimeType;
		_p->tt__SystemDateTime::DaylightSavings = DaylightSavings;
	}
	return _p;
}

inline tt__SystemDateTime * soap_new_set_tt__SystemDateTime(
	struct soap *soap,
	enum tt__SetDateTimeType DateTimeType,
	bool DaylightSavings,
	tt__TimeZone *TimeZone,
	tt__DateTime *UTCDateTime,
	tt__DateTime *LocalDateTime,
	tt__SystemDateTimeExtension *Extension)
{	tt__SystemDateTime *_p = soap_new_tt__SystemDateTime(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__SystemDateTime::DateTimeType = DateTimeType;
		_p->tt__SystemDateTime::DaylightSavings = DaylightSavings;
		_p->tt__SystemDateTime::TimeZone = TimeZone;
		_p->tt__SystemDateTime::UTCDateTime = UTCDateTime;
		_p->tt__SystemDateTime::LocalDateTime = LocalDateTime;
		_p->tt__SystemDateTime::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__SystemDateTime
#define soap_write_tt__SystemDateTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:SystemDateTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemDateTime * SOAP_FMAC4 soap_get_tt__SystemDateTime(struct soap*, tt__SystemDateTime *, const char*, const char*);

#ifndef soap_read_tt__SystemDateTime
#define soap_read_tt__SystemDateTime(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__SystemDateTime(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SystemLogUri
#define SOAP_TYPE_tt__SystemLogUri (505)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SystemLogUri(struct soap*, const char*, int, const tt__SystemLogUri *, const char*);
SOAP_FMAC3 tt__SystemLogUri * SOAP_FMAC4 soap_in_tt__SystemLogUri(struct soap*, const char*, tt__SystemLogUri *, const char*);
SOAP_FMAC1 tt__SystemLogUri * SOAP_FMAC2 soap_instantiate_tt__SystemLogUri(struct soap*, int, const char*, const char*, size_t*);

inline tt__SystemLogUri * soap_new_tt__SystemLogUri(struct soap *soap, int n = -1) { return soap_instantiate_tt__SystemLogUri(soap, n, NULL, NULL, NULL); }

inline tt__SystemLogUri * soap_new_req_tt__SystemLogUri(
	struct soap *soap,
	enum tt__SystemLogType Type,
	const std::string& Uri)
{	tt__SystemLogUri *_p = soap_new_tt__SystemLogUri(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__SystemLogUri::Type = Type;
		_p->tt__SystemLogUri::Uri = Uri;
	}
	return _p;
}

inline tt__SystemLogUri * soap_new_set_tt__SystemLogUri(
	struct soap *soap,
	enum tt__SystemLogType Type,
	const std::string& Uri)
{	tt__SystemLogUri *_p = soap_new_tt__SystemLogUri(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__SystemLogUri::Type = Type;
		_p->tt__SystemLogUri::Uri = Uri;
	}
	return _p;
}

#ifndef soap_write_tt__SystemLogUri
#define soap_write_tt__SystemLogUri(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:SystemLogUri", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemLogUri * SOAP_FMAC4 soap_get_tt__SystemLogUri(struct soap*, tt__SystemLogUri *, const char*, const char*);

#ifndef soap_read_tt__SystemLogUri
#define soap_read_tt__SystemLogUri(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__SystemLogUri(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SystemLogUriList
#define SOAP_TYPE_tt__SystemLogUriList (504)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SystemLogUriList(struct soap*, const char*, int, const tt__SystemLogUriList *, const char*);
SOAP_FMAC3 tt__SystemLogUriList * SOAP_FMAC4 soap_in_tt__SystemLogUriList(struct soap*, const char*, tt__SystemLogUriList *, const char*);
SOAP_FMAC1 tt__SystemLogUriList * SOAP_FMAC2 soap_instantiate_tt__SystemLogUriList(struct soap*, int, const char*, const char*, size_t*);

inline tt__SystemLogUriList * soap_new_tt__SystemLogUriList(struct soap *soap, int n = -1) { return soap_instantiate_tt__SystemLogUriList(soap, n, NULL, NULL, NULL); }

inline tt__SystemLogUriList * soap_new_req_tt__SystemLogUriList(
	struct soap *soap)
{	tt__SystemLogUriList *_p = soap_new_tt__SystemLogUriList(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__SystemLogUriList * soap_new_set_tt__SystemLogUriList(
	struct soap *soap,
	const std::vector<tt__SystemLogUri *> & SystemLog)
{	tt__SystemLogUriList *_p = soap_new_tt__SystemLogUriList(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__SystemLogUriList::SystemLog = SystemLog;
	}
	return _p;
}

#ifndef soap_write_tt__SystemLogUriList
#define soap_write_tt__SystemLogUriList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:SystemLogUriList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemLogUriList * SOAP_FMAC4 soap_get_tt__SystemLogUriList(struct soap*, tt__SystemLogUriList *, const char*, const char*);

#ifndef soap_read_tt__SystemLogUriList
#define soap_read_tt__SystemLogUriList(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__SystemLogUriList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__BackupFile
#define SOAP_TYPE_tt__BackupFile (503)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__BackupFile(struct soap*, const char*, int, const tt__BackupFile *, const char*);
SOAP_FMAC3 tt__BackupFile * SOAP_FMAC4 soap_in_tt__BackupFile(struct soap*, const char*, tt__BackupFile *, const char*);
SOAP_FMAC1 tt__BackupFile * SOAP_FMAC2 soap_instantiate_tt__BackupFile(struct soap*, int, const char*, const char*, size_t*);

inline tt__BackupFile * soap_new_tt__BackupFile(struct soap *soap, int n = -1) { return soap_instantiate_tt__BackupFile(soap, n, NULL, NULL, NULL); }

inline tt__BackupFile * soap_new_req_tt__BackupFile(
	struct soap *soap,
	const std::string& Name,
	tt__AttachmentData *Data)
{	tt__BackupFile *_p = soap_new_tt__BackupFile(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__BackupFile::Name = Name;
		_p->tt__BackupFile::Data = Data;
	}
	return _p;
}

inline tt__BackupFile * soap_new_set_tt__BackupFile(
	struct soap *soap,
	const std::string& Name,
	tt__AttachmentData *Data)
{	tt__BackupFile *_p = soap_new_tt__BackupFile(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__BackupFile::Name = Name;
		_p->tt__BackupFile::Data = Data;
	}
	return _p;
}

#ifndef soap_write_tt__BackupFile
#define soap_write_tt__BackupFile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:BackupFile", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__BackupFile * SOAP_FMAC4 soap_get_tt__BackupFile(struct soap*, tt__BackupFile *, const char*, const char*);

#ifndef soap_read_tt__BackupFile
#define soap_read_tt__BackupFile(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__BackupFile(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AttachmentData
#define SOAP_TYPE_tt__AttachmentData (502)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AttachmentData(struct soap*, const char*, int, const tt__AttachmentData *, const char*);
SOAP_FMAC3 tt__AttachmentData * SOAP_FMAC4 soap_in_tt__AttachmentData(struct soap*, const char*, tt__AttachmentData *, const char*);
SOAP_FMAC1 tt__AttachmentData * SOAP_FMAC2 soap_instantiate_tt__AttachmentData(struct soap*, int, const char*, const char*, size_t*);

inline tt__AttachmentData * soap_new_tt__AttachmentData(struct soap *soap, int n = -1) { return soap_instantiate_tt__AttachmentData(soap, n, NULL, NULL, NULL); }

inline tt__AttachmentData * soap_new_req_tt__AttachmentData(
	struct soap *soap,
	const struct _xop__Include& xop__Include)
{	tt__AttachmentData *_p = soap_new_tt__AttachmentData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AttachmentData::xop__Include = xop__Include;
	}
	return _p;
}

inline tt__AttachmentData * soap_new_set_tt__AttachmentData(
	struct soap *soap,
	const struct _xop__Include& xop__Include,
	char *xmime__contentType)
{	tt__AttachmentData *_p = soap_new_tt__AttachmentData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AttachmentData::xop__Include = xop__Include;
		_p->tt__AttachmentData::xmime__contentType = xmime__contentType;
	}
	return _p;
}

#ifndef soap_write_tt__AttachmentData
#define soap_write_tt__AttachmentData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AttachmentData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AttachmentData * SOAP_FMAC4 soap_get_tt__AttachmentData(struct soap*, tt__AttachmentData *, const char*, const char*);

#ifndef soap_read_tt__AttachmentData
#define soap_read_tt__AttachmentData(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AttachmentData(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__BinaryData
#define SOAP_TYPE_tt__BinaryData (501)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__BinaryData(struct soap*, const char*, int, const tt__BinaryData *, const char*);
SOAP_FMAC3 tt__BinaryData * SOAP_FMAC4 soap_in_tt__BinaryData(struct soap*, const char*, tt__BinaryData *, const char*);
SOAP_FMAC1 tt__BinaryData * SOAP_FMAC2 soap_instantiate_tt__BinaryData(struct soap*, int, const char*, const char*, size_t*);

inline tt__BinaryData * soap_new_tt__BinaryData(struct soap *soap, int n = -1) { return soap_instantiate_tt__BinaryData(soap, n, NULL, NULL, NULL); }

inline tt__BinaryData * soap_new_req_tt__BinaryData(
	struct soap *soap,
	const xsd__base64Binary& Data)
{	tt__BinaryData *_p = soap_new_tt__BinaryData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__BinaryData::Data = Data;
	}
	return _p;
}

inline tt__BinaryData * soap_new_set_tt__BinaryData(
	struct soap *soap,
	const xsd__base64Binary& Data,
	char *xmime__contentType)
{	tt__BinaryData *_p = soap_new_tt__BinaryData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__BinaryData::Data = Data;
		_p->tt__BinaryData::xmime__contentType = xmime__contentType;
	}
	return _p;
}

#ifndef soap_write_tt__BinaryData
#define soap_write_tt__BinaryData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:BinaryData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__BinaryData * SOAP_FMAC4 soap_get_tt__BinaryData(struct soap*, tt__BinaryData *, const char*, const char*);

#ifndef soap_read_tt__BinaryData
#define soap_read_tt__BinaryData(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__BinaryData(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SupportInformation
#define SOAP_TYPE_tt__SupportInformation (500)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SupportInformation(struct soap*, const char*, int, const tt__SupportInformation *, const char*);
SOAP_FMAC3 tt__SupportInformation * SOAP_FMAC4 soap_in_tt__SupportInformation(struct soap*, const char*, tt__SupportInformation *, const char*);
SOAP_FMAC1 tt__SupportInformation * SOAP_FMAC2 soap_instantiate_tt__SupportInformation(struct soap*, int, const char*, const char*, size_t*);

inline tt__SupportInformation * soap_new_tt__SupportInformation(struct soap *soap, int n = -1) { return soap_instantiate_tt__SupportInformation(soap, n, NULL, NULL, NULL); }

inline tt__SupportInformation * soap_new_req_tt__SupportInformation(
	struct soap *soap)
{	tt__SupportInformation *_p = soap_new_tt__SupportInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__SupportInformation * soap_new_set_tt__SupportInformation(
	struct soap *soap,
	tt__AttachmentData *Binary,
	std::string *String)
{	tt__SupportInformation *_p = soap_new_tt__SupportInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__SupportInformation::Binary = Binary;
		_p->tt__SupportInformation::String = String;
	}
	return _p;
}

#ifndef soap_write_tt__SupportInformation
#define soap_write_tt__SupportInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:SupportInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SupportInformation * SOAP_FMAC4 soap_get_tt__SupportInformation(struct soap*, tt__SupportInformation *, const char*, const char*);

#ifndef soap_read_tt__SupportInformation
#define soap_read_tt__SupportInformation(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__SupportInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SystemLog
#define SOAP_TYPE_tt__SystemLog (499)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SystemLog(struct soap*, const char*, int, const tt__SystemLog *, const char*);
SOAP_FMAC3 tt__SystemLog * SOAP_FMAC4 soap_in_tt__SystemLog(struct soap*, const char*, tt__SystemLog *, const char*);
SOAP_FMAC1 tt__SystemLog * SOAP_FMAC2 soap_instantiate_tt__SystemLog(struct soap*, int, const char*, const char*, size_t*);

inline tt__SystemLog * soap_new_tt__SystemLog(struct soap *soap, int n = -1) { return soap_instantiate_tt__SystemLog(soap, n, NULL, NULL, NULL); }

inline tt__SystemLog * soap_new_req_tt__SystemLog(
	struct soap *soap)
{	tt__SystemLog *_p = soap_new_tt__SystemLog(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__SystemLog * soap_new_set_tt__SystemLog(
	struct soap *soap,
	tt__AttachmentData *Binary,
	std::string *String)
{	tt__SystemLog *_p = soap_new_tt__SystemLog(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__SystemLog::Binary = Binary;
		_p->tt__SystemLog::String = String;
	}
	return _p;
}

#ifndef soap_write_tt__SystemLog
#define soap_write_tt__SystemLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:SystemLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemLog * SOAP_FMAC4 soap_get_tt__SystemLog(struct soap*, tt__SystemLog *, const char*, const char*);

#ifndef soap_read_tt__SystemLog
#define soap_read_tt__SystemLog(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__SystemLog(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AnalyticsDeviceExtension
#define SOAP_TYPE_tt__AnalyticsDeviceExtension (498)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnalyticsDeviceExtension(struct soap*, const char*, int, const tt__AnalyticsDeviceExtension *, const char*);
SOAP_FMAC3 tt__AnalyticsDeviceExtension * SOAP_FMAC4 soap_in_tt__AnalyticsDeviceExtension(struct soap*, const char*, tt__AnalyticsDeviceExtension *, const char*);
SOAP_FMAC1 tt__AnalyticsDeviceExtension * SOAP_FMAC2 soap_instantiate_tt__AnalyticsDeviceExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnalyticsDeviceExtension * soap_new_tt__AnalyticsDeviceExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnalyticsDeviceExtension(soap, n, NULL, NULL, NULL); }

inline tt__AnalyticsDeviceExtension * soap_new_req_tt__AnalyticsDeviceExtension(
	struct soap *soap)
{	tt__AnalyticsDeviceExtension *_p = soap_new_tt__AnalyticsDeviceExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__AnalyticsDeviceExtension * soap_new_set_tt__AnalyticsDeviceExtension(
	struct soap *soap)
{	tt__AnalyticsDeviceExtension *_p = soap_new_tt__AnalyticsDeviceExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__AnalyticsDeviceExtension
#define soap_write_tt__AnalyticsDeviceExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AnalyticsDeviceExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsDeviceExtension * SOAP_FMAC4 soap_get_tt__AnalyticsDeviceExtension(struct soap*, tt__AnalyticsDeviceExtension *, const char*, const char*);

#ifndef soap_read_tt__AnalyticsDeviceExtension
#define soap_read_tt__AnalyticsDeviceExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AnalyticsDeviceExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AnalyticsDeviceCapabilities
#define SOAP_TYPE_tt__AnalyticsDeviceCapabilities (497)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnalyticsDeviceCapabilities(struct soap*, const char*, int, const tt__AnalyticsDeviceCapabilities *, const char*);
SOAP_FMAC3 tt__AnalyticsDeviceCapabilities * SOAP_FMAC4 soap_in_tt__AnalyticsDeviceCapabilities(struct soap*, const char*, tt__AnalyticsDeviceCapabilities *, const char*);
SOAP_FMAC1 tt__AnalyticsDeviceCapabilities * SOAP_FMAC2 soap_instantiate_tt__AnalyticsDeviceCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnalyticsDeviceCapabilities * soap_new_tt__AnalyticsDeviceCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnalyticsDeviceCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__AnalyticsDeviceCapabilities * soap_new_req_tt__AnalyticsDeviceCapabilities(
	struct soap *soap,
	const std::string& XAddr)
{	tt__AnalyticsDeviceCapabilities *_p = soap_new_tt__AnalyticsDeviceCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AnalyticsDeviceCapabilities::XAddr = XAddr;
	}
	return _p;
}

inline tt__AnalyticsDeviceCapabilities * soap_new_set_tt__AnalyticsDeviceCapabilities(
	struct soap *soap,
	const std::string& XAddr,
	bool *RuleSupport,
	tt__AnalyticsDeviceExtension *Extension)
{	tt__AnalyticsDeviceCapabilities *_p = soap_new_tt__AnalyticsDeviceCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AnalyticsDeviceCapabilities::XAddr = XAddr;
		_p->tt__AnalyticsDeviceCapabilities::RuleSupport = RuleSupport;
		_p->tt__AnalyticsDeviceCapabilities::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__AnalyticsDeviceCapabilities
#define soap_write_tt__AnalyticsDeviceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AnalyticsDeviceCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsDeviceCapabilities * SOAP_FMAC4 soap_get_tt__AnalyticsDeviceCapabilities(struct soap*, tt__AnalyticsDeviceCapabilities *, const char*, const char*);

#ifndef soap_read_tt__AnalyticsDeviceCapabilities
#define soap_read_tt__AnalyticsDeviceCapabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AnalyticsDeviceCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ReceiverCapabilities
#define SOAP_TYPE_tt__ReceiverCapabilities (496)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ReceiverCapabilities(struct soap*, const char*, int, const tt__ReceiverCapabilities *, const char*);
SOAP_FMAC3 tt__ReceiverCapabilities * SOAP_FMAC4 soap_in_tt__ReceiverCapabilities(struct soap*, const char*, tt__ReceiverCapabilities *, const char*);
SOAP_FMAC1 tt__ReceiverCapabilities * SOAP_FMAC2 soap_instantiate_tt__ReceiverCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__ReceiverCapabilities * soap_new_tt__ReceiverCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__ReceiverCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__ReceiverCapabilities * soap_new_req_tt__ReceiverCapabilities(
	struct soap *soap,
	const std::string& XAddr,
	bool RTP_USCOREMulticast,
	bool RTP_USCORETCP,
	bool RTP_USCORERTSP_USCORETCP,
	int SupportedReceivers,
	int MaximumRTSPURILength)
{	tt__ReceiverCapabilities *_p = soap_new_tt__ReceiverCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ReceiverCapabilities::XAddr = XAddr;
		_p->tt__ReceiverCapabilities::RTP_USCOREMulticast = RTP_USCOREMulticast;
		_p->tt__ReceiverCapabilities::RTP_USCORETCP = RTP_USCORETCP;
		_p->tt__ReceiverCapabilities::RTP_USCORERTSP_USCORETCP = RTP_USCORERTSP_USCORETCP;
		_p->tt__ReceiverCapabilities::SupportedReceivers = SupportedReceivers;
		_p->tt__ReceiverCapabilities::MaximumRTSPURILength = MaximumRTSPURILength;
	}
	return _p;
}

inline tt__ReceiverCapabilities * soap_new_set_tt__ReceiverCapabilities(
	struct soap *soap,
	const std::string& XAddr,
	bool RTP_USCOREMulticast,
	bool RTP_USCORETCP,
	bool RTP_USCORERTSP_USCORETCP,
	int SupportedReceivers,
	int MaximumRTSPURILength)
{	tt__ReceiverCapabilities *_p = soap_new_tt__ReceiverCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ReceiverCapabilities::XAddr = XAddr;
		_p->tt__ReceiverCapabilities::RTP_USCOREMulticast = RTP_USCOREMulticast;
		_p->tt__ReceiverCapabilities::RTP_USCORETCP = RTP_USCORETCP;
		_p->tt__ReceiverCapabilities::RTP_USCORERTSP_USCORETCP = RTP_USCORERTSP_USCORETCP;
		_p->tt__ReceiverCapabilities::SupportedReceivers = SupportedReceivers;
		_p->tt__ReceiverCapabilities::MaximumRTSPURILength = MaximumRTSPURILength;
	}
	return _p;
}

#ifndef soap_write_tt__ReceiverCapabilities
#define soap_write_tt__ReceiverCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ReceiverCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ReceiverCapabilities * SOAP_FMAC4 soap_get_tt__ReceiverCapabilities(struct soap*, tt__ReceiverCapabilities *, const char*, const char*);

#ifndef soap_read_tt__ReceiverCapabilities
#define soap_read_tt__ReceiverCapabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ReceiverCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ReplayCapabilities
#define SOAP_TYPE_tt__ReplayCapabilities (495)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ReplayCapabilities(struct soap*, const char*, int, const tt__ReplayCapabilities *, const char*);
SOAP_FMAC3 tt__ReplayCapabilities * SOAP_FMAC4 soap_in_tt__ReplayCapabilities(struct soap*, const char*, tt__ReplayCapabilities *, const char*);
SOAP_FMAC1 tt__ReplayCapabilities * SOAP_FMAC2 soap_instantiate_tt__ReplayCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__ReplayCapabilities * soap_new_tt__ReplayCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__ReplayCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__ReplayCapabilities * soap_new_req_tt__ReplayCapabilities(
	struct soap *soap,
	const std::string& XAddr)
{	tt__ReplayCapabilities *_p = soap_new_tt__ReplayCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ReplayCapabilities::XAddr = XAddr;
	}
	return _p;
}

inline tt__ReplayCapabilities * soap_new_set_tt__ReplayCapabilities(
	struct soap *soap,
	const std::string& XAddr)
{	tt__ReplayCapabilities *_p = soap_new_tt__ReplayCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ReplayCapabilities::XAddr = XAddr;
	}
	return _p;
}

#ifndef soap_write_tt__ReplayCapabilities
#define soap_write_tt__ReplayCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ReplayCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ReplayCapabilities * SOAP_FMAC4 soap_get_tt__ReplayCapabilities(struct soap*, tt__ReplayCapabilities *, const char*, const char*);

#ifndef soap_read_tt__ReplayCapabilities
#define soap_read_tt__ReplayCapabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ReplayCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SearchCapabilities
#define SOAP_TYPE_tt__SearchCapabilities (494)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SearchCapabilities(struct soap*, const char*, int, const tt__SearchCapabilities *, const char*);
SOAP_FMAC3 tt__SearchCapabilities * SOAP_FMAC4 soap_in_tt__SearchCapabilities(struct soap*, const char*, tt__SearchCapabilities *, const char*);
SOAP_FMAC1 tt__SearchCapabilities * SOAP_FMAC2 soap_instantiate_tt__SearchCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__SearchCapabilities * soap_new_tt__SearchCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__SearchCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__SearchCapabilities * soap_new_req_tt__SearchCapabilities(
	struct soap *soap,
	const std::string& XAddr,
	bool MetadataSearch)
{	tt__SearchCapabilities *_p = soap_new_tt__SearchCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__SearchCapabilities::XAddr = XAddr;
		_p->tt__SearchCapabilities::MetadataSearch = MetadataSearch;
	}
	return _p;
}

inline tt__SearchCapabilities * soap_new_set_tt__SearchCapabilities(
	struct soap *soap,
	const std::string& XAddr,
	bool MetadataSearch)
{	tt__SearchCapabilities *_p = soap_new_tt__SearchCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__SearchCapabilities::XAddr = XAddr;
		_p->tt__SearchCapabilities::MetadataSearch = MetadataSearch;
	}
	return _p;
}

#ifndef soap_write_tt__SearchCapabilities
#define soap_write_tt__SearchCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:SearchCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SearchCapabilities * SOAP_FMAC4 soap_get_tt__SearchCapabilities(struct soap*, tt__SearchCapabilities *, const char*, const char*);

#ifndef soap_read_tt__SearchCapabilities
#define soap_read_tt__SearchCapabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__SearchCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RecordingCapabilities
#define SOAP_TYPE_tt__RecordingCapabilities (493)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RecordingCapabilities(struct soap*, const char*, int, const tt__RecordingCapabilities *, const char*);
SOAP_FMAC3 tt__RecordingCapabilities * SOAP_FMAC4 soap_in_tt__RecordingCapabilities(struct soap*, const char*, tt__RecordingCapabilities *, const char*);
SOAP_FMAC1 tt__RecordingCapabilities * SOAP_FMAC2 soap_instantiate_tt__RecordingCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__RecordingCapabilities * soap_new_tt__RecordingCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__RecordingCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__RecordingCapabilities * soap_new_req_tt__RecordingCapabilities(
	struct soap *soap,
	const std::string& XAddr,
	bool ReceiverSource,
	bool MediaProfileSource,
	bool DynamicRecordings,
	bool DynamicTracks,
	int MaxStringLength)
{	tt__RecordingCapabilities *_p = soap_new_tt__RecordingCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RecordingCapabilities::XAddr = XAddr;
		_p->tt__RecordingCapabilities::ReceiverSource = ReceiverSource;
		_p->tt__RecordingCapabilities::MediaProfileSource = MediaProfileSource;
		_p->tt__RecordingCapabilities::DynamicRecordings = DynamicRecordings;
		_p->tt__RecordingCapabilities::DynamicTracks = DynamicTracks;
		_p->tt__RecordingCapabilities::MaxStringLength = MaxStringLength;
	}
	return _p;
}

inline tt__RecordingCapabilities * soap_new_set_tt__RecordingCapabilities(
	struct soap *soap,
	const std::string& XAddr,
	bool ReceiverSource,
	bool MediaProfileSource,
	bool DynamicRecordings,
	bool DynamicTracks,
	int MaxStringLength)
{	tt__RecordingCapabilities *_p = soap_new_tt__RecordingCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RecordingCapabilities::XAddr = XAddr;
		_p->tt__RecordingCapabilities::ReceiverSource = ReceiverSource;
		_p->tt__RecordingCapabilities::MediaProfileSource = MediaProfileSource;
		_p->tt__RecordingCapabilities::DynamicRecordings = DynamicRecordings;
		_p->tt__RecordingCapabilities::DynamicTracks = DynamicTracks;
		_p->tt__RecordingCapabilities::MaxStringLength = MaxStringLength;
	}
	return _p;
}

#ifndef soap_write_tt__RecordingCapabilities
#define soap_write_tt__RecordingCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:RecordingCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingCapabilities * SOAP_FMAC4 soap_get_tt__RecordingCapabilities(struct soap*, tt__RecordingCapabilities *, const char*, const char*);

#ifndef soap_read_tt__RecordingCapabilities
#define soap_read_tt__RecordingCapabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RecordingCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__DisplayCapabilities
#define SOAP_TYPE_tt__DisplayCapabilities (492)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DisplayCapabilities(struct soap*, const char*, int, const tt__DisplayCapabilities *, const char*);
SOAP_FMAC3 tt__DisplayCapabilities * SOAP_FMAC4 soap_in_tt__DisplayCapabilities(struct soap*, const char*, tt__DisplayCapabilities *, const char*);
SOAP_FMAC1 tt__DisplayCapabilities * SOAP_FMAC2 soap_instantiate_tt__DisplayCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__DisplayCapabilities * soap_new_tt__DisplayCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__DisplayCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__DisplayCapabilities * soap_new_req_tt__DisplayCapabilities(
	struct soap *soap,
	const std::string& XAddr,
	bool FixedLayout)
{	tt__DisplayCapabilities *_p = soap_new_tt__DisplayCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__DisplayCapabilities::XAddr = XAddr;
		_p->tt__DisplayCapabilities::FixedLayout = FixedLayout;
	}
	return _p;
}

inline tt__DisplayCapabilities * soap_new_set_tt__DisplayCapabilities(
	struct soap *soap,
	const std::string& XAddr,
	bool FixedLayout)
{	tt__DisplayCapabilities *_p = soap_new_tt__DisplayCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__DisplayCapabilities::XAddr = XAddr;
		_p->tt__DisplayCapabilities::FixedLayout = FixedLayout;
	}
	return _p;
}

#ifndef soap_write_tt__DisplayCapabilities
#define soap_write_tt__DisplayCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:DisplayCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DisplayCapabilities * SOAP_FMAC4 soap_get_tt__DisplayCapabilities(struct soap*, tt__DisplayCapabilities *, const char*, const char*);

#ifndef soap_read_tt__DisplayCapabilities
#define soap_read_tt__DisplayCapabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__DisplayCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__DeviceIOCapabilities
#define SOAP_TYPE_tt__DeviceIOCapabilities (491)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DeviceIOCapabilities(struct soap*, const char*, int, const tt__DeviceIOCapabilities *, const char*);
SOAP_FMAC3 tt__DeviceIOCapabilities * SOAP_FMAC4 soap_in_tt__DeviceIOCapabilities(struct soap*, const char*, tt__DeviceIOCapabilities *, const char*);
SOAP_FMAC1 tt__DeviceIOCapabilities * SOAP_FMAC2 soap_instantiate_tt__DeviceIOCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__DeviceIOCapabilities * soap_new_tt__DeviceIOCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__DeviceIOCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__DeviceIOCapabilities * soap_new_req_tt__DeviceIOCapabilities(
	struct soap *soap,
	const std::string& XAddr,
	int VideoSources,
	int VideoOutputs,
	int AudioSources,
	int AudioOutputs,
	int RelayOutputs)
{	tt__DeviceIOCapabilities *_p = soap_new_tt__DeviceIOCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__DeviceIOCapabilities::XAddr = XAddr;
		_p->tt__DeviceIOCapabilities::VideoSources = VideoSources;
		_p->tt__DeviceIOCapabilities::VideoOutputs = VideoOutputs;
		_p->tt__DeviceIOCapabilities::AudioSources = AudioSources;
		_p->tt__DeviceIOCapabilities::AudioOutputs = AudioOutputs;
		_p->tt__DeviceIOCapabilities::RelayOutputs = RelayOutputs;
	}
	return _p;
}

inline tt__DeviceIOCapabilities * soap_new_set_tt__DeviceIOCapabilities(
	struct soap *soap,
	const std::string& XAddr,
	int VideoSources,
	int VideoOutputs,
	int AudioSources,
	int AudioOutputs,
	int RelayOutputs)
{	tt__DeviceIOCapabilities *_p = soap_new_tt__DeviceIOCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__DeviceIOCapabilities::XAddr = XAddr;
		_p->tt__DeviceIOCapabilities::VideoSources = VideoSources;
		_p->tt__DeviceIOCapabilities::VideoOutputs = VideoOutputs;
		_p->tt__DeviceIOCapabilities::AudioSources = AudioSources;
		_p->tt__DeviceIOCapabilities::AudioOutputs = AudioOutputs;
		_p->tt__DeviceIOCapabilities::RelayOutputs = RelayOutputs;
	}
	return _p;
}

#ifndef soap_write_tt__DeviceIOCapabilities
#define soap_write_tt__DeviceIOCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:DeviceIOCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DeviceIOCapabilities * SOAP_FMAC4 soap_get_tt__DeviceIOCapabilities(struct soap*, tt__DeviceIOCapabilities *, const char*, const char*);

#ifndef soap_read_tt__DeviceIOCapabilities
#define soap_read_tt__DeviceIOCapabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__DeviceIOCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZCapabilities
#define SOAP_TYPE_tt__PTZCapabilities (490)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZCapabilities(struct soap*, const char*, int, const tt__PTZCapabilities *, const char*);
SOAP_FMAC3 tt__PTZCapabilities * SOAP_FMAC4 soap_in_tt__PTZCapabilities(struct soap*, const char*, tt__PTZCapabilities *, const char*);
SOAP_FMAC1 tt__PTZCapabilities * SOAP_FMAC2 soap_instantiate_tt__PTZCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZCapabilities * soap_new_tt__PTZCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__PTZCapabilities * soap_new_req_tt__PTZCapabilities(
	struct soap *soap,
	const std::string& XAddr)
{	tt__PTZCapabilities *_p = soap_new_tt__PTZCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZCapabilities::XAddr = XAddr;
	}
	return _p;
}

inline tt__PTZCapabilities * soap_new_set_tt__PTZCapabilities(
	struct soap *soap,
	const std::string& XAddr)
{	tt__PTZCapabilities *_p = soap_new_tt__PTZCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZCapabilities::XAddr = XAddr;
	}
	return _p;
}

#ifndef soap_write_tt__PTZCapabilities
#define soap_write_tt__PTZCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZCapabilities * SOAP_FMAC4 soap_get_tt__PTZCapabilities(struct soap*, tt__PTZCapabilities *, const char*, const char*);

#ifndef soap_read_tt__PTZCapabilities
#define soap_read_tt__PTZCapabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ImagingCapabilities
#define SOAP_TYPE_tt__ImagingCapabilities (489)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ImagingCapabilities(struct soap*, const char*, int, const tt__ImagingCapabilities *, const char*);
SOAP_FMAC3 tt__ImagingCapabilities * SOAP_FMAC4 soap_in_tt__ImagingCapabilities(struct soap*, const char*, tt__ImagingCapabilities *, const char*);
SOAP_FMAC1 tt__ImagingCapabilities * SOAP_FMAC2 soap_instantiate_tt__ImagingCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__ImagingCapabilities * soap_new_tt__ImagingCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__ImagingCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__ImagingCapabilities * soap_new_req_tt__ImagingCapabilities(
	struct soap *soap,
	const std::string& XAddr)
{	tt__ImagingCapabilities *_p = soap_new_tt__ImagingCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ImagingCapabilities::XAddr = XAddr;
	}
	return _p;
}

inline tt__ImagingCapabilities * soap_new_set_tt__ImagingCapabilities(
	struct soap *soap,
	const std::string& XAddr)
{	tt__ImagingCapabilities *_p = soap_new_tt__ImagingCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ImagingCapabilities::XAddr = XAddr;
	}
	return _p;
}

#ifndef soap_write_tt__ImagingCapabilities
#define soap_write_tt__ImagingCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ImagingCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingCapabilities * SOAP_FMAC4 soap_get_tt__ImagingCapabilities(struct soap*, tt__ImagingCapabilities *, const char*, const char*);

#ifndef soap_read_tt__ImagingCapabilities
#define soap_read_tt__ImagingCapabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ImagingCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__OnvifVersion
#define SOAP_TYPE_tt__OnvifVersion (488)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__OnvifVersion(struct soap*, const char*, int, const tt__OnvifVersion *, const char*);
SOAP_FMAC3 tt__OnvifVersion * SOAP_FMAC4 soap_in_tt__OnvifVersion(struct soap*, const char*, tt__OnvifVersion *, const char*);
SOAP_FMAC1 tt__OnvifVersion * SOAP_FMAC2 soap_instantiate_tt__OnvifVersion(struct soap*, int, const char*, const char*, size_t*);

inline tt__OnvifVersion * soap_new_tt__OnvifVersion(struct soap *soap, int n = -1) { return soap_instantiate_tt__OnvifVersion(soap, n, NULL, NULL, NULL); }

inline tt__OnvifVersion * soap_new_req_tt__OnvifVersion(
	struct soap *soap,
	int Major,
	int Minor)
{	tt__OnvifVersion *_p = soap_new_tt__OnvifVersion(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__OnvifVersion::Major = Major;
		_p->tt__OnvifVersion::Minor = Minor;
	}
	return _p;
}

inline tt__OnvifVersion * soap_new_set_tt__OnvifVersion(
	struct soap *soap,
	int Major,
	int Minor)
{	tt__OnvifVersion *_p = soap_new_tt__OnvifVersion(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__OnvifVersion::Major = Major;
		_p->tt__OnvifVersion::Minor = Minor;
	}
	return _p;
}

#ifndef soap_write_tt__OnvifVersion
#define soap_write_tt__OnvifVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:OnvifVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OnvifVersion * SOAP_FMAC4 soap_get_tt__OnvifVersion(struct soap*, tt__OnvifVersion *, const char*, const char*);

#ifndef soap_read_tt__OnvifVersion
#define soap_read_tt__OnvifVersion(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__OnvifVersion(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SystemCapabilitiesExtension2
#define SOAP_TYPE_tt__SystemCapabilitiesExtension2 (487)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SystemCapabilitiesExtension2(struct soap*, const char*, int, const tt__SystemCapabilitiesExtension2 *, const char*);
SOAP_FMAC3 tt__SystemCapabilitiesExtension2 * SOAP_FMAC4 soap_in_tt__SystemCapabilitiesExtension2(struct soap*, const char*, tt__SystemCapabilitiesExtension2 *, const char*);
SOAP_FMAC1 tt__SystemCapabilitiesExtension2 * SOAP_FMAC2 soap_instantiate_tt__SystemCapabilitiesExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__SystemCapabilitiesExtension2 * soap_new_tt__SystemCapabilitiesExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__SystemCapabilitiesExtension2(soap, n, NULL, NULL, NULL); }

inline tt__SystemCapabilitiesExtension2 * soap_new_req_tt__SystemCapabilitiesExtension2(
	struct soap *soap)
{	tt__SystemCapabilitiesExtension2 *_p = soap_new_tt__SystemCapabilitiesExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__SystemCapabilitiesExtension2 * soap_new_set_tt__SystemCapabilitiesExtension2(
	struct soap *soap)
{	tt__SystemCapabilitiesExtension2 *_p = soap_new_tt__SystemCapabilitiesExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__SystemCapabilitiesExtension2
#define soap_write_tt__SystemCapabilitiesExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:SystemCapabilitiesExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemCapabilitiesExtension2 * SOAP_FMAC4 soap_get_tt__SystemCapabilitiesExtension2(struct soap*, tt__SystemCapabilitiesExtension2 *, const char*, const char*);

#ifndef soap_read_tt__SystemCapabilitiesExtension2
#define soap_read_tt__SystemCapabilitiesExtension2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__SystemCapabilitiesExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SystemCapabilitiesExtension
#define SOAP_TYPE_tt__SystemCapabilitiesExtension (486)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SystemCapabilitiesExtension(struct soap*, const char*, int, const tt__SystemCapabilitiesExtension *, const char*);
SOAP_FMAC3 tt__SystemCapabilitiesExtension * SOAP_FMAC4 soap_in_tt__SystemCapabilitiesExtension(struct soap*, const char*, tt__SystemCapabilitiesExtension *, const char*);
SOAP_FMAC1 tt__SystemCapabilitiesExtension * SOAP_FMAC2 soap_instantiate_tt__SystemCapabilitiesExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__SystemCapabilitiesExtension * soap_new_tt__SystemCapabilitiesExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__SystemCapabilitiesExtension(soap, n, NULL, NULL, NULL); }

inline tt__SystemCapabilitiesExtension * soap_new_req_tt__SystemCapabilitiesExtension(
	struct soap *soap)
{	tt__SystemCapabilitiesExtension *_p = soap_new_tt__SystemCapabilitiesExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__SystemCapabilitiesExtension * soap_new_set_tt__SystemCapabilitiesExtension(
	struct soap *soap,
	bool *HttpFirmwareUpgrade,
	bool *HttpSystemBackup,
	bool *HttpSystemLogging,
	bool *HttpSupportInformation,
	tt__SystemCapabilitiesExtension2 *Extension)
{	tt__SystemCapabilitiesExtension *_p = soap_new_tt__SystemCapabilitiesExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__SystemCapabilitiesExtension::HttpFirmwareUpgrade = HttpFirmwareUpgrade;
		_p->tt__SystemCapabilitiesExtension::HttpSystemBackup = HttpSystemBackup;
		_p->tt__SystemCapabilitiesExtension::HttpSystemLogging = HttpSystemLogging;
		_p->tt__SystemCapabilitiesExtension::HttpSupportInformation = HttpSupportInformation;
		_p->tt__SystemCapabilitiesExtension::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__SystemCapabilitiesExtension
#define soap_write_tt__SystemCapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:SystemCapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemCapabilitiesExtension * SOAP_FMAC4 soap_get_tt__SystemCapabilitiesExtension(struct soap*, tt__SystemCapabilitiesExtension *, const char*, const char*);

#ifndef soap_read_tt__SystemCapabilitiesExtension
#define soap_read_tt__SystemCapabilitiesExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__SystemCapabilitiesExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SystemCapabilities
#define SOAP_TYPE_tt__SystemCapabilities (485)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SystemCapabilities(struct soap*, const char*, int, const tt__SystemCapabilities *, const char*);
SOAP_FMAC3 tt__SystemCapabilities * SOAP_FMAC4 soap_in_tt__SystemCapabilities(struct soap*, const char*, tt__SystemCapabilities *, const char*);
SOAP_FMAC1 tt__SystemCapabilities * SOAP_FMAC2 soap_instantiate_tt__SystemCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__SystemCapabilities * soap_new_tt__SystemCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__SystemCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__SystemCapabilities * soap_new_req_tt__SystemCapabilities(
	struct soap *soap,
	bool DiscoveryResolve,
	bool DiscoveryBye,
	bool RemoteDiscovery,
	bool SystemBackup,
	bool SystemLogging,
	bool FirmwareUpgrade,
	const std::vector<tt__OnvifVersion *> & SupportedVersions)
{	tt__SystemCapabilities *_p = soap_new_tt__SystemCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__SystemCapabilities::DiscoveryResolve = DiscoveryResolve;
		_p->tt__SystemCapabilities::DiscoveryBye = DiscoveryBye;
		_p->tt__SystemCapabilities::RemoteDiscovery = RemoteDiscovery;
		_p->tt__SystemCapabilities::SystemBackup = SystemBackup;
		_p->tt__SystemCapabilities::SystemLogging = SystemLogging;
		_p->tt__SystemCapabilities::FirmwareUpgrade = FirmwareUpgrade;
		_p->tt__SystemCapabilities::SupportedVersions = SupportedVersions;
	}
	return _p;
}

inline tt__SystemCapabilities * soap_new_set_tt__SystemCapabilities(
	struct soap *soap,
	bool DiscoveryResolve,
	bool DiscoveryBye,
	bool RemoteDiscovery,
	bool SystemBackup,
	bool SystemLogging,
	bool FirmwareUpgrade,
	const std::vector<tt__OnvifVersion *> & SupportedVersions,
	tt__SystemCapabilitiesExtension *Extension)
{	tt__SystemCapabilities *_p = soap_new_tt__SystemCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__SystemCapabilities::DiscoveryResolve = DiscoveryResolve;
		_p->tt__SystemCapabilities::DiscoveryBye = DiscoveryBye;
		_p->tt__SystemCapabilities::RemoteDiscovery = RemoteDiscovery;
		_p->tt__SystemCapabilities::SystemBackup = SystemBackup;
		_p->tt__SystemCapabilities::SystemLogging = SystemLogging;
		_p->tt__SystemCapabilities::FirmwareUpgrade = FirmwareUpgrade;
		_p->tt__SystemCapabilities::SupportedVersions = SupportedVersions;
		_p->tt__SystemCapabilities::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__SystemCapabilities
#define soap_write_tt__SystemCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:SystemCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemCapabilities * SOAP_FMAC4 soap_get_tt__SystemCapabilities(struct soap*, tt__SystemCapabilities *, const char*, const char*);

#ifndef soap_read_tt__SystemCapabilities
#define soap_read_tt__SystemCapabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__SystemCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SecurityCapabilitiesExtension2
#define SOAP_TYPE_tt__SecurityCapabilitiesExtension2 (484)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SecurityCapabilitiesExtension2(struct soap*, const char*, int, const tt__SecurityCapabilitiesExtension2 *, const char*);
SOAP_FMAC3 tt__SecurityCapabilitiesExtension2 * SOAP_FMAC4 soap_in_tt__SecurityCapabilitiesExtension2(struct soap*, const char*, tt__SecurityCapabilitiesExtension2 *, const char*);
SOAP_FMAC1 tt__SecurityCapabilitiesExtension2 * SOAP_FMAC2 soap_instantiate_tt__SecurityCapabilitiesExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__SecurityCapabilitiesExtension2 * soap_new_tt__SecurityCapabilitiesExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__SecurityCapabilitiesExtension2(soap, n, NULL, NULL, NULL); }

inline tt__SecurityCapabilitiesExtension2 * soap_new_req_tt__SecurityCapabilitiesExtension2(
	struct soap *soap,
	bool Dot1X,
	bool RemoteUserHandling)
{	tt__SecurityCapabilitiesExtension2 *_p = soap_new_tt__SecurityCapabilitiesExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__SecurityCapabilitiesExtension2::Dot1X = Dot1X;
		_p->tt__SecurityCapabilitiesExtension2::RemoteUserHandling = RemoteUserHandling;
	}
	return _p;
}

inline tt__SecurityCapabilitiesExtension2 * soap_new_set_tt__SecurityCapabilitiesExtension2(
	struct soap *soap,
	bool Dot1X,
	const std::vector<int> & SupportedEAPMethod,
	bool RemoteUserHandling)
{	tt__SecurityCapabilitiesExtension2 *_p = soap_new_tt__SecurityCapabilitiesExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__SecurityCapabilitiesExtension2::Dot1X = Dot1X;
		_p->tt__SecurityCapabilitiesExtension2::SupportedEAPMethod = SupportedEAPMethod;
		_p->tt__SecurityCapabilitiesExtension2::RemoteUserHandling = RemoteUserHandling;
	}
	return _p;
}

#ifndef soap_write_tt__SecurityCapabilitiesExtension2
#define soap_write_tt__SecurityCapabilitiesExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:SecurityCapabilitiesExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SecurityCapabilitiesExtension2 * SOAP_FMAC4 soap_get_tt__SecurityCapabilitiesExtension2(struct soap*, tt__SecurityCapabilitiesExtension2 *, const char*, const char*);

#ifndef soap_read_tt__SecurityCapabilitiesExtension2
#define soap_read_tt__SecurityCapabilitiesExtension2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__SecurityCapabilitiesExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SecurityCapabilitiesExtension
#define SOAP_TYPE_tt__SecurityCapabilitiesExtension (483)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SecurityCapabilitiesExtension(struct soap*, const char*, int, const tt__SecurityCapabilitiesExtension *, const char*);
SOAP_FMAC3 tt__SecurityCapabilitiesExtension * SOAP_FMAC4 soap_in_tt__SecurityCapabilitiesExtension(struct soap*, const char*, tt__SecurityCapabilitiesExtension *, const char*);
SOAP_FMAC1 tt__SecurityCapabilitiesExtension * SOAP_FMAC2 soap_instantiate_tt__SecurityCapabilitiesExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__SecurityCapabilitiesExtension * soap_new_tt__SecurityCapabilitiesExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__SecurityCapabilitiesExtension(soap, n, NULL, NULL, NULL); }

inline tt__SecurityCapabilitiesExtension * soap_new_req_tt__SecurityCapabilitiesExtension(
	struct soap *soap,
	bool TLS1_x002e0)
{	tt__SecurityCapabilitiesExtension *_p = soap_new_tt__SecurityCapabilitiesExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__SecurityCapabilitiesExtension::TLS1_x002e0 = TLS1_x002e0;
	}
	return _p;
}

inline tt__SecurityCapabilitiesExtension * soap_new_set_tt__SecurityCapabilitiesExtension(
	struct soap *soap,
	bool TLS1_x002e0,
	tt__SecurityCapabilitiesExtension2 *Extension)
{	tt__SecurityCapabilitiesExtension *_p = soap_new_tt__SecurityCapabilitiesExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__SecurityCapabilitiesExtension::TLS1_x002e0 = TLS1_x002e0;
		_p->tt__SecurityCapabilitiesExtension::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__SecurityCapabilitiesExtension
#define soap_write_tt__SecurityCapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:SecurityCapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SecurityCapabilitiesExtension * SOAP_FMAC4 soap_get_tt__SecurityCapabilitiesExtension(struct soap*, tt__SecurityCapabilitiesExtension *, const char*, const char*);

#ifndef soap_read_tt__SecurityCapabilitiesExtension
#define soap_read_tt__SecurityCapabilitiesExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__SecurityCapabilitiesExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SecurityCapabilities
#define SOAP_TYPE_tt__SecurityCapabilities (482)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SecurityCapabilities(struct soap*, const char*, int, const tt__SecurityCapabilities *, const char*);
SOAP_FMAC3 tt__SecurityCapabilities * SOAP_FMAC4 soap_in_tt__SecurityCapabilities(struct soap*, const char*, tt__SecurityCapabilities *, const char*);
SOAP_FMAC1 tt__SecurityCapabilities * SOAP_FMAC2 soap_instantiate_tt__SecurityCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__SecurityCapabilities * soap_new_tt__SecurityCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__SecurityCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__SecurityCapabilities * soap_new_req_tt__SecurityCapabilities(
	struct soap *soap,
	bool TLS1_x002e1,
	bool TLS1_x002e2,
	bool OnboardKeyGeneration,
	bool AccessPolicyConfig,
	bool X_x002e509Token,
	bool SAMLToken,
	bool KerberosToken,
	bool RELToken)
{	tt__SecurityCapabilities *_p = soap_new_tt__SecurityCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__SecurityCapabilities::TLS1_x002e1 = TLS1_x002e1;
		_p->tt__SecurityCapabilities::TLS1_x002e2 = TLS1_x002e2;
		_p->tt__SecurityCapabilities::OnboardKeyGeneration = OnboardKeyGeneration;
		_p->tt__SecurityCapabilities::AccessPolicyConfig = AccessPolicyConfig;
		_p->tt__SecurityCapabilities::X_x002e509Token = X_x002e509Token;
		_p->tt__SecurityCapabilities::SAMLToken = SAMLToken;
		_p->tt__SecurityCapabilities::KerberosToken = KerberosToken;
		_p->tt__SecurityCapabilities::RELToken = RELToken;
	}
	return _p;
}

inline tt__SecurityCapabilities * soap_new_set_tt__SecurityCapabilities(
	struct soap *soap,
	bool TLS1_x002e1,
	bool TLS1_x002e2,
	bool OnboardKeyGeneration,
	bool AccessPolicyConfig,
	bool X_x002e509Token,
	bool SAMLToken,
	bool KerberosToken,
	bool RELToken,
	tt__SecurityCapabilitiesExtension *Extension)
{	tt__SecurityCapabilities *_p = soap_new_tt__SecurityCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__SecurityCapabilities::TLS1_x002e1 = TLS1_x002e1;
		_p->tt__SecurityCapabilities::TLS1_x002e2 = TLS1_x002e2;
		_p->tt__SecurityCapabilities::OnboardKeyGeneration = OnboardKeyGeneration;
		_p->tt__SecurityCapabilities::AccessPolicyConfig = AccessPolicyConfig;
		_p->tt__SecurityCapabilities::X_x002e509Token = X_x002e509Token;
		_p->tt__SecurityCapabilities::SAMLToken = SAMLToken;
		_p->tt__SecurityCapabilities::KerberosToken = KerberosToken;
		_p->tt__SecurityCapabilities::RELToken = RELToken;
		_p->tt__SecurityCapabilities::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__SecurityCapabilities
#define soap_write_tt__SecurityCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:SecurityCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SecurityCapabilities * SOAP_FMAC4 soap_get_tt__SecurityCapabilities(struct soap*, tt__SecurityCapabilities *, const char*, const char*);

#ifndef soap_read_tt__SecurityCapabilities
#define soap_read_tt__SecurityCapabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__SecurityCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__NetworkCapabilitiesExtension2
#define SOAP_TYPE_tt__NetworkCapabilitiesExtension2 (481)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkCapabilitiesExtension2(struct soap*, const char*, int, const tt__NetworkCapabilitiesExtension2 *, const char*);
SOAP_FMAC3 tt__NetworkCapabilitiesExtension2 * SOAP_FMAC4 soap_in_tt__NetworkCapabilitiesExtension2(struct soap*, const char*, tt__NetworkCapabilitiesExtension2 *, const char*);
SOAP_FMAC1 tt__NetworkCapabilitiesExtension2 * SOAP_FMAC2 soap_instantiate_tt__NetworkCapabilitiesExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkCapabilitiesExtension2 * soap_new_tt__NetworkCapabilitiesExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkCapabilitiesExtension2(soap, n, NULL, NULL, NULL); }

inline tt__NetworkCapabilitiesExtension2 * soap_new_req_tt__NetworkCapabilitiesExtension2(
	struct soap *soap)
{	tt__NetworkCapabilitiesExtension2 *_p = soap_new_tt__NetworkCapabilitiesExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__NetworkCapabilitiesExtension2 * soap_new_set_tt__NetworkCapabilitiesExtension2(
	struct soap *soap)
{	tt__NetworkCapabilitiesExtension2 *_p = soap_new_tt__NetworkCapabilitiesExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__NetworkCapabilitiesExtension2
#define soap_write_tt__NetworkCapabilitiesExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:NetworkCapabilitiesExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkCapabilitiesExtension2 * SOAP_FMAC4 soap_get_tt__NetworkCapabilitiesExtension2(struct soap*, tt__NetworkCapabilitiesExtension2 *, const char*, const char*);

#ifndef soap_read_tt__NetworkCapabilitiesExtension2
#define soap_read_tt__NetworkCapabilitiesExtension2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__NetworkCapabilitiesExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__NetworkCapabilitiesExtension
#define SOAP_TYPE_tt__NetworkCapabilitiesExtension (480)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkCapabilitiesExtension(struct soap*, const char*, int, const tt__NetworkCapabilitiesExtension *, const char*);
SOAP_FMAC3 tt__NetworkCapabilitiesExtension * SOAP_FMAC4 soap_in_tt__NetworkCapabilitiesExtension(struct soap*, const char*, tt__NetworkCapabilitiesExtension *, const char*);
SOAP_FMAC1 tt__NetworkCapabilitiesExtension * SOAP_FMAC2 soap_instantiate_tt__NetworkCapabilitiesExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkCapabilitiesExtension * soap_new_tt__NetworkCapabilitiesExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkCapabilitiesExtension(soap, n, NULL, NULL, NULL); }

inline tt__NetworkCapabilitiesExtension * soap_new_req_tt__NetworkCapabilitiesExtension(
	struct soap *soap)
{	tt__NetworkCapabilitiesExtension *_p = soap_new_tt__NetworkCapabilitiesExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__NetworkCapabilitiesExtension * soap_new_set_tt__NetworkCapabilitiesExtension(
	struct soap *soap,
	bool *Dot11Configuration,
	tt__NetworkCapabilitiesExtension2 *Extension)
{	tt__NetworkCapabilitiesExtension *_p = soap_new_tt__NetworkCapabilitiesExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__NetworkCapabilitiesExtension::Dot11Configuration = Dot11Configuration;
		_p->tt__NetworkCapabilitiesExtension::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__NetworkCapabilitiesExtension
#define soap_write_tt__NetworkCapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:NetworkCapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkCapabilitiesExtension * SOAP_FMAC4 soap_get_tt__NetworkCapabilitiesExtension(struct soap*, tt__NetworkCapabilitiesExtension *, const char*, const char*);

#ifndef soap_read_tt__NetworkCapabilitiesExtension
#define soap_read_tt__NetworkCapabilitiesExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__NetworkCapabilitiesExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__NetworkCapabilities
#define SOAP_TYPE_tt__NetworkCapabilities (479)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkCapabilities(struct soap*, const char*, int, const tt__NetworkCapabilities *, const char*);
SOAP_FMAC3 tt__NetworkCapabilities * SOAP_FMAC4 soap_in_tt__NetworkCapabilities(struct soap*, const char*, tt__NetworkCapabilities *, const char*);
SOAP_FMAC1 tt__NetworkCapabilities * SOAP_FMAC2 soap_instantiate_tt__NetworkCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkCapabilities * soap_new_tt__NetworkCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__NetworkCapabilities * soap_new_req_tt__NetworkCapabilities(
	struct soap *soap)
{	tt__NetworkCapabilities *_p = soap_new_tt__NetworkCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__NetworkCapabilities * soap_new_set_tt__NetworkCapabilities(
	struct soap *soap,
	bool *IPFilter,
	bool *ZeroConfiguration,
	bool *IPVersion6,
	bool *DynDNS,
	tt__NetworkCapabilitiesExtension *Extension)
{	tt__NetworkCapabilities *_p = soap_new_tt__NetworkCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__NetworkCapabilities::IPFilter = IPFilter;
		_p->tt__NetworkCapabilities::ZeroConfiguration = ZeroConfiguration;
		_p->tt__NetworkCapabilities::IPVersion6 = IPVersion6;
		_p->tt__NetworkCapabilities::DynDNS = DynDNS;
		_p->tt__NetworkCapabilities::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__NetworkCapabilities
#define soap_write_tt__NetworkCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:NetworkCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkCapabilities * SOAP_FMAC4 soap_get_tt__NetworkCapabilities(struct soap*, tt__NetworkCapabilities *, const char*, const char*);

#ifndef soap_read_tt__NetworkCapabilities
#define soap_read_tt__NetworkCapabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__NetworkCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ProfileCapabilities
#define SOAP_TYPE_tt__ProfileCapabilities (478)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ProfileCapabilities(struct soap*, const char*, int, const tt__ProfileCapabilities *, const char*);
SOAP_FMAC3 tt__ProfileCapabilities * SOAP_FMAC4 soap_in_tt__ProfileCapabilities(struct soap*, const char*, tt__ProfileCapabilities *, const char*);
SOAP_FMAC1 tt__ProfileCapabilities * SOAP_FMAC2 soap_instantiate_tt__ProfileCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__ProfileCapabilities * soap_new_tt__ProfileCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__ProfileCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__ProfileCapabilities * soap_new_req_tt__ProfileCapabilities(
	struct soap *soap,
	int MaximumNumberOfProfiles)
{	tt__ProfileCapabilities *_p = soap_new_tt__ProfileCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ProfileCapabilities::MaximumNumberOfProfiles = MaximumNumberOfProfiles;
	}
	return _p;
}

inline tt__ProfileCapabilities * soap_new_set_tt__ProfileCapabilities(
	struct soap *soap,
	int MaximumNumberOfProfiles)
{	tt__ProfileCapabilities *_p = soap_new_tt__ProfileCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ProfileCapabilities::MaximumNumberOfProfiles = MaximumNumberOfProfiles;
	}
	return _p;
}

#ifndef soap_write_tt__ProfileCapabilities
#define soap_write_tt__ProfileCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ProfileCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ProfileCapabilities * SOAP_FMAC4 soap_get_tt__ProfileCapabilities(struct soap*, tt__ProfileCapabilities *, const char*, const char*);

#ifndef soap_read_tt__ProfileCapabilities
#define soap_read_tt__ProfileCapabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ProfileCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RealTimeStreamingCapabilitiesExtension
#define SOAP_TYPE_tt__RealTimeStreamingCapabilitiesExtension (477)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RealTimeStreamingCapabilitiesExtension(struct soap*, const char*, int, const tt__RealTimeStreamingCapabilitiesExtension *, const char*);
SOAP_FMAC3 tt__RealTimeStreamingCapabilitiesExtension * SOAP_FMAC4 soap_in_tt__RealTimeStreamingCapabilitiesExtension(struct soap*, const char*, tt__RealTimeStreamingCapabilitiesExtension *, const char*);
SOAP_FMAC1 tt__RealTimeStreamingCapabilitiesExtension * SOAP_FMAC2 soap_instantiate_tt__RealTimeStreamingCapabilitiesExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__RealTimeStreamingCapabilitiesExtension * soap_new_tt__RealTimeStreamingCapabilitiesExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__RealTimeStreamingCapabilitiesExtension(soap, n, NULL, NULL, NULL); }

inline tt__RealTimeStreamingCapabilitiesExtension * soap_new_req_tt__RealTimeStreamingCapabilitiesExtension(
	struct soap *soap)
{	tt__RealTimeStreamingCapabilitiesExtension *_p = soap_new_tt__RealTimeStreamingCapabilitiesExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__RealTimeStreamingCapabilitiesExtension * soap_new_set_tt__RealTimeStreamingCapabilitiesExtension(
	struct soap *soap)
{	tt__RealTimeStreamingCapabilitiesExtension *_p = soap_new_tt__RealTimeStreamingCapabilitiesExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__RealTimeStreamingCapabilitiesExtension
#define soap_write_tt__RealTimeStreamingCapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:RealTimeStreamingCapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RealTimeStreamingCapabilitiesExtension * SOAP_FMAC4 soap_get_tt__RealTimeStreamingCapabilitiesExtension(struct soap*, tt__RealTimeStreamingCapabilitiesExtension *, const char*, const char*);

#ifndef soap_read_tt__RealTimeStreamingCapabilitiesExtension
#define soap_read_tt__RealTimeStreamingCapabilitiesExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RealTimeStreamingCapabilitiesExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RealTimeStreamingCapabilities
#define SOAP_TYPE_tt__RealTimeStreamingCapabilities (476)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RealTimeStreamingCapabilities(struct soap*, const char*, int, const tt__RealTimeStreamingCapabilities *, const char*);
SOAP_FMAC3 tt__RealTimeStreamingCapabilities * SOAP_FMAC4 soap_in_tt__RealTimeStreamingCapabilities(struct soap*, const char*, tt__RealTimeStreamingCapabilities *, const char*);
SOAP_FMAC1 tt__RealTimeStreamingCapabilities * SOAP_FMAC2 soap_instantiate_tt__RealTimeStreamingCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__RealTimeStreamingCapabilities * soap_new_tt__RealTimeStreamingCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__RealTimeStreamingCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__RealTimeStreamingCapabilities * soap_new_req_tt__RealTimeStreamingCapabilities(
	struct soap *soap)
{	tt__RealTimeStreamingCapabilities *_p = soap_new_tt__RealTimeStreamingCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__RealTimeStreamingCapabilities * soap_new_set_tt__RealTimeStreamingCapabilities(
	struct soap *soap,
	bool *RTPMulticast,
	bool *RTP_USCORETCP,
	bool *RTP_USCORERTSP_USCORETCP,
	tt__RealTimeStreamingCapabilitiesExtension *Extension)
{	tt__RealTimeStreamingCapabilities *_p = soap_new_tt__RealTimeStreamingCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RealTimeStreamingCapabilities::RTPMulticast = RTPMulticast;
		_p->tt__RealTimeStreamingCapabilities::RTP_USCORETCP = RTP_USCORETCP;
		_p->tt__RealTimeStreamingCapabilities::RTP_USCORERTSP_USCORETCP = RTP_USCORERTSP_USCORETCP;
		_p->tt__RealTimeStreamingCapabilities::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__RealTimeStreamingCapabilities
#define soap_write_tt__RealTimeStreamingCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:RealTimeStreamingCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RealTimeStreamingCapabilities * SOAP_FMAC4 soap_get_tt__RealTimeStreamingCapabilities(struct soap*, tt__RealTimeStreamingCapabilities *, const char*, const char*);

#ifndef soap_read_tt__RealTimeStreamingCapabilities
#define soap_read_tt__RealTimeStreamingCapabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RealTimeStreamingCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__MediaCapabilitiesExtension
#define SOAP_TYPE_tt__MediaCapabilitiesExtension (475)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MediaCapabilitiesExtension(struct soap*, const char*, int, const tt__MediaCapabilitiesExtension *, const char*);
SOAP_FMAC3 tt__MediaCapabilitiesExtension * SOAP_FMAC4 soap_in_tt__MediaCapabilitiesExtension(struct soap*, const char*, tt__MediaCapabilitiesExtension *, const char*);
SOAP_FMAC1 tt__MediaCapabilitiesExtension * SOAP_FMAC2 soap_instantiate_tt__MediaCapabilitiesExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__MediaCapabilitiesExtension * soap_new_tt__MediaCapabilitiesExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__MediaCapabilitiesExtension(soap, n, NULL, NULL, NULL); }

inline tt__MediaCapabilitiesExtension * soap_new_req_tt__MediaCapabilitiesExtension(
	struct soap *soap,
	tt__ProfileCapabilities *ProfileCapabilities)
{	tt__MediaCapabilitiesExtension *_p = soap_new_tt__MediaCapabilitiesExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__MediaCapabilitiesExtension::ProfileCapabilities = ProfileCapabilities;
	}
	return _p;
}

inline tt__MediaCapabilitiesExtension * soap_new_set_tt__MediaCapabilitiesExtension(
	struct soap *soap,
	tt__ProfileCapabilities *ProfileCapabilities)
{	tt__MediaCapabilitiesExtension *_p = soap_new_tt__MediaCapabilitiesExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__MediaCapabilitiesExtension::ProfileCapabilities = ProfileCapabilities;
	}
	return _p;
}

#ifndef soap_write_tt__MediaCapabilitiesExtension
#define soap_write_tt__MediaCapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:MediaCapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MediaCapabilitiesExtension * SOAP_FMAC4 soap_get_tt__MediaCapabilitiesExtension(struct soap*, tt__MediaCapabilitiesExtension *, const char*, const char*);

#ifndef soap_read_tt__MediaCapabilitiesExtension
#define soap_read_tt__MediaCapabilitiesExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MediaCapabilitiesExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__MediaCapabilities
#define SOAP_TYPE_tt__MediaCapabilities (474)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MediaCapabilities(struct soap*, const char*, int, const tt__MediaCapabilities *, const char*);
SOAP_FMAC3 tt__MediaCapabilities * SOAP_FMAC4 soap_in_tt__MediaCapabilities(struct soap*, const char*, tt__MediaCapabilities *, const char*);
SOAP_FMAC1 tt__MediaCapabilities * SOAP_FMAC2 soap_instantiate_tt__MediaCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__MediaCapabilities * soap_new_tt__MediaCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__MediaCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__MediaCapabilities * soap_new_req_tt__MediaCapabilities(
	struct soap *soap,
	const std::string& XAddr,
	tt__RealTimeStreamingCapabilities *StreamingCapabilities)
{	tt__MediaCapabilities *_p = soap_new_tt__MediaCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__MediaCapabilities::XAddr = XAddr;
		_p->tt__MediaCapabilities::StreamingCapabilities = StreamingCapabilities;
	}
	return _p;
}

inline tt__MediaCapabilities * soap_new_set_tt__MediaCapabilities(
	struct soap *soap,
	const std::string& XAddr,
	tt__RealTimeStreamingCapabilities *StreamingCapabilities,
	tt__MediaCapabilitiesExtension *Extension)
{	tt__MediaCapabilities *_p = soap_new_tt__MediaCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__MediaCapabilities::XAddr = XAddr;
		_p->tt__MediaCapabilities::StreamingCapabilities = StreamingCapabilities;
		_p->tt__MediaCapabilities::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__MediaCapabilities
#define soap_write_tt__MediaCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:MediaCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MediaCapabilities * SOAP_FMAC4 soap_get_tt__MediaCapabilities(struct soap*, tt__MediaCapabilities *, const char*, const char*);

#ifndef soap_read_tt__MediaCapabilities
#define soap_read_tt__MediaCapabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MediaCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IOCapabilitiesExtension2
#define SOAP_TYPE_tt__IOCapabilitiesExtension2 (473)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IOCapabilitiesExtension2(struct soap*, const char*, int, const tt__IOCapabilitiesExtension2 *, const char*);
SOAP_FMAC3 tt__IOCapabilitiesExtension2 * SOAP_FMAC4 soap_in_tt__IOCapabilitiesExtension2(struct soap*, const char*, tt__IOCapabilitiesExtension2 *, const char*);
SOAP_FMAC1 tt__IOCapabilitiesExtension2 * SOAP_FMAC2 soap_instantiate_tt__IOCapabilitiesExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__IOCapabilitiesExtension2 * soap_new_tt__IOCapabilitiesExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__IOCapabilitiesExtension2(soap, n, NULL, NULL, NULL); }

inline tt__IOCapabilitiesExtension2 * soap_new_req_tt__IOCapabilitiesExtension2(
	struct soap *soap)
{	tt__IOCapabilitiesExtension2 *_p = soap_new_tt__IOCapabilitiesExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__IOCapabilitiesExtension2 * soap_new_set_tt__IOCapabilitiesExtension2(
	struct soap *soap)
{	tt__IOCapabilitiesExtension2 *_p = soap_new_tt__IOCapabilitiesExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__IOCapabilitiesExtension2
#define soap_write_tt__IOCapabilitiesExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:IOCapabilitiesExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IOCapabilitiesExtension2 * SOAP_FMAC4 soap_get_tt__IOCapabilitiesExtension2(struct soap*, tt__IOCapabilitiesExtension2 *, const char*, const char*);

#ifndef soap_read_tt__IOCapabilitiesExtension2
#define soap_read_tt__IOCapabilitiesExtension2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IOCapabilitiesExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IOCapabilitiesExtension
#define SOAP_TYPE_tt__IOCapabilitiesExtension (472)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IOCapabilitiesExtension(struct soap*, const char*, int, const tt__IOCapabilitiesExtension *, const char*);
SOAP_FMAC3 tt__IOCapabilitiesExtension * SOAP_FMAC4 soap_in_tt__IOCapabilitiesExtension(struct soap*, const char*, tt__IOCapabilitiesExtension *, const char*);
SOAP_FMAC1 tt__IOCapabilitiesExtension * SOAP_FMAC2 soap_instantiate_tt__IOCapabilitiesExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__IOCapabilitiesExtension * soap_new_tt__IOCapabilitiesExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__IOCapabilitiesExtension(soap, n, NULL, NULL, NULL); }

inline tt__IOCapabilitiesExtension * soap_new_req_tt__IOCapabilitiesExtension(
	struct soap *soap,
	tt__IOCapabilitiesExtension2 *Extension)
{	tt__IOCapabilitiesExtension *_p = soap_new_tt__IOCapabilitiesExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__IOCapabilitiesExtension::Extension = Extension;
	}
	return _p;
}

inline tt__IOCapabilitiesExtension * soap_new_set_tt__IOCapabilitiesExtension(
	struct soap *soap,
	bool *Auxiliary,
	const std::vector<std::string> & AuxiliaryCommands,
	tt__IOCapabilitiesExtension2 *Extension)
{	tt__IOCapabilitiesExtension *_p = soap_new_tt__IOCapabilitiesExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__IOCapabilitiesExtension::Auxiliary = Auxiliary;
		_p->tt__IOCapabilitiesExtension::AuxiliaryCommands = AuxiliaryCommands;
		_p->tt__IOCapabilitiesExtension::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__IOCapabilitiesExtension
#define soap_write_tt__IOCapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:IOCapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IOCapabilitiesExtension * SOAP_FMAC4 soap_get_tt__IOCapabilitiesExtension(struct soap*, tt__IOCapabilitiesExtension *, const char*, const char*);

#ifndef soap_read_tt__IOCapabilitiesExtension
#define soap_read_tt__IOCapabilitiesExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IOCapabilitiesExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IOCapabilities
#define SOAP_TYPE_tt__IOCapabilities (471)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IOCapabilities(struct soap*, const char*, int, const tt__IOCapabilities *, const char*);
SOAP_FMAC3 tt__IOCapabilities * SOAP_FMAC4 soap_in_tt__IOCapabilities(struct soap*, const char*, tt__IOCapabilities *, const char*);
SOAP_FMAC1 tt__IOCapabilities * SOAP_FMAC2 soap_instantiate_tt__IOCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__IOCapabilities * soap_new_tt__IOCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__IOCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__IOCapabilities * soap_new_req_tt__IOCapabilities(
	struct soap *soap)
{	tt__IOCapabilities *_p = soap_new_tt__IOCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__IOCapabilities * soap_new_set_tt__IOCapabilities(
	struct soap *soap,
	int *InputConnectors,
	int *RelayOutputs,
	tt__IOCapabilitiesExtension *Extension)
{	tt__IOCapabilities *_p = soap_new_tt__IOCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__IOCapabilities::InputConnectors = InputConnectors;
		_p->tt__IOCapabilities::RelayOutputs = RelayOutputs;
		_p->tt__IOCapabilities::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__IOCapabilities
#define soap_write_tt__IOCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:IOCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IOCapabilities * SOAP_FMAC4 soap_get_tt__IOCapabilities(struct soap*, tt__IOCapabilities *, const char*, const char*);

#ifndef soap_read_tt__IOCapabilities
#define soap_read_tt__IOCapabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IOCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__EventCapabilities
#define SOAP_TYPE_tt__EventCapabilities (470)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__EventCapabilities(struct soap*, const char*, int, const tt__EventCapabilities *, const char*);
SOAP_FMAC3 tt__EventCapabilities * SOAP_FMAC4 soap_in_tt__EventCapabilities(struct soap*, const char*, tt__EventCapabilities *, const char*);
SOAP_FMAC1 tt__EventCapabilities * SOAP_FMAC2 soap_instantiate_tt__EventCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__EventCapabilities * soap_new_tt__EventCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__EventCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__EventCapabilities * soap_new_req_tt__EventCapabilities(
	struct soap *soap,
	const std::string& XAddr,
	bool WSSubscriptionPolicySupport,
	bool WSPullPointSupport,
	bool WSPausableSubscriptionManagerInterfaceSupport)
{	tt__EventCapabilities *_p = soap_new_tt__EventCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__EventCapabilities::XAddr = XAddr;
		_p->tt__EventCapabilities::WSSubscriptionPolicySupport = WSSubscriptionPolicySupport;
		_p->tt__EventCapabilities::WSPullPointSupport = WSPullPointSupport;
		_p->tt__EventCapabilities::WSPausableSubscriptionManagerInterfaceSupport = WSPausableSubscriptionManagerInterfaceSupport;
	}
	return _p;
}

inline tt__EventCapabilities * soap_new_set_tt__EventCapabilities(
	struct soap *soap,
	const std::string& XAddr,
	bool WSSubscriptionPolicySupport,
	bool WSPullPointSupport,
	bool WSPausableSubscriptionManagerInterfaceSupport)
{	tt__EventCapabilities *_p = soap_new_tt__EventCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__EventCapabilities::XAddr = XAddr;
		_p->tt__EventCapabilities::WSSubscriptionPolicySupport = WSSubscriptionPolicySupport;
		_p->tt__EventCapabilities::WSPullPointSupport = WSPullPointSupport;
		_p->tt__EventCapabilities::WSPausableSubscriptionManagerInterfaceSupport = WSPausableSubscriptionManagerInterfaceSupport;
	}
	return _p;
}

#ifndef soap_write_tt__EventCapabilities
#define soap_write_tt__EventCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:EventCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EventCapabilities * SOAP_FMAC4 soap_get_tt__EventCapabilities(struct soap*, tt__EventCapabilities *, const char*, const char*);

#ifndef soap_read_tt__EventCapabilities
#define soap_read_tt__EventCapabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__EventCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__DeviceCapabilitiesExtension
#define SOAP_TYPE_tt__DeviceCapabilitiesExtension (469)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DeviceCapabilitiesExtension(struct soap*, const char*, int, const tt__DeviceCapabilitiesExtension *, const char*);
SOAP_FMAC3 tt__DeviceCapabilitiesExtension * SOAP_FMAC4 soap_in_tt__DeviceCapabilitiesExtension(struct soap*, const char*, tt__DeviceCapabilitiesExtension *, const char*);
SOAP_FMAC1 tt__DeviceCapabilitiesExtension * SOAP_FMAC2 soap_instantiate_tt__DeviceCapabilitiesExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__DeviceCapabilitiesExtension * soap_new_tt__DeviceCapabilitiesExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__DeviceCapabilitiesExtension(soap, n, NULL, NULL, NULL); }

inline tt__DeviceCapabilitiesExtension * soap_new_req_tt__DeviceCapabilitiesExtension(
	struct soap *soap)
{	tt__DeviceCapabilitiesExtension *_p = soap_new_tt__DeviceCapabilitiesExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__DeviceCapabilitiesExtension * soap_new_set_tt__DeviceCapabilitiesExtension(
	struct soap *soap)
{	tt__DeviceCapabilitiesExtension *_p = soap_new_tt__DeviceCapabilitiesExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__DeviceCapabilitiesExtension
#define soap_write_tt__DeviceCapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:DeviceCapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DeviceCapabilitiesExtension * SOAP_FMAC4 soap_get_tt__DeviceCapabilitiesExtension(struct soap*, tt__DeviceCapabilitiesExtension *, const char*, const char*);

#ifndef soap_read_tt__DeviceCapabilitiesExtension
#define soap_read_tt__DeviceCapabilitiesExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__DeviceCapabilitiesExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__DeviceCapabilities
#define SOAP_TYPE_tt__DeviceCapabilities (468)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DeviceCapabilities(struct soap*, const char*, int, const tt__DeviceCapabilities *, const char*);
SOAP_FMAC3 tt__DeviceCapabilities * SOAP_FMAC4 soap_in_tt__DeviceCapabilities(struct soap*, const char*, tt__DeviceCapabilities *, const char*);
SOAP_FMAC1 tt__DeviceCapabilities * SOAP_FMAC2 soap_instantiate_tt__DeviceCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__DeviceCapabilities * soap_new_tt__DeviceCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__DeviceCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__DeviceCapabilities * soap_new_req_tt__DeviceCapabilities(
	struct soap *soap,
	const std::string& XAddr)
{	tt__DeviceCapabilities *_p = soap_new_tt__DeviceCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__DeviceCapabilities::XAddr = XAddr;
	}
	return _p;
}

inline tt__DeviceCapabilities * soap_new_set_tt__DeviceCapabilities(
	struct soap *soap,
	const std::string& XAddr,
	tt__NetworkCapabilities *Network,
	tt__SystemCapabilities *System,
	tt__IOCapabilities *IO,
	tt__SecurityCapabilities *Security,
	tt__DeviceCapabilitiesExtension *Extension)
{	tt__DeviceCapabilities *_p = soap_new_tt__DeviceCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__DeviceCapabilities::XAddr = XAddr;
		_p->tt__DeviceCapabilities::Network = Network;
		_p->tt__DeviceCapabilities::System = System;
		_p->tt__DeviceCapabilities::IO = IO;
		_p->tt__DeviceCapabilities::Security = Security;
		_p->tt__DeviceCapabilities::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__DeviceCapabilities
#define soap_write_tt__DeviceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:DeviceCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DeviceCapabilities * SOAP_FMAC4 soap_get_tt__DeviceCapabilities(struct soap*, tt__DeviceCapabilities *, const char*, const char*);

#ifndef soap_read_tt__DeviceCapabilities
#define soap_read_tt__DeviceCapabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__DeviceCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AnalyticsCapabilities
#define SOAP_TYPE_tt__AnalyticsCapabilities (467)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnalyticsCapabilities(struct soap*, const char*, int, const tt__AnalyticsCapabilities *, const char*);
SOAP_FMAC3 tt__AnalyticsCapabilities * SOAP_FMAC4 soap_in_tt__AnalyticsCapabilities(struct soap*, const char*, tt__AnalyticsCapabilities *, const char*);
SOAP_FMAC1 tt__AnalyticsCapabilities * SOAP_FMAC2 soap_instantiate_tt__AnalyticsCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnalyticsCapabilities * soap_new_tt__AnalyticsCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnalyticsCapabilities(soap, n, NULL, NULL, NULL); }

inline tt__AnalyticsCapabilities * soap_new_req_tt__AnalyticsCapabilities(
	struct soap *soap,
	const std::string& XAddr,
	bool RuleSupport,
	bool AnalyticsModuleSupport)
{	tt__AnalyticsCapabilities *_p = soap_new_tt__AnalyticsCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AnalyticsCapabilities::XAddr = XAddr;
		_p->tt__AnalyticsCapabilities::RuleSupport = RuleSupport;
		_p->tt__AnalyticsCapabilities::AnalyticsModuleSupport = AnalyticsModuleSupport;
	}
	return _p;
}

inline tt__AnalyticsCapabilities * soap_new_set_tt__AnalyticsCapabilities(
	struct soap *soap,
	const std::string& XAddr,
	bool RuleSupport,
	bool AnalyticsModuleSupport)
{	tt__AnalyticsCapabilities *_p = soap_new_tt__AnalyticsCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AnalyticsCapabilities::XAddr = XAddr;
		_p->tt__AnalyticsCapabilities::RuleSupport = RuleSupport;
		_p->tt__AnalyticsCapabilities::AnalyticsModuleSupport = AnalyticsModuleSupport;
	}
	return _p;
}

#ifndef soap_write_tt__AnalyticsCapabilities
#define soap_write_tt__AnalyticsCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AnalyticsCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsCapabilities * SOAP_FMAC4 soap_get_tt__AnalyticsCapabilities(struct soap*, tt__AnalyticsCapabilities *, const char*, const char*);

#ifndef soap_read_tt__AnalyticsCapabilities
#define soap_read_tt__AnalyticsCapabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AnalyticsCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__CapabilitiesExtension2
#define SOAP_TYPE_tt__CapabilitiesExtension2 (466)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__CapabilitiesExtension2(struct soap*, const char*, int, const tt__CapabilitiesExtension2 *, const char*);
SOAP_FMAC3 tt__CapabilitiesExtension2 * SOAP_FMAC4 soap_in_tt__CapabilitiesExtension2(struct soap*, const char*, tt__CapabilitiesExtension2 *, const char*);
SOAP_FMAC1 tt__CapabilitiesExtension2 * SOAP_FMAC2 soap_instantiate_tt__CapabilitiesExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__CapabilitiesExtension2 * soap_new_tt__CapabilitiesExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__CapabilitiesExtension2(soap, n, NULL, NULL, NULL); }

inline tt__CapabilitiesExtension2 * soap_new_req_tt__CapabilitiesExtension2(
	struct soap *soap)
{	tt__CapabilitiesExtension2 *_p = soap_new_tt__CapabilitiesExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__CapabilitiesExtension2 * soap_new_set_tt__CapabilitiesExtension2(
	struct soap *soap)
{	tt__CapabilitiesExtension2 *_p = soap_new_tt__CapabilitiesExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__CapabilitiesExtension2
#define soap_write_tt__CapabilitiesExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:CapabilitiesExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CapabilitiesExtension2 * SOAP_FMAC4 soap_get_tt__CapabilitiesExtension2(struct soap*, tt__CapabilitiesExtension2 *, const char*, const char*);

#ifndef soap_read_tt__CapabilitiesExtension2
#define soap_read_tt__CapabilitiesExtension2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__CapabilitiesExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__CapabilitiesExtension
#define SOAP_TYPE_tt__CapabilitiesExtension (465)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__CapabilitiesExtension(struct soap*, const char*, int, const tt__CapabilitiesExtension *, const char*);
SOAP_FMAC3 tt__CapabilitiesExtension * SOAP_FMAC4 soap_in_tt__CapabilitiesExtension(struct soap*, const char*, tt__CapabilitiesExtension *, const char*);
SOAP_FMAC1 tt__CapabilitiesExtension * SOAP_FMAC2 soap_instantiate_tt__CapabilitiesExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__CapabilitiesExtension * soap_new_tt__CapabilitiesExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__CapabilitiesExtension(soap, n, NULL, NULL, NULL); }

inline tt__CapabilitiesExtension * soap_new_req_tt__CapabilitiesExtension(
	struct soap *soap)
{	tt__CapabilitiesExtension *_p = soap_new_tt__CapabilitiesExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__CapabilitiesExtension * soap_new_set_tt__CapabilitiesExtension(
	struct soap *soap,
	tt__DeviceIOCapabilities *DeviceIO,
	tt__DisplayCapabilities *Display,
	tt__RecordingCapabilities *Recording,
	tt__SearchCapabilities *Search,
	tt__ReplayCapabilities *Replay,
	tt__ReceiverCapabilities *Receiver,
	tt__AnalyticsDeviceCapabilities *AnalyticsDevice,
	tt__CapabilitiesExtension2 *Extensions)
{	tt__CapabilitiesExtension *_p = soap_new_tt__CapabilitiesExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__CapabilitiesExtension::DeviceIO = DeviceIO;
		_p->tt__CapabilitiesExtension::Display = Display;
		_p->tt__CapabilitiesExtension::Recording = Recording;
		_p->tt__CapabilitiesExtension::Search = Search;
		_p->tt__CapabilitiesExtension::Replay = Replay;
		_p->tt__CapabilitiesExtension::Receiver = Receiver;
		_p->tt__CapabilitiesExtension::AnalyticsDevice = AnalyticsDevice;
		_p->tt__CapabilitiesExtension::Extensions = Extensions;
	}
	return _p;
}

#ifndef soap_write_tt__CapabilitiesExtension
#define soap_write_tt__CapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:CapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CapabilitiesExtension * SOAP_FMAC4 soap_get_tt__CapabilitiesExtension(struct soap*, tt__CapabilitiesExtension *, const char*, const char*);

#ifndef soap_read_tt__CapabilitiesExtension
#define soap_read_tt__CapabilitiesExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__CapabilitiesExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Capabilities
#define SOAP_TYPE_tt__Capabilities (464)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Capabilities(struct soap*, const char*, int, const tt__Capabilities *, const char*);
SOAP_FMAC3 tt__Capabilities * SOAP_FMAC4 soap_in_tt__Capabilities(struct soap*, const char*, tt__Capabilities *, const char*);
SOAP_FMAC1 tt__Capabilities * SOAP_FMAC2 soap_instantiate_tt__Capabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__Capabilities * soap_new_tt__Capabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__Capabilities(soap, n, NULL, NULL, NULL); }

inline tt__Capabilities * soap_new_req_tt__Capabilities(
	struct soap *soap)
{	tt__Capabilities *_p = soap_new_tt__Capabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__Capabilities * soap_new_set_tt__Capabilities(
	struct soap *soap,
	tt__AnalyticsCapabilities *Analytics,
	tt__DeviceCapabilities *Device,
	tt__EventCapabilities *Events,
	tt__ImagingCapabilities *Imaging,
	tt__MediaCapabilities *Media,
	tt__PTZCapabilities *PTZ,
	tt__CapabilitiesExtension *Extension)
{	tt__Capabilities *_p = soap_new_tt__Capabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Capabilities::Analytics = Analytics;
		_p->tt__Capabilities::Device = Device;
		_p->tt__Capabilities::Events = Events;
		_p->tt__Capabilities::Imaging = Imaging;
		_p->tt__Capabilities::Media = Media;
		_p->tt__Capabilities::PTZ = PTZ;
		_p->tt__Capabilities::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__Capabilities
#define soap_write_tt__Capabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Capabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Capabilities * SOAP_FMAC4 soap_get_tt__Capabilities(struct soap*, tt__Capabilities *, const char*, const char*);

#ifndef soap_read_tt__Capabilities
#define soap_read_tt__Capabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Capabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Dot11AvailableNetworksExtension
#define SOAP_TYPE_tt__Dot11AvailableNetworksExtension (463)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11AvailableNetworksExtension(struct soap*, const char*, int, const tt__Dot11AvailableNetworksExtension *, const char*);
SOAP_FMAC3 tt__Dot11AvailableNetworksExtension * SOAP_FMAC4 soap_in_tt__Dot11AvailableNetworksExtension(struct soap*, const char*, tt__Dot11AvailableNetworksExtension *, const char*);
SOAP_FMAC1 tt__Dot11AvailableNetworksExtension * SOAP_FMAC2 soap_instantiate_tt__Dot11AvailableNetworksExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__Dot11AvailableNetworksExtension * soap_new_tt__Dot11AvailableNetworksExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__Dot11AvailableNetworksExtension(soap, n, NULL, NULL, NULL); }

inline tt__Dot11AvailableNetworksExtension * soap_new_req_tt__Dot11AvailableNetworksExtension(
	struct soap *soap)
{	tt__Dot11AvailableNetworksExtension *_p = soap_new_tt__Dot11AvailableNetworksExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__Dot11AvailableNetworksExtension * soap_new_set_tt__Dot11AvailableNetworksExtension(
	struct soap *soap)
{	tt__Dot11AvailableNetworksExtension *_p = soap_new_tt__Dot11AvailableNetworksExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__Dot11AvailableNetworksExtension
#define soap_write_tt__Dot11AvailableNetworksExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Dot11AvailableNetworksExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11AvailableNetworksExtension * SOAP_FMAC4 soap_get_tt__Dot11AvailableNetworksExtension(struct soap*, tt__Dot11AvailableNetworksExtension *, const char*, const char*);

#ifndef soap_read_tt__Dot11AvailableNetworksExtension
#define soap_read_tt__Dot11AvailableNetworksExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Dot11AvailableNetworksExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Dot11AvailableNetworks
#define SOAP_TYPE_tt__Dot11AvailableNetworks (462)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11AvailableNetworks(struct soap*, const char*, int, const tt__Dot11AvailableNetworks *, const char*);
SOAP_FMAC3 tt__Dot11AvailableNetworks * SOAP_FMAC4 soap_in_tt__Dot11AvailableNetworks(struct soap*, const char*, tt__Dot11AvailableNetworks *, const char*);
SOAP_FMAC1 tt__Dot11AvailableNetworks * SOAP_FMAC2 soap_instantiate_tt__Dot11AvailableNetworks(struct soap*, int, const char*, const char*, size_t*);

inline tt__Dot11AvailableNetworks * soap_new_tt__Dot11AvailableNetworks(struct soap *soap, int n = -1) { return soap_instantiate_tt__Dot11AvailableNetworks(soap, n, NULL, NULL, NULL); }

inline tt__Dot11AvailableNetworks * soap_new_req_tt__Dot11AvailableNetworks(
	struct soap *soap,
	const xsd__hexBinary& SSID)
{	tt__Dot11AvailableNetworks *_p = soap_new_tt__Dot11AvailableNetworks(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Dot11AvailableNetworks::SSID = SSID;
	}
	return _p;
}

inline tt__Dot11AvailableNetworks * soap_new_set_tt__Dot11AvailableNetworks(
	struct soap *soap,
	const xsd__hexBinary& SSID,
	std::string *BSSID,
	const std::vector<enum tt__Dot11AuthAndMangementSuite> & AuthAndMangementSuite,
	const std::vector<enum tt__Dot11Cipher> & PairCipher,
	const std::vector<enum tt__Dot11Cipher> & GroupCipher,
	enum tt__Dot11SignalStrength *SignalStrength,
	tt__Dot11AvailableNetworksExtension *Extension)
{	tt__Dot11AvailableNetworks *_p = soap_new_tt__Dot11AvailableNetworks(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Dot11AvailableNetworks::SSID = SSID;
		_p->tt__Dot11AvailableNetworks::BSSID = BSSID;
		_p->tt__Dot11AvailableNetworks::AuthAndMangementSuite = AuthAndMangementSuite;
		_p->tt__Dot11AvailableNetworks::PairCipher = PairCipher;
		_p->tt__Dot11AvailableNetworks::GroupCipher = GroupCipher;
		_p->tt__Dot11AvailableNetworks::SignalStrength = SignalStrength;
		_p->tt__Dot11AvailableNetworks::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__Dot11AvailableNetworks
#define soap_write_tt__Dot11AvailableNetworks(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Dot11AvailableNetworks", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11AvailableNetworks * SOAP_FMAC4 soap_get_tt__Dot11AvailableNetworks(struct soap*, tt__Dot11AvailableNetworks *, const char*, const char*);

#ifndef soap_read_tt__Dot11AvailableNetworks
#define soap_read_tt__Dot11AvailableNetworks(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Dot11AvailableNetworks(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Dot11Status
#define SOAP_TYPE_tt__Dot11Status (461)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11Status(struct soap*, const char*, int, const tt__Dot11Status *, const char*);
SOAP_FMAC3 tt__Dot11Status * SOAP_FMAC4 soap_in_tt__Dot11Status(struct soap*, const char*, tt__Dot11Status *, const char*);
SOAP_FMAC1 tt__Dot11Status * SOAP_FMAC2 soap_instantiate_tt__Dot11Status(struct soap*, int, const char*, const char*, size_t*);

inline tt__Dot11Status * soap_new_tt__Dot11Status(struct soap *soap, int n = -1) { return soap_instantiate_tt__Dot11Status(soap, n, NULL, NULL, NULL); }

inline tt__Dot11Status * soap_new_req_tt__Dot11Status(
	struct soap *soap,
	const xsd__hexBinary& SSID,
	const std::string& ActiveConfigAlias)
{	tt__Dot11Status *_p = soap_new_tt__Dot11Status(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Dot11Status::SSID = SSID;
		_p->tt__Dot11Status::ActiveConfigAlias = ActiveConfigAlias;
	}
	return _p;
}

inline tt__Dot11Status * soap_new_set_tt__Dot11Status(
	struct soap *soap,
	const xsd__hexBinary& SSID,
	std::string *BSSID,
	enum tt__Dot11Cipher *PairCipher,
	enum tt__Dot11Cipher *GroupCipher,
	enum tt__Dot11SignalStrength *SignalStrength,
	const std::string& ActiveConfigAlias)
{	tt__Dot11Status *_p = soap_new_tt__Dot11Status(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Dot11Status::SSID = SSID;
		_p->tt__Dot11Status::BSSID = BSSID;
		_p->tt__Dot11Status::PairCipher = PairCipher;
		_p->tt__Dot11Status::GroupCipher = GroupCipher;
		_p->tt__Dot11Status::SignalStrength = SignalStrength;
		_p->tt__Dot11Status::ActiveConfigAlias = ActiveConfigAlias;
	}
	return _p;
}

#ifndef soap_write_tt__Dot11Status
#define soap_write_tt__Dot11Status(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Dot11Status", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11Status * SOAP_FMAC4 soap_get_tt__Dot11Status(struct soap*, tt__Dot11Status *, const char*, const char*);

#ifndef soap_read_tt__Dot11Status
#define soap_read_tt__Dot11Status(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Dot11Status(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Dot11Capabilities
#define SOAP_TYPE_tt__Dot11Capabilities (460)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11Capabilities(struct soap*, const char*, int, const tt__Dot11Capabilities *, const char*);
SOAP_FMAC3 tt__Dot11Capabilities * SOAP_FMAC4 soap_in_tt__Dot11Capabilities(struct soap*, const char*, tt__Dot11Capabilities *, const char*);
SOAP_FMAC1 tt__Dot11Capabilities * SOAP_FMAC2 soap_instantiate_tt__Dot11Capabilities(struct soap*, int, const char*, const char*, size_t*);

inline tt__Dot11Capabilities * soap_new_tt__Dot11Capabilities(struct soap *soap, int n = -1) { return soap_instantiate_tt__Dot11Capabilities(soap, n, NULL, NULL, NULL); }

inline tt__Dot11Capabilities * soap_new_req_tt__Dot11Capabilities(
	struct soap *soap,
	bool TKIP,
	bool ScanAvailableNetworks,
	bool MultipleConfiguration,
	bool AdHocStationMode,
	bool WEP)
{	tt__Dot11Capabilities *_p = soap_new_tt__Dot11Capabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Dot11Capabilities::TKIP = TKIP;
		_p->tt__Dot11Capabilities::ScanAvailableNetworks = ScanAvailableNetworks;
		_p->tt__Dot11Capabilities::MultipleConfiguration = MultipleConfiguration;
		_p->tt__Dot11Capabilities::AdHocStationMode = AdHocStationMode;
		_p->tt__Dot11Capabilities::WEP = WEP;
	}
	return _p;
}

inline tt__Dot11Capabilities * soap_new_set_tt__Dot11Capabilities(
	struct soap *soap,
	bool TKIP,
	bool ScanAvailableNetworks,
	bool MultipleConfiguration,
	bool AdHocStationMode,
	bool WEP)
{	tt__Dot11Capabilities *_p = soap_new_tt__Dot11Capabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Dot11Capabilities::TKIP = TKIP;
		_p->tt__Dot11Capabilities::ScanAvailableNetworks = ScanAvailableNetworks;
		_p->tt__Dot11Capabilities::MultipleConfiguration = MultipleConfiguration;
		_p->tt__Dot11Capabilities::AdHocStationMode = AdHocStationMode;
		_p->tt__Dot11Capabilities::WEP = WEP;
	}
	return _p;
}

#ifndef soap_write_tt__Dot11Capabilities
#define soap_write_tt__Dot11Capabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Dot11Capabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11Capabilities * SOAP_FMAC4 soap_get_tt__Dot11Capabilities(struct soap*, tt__Dot11Capabilities *, const char*, const char*);

#ifndef soap_read_tt__Dot11Capabilities
#define soap_read_tt__Dot11Capabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Dot11Capabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__NetworkInterfaceSetConfigurationExtension2
#define SOAP_TYPE_tt__NetworkInterfaceSetConfigurationExtension2 (459)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkInterfaceSetConfigurationExtension2(struct soap*, const char*, int, const tt__NetworkInterfaceSetConfigurationExtension2 *, const char*);
SOAP_FMAC3 tt__NetworkInterfaceSetConfigurationExtension2 * SOAP_FMAC4 soap_in_tt__NetworkInterfaceSetConfigurationExtension2(struct soap*, const char*, tt__NetworkInterfaceSetConfigurationExtension2 *, const char*);
SOAP_FMAC1 tt__NetworkInterfaceSetConfigurationExtension2 * SOAP_FMAC2 soap_instantiate_tt__NetworkInterfaceSetConfigurationExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkInterfaceSetConfigurationExtension2 * soap_new_tt__NetworkInterfaceSetConfigurationExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkInterfaceSetConfigurationExtension2(soap, n, NULL, NULL, NULL); }

inline tt__NetworkInterfaceSetConfigurationExtension2 * soap_new_req_tt__NetworkInterfaceSetConfigurationExtension2(
	struct soap *soap)
{	tt__NetworkInterfaceSetConfigurationExtension2 *_p = soap_new_tt__NetworkInterfaceSetConfigurationExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__NetworkInterfaceSetConfigurationExtension2 * soap_new_set_tt__NetworkInterfaceSetConfigurationExtension2(
	struct soap *soap)
{	tt__NetworkInterfaceSetConfigurationExtension2 *_p = soap_new_tt__NetworkInterfaceSetConfigurationExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__NetworkInterfaceSetConfigurationExtension2
#define soap_write_tt__NetworkInterfaceSetConfigurationExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:NetworkInterfaceSetConfigurationExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceSetConfigurationExtension2 * SOAP_FMAC4 soap_get_tt__NetworkInterfaceSetConfigurationExtension2(struct soap*, tt__NetworkInterfaceSetConfigurationExtension2 *, const char*, const char*);

#ifndef soap_read_tt__NetworkInterfaceSetConfigurationExtension2
#define soap_read_tt__NetworkInterfaceSetConfigurationExtension2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__NetworkInterfaceSetConfigurationExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Dot11PSKSetExtension
#define SOAP_TYPE_tt__Dot11PSKSetExtension (458)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11PSKSetExtension(struct soap*, const char*, int, const tt__Dot11PSKSetExtension *, const char*);
SOAP_FMAC3 tt__Dot11PSKSetExtension * SOAP_FMAC4 soap_in_tt__Dot11PSKSetExtension(struct soap*, const char*, tt__Dot11PSKSetExtension *, const char*);
SOAP_FMAC1 tt__Dot11PSKSetExtension * SOAP_FMAC2 soap_instantiate_tt__Dot11PSKSetExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__Dot11PSKSetExtension * soap_new_tt__Dot11PSKSetExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__Dot11PSKSetExtension(soap, n, NULL, NULL, NULL); }

inline tt__Dot11PSKSetExtension * soap_new_req_tt__Dot11PSKSetExtension(
	struct soap *soap)
{	tt__Dot11PSKSetExtension *_p = soap_new_tt__Dot11PSKSetExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__Dot11PSKSetExtension * soap_new_set_tt__Dot11PSKSetExtension(
	struct soap *soap)
{	tt__Dot11PSKSetExtension *_p = soap_new_tt__Dot11PSKSetExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__Dot11PSKSetExtension
#define soap_write_tt__Dot11PSKSetExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Dot11PSKSetExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11PSKSetExtension * SOAP_FMAC4 soap_get_tt__Dot11PSKSetExtension(struct soap*, tt__Dot11PSKSetExtension *, const char*, const char*);

#ifndef soap_read_tt__Dot11PSKSetExtension
#define soap_read_tt__Dot11PSKSetExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Dot11PSKSetExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Dot11PSKSet
#define SOAP_TYPE_tt__Dot11PSKSet (457)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11PSKSet(struct soap*, const char*, int, const tt__Dot11PSKSet *, const char*);
SOAP_FMAC3 tt__Dot11PSKSet * SOAP_FMAC4 soap_in_tt__Dot11PSKSet(struct soap*, const char*, tt__Dot11PSKSet *, const char*);
SOAP_FMAC1 tt__Dot11PSKSet * SOAP_FMAC2 soap_instantiate_tt__Dot11PSKSet(struct soap*, int, const char*, const char*, size_t*);

inline tt__Dot11PSKSet * soap_new_tt__Dot11PSKSet(struct soap *soap, int n = -1) { return soap_instantiate_tt__Dot11PSKSet(soap, n, NULL, NULL, NULL); }

inline tt__Dot11PSKSet * soap_new_req_tt__Dot11PSKSet(
	struct soap *soap)
{	tt__Dot11PSKSet *_p = soap_new_tt__Dot11PSKSet(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__Dot11PSKSet * soap_new_set_tt__Dot11PSKSet(
	struct soap *soap,
	xsd__hexBinary *Key,
	std::string *Passphrase,
	tt__Dot11PSKSetExtension *Extension)
{	tt__Dot11PSKSet *_p = soap_new_tt__Dot11PSKSet(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Dot11PSKSet::Key = Key;
		_p->tt__Dot11PSKSet::Passphrase = Passphrase;
		_p->tt__Dot11PSKSet::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__Dot11PSKSet
#define soap_write_tt__Dot11PSKSet(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Dot11PSKSet", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11PSKSet * SOAP_FMAC4 soap_get_tt__Dot11PSKSet(struct soap*, tt__Dot11PSKSet *, const char*, const char*);

#ifndef soap_read_tt__Dot11PSKSet
#define soap_read_tt__Dot11PSKSet(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Dot11PSKSet(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Dot11SecurityConfigurationExtension
#define SOAP_TYPE_tt__Dot11SecurityConfigurationExtension (456)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11SecurityConfigurationExtension(struct soap*, const char*, int, const tt__Dot11SecurityConfigurationExtension *, const char*);
SOAP_FMAC3 tt__Dot11SecurityConfigurationExtension * SOAP_FMAC4 soap_in_tt__Dot11SecurityConfigurationExtension(struct soap*, const char*, tt__Dot11SecurityConfigurationExtension *, const char*);
SOAP_FMAC1 tt__Dot11SecurityConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__Dot11SecurityConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__Dot11SecurityConfigurationExtension * soap_new_tt__Dot11SecurityConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__Dot11SecurityConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__Dot11SecurityConfigurationExtension * soap_new_req_tt__Dot11SecurityConfigurationExtension(
	struct soap *soap)
{	tt__Dot11SecurityConfigurationExtension *_p = soap_new_tt__Dot11SecurityConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__Dot11SecurityConfigurationExtension * soap_new_set_tt__Dot11SecurityConfigurationExtension(
	struct soap *soap)
{	tt__Dot11SecurityConfigurationExtension *_p = soap_new_tt__Dot11SecurityConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__Dot11SecurityConfigurationExtension
#define soap_write_tt__Dot11SecurityConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Dot11SecurityConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11SecurityConfigurationExtension * SOAP_FMAC4 soap_get_tt__Dot11SecurityConfigurationExtension(struct soap*, tt__Dot11SecurityConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__Dot11SecurityConfigurationExtension
#define soap_read_tt__Dot11SecurityConfigurationExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Dot11SecurityConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Dot11SecurityConfiguration
#define SOAP_TYPE_tt__Dot11SecurityConfiguration (455)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11SecurityConfiguration(struct soap*, const char*, int, const tt__Dot11SecurityConfiguration *, const char*);
SOAP_FMAC3 tt__Dot11SecurityConfiguration * SOAP_FMAC4 soap_in_tt__Dot11SecurityConfiguration(struct soap*, const char*, tt__Dot11SecurityConfiguration *, const char*);
SOAP_FMAC1 tt__Dot11SecurityConfiguration * SOAP_FMAC2 soap_instantiate_tt__Dot11SecurityConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__Dot11SecurityConfiguration * soap_new_tt__Dot11SecurityConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__Dot11SecurityConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__Dot11SecurityConfiguration * soap_new_req_tt__Dot11SecurityConfiguration(
	struct soap *soap,
	enum tt__Dot11SecurityMode Mode)
{	tt__Dot11SecurityConfiguration *_p = soap_new_tt__Dot11SecurityConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Dot11SecurityConfiguration::Mode = Mode;
	}
	return _p;
}

inline tt__Dot11SecurityConfiguration * soap_new_set_tt__Dot11SecurityConfiguration(
	struct soap *soap,
	enum tt__Dot11SecurityMode Mode,
	enum tt__Dot11Cipher *Algorithm,
	tt__Dot11PSKSet *PSK,
	std::string *Dot1X,
	tt__Dot11SecurityConfigurationExtension *Extension)
{	tt__Dot11SecurityConfiguration *_p = soap_new_tt__Dot11SecurityConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Dot11SecurityConfiguration::Mode = Mode;
		_p->tt__Dot11SecurityConfiguration::Algorithm = Algorithm;
		_p->tt__Dot11SecurityConfiguration::PSK = PSK;
		_p->tt__Dot11SecurityConfiguration::Dot1X = Dot1X;
		_p->tt__Dot11SecurityConfiguration::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__Dot11SecurityConfiguration
#define soap_write_tt__Dot11SecurityConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Dot11SecurityConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11SecurityConfiguration * SOAP_FMAC4 soap_get_tt__Dot11SecurityConfiguration(struct soap*, tt__Dot11SecurityConfiguration *, const char*, const char*);

#ifndef soap_read_tt__Dot11SecurityConfiguration
#define soap_read_tt__Dot11SecurityConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Dot11SecurityConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Dot11Configuration
#define SOAP_TYPE_tt__Dot11Configuration (454)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot11Configuration(struct soap*, const char*, int, const tt__Dot11Configuration *, const char*);
SOAP_FMAC3 tt__Dot11Configuration * SOAP_FMAC4 soap_in_tt__Dot11Configuration(struct soap*, const char*, tt__Dot11Configuration *, const char*);
SOAP_FMAC1 tt__Dot11Configuration * SOAP_FMAC2 soap_instantiate_tt__Dot11Configuration(struct soap*, int, const char*, const char*, size_t*);

inline tt__Dot11Configuration * soap_new_tt__Dot11Configuration(struct soap *soap, int n = -1) { return soap_instantiate_tt__Dot11Configuration(soap, n, NULL, NULL, NULL); }

inline tt__Dot11Configuration * soap_new_req_tt__Dot11Configuration(
	struct soap *soap,
	const xsd__hexBinary& SSID,
	enum tt__Dot11StationMode Mode,
	const std::string& Alias,
	const std::string& Priority,
	tt__Dot11SecurityConfiguration *Security)
{	tt__Dot11Configuration *_p = soap_new_tt__Dot11Configuration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Dot11Configuration::SSID = SSID;
		_p->tt__Dot11Configuration::Mode = Mode;
		_p->tt__Dot11Configuration::Alias = Alias;
		_p->tt__Dot11Configuration::Priority = Priority;
		_p->tt__Dot11Configuration::Security = Security;
	}
	return _p;
}

inline tt__Dot11Configuration * soap_new_set_tt__Dot11Configuration(
	struct soap *soap,
	const xsd__hexBinary& SSID,
	enum tt__Dot11StationMode Mode,
	const std::string& Alias,
	const std::string& Priority,
	tt__Dot11SecurityConfiguration *Security)
{	tt__Dot11Configuration *_p = soap_new_tt__Dot11Configuration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Dot11Configuration::SSID = SSID;
		_p->tt__Dot11Configuration::Mode = Mode;
		_p->tt__Dot11Configuration::Alias = Alias;
		_p->tt__Dot11Configuration::Priority = Priority;
		_p->tt__Dot11Configuration::Security = Security;
	}
	return _p;
}

#ifndef soap_write_tt__Dot11Configuration
#define soap_write_tt__Dot11Configuration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Dot11Configuration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11Configuration * SOAP_FMAC4 soap_get_tt__Dot11Configuration(struct soap*, tt__Dot11Configuration *, const char*, const char*);

#ifndef soap_read_tt__Dot11Configuration
#define soap_read_tt__Dot11Configuration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Dot11Configuration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IPAddressFilterExtension
#define SOAP_TYPE_tt__IPAddressFilterExtension (453)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPAddressFilterExtension(struct soap*, const char*, int, const tt__IPAddressFilterExtension *, const char*);
SOAP_FMAC3 tt__IPAddressFilterExtension * SOAP_FMAC4 soap_in_tt__IPAddressFilterExtension(struct soap*, const char*, tt__IPAddressFilterExtension *, const char*);
SOAP_FMAC1 tt__IPAddressFilterExtension * SOAP_FMAC2 soap_instantiate_tt__IPAddressFilterExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__IPAddressFilterExtension * soap_new_tt__IPAddressFilterExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__IPAddressFilterExtension(soap, n, NULL, NULL, NULL); }

inline tt__IPAddressFilterExtension * soap_new_req_tt__IPAddressFilterExtension(
	struct soap *soap)
{	tt__IPAddressFilterExtension *_p = soap_new_tt__IPAddressFilterExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__IPAddressFilterExtension * soap_new_set_tt__IPAddressFilterExtension(
	struct soap *soap)
{	tt__IPAddressFilterExtension *_p = soap_new_tt__IPAddressFilterExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__IPAddressFilterExtension
#define soap_write_tt__IPAddressFilterExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:IPAddressFilterExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPAddressFilterExtension * SOAP_FMAC4 soap_get_tt__IPAddressFilterExtension(struct soap*, tt__IPAddressFilterExtension *, const char*, const char*);

#ifndef soap_read_tt__IPAddressFilterExtension
#define soap_read_tt__IPAddressFilterExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IPAddressFilterExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IPAddressFilter
#define SOAP_TYPE_tt__IPAddressFilter (452)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPAddressFilter(struct soap*, const char*, int, const tt__IPAddressFilter *, const char*);
SOAP_FMAC3 tt__IPAddressFilter * SOAP_FMAC4 soap_in_tt__IPAddressFilter(struct soap*, const char*, tt__IPAddressFilter *, const char*);
SOAP_FMAC1 tt__IPAddressFilter * SOAP_FMAC2 soap_instantiate_tt__IPAddressFilter(struct soap*, int, const char*, const char*, size_t*);

inline tt__IPAddressFilter * soap_new_tt__IPAddressFilter(struct soap *soap, int n = -1) { return soap_instantiate_tt__IPAddressFilter(soap, n, NULL, NULL, NULL); }

inline tt__IPAddressFilter * soap_new_req_tt__IPAddressFilter(
	struct soap *soap,
	enum tt__IPAddressFilterType Type)
{	tt__IPAddressFilter *_p = soap_new_tt__IPAddressFilter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__IPAddressFilter::Type = Type;
	}
	return _p;
}

inline tt__IPAddressFilter * soap_new_set_tt__IPAddressFilter(
	struct soap *soap,
	enum tt__IPAddressFilterType Type,
	const std::vector<tt__PrefixedIPv4Address *> & IPv4Address,
	const std::vector<tt__PrefixedIPv6Address *> & IPv6Address,
	tt__IPAddressFilterExtension *Extension)
{	tt__IPAddressFilter *_p = soap_new_tt__IPAddressFilter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__IPAddressFilter::Type = Type;
		_p->tt__IPAddressFilter::IPv4Address = IPv4Address;
		_p->tt__IPAddressFilter::IPv6Address = IPv6Address;
		_p->tt__IPAddressFilter::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__IPAddressFilter
#define soap_write_tt__IPAddressFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:IPAddressFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPAddressFilter * SOAP_FMAC4 soap_get_tt__IPAddressFilter(struct soap*, tt__IPAddressFilter *, const char*, const char*);

#ifndef soap_read_tt__IPAddressFilter
#define soap_read_tt__IPAddressFilter(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IPAddressFilter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__NetworkZeroConfigurationExtension2
#define SOAP_TYPE_tt__NetworkZeroConfigurationExtension2 (451)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkZeroConfigurationExtension2(struct soap*, const char*, int, const tt__NetworkZeroConfigurationExtension2 *, const char*);
SOAP_FMAC3 tt__NetworkZeroConfigurationExtension2 * SOAP_FMAC4 soap_in_tt__NetworkZeroConfigurationExtension2(struct soap*, const char*, tt__NetworkZeroConfigurationExtension2 *, const char*);
SOAP_FMAC1 tt__NetworkZeroConfigurationExtension2 * SOAP_FMAC2 soap_instantiate_tt__NetworkZeroConfigurationExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkZeroConfigurationExtension2 * soap_new_tt__NetworkZeroConfigurationExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkZeroConfigurationExtension2(soap, n, NULL, NULL, NULL); }

inline tt__NetworkZeroConfigurationExtension2 * soap_new_req_tt__NetworkZeroConfigurationExtension2(
	struct soap *soap)
{	tt__NetworkZeroConfigurationExtension2 *_p = soap_new_tt__NetworkZeroConfigurationExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__NetworkZeroConfigurationExtension2 * soap_new_set_tt__NetworkZeroConfigurationExtension2(
	struct soap *soap)
{	tt__NetworkZeroConfigurationExtension2 *_p = soap_new_tt__NetworkZeroConfigurationExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__NetworkZeroConfigurationExtension2
#define soap_write_tt__NetworkZeroConfigurationExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:NetworkZeroConfigurationExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkZeroConfigurationExtension2 * SOAP_FMAC4 soap_get_tt__NetworkZeroConfigurationExtension2(struct soap*, tt__NetworkZeroConfigurationExtension2 *, const char*, const char*);

#ifndef soap_read_tt__NetworkZeroConfigurationExtension2
#define soap_read_tt__NetworkZeroConfigurationExtension2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__NetworkZeroConfigurationExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__NetworkZeroConfigurationExtension
#define SOAP_TYPE_tt__NetworkZeroConfigurationExtension (450)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkZeroConfigurationExtension(struct soap*, const char*, int, const tt__NetworkZeroConfigurationExtension *, const char*);
SOAP_FMAC3 tt__NetworkZeroConfigurationExtension * SOAP_FMAC4 soap_in_tt__NetworkZeroConfigurationExtension(struct soap*, const char*, tt__NetworkZeroConfigurationExtension *, const char*);
SOAP_FMAC1 tt__NetworkZeroConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__NetworkZeroConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkZeroConfigurationExtension * soap_new_tt__NetworkZeroConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkZeroConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__NetworkZeroConfigurationExtension * soap_new_req_tt__NetworkZeroConfigurationExtension(
	struct soap *soap)
{	tt__NetworkZeroConfigurationExtension *_p = soap_new_tt__NetworkZeroConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__NetworkZeroConfigurationExtension * soap_new_set_tt__NetworkZeroConfigurationExtension(
	struct soap *soap,
	const std::vector<tt__NetworkZeroConfiguration *> & Additional,
	tt__NetworkZeroConfigurationExtension2 *Extension)
{	tt__NetworkZeroConfigurationExtension *_p = soap_new_tt__NetworkZeroConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__NetworkZeroConfigurationExtension::Additional = Additional;
		_p->tt__NetworkZeroConfigurationExtension::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__NetworkZeroConfigurationExtension
#define soap_write_tt__NetworkZeroConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:NetworkZeroConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkZeroConfigurationExtension * SOAP_FMAC4 soap_get_tt__NetworkZeroConfigurationExtension(struct soap*, tt__NetworkZeroConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__NetworkZeroConfigurationExtension
#define soap_read_tt__NetworkZeroConfigurationExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__NetworkZeroConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__NetworkZeroConfiguration
#define SOAP_TYPE_tt__NetworkZeroConfiguration (449)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkZeroConfiguration(struct soap*, const char*, int, const tt__NetworkZeroConfiguration *, const char*);
SOAP_FMAC3 tt__NetworkZeroConfiguration * SOAP_FMAC4 soap_in_tt__NetworkZeroConfiguration(struct soap*, const char*, tt__NetworkZeroConfiguration *, const char*);
SOAP_FMAC1 tt__NetworkZeroConfiguration * SOAP_FMAC2 soap_instantiate_tt__NetworkZeroConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkZeroConfiguration * soap_new_tt__NetworkZeroConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkZeroConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__NetworkZeroConfiguration * soap_new_req_tt__NetworkZeroConfiguration(
	struct soap *soap,
	const std::string& InterfaceToken,
	bool Enabled)
{	tt__NetworkZeroConfiguration *_p = soap_new_tt__NetworkZeroConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__NetworkZeroConfiguration::InterfaceToken = InterfaceToken;
		_p->tt__NetworkZeroConfiguration::Enabled = Enabled;
	}
	return _p;
}

inline tt__NetworkZeroConfiguration * soap_new_set_tt__NetworkZeroConfiguration(
	struct soap *soap,
	const std::string& InterfaceToken,
	bool Enabled,
	const std::vector<std::string> & Addresses,
	tt__NetworkZeroConfigurationExtension *Extension)
{	tt__NetworkZeroConfiguration *_p = soap_new_tt__NetworkZeroConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__NetworkZeroConfiguration::InterfaceToken = InterfaceToken;
		_p->tt__NetworkZeroConfiguration::Enabled = Enabled;
		_p->tt__NetworkZeroConfiguration::Addresses = Addresses;
		_p->tt__NetworkZeroConfiguration::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__NetworkZeroConfiguration
#define soap_write_tt__NetworkZeroConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:NetworkZeroConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkZeroConfiguration * SOAP_FMAC4 soap_get_tt__NetworkZeroConfiguration(struct soap*, tt__NetworkZeroConfiguration *, const char*, const char*);

#ifndef soap_read_tt__NetworkZeroConfiguration
#define soap_read_tt__NetworkZeroConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__NetworkZeroConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__NetworkGateway
#define SOAP_TYPE_tt__NetworkGateway (448)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkGateway(struct soap*, const char*, int, const tt__NetworkGateway *, const char*);
SOAP_FMAC3 tt__NetworkGateway * SOAP_FMAC4 soap_in_tt__NetworkGateway(struct soap*, const char*, tt__NetworkGateway *, const char*);
SOAP_FMAC1 tt__NetworkGateway * SOAP_FMAC2 soap_instantiate_tt__NetworkGateway(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkGateway * soap_new_tt__NetworkGateway(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkGateway(soap, n, NULL, NULL, NULL); }

inline tt__NetworkGateway * soap_new_req_tt__NetworkGateway(
	struct soap *soap)
{	tt__NetworkGateway *_p = soap_new_tt__NetworkGateway(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__NetworkGateway * soap_new_set_tt__NetworkGateway(
	struct soap *soap,
	const std::vector<std::string> & IPv4Address,
	const std::vector<std::string> & IPv6Address)
{	tt__NetworkGateway *_p = soap_new_tt__NetworkGateway(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__NetworkGateway::IPv4Address = IPv4Address;
		_p->tt__NetworkGateway::IPv6Address = IPv6Address;
	}
	return _p;
}

#ifndef soap_write_tt__NetworkGateway
#define soap_write_tt__NetworkGateway(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:NetworkGateway", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkGateway * SOAP_FMAC4 soap_get_tt__NetworkGateway(struct soap*, tt__NetworkGateway *, const char*, const char*);

#ifndef soap_read_tt__NetworkGateway
#define soap_read_tt__NetworkGateway(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__NetworkGateway(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IPv4NetworkInterfaceSetConfiguration
#define SOAP_TYPE_tt__IPv4NetworkInterfaceSetConfiguration (447)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPv4NetworkInterfaceSetConfiguration(struct soap*, const char*, int, const tt__IPv4NetworkInterfaceSetConfiguration *, const char*);
SOAP_FMAC3 tt__IPv4NetworkInterfaceSetConfiguration * SOAP_FMAC4 soap_in_tt__IPv4NetworkInterfaceSetConfiguration(struct soap*, const char*, tt__IPv4NetworkInterfaceSetConfiguration *, const char*);
SOAP_FMAC1 tt__IPv4NetworkInterfaceSetConfiguration * SOAP_FMAC2 soap_instantiate_tt__IPv4NetworkInterfaceSetConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__IPv4NetworkInterfaceSetConfiguration * soap_new_tt__IPv4NetworkInterfaceSetConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__IPv4NetworkInterfaceSetConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__IPv4NetworkInterfaceSetConfiguration * soap_new_req_tt__IPv4NetworkInterfaceSetConfiguration(
	struct soap *soap)
{	tt__IPv4NetworkInterfaceSetConfiguration *_p = soap_new_tt__IPv4NetworkInterfaceSetConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__IPv4NetworkInterfaceSetConfiguration * soap_new_set_tt__IPv4NetworkInterfaceSetConfiguration(
	struct soap *soap,
	bool *Enabled,
	const std::vector<tt__PrefixedIPv4Address *> & Manual,
	bool *DHCP)
{	tt__IPv4NetworkInterfaceSetConfiguration *_p = soap_new_tt__IPv4NetworkInterfaceSetConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__IPv4NetworkInterfaceSetConfiguration::Enabled = Enabled;
		_p->tt__IPv4NetworkInterfaceSetConfiguration::Manual = Manual;
		_p->tt__IPv4NetworkInterfaceSetConfiguration::DHCP = DHCP;
	}
	return _p;
}

#ifndef soap_write_tt__IPv4NetworkInterfaceSetConfiguration
#define soap_write_tt__IPv4NetworkInterfaceSetConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:IPv4NetworkInterfaceSetConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPv4NetworkInterfaceSetConfiguration * SOAP_FMAC4 soap_get_tt__IPv4NetworkInterfaceSetConfiguration(struct soap*, tt__IPv4NetworkInterfaceSetConfiguration *, const char*, const char*);

#ifndef soap_read_tt__IPv4NetworkInterfaceSetConfiguration
#define soap_read_tt__IPv4NetworkInterfaceSetConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IPv4NetworkInterfaceSetConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IPv6NetworkInterfaceSetConfiguration
#define SOAP_TYPE_tt__IPv6NetworkInterfaceSetConfiguration (446)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPv6NetworkInterfaceSetConfiguration(struct soap*, const char*, int, const tt__IPv6NetworkInterfaceSetConfiguration *, const char*);
SOAP_FMAC3 tt__IPv6NetworkInterfaceSetConfiguration * SOAP_FMAC4 soap_in_tt__IPv6NetworkInterfaceSetConfiguration(struct soap*, const char*, tt__IPv6NetworkInterfaceSetConfiguration *, const char*);
SOAP_FMAC1 tt__IPv6NetworkInterfaceSetConfiguration * SOAP_FMAC2 soap_instantiate_tt__IPv6NetworkInterfaceSetConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__IPv6NetworkInterfaceSetConfiguration * soap_new_tt__IPv6NetworkInterfaceSetConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__IPv6NetworkInterfaceSetConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__IPv6NetworkInterfaceSetConfiguration * soap_new_req_tt__IPv6NetworkInterfaceSetConfiguration(
	struct soap *soap)
{	tt__IPv6NetworkInterfaceSetConfiguration *_p = soap_new_tt__IPv6NetworkInterfaceSetConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__IPv6NetworkInterfaceSetConfiguration * soap_new_set_tt__IPv6NetworkInterfaceSetConfiguration(
	struct soap *soap,
	bool *Enabled,
	bool *AcceptRouterAdvert,
	const std::vector<tt__PrefixedIPv6Address *> & Manual,
	enum tt__IPv6DHCPConfiguration *DHCP)
{	tt__IPv6NetworkInterfaceSetConfiguration *_p = soap_new_tt__IPv6NetworkInterfaceSetConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__IPv6NetworkInterfaceSetConfiguration::Enabled = Enabled;
		_p->tt__IPv6NetworkInterfaceSetConfiguration::AcceptRouterAdvert = AcceptRouterAdvert;
		_p->tt__IPv6NetworkInterfaceSetConfiguration::Manual = Manual;
		_p->tt__IPv6NetworkInterfaceSetConfiguration::DHCP = DHCP;
	}
	return _p;
}

#ifndef soap_write_tt__IPv6NetworkInterfaceSetConfiguration
#define soap_write_tt__IPv6NetworkInterfaceSetConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:IPv6NetworkInterfaceSetConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPv6NetworkInterfaceSetConfiguration * SOAP_FMAC4 soap_get_tt__IPv6NetworkInterfaceSetConfiguration(struct soap*, tt__IPv6NetworkInterfaceSetConfiguration *, const char*, const char*);

#ifndef soap_read_tt__IPv6NetworkInterfaceSetConfiguration
#define soap_read_tt__IPv6NetworkInterfaceSetConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IPv6NetworkInterfaceSetConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__NetworkInterfaceSetConfigurationExtension
#define SOAP_TYPE_tt__NetworkInterfaceSetConfigurationExtension (445)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkInterfaceSetConfigurationExtension(struct soap*, const char*, int, const tt__NetworkInterfaceSetConfigurationExtension *, const char*);
SOAP_FMAC3 tt__NetworkInterfaceSetConfigurationExtension * SOAP_FMAC4 soap_in_tt__NetworkInterfaceSetConfigurationExtension(struct soap*, const char*, tt__NetworkInterfaceSetConfigurationExtension *, const char*);
SOAP_FMAC1 tt__NetworkInterfaceSetConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__NetworkInterfaceSetConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkInterfaceSetConfigurationExtension * soap_new_tt__NetworkInterfaceSetConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkInterfaceSetConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__NetworkInterfaceSetConfigurationExtension * soap_new_req_tt__NetworkInterfaceSetConfigurationExtension(
	struct soap *soap)
{	tt__NetworkInterfaceSetConfigurationExtension *_p = soap_new_tt__NetworkInterfaceSetConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__NetworkInterfaceSetConfigurationExtension * soap_new_set_tt__NetworkInterfaceSetConfigurationExtension(
	struct soap *soap,
	const std::vector<tt__Dot3Configuration *> & Dot3,
	const std::vector<tt__Dot11Configuration *> & Dot11,
	tt__NetworkInterfaceSetConfigurationExtension2 *Extension)
{	tt__NetworkInterfaceSetConfigurationExtension *_p = soap_new_tt__NetworkInterfaceSetConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__NetworkInterfaceSetConfigurationExtension::Dot3 = Dot3;
		_p->tt__NetworkInterfaceSetConfigurationExtension::Dot11 = Dot11;
		_p->tt__NetworkInterfaceSetConfigurationExtension::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__NetworkInterfaceSetConfigurationExtension
#define soap_write_tt__NetworkInterfaceSetConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:NetworkInterfaceSetConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceSetConfigurationExtension * SOAP_FMAC4 soap_get_tt__NetworkInterfaceSetConfigurationExtension(struct soap*, tt__NetworkInterfaceSetConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__NetworkInterfaceSetConfigurationExtension
#define soap_read_tt__NetworkInterfaceSetConfigurationExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__NetworkInterfaceSetConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__NetworkInterfaceSetConfiguration
#define SOAP_TYPE_tt__NetworkInterfaceSetConfiguration (444)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkInterfaceSetConfiguration(struct soap*, const char*, int, const tt__NetworkInterfaceSetConfiguration *, const char*);
SOAP_FMAC3 tt__NetworkInterfaceSetConfiguration * SOAP_FMAC4 soap_in_tt__NetworkInterfaceSetConfiguration(struct soap*, const char*, tt__NetworkInterfaceSetConfiguration *, const char*);
SOAP_FMAC1 tt__NetworkInterfaceSetConfiguration * SOAP_FMAC2 soap_instantiate_tt__NetworkInterfaceSetConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkInterfaceSetConfiguration * soap_new_tt__NetworkInterfaceSetConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkInterfaceSetConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__NetworkInterfaceSetConfiguration * soap_new_req_tt__NetworkInterfaceSetConfiguration(
	struct soap *soap)
{	tt__NetworkInterfaceSetConfiguration *_p = soap_new_tt__NetworkInterfaceSetConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__NetworkInterfaceSetConfiguration * soap_new_set_tt__NetworkInterfaceSetConfiguration(
	struct soap *soap,
	bool *Enabled,
	tt__NetworkInterfaceConnectionSetting *Link,
	int *MTU,
	tt__IPv4NetworkInterfaceSetConfiguration *IPv4,
	tt__IPv6NetworkInterfaceSetConfiguration *IPv6,
	tt__NetworkInterfaceSetConfigurationExtension *Extension)
{	tt__NetworkInterfaceSetConfiguration *_p = soap_new_tt__NetworkInterfaceSetConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__NetworkInterfaceSetConfiguration::Enabled = Enabled;
		_p->tt__NetworkInterfaceSetConfiguration::Link = Link;
		_p->tt__NetworkInterfaceSetConfiguration::MTU = MTU;
		_p->tt__NetworkInterfaceSetConfiguration::IPv4 = IPv4;
		_p->tt__NetworkInterfaceSetConfiguration::IPv6 = IPv6;
		_p->tt__NetworkInterfaceSetConfiguration::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__NetworkInterfaceSetConfiguration
#define soap_write_tt__NetworkInterfaceSetConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:NetworkInterfaceSetConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceSetConfiguration * SOAP_FMAC4 soap_get_tt__NetworkInterfaceSetConfiguration(struct soap*, tt__NetworkInterfaceSetConfiguration *, const char*, const char*);

#ifndef soap_read_tt__NetworkInterfaceSetConfiguration
#define soap_read_tt__NetworkInterfaceSetConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__NetworkInterfaceSetConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__DynamicDNSInformationExtension
#define SOAP_TYPE_tt__DynamicDNSInformationExtension (443)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DynamicDNSInformationExtension(struct soap*, const char*, int, const tt__DynamicDNSInformationExtension *, const char*);
SOAP_FMAC3 tt__DynamicDNSInformationExtension * SOAP_FMAC4 soap_in_tt__DynamicDNSInformationExtension(struct soap*, const char*, tt__DynamicDNSInformationExtension *, const char*);
SOAP_FMAC1 tt__DynamicDNSInformationExtension * SOAP_FMAC2 soap_instantiate_tt__DynamicDNSInformationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__DynamicDNSInformationExtension * soap_new_tt__DynamicDNSInformationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__DynamicDNSInformationExtension(soap, n, NULL, NULL, NULL); }

inline tt__DynamicDNSInformationExtension * soap_new_req_tt__DynamicDNSInformationExtension(
	struct soap *soap)
{	tt__DynamicDNSInformationExtension *_p = soap_new_tt__DynamicDNSInformationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__DynamicDNSInformationExtension * soap_new_set_tt__DynamicDNSInformationExtension(
	struct soap *soap)
{	tt__DynamicDNSInformationExtension *_p = soap_new_tt__DynamicDNSInformationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__DynamicDNSInformationExtension
#define soap_write_tt__DynamicDNSInformationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:DynamicDNSInformationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DynamicDNSInformationExtension * SOAP_FMAC4 soap_get_tt__DynamicDNSInformationExtension(struct soap*, tt__DynamicDNSInformationExtension *, const char*, const char*);

#ifndef soap_read_tt__DynamicDNSInformationExtension
#define soap_read_tt__DynamicDNSInformationExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__DynamicDNSInformationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__DynamicDNSInformation
#define SOAP_TYPE_tt__DynamicDNSInformation (442)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DynamicDNSInformation(struct soap*, const char*, int, const tt__DynamicDNSInformation *, const char*);
SOAP_FMAC3 tt__DynamicDNSInformation * SOAP_FMAC4 soap_in_tt__DynamicDNSInformation(struct soap*, const char*, tt__DynamicDNSInformation *, const char*);
SOAP_FMAC1 tt__DynamicDNSInformation * SOAP_FMAC2 soap_instantiate_tt__DynamicDNSInformation(struct soap*, int, const char*, const char*, size_t*);

inline tt__DynamicDNSInformation * soap_new_tt__DynamicDNSInformation(struct soap *soap, int n = -1) { return soap_instantiate_tt__DynamicDNSInformation(soap, n, NULL, NULL, NULL); }

inline tt__DynamicDNSInformation * soap_new_req_tt__DynamicDNSInformation(
	struct soap *soap,
	enum tt__DynamicDNSType Type)
{	tt__DynamicDNSInformation *_p = soap_new_tt__DynamicDNSInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__DynamicDNSInformation::Type = Type;
	}
	return _p;
}

inline tt__DynamicDNSInformation * soap_new_set_tt__DynamicDNSInformation(
	struct soap *soap,
	enum tt__DynamicDNSType Type,
	std::string *Name,
	LONG64 *TTL,
	tt__DynamicDNSInformationExtension *Extension)
{	tt__DynamicDNSInformation *_p = soap_new_tt__DynamicDNSInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__DynamicDNSInformation::Type = Type;
		_p->tt__DynamicDNSInformation::Name = Name;
		_p->tt__DynamicDNSInformation::TTL = TTL;
		_p->tt__DynamicDNSInformation::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__DynamicDNSInformation
#define soap_write_tt__DynamicDNSInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:DynamicDNSInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DynamicDNSInformation * SOAP_FMAC4 soap_get_tt__DynamicDNSInformation(struct soap*, tt__DynamicDNSInformation *, const char*, const char*);

#ifndef soap_read_tt__DynamicDNSInformation
#define soap_read_tt__DynamicDNSInformation(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__DynamicDNSInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__NTPInformationExtension
#define SOAP_TYPE_tt__NTPInformationExtension (441)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NTPInformationExtension(struct soap*, const char*, int, const tt__NTPInformationExtension *, const char*);
SOAP_FMAC3 tt__NTPInformationExtension * SOAP_FMAC4 soap_in_tt__NTPInformationExtension(struct soap*, const char*, tt__NTPInformationExtension *, const char*);
SOAP_FMAC1 tt__NTPInformationExtension * SOAP_FMAC2 soap_instantiate_tt__NTPInformationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__NTPInformationExtension * soap_new_tt__NTPInformationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__NTPInformationExtension(soap, n, NULL, NULL, NULL); }

inline tt__NTPInformationExtension * soap_new_req_tt__NTPInformationExtension(
	struct soap *soap)
{	tt__NTPInformationExtension *_p = soap_new_tt__NTPInformationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__NTPInformationExtension * soap_new_set_tt__NTPInformationExtension(
	struct soap *soap)
{	tt__NTPInformationExtension *_p = soap_new_tt__NTPInformationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__NTPInformationExtension
#define soap_write_tt__NTPInformationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:NTPInformationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NTPInformationExtension * SOAP_FMAC4 soap_get_tt__NTPInformationExtension(struct soap*, tt__NTPInformationExtension *, const char*, const char*);

#ifndef soap_read_tt__NTPInformationExtension
#define soap_read_tt__NTPInformationExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__NTPInformationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__NTPInformation
#define SOAP_TYPE_tt__NTPInformation (440)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NTPInformation(struct soap*, const char*, int, const tt__NTPInformation *, const char*);
SOAP_FMAC3 tt__NTPInformation * SOAP_FMAC4 soap_in_tt__NTPInformation(struct soap*, const char*, tt__NTPInformation *, const char*);
SOAP_FMAC1 tt__NTPInformation * SOAP_FMAC2 soap_instantiate_tt__NTPInformation(struct soap*, int, const char*, const char*, size_t*);

inline tt__NTPInformation * soap_new_tt__NTPInformation(struct soap *soap, int n = -1) { return soap_instantiate_tt__NTPInformation(soap, n, NULL, NULL, NULL); }

inline tt__NTPInformation * soap_new_req_tt__NTPInformation(
	struct soap *soap,
	bool FromDHCP)
{	tt__NTPInformation *_p = soap_new_tt__NTPInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__NTPInformation::FromDHCP = FromDHCP;
	}
	return _p;
}

inline tt__NTPInformation * soap_new_set_tt__NTPInformation(
	struct soap *soap,
	bool FromDHCP,
	const std::vector<tt__NetworkHost *> & NTPFromDHCP,
	const std::vector<tt__NetworkHost *> & NTPManual,
	tt__NTPInformationExtension *Extension)
{	tt__NTPInformation *_p = soap_new_tt__NTPInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__NTPInformation::FromDHCP = FromDHCP;
		_p->tt__NTPInformation::NTPFromDHCP = NTPFromDHCP;
		_p->tt__NTPInformation::NTPManual = NTPManual;
		_p->tt__NTPInformation::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__NTPInformation
#define soap_write_tt__NTPInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:NTPInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NTPInformation * SOAP_FMAC4 soap_get_tt__NTPInformation(struct soap*, tt__NTPInformation *, const char*, const char*);

#ifndef soap_read_tt__NTPInformation
#define soap_read_tt__NTPInformation(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__NTPInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__DNSInformationExtension
#define SOAP_TYPE_tt__DNSInformationExtension (439)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DNSInformationExtension(struct soap*, const char*, int, const tt__DNSInformationExtension *, const char*);
SOAP_FMAC3 tt__DNSInformationExtension * SOAP_FMAC4 soap_in_tt__DNSInformationExtension(struct soap*, const char*, tt__DNSInformationExtension *, const char*);
SOAP_FMAC1 tt__DNSInformationExtension * SOAP_FMAC2 soap_instantiate_tt__DNSInformationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__DNSInformationExtension * soap_new_tt__DNSInformationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__DNSInformationExtension(soap, n, NULL, NULL, NULL); }

inline tt__DNSInformationExtension * soap_new_req_tt__DNSInformationExtension(
	struct soap *soap)
{	tt__DNSInformationExtension *_p = soap_new_tt__DNSInformationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__DNSInformationExtension * soap_new_set_tt__DNSInformationExtension(
	struct soap *soap)
{	tt__DNSInformationExtension *_p = soap_new_tt__DNSInformationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__DNSInformationExtension
#define soap_write_tt__DNSInformationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:DNSInformationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DNSInformationExtension * SOAP_FMAC4 soap_get_tt__DNSInformationExtension(struct soap*, tt__DNSInformationExtension *, const char*, const char*);

#ifndef soap_read_tt__DNSInformationExtension
#define soap_read_tt__DNSInformationExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__DNSInformationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__DNSInformation
#define SOAP_TYPE_tt__DNSInformation (438)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DNSInformation(struct soap*, const char*, int, const tt__DNSInformation *, const char*);
SOAP_FMAC3 tt__DNSInformation * SOAP_FMAC4 soap_in_tt__DNSInformation(struct soap*, const char*, tt__DNSInformation *, const char*);
SOAP_FMAC1 tt__DNSInformation * SOAP_FMAC2 soap_instantiate_tt__DNSInformation(struct soap*, int, const char*, const char*, size_t*);

inline tt__DNSInformation * soap_new_tt__DNSInformation(struct soap *soap, int n = -1) { return soap_instantiate_tt__DNSInformation(soap, n, NULL, NULL, NULL); }

inline tt__DNSInformation * soap_new_req_tt__DNSInformation(
	struct soap *soap,
	bool FromDHCP)
{	tt__DNSInformation *_p = soap_new_tt__DNSInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__DNSInformation::FromDHCP = FromDHCP;
	}
	return _p;
}

inline tt__DNSInformation * soap_new_set_tt__DNSInformation(
	struct soap *soap,
	bool FromDHCP,
	const std::vector<std::string> & SearchDomain,
	const std::vector<tt__IPAddress *> & DNSFromDHCP,
	const std::vector<tt__IPAddress *> & DNSManual,
	tt__DNSInformationExtension *Extension)
{	tt__DNSInformation *_p = soap_new_tt__DNSInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__DNSInformation::FromDHCP = FromDHCP;
		_p->tt__DNSInformation::SearchDomain = SearchDomain;
		_p->tt__DNSInformation::DNSFromDHCP = DNSFromDHCP;
		_p->tt__DNSInformation::DNSManual = DNSManual;
		_p->tt__DNSInformation::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__DNSInformation
#define soap_write_tt__DNSInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:DNSInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DNSInformation * SOAP_FMAC4 soap_get_tt__DNSInformation(struct soap*, tt__DNSInformation *, const char*, const char*);

#ifndef soap_read_tt__DNSInformation
#define soap_read_tt__DNSInformation(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__DNSInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__HostnameInformationExtension
#define SOAP_TYPE_tt__HostnameInformationExtension (437)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__HostnameInformationExtension(struct soap*, const char*, int, const tt__HostnameInformationExtension *, const char*);
SOAP_FMAC3 tt__HostnameInformationExtension * SOAP_FMAC4 soap_in_tt__HostnameInformationExtension(struct soap*, const char*, tt__HostnameInformationExtension *, const char*);
SOAP_FMAC1 tt__HostnameInformationExtension * SOAP_FMAC2 soap_instantiate_tt__HostnameInformationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__HostnameInformationExtension * soap_new_tt__HostnameInformationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__HostnameInformationExtension(soap, n, NULL, NULL, NULL); }

inline tt__HostnameInformationExtension * soap_new_req_tt__HostnameInformationExtension(
	struct soap *soap)
{	tt__HostnameInformationExtension *_p = soap_new_tt__HostnameInformationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__HostnameInformationExtension * soap_new_set_tt__HostnameInformationExtension(
	struct soap *soap)
{	tt__HostnameInformationExtension *_p = soap_new_tt__HostnameInformationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__HostnameInformationExtension
#define soap_write_tt__HostnameInformationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:HostnameInformationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__HostnameInformationExtension * SOAP_FMAC4 soap_get_tt__HostnameInformationExtension(struct soap*, tt__HostnameInformationExtension *, const char*, const char*);

#ifndef soap_read_tt__HostnameInformationExtension
#define soap_read_tt__HostnameInformationExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__HostnameInformationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__HostnameInformation
#define SOAP_TYPE_tt__HostnameInformation (436)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__HostnameInformation(struct soap*, const char*, int, const tt__HostnameInformation *, const char*);
SOAP_FMAC3 tt__HostnameInformation * SOAP_FMAC4 soap_in_tt__HostnameInformation(struct soap*, const char*, tt__HostnameInformation *, const char*);
SOAP_FMAC1 tt__HostnameInformation * SOAP_FMAC2 soap_instantiate_tt__HostnameInformation(struct soap*, int, const char*, const char*, size_t*);

inline tt__HostnameInformation * soap_new_tt__HostnameInformation(struct soap *soap, int n = -1) { return soap_instantiate_tt__HostnameInformation(soap, n, NULL, NULL, NULL); }

inline tt__HostnameInformation * soap_new_req_tt__HostnameInformation(
	struct soap *soap,
	bool FromDHCP)
{	tt__HostnameInformation *_p = soap_new_tt__HostnameInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__HostnameInformation::FromDHCP = FromDHCP;
	}
	return _p;
}

inline tt__HostnameInformation * soap_new_set_tt__HostnameInformation(
	struct soap *soap,
	bool FromDHCP,
	std::string *Name,
	tt__HostnameInformationExtension *Extension)
{	tt__HostnameInformation *_p = soap_new_tt__HostnameInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__HostnameInformation::FromDHCP = FromDHCP;
		_p->tt__HostnameInformation::Name = Name;
		_p->tt__HostnameInformation::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__HostnameInformation
#define soap_write_tt__HostnameInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:HostnameInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__HostnameInformation * SOAP_FMAC4 soap_get_tt__HostnameInformation(struct soap*, tt__HostnameInformation *, const char*, const char*);

#ifndef soap_read_tt__HostnameInformation
#define soap_read_tt__HostnameInformation(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__HostnameInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PrefixedIPv6Address
#define SOAP_TYPE_tt__PrefixedIPv6Address (435)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PrefixedIPv6Address(struct soap*, const char*, int, const tt__PrefixedIPv6Address *, const char*);
SOAP_FMAC3 tt__PrefixedIPv6Address * SOAP_FMAC4 soap_in_tt__PrefixedIPv6Address(struct soap*, const char*, tt__PrefixedIPv6Address *, const char*);
SOAP_FMAC1 tt__PrefixedIPv6Address * SOAP_FMAC2 soap_instantiate_tt__PrefixedIPv6Address(struct soap*, int, const char*, const char*, size_t*);

inline tt__PrefixedIPv6Address * soap_new_tt__PrefixedIPv6Address(struct soap *soap, int n = -1) { return soap_instantiate_tt__PrefixedIPv6Address(soap, n, NULL, NULL, NULL); }

inline tt__PrefixedIPv6Address * soap_new_req_tt__PrefixedIPv6Address(
	struct soap *soap,
	const std::string& Address,
	int PrefixLength)
{	tt__PrefixedIPv6Address *_p = soap_new_tt__PrefixedIPv6Address(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PrefixedIPv6Address::Address = Address;
		_p->tt__PrefixedIPv6Address::PrefixLength = PrefixLength;
	}
	return _p;
}

inline tt__PrefixedIPv6Address * soap_new_set_tt__PrefixedIPv6Address(
	struct soap *soap,
	const std::string& Address,
	int PrefixLength)
{	tt__PrefixedIPv6Address *_p = soap_new_tt__PrefixedIPv6Address(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PrefixedIPv6Address::Address = Address;
		_p->tt__PrefixedIPv6Address::PrefixLength = PrefixLength;
	}
	return _p;
}

#ifndef soap_write_tt__PrefixedIPv6Address
#define soap_write_tt__PrefixedIPv6Address(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PrefixedIPv6Address", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PrefixedIPv6Address * SOAP_FMAC4 soap_get_tt__PrefixedIPv6Address(struct soap*, tt__PrefixedIPv6Address *, const char*, const char*);

#ifndef soap_read_tt__PrefixedIPv6Address
#define soap_read_tt__PrefixedIPv6Address(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PrefixedIPv6Address(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PrefixedIPv4Address
#define SOAP_TYPE_tt__PrefixedIPv4Address (434)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PrefixedIPv4Address(struct soap*, const char*, int, const tt__PrefixedIPv4Address *, const char*);
SOAP_FMAC3 tt__PrefixedIPv4Address * SOAP_FMAC4 soap_in_tt__PrefixedIPv4Address(struct soap*, const char*, tt__PrefixedIPv4Address *, const char*);
SOAP_FMAC1 tt__PrefixedIPv4Address * SOAP_FMAC2 soap_instantiate_tt__PrefixedIPv4Address(struct soap*, int, const char*, const char*, size_t*);

inline tt__PrefixedIPv4Address * soap_new_tt__PrefixedIPv4Address(struct soap *soap, int n = -1) { return soap_instantiate_tt__PrefixedIPv4Address(soap, n, NULL, NULL, NULL); }

inline tt__PrefixedIPv4Address * soap_new_req_tt__PrefixedIPv4Address(
	struct soap *soap,
	const std::string& Address,
	int PrefixLength)
{	tt__PrefixedIPv4Address *_p = soap_new_tt__PrefixedIPv4Address(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PrefixedIPv4Address::Address = Address;
		_p->tt__PrefixedIPv4Address::PrefixLength = PrefixLength;
	}
	return _p;
}

inline tt__PrefixedIPv4Address * soap_new_set_tt__PrefixedIPv4Address(
	struct soap *soap,
	const std::string& Address,
	int PrefixLength)
{	tt__PrefixedIPv4Address *_p = soap_new_tt__PrefixedIPv4Address(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PrefixedIPv4Address::Address = Address;
		_p->tt__PrefixedIPv4Address::PrefixLength = PrefixLength;
	}
	return _p;
}

#ifndef soap_write_tt__PrefixedIPv4Address
#define soap_write_tt__PrefixedIPv4Address(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PrefixedIPv4Address", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PrefixedIPv4Address * SOAP_FMAC4 soap_get_tt__PrefixedIPv4Address(struct soap*, tt__PrefixedIPv4Address *, const char*, const char*);

#ifndef soap_read_tt__PrefixedIPv4Address
#define soap_read_tt__PrefixedIPv4Address(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PrefixedIPv4Address(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IPAddress
#define SOAP_TYPE_tt__IPAddress (433)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPAddress(struct soap*, const char*, int, const tt__IPAddress *, const char*);
SOAP_FMAC3 tt__IPAddress * SOAP_FMAC4 soap_in_tt__IPAddress(struct soap*, const char*, tt__IPAddress *, const char*);
SOAP_FMAC1 tt__IPAddress * SOAP_FMAC2 soap_instantiate_tt__IPAddress(struct soap*, int, const char*, const char*, size_t*);

inline tt__IPAddress * soap_new_tt__IPAddress(struct soap *soap, int n = -1) { return soap_instantiate_tt__IPAddress(soap, n, NULL, NULL, NULL); }

inline tt__IPAddress * soap_new_req_tt__IPAddress(
	struct soap *soap,
	enum tt__IPType Type)
{	tt__IPAddress *_p = soap_new_tt__IPAddress(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__IPAddress::Type = Type;
	}
	return _p;
}

inline tt__IPAddress * soap_new_set_tt__IPAddress(
	struct soap *soap,
	enum tt__IPType Type,
	std::string *IPv4Address,
	std::string *IPv6Address)
{	tt__IPAddress *_p = soap_new_tt__IPAddress(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__IPAddress::Type = Type;
		_p->tt__IPAddress::IPv4Address = IPv4Address;
		_p->tt__IPAddress::IPv6Address = IPv6Address;
	}
	return _p;
}

#ifndef soap_write_tt__IPAddress
#define soap_write_tt__IPAddress(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:IPAddress", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPAddress * SOAP_FMAC4 soap_get_tt__IPAddress(struct soap*, tt__IPAddress *, const char*, const char*);

#ifndef soap_read_tt__IPAddress
#define soap_read_tt__IPAddress(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IPAddress(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__NetworkHostExtension
#define SOAP_TYPE_tt__NetworkHostExtension (432)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkHostExtension(struct soap*, const char*, int, const tt__NetworkHostExtension *, const char*);
SOAP_FMAC3 tt__NetworkHostExtension * SOAP_FMAC4 soap_in_tt__NetworkHostExtension(struct soap*, const char*, tt__NetworkHostExtension *, const char*);
SOAP_FMAC1 tt__NetworkHostExtension * SOAP_FMAC2 soap_instantiate_tt__NetworkHostExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkHostExtension * soap_new_tt__NetworkHostExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkHostExtension(soap, n, NULL, NULL, NULL); }

inline tt__NetworkHostExtension * soap_new_req_tt__NetworkHostExtension(
	struct soap *soap)
{	tt__NetworkHostExtension *_p = soap_new_tt__NetworkHostExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__NetworkHostExtension * soap_new_set_tt__NetworkHostExtension(
	struct soap *soap)
{	tt__NetworkHostExtension *_p = soap_new_tt__NetworkHostExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__NetworkHostExtension
#define soap_write_tt__NetworkHostExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:NetworkHostExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkHostExtension * SOAP_FMAC4 soap_get_tt__NetworkHostExtension(struct soap*, tt__NetworkHostExtension *, const char*, const char*);

#ifndef soap_read_tt__NetworkHostExtension
#define soap_read_tt__NetworkHostExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__NetworkHostExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__NetworkHost
#define SOAP_TYPE_tt__NetworkHost (431)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkHost(struct soap*, const char*, int, const tt__NetworkHost *, const char*);
SOAP_FMAC3 tt__NetworkHost * SOAP_FMAC4 soap_in_tt__NetworkHost(struct soap*, const char*, tt__NetworkHost *, const char*);
SOAP_FMAC1 tt__NetworkHost * SOAP_FMAC2 soap_instantiate_tt__NetworkHost(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkHost * soap_new_tt__NetworkHost(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkHost(soap, n, NULL, NULL, NULL); }

inline tt__NetworkHost * soap_new_req_tt__NetworkHost(
	struct soap *soap,
	enum tt__NetworkHostType Type)
{	tt__NetworkHost *_p = soap_new_tt__NetworkHost(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__NetworkHost::Type = Type;
	}
	return _p;
}

inline tt__NetworkHost * soap_new_set_tt__NetworkHost(
	struct soap *soap,
	enum tt__NetworkHostType Type,
	std::string *IPv4Address,
	std::string *IPv6Address,
	std::string *DNSname,
	tt__NetworkHostExtension *Extension)
{	tt__NetworkHost *_p = soap_new_tt__NetworkHost(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__NetworkHost::Type = Type;
		_p->tt__NetworkHost::IPv4Address = IPv4Address;
		_p->tt__NetworkHost::IPv6Address = IPv6Address;
		_p->tt__NetworkHost::DNSname = DNSname;
		_p->tt__NetworkHost::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__NetworkHost
#define soap_write_tt__NetworkHost(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:NetworkHost", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkHost * SOAP_FMAC4 soap_get_tt__NetworkHost(struct soap*, tt__NetworkHost *, const char*, const char*);

#ifndef soap_read_tt__NetworkHost
#define soap_read_tt__NetworkHost(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__NetworkHost(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__NetworkProtocolExtension
#define SOAP_TYPE_tt__NetworkProtocolExtension (430)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkProtocolExtension(struct soap*, const char*, int, const tt__NetworkProtocolExtension *, const char*);
SOAP_FMAC3 tt__NetworkProtocolExtension * SOAP_FMAC4 soap_in_tt__NetworkProtocolExtension(struct soap*, const char*, tt__NetworkProtocolExtension *, const char*);
SOAP_FMAC1 tt__NetworkProtocolExtension * SOAP_FMAC2 soap_instantiate_tt__NetworkProtocolExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkProtocolExtension * soap_new_tt__NetworkProtocolExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkProtocolExtension(soap, n, NULL, NULL, NULL); }

inline tt__NetworkProtocolExtension * soap_new_req_tt__NetworkProtocolExtension(
	struct soap *soap)
{	tt__NetworkProtocolExtension *_p = soap_new_tt__NetworkProtocolExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__NetworkProtocolExtension * soap_new_set_tt__NetworkProtocolExtension(
	struct soap *soap)
{	tt__NetworkProtocolExtension *_p = soap_new_tt__NetworkProtocolExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__NetworkProtocolExtension
#define soap_write_tt__NetworkProtocolExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:NetworkProtocolExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkProtocolExtension * SOAP_FMAC4 soap_get_tt__NetworkProtocolExtension(struct soap*, tt__NetworkProtocolExtension *, const char*, const char*);

#ifndef soap_read_tt__NetworkProtocolExtension
#define soap_read_tt__NetworkProtocolExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__NetworkProtocolExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__NetworkProtocol
#define SOAP_TYPE_tt__NetworkProtocol (429)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkProtocol(struct soap*, const char*, int, const tt__NetworkProtocol *, const char*);
SOAP_FMAC3 tt__NetworkProtocol * SOAP_FMAC4 soap_in_tt__NetworkProtocol(struct soap*, const char*, tt__NetworkProtocol *, const char*);
SOAP_FMAC1 tt__NetworkProtocol * SOAP_FMAC2 soap_instantiate_tt__NetworkProtocol(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkProtocol * soap_new_tt__NetworkProtocol(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkProtocol(soap, n, NULL, NULL, NULL); }

inline tt__NetworkProtocol * soap_new_req_tt__NetworkProtocol(
	struct soap *soap,
	enum tt__NetworkProtocolType Name,
	bool Enabled,
	const std::vector<int> & Port)
{	tt__NetworkProtocol *_p = soap_new_tt__NetworkProtocol(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__NetworkProtocol::Name = Name;
		_p->tt__NetworkProtocol::Enabled = Enabled;
		_p->tt__NetworkProtocol::Port = Port;
	}
	return _p;
}

inline tt__NetworkProtocol * soap_new_set_tt__NetworkProtocol(
	struct soap *soap,
	enum tt__NetworkProtocolType Name,
	bool Enabled,
	const std::vector<int> & Port,
	tt__NetworkProtocolExtension *Extension)
{	tt__NetworkProtocol *_p = soap_new_tt__NetworkProtocol(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__NetworkProtocol::Name = Name;
		_p->tt__NetworkProtocol::Enabled = Enabled;
		_p->tt__NetworkProtocol::Port = Port;
		_p->tt__NetworkProtocol::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__NetworkProtocol
#define soap_write_tt__NetworkProtocol(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:NetworkProtocol", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkProtocol * SOAP_FMAC4 soap_get_tt__NetworkProtocol(struct soap*, tt__NetworkProtocol *, const char*, const char*);

#ifndef soap_read_tt__NetworkProtocol
#define soap_read_tt__NetworkProtocol(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__NetworkProtocol(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IPv6ConfigurationExtension
#define SOAP_TYPE_tt__IPv6ConfigurationExtension (428)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPv6ConfigurationExtension(struct soap*, const char*, int, const tt__IPv6ConfigurationExtension *, const char*);
SOAP_FMAC3 tt__IPv6ConfigurationExtension * SOAP_FMAC4 soap_in_tt__IPv6ConfigurationExtension(struct soap*, const char*, tt__IPv6ConfigurationExtension *, const char*);
SOAP_FMAC1 tt__IPv6ConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__IPv6ConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__IPv6ConfigurationExtension * soap_new_tt__IPv6ConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__IPv6ConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__IPv6ConfigurationExtension * soap_new_req_tt__IPv6ConfigurationExtension(
	struct soap *soap)
{	tt__IPv6ConfigurationExtension *_p = soap_new_tt__IPv6ConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__IPv6ConfigurationExtension * soap_new_set_tt__IPv6ConfigurationExtension(
	struct soap *soap)
{	tt__IPv6ConfigurationExtension *_p = soap_new_tt__IPv6ConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__IPv6ConfigurationExtension
#define soap_write_tt__IPv6ConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:IPv6ConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPv6ConfigurationExtension * SOAP_FMAC4 soap_get_tt__IPv6ConfigurationExtension(struct soap*, tt__IPv6ConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__IPv6ConfigurationExtension
#define soap_read_tt__IPv6ConfigurationExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IPv6ConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IPv6Configuration
#define SOAP_TYPE_tt__IPv6Configuration (427)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPv6Configuration(struct soap*, const char*, int, const tt__IPv6Configuration *, const char*);
SOAP_FMAC3 tt__IPv6Configuration * SOAP_FMAC4 soap_in_tt__IPv6Configuration(struct soap*, const char*, tt__IPv6Configuration *, const char*);
SOAP_FMAC1 tt__IPv6Configuration * SOAP_FMAC2 soap_instantiate_tt__IPv6Configuration(struct soap*, int, const char*, const char*, size_t*);

inline tt__IPv6Configuration * soap_new_tt__IPv6Configuration(struct soap *soap, int n = -1) { return soap_instantiate_tt__IPv6Configuration(soap, n, NULL, NULL, NULL); }

inline tt__IPv6Configuration * soap_new_req_tt__IPv6Configuration(
	struct soap *soap,
	enum tt__IPv6DHCPConfiguration DHCP)
{	tt__IPv6Configuration *_p = soap_new_tt__IPv6Configuration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__IPv6Configuration::DHCP = DHCP;
	}
	return _p;
}

inline tt__IPv6Configuration * soap_new_set_tt__IPv6Configuration(
	struct soap *soap,
	bool *AcceptRouterAdvert,
	enum tt__IPv6DHCPConfiguration DHCP,
	const std::vector<tt__PrefixedIPv6Address *> & Manual,
	const std::vector<tt__PrefixedIPv6Address *> & LinkLocal,
	const std::vector<tt__PrefixedIPv6Address *> & FromDHCP,
	const std::vector<tt__PrefixedIPv6Address *> & FromRA,
	tt__IPv6ConfigurationExtension *Extension)
{	tt__IPv6Configuration *_p = soap_new_tt__IPv6Configuration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__IPv6Configuration::AcceptRouterAdvert = AcceptRouterAdvert;
		_p->tt__IPv6Configuration::DHCP = DHCP;
		_p->tt__IPv6Configuration::Manual = Manual;
		_p->tt__IPv6Configuration::LinkLocal = LinkLocal;
		_p->tt__IPv6Configuration::FromDHCP = FromDHCP;
		_p->tt__IPv6Configuration::FromRA = FromRA;
		_p->tt__IPv6Configuration::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__IPv6Configuration
#define soap_write_tt__IPv6Configuration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:IPv6Configuration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPv6Configuration * SOAP_FMAC4 soap_get_tt__IPv6Configuration(struct soap*, tt__IPv6Configuration *, const char*, const char*);

#ifndef soap_read_tt__IPv6Configuration
#define soap_read_tt__IPv6Configuration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IPv6Configuration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IPv4Configuration
#define SOAP_TYPE_tt__IPv4Configuration (426)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPv4Configuration(struct soap*, const char*, int, const tt__IPv4Configuration *, const char*);
SOAP_FMAC3 tt__IPv4Configuration * SOAP_FMAC4 soap_in_tt__IPv4Configuration(struct soap*, const char*, tt__IPv4Configuration *, const char*);
SOAP_FMAC1 tt__IPv4Configuration * SOAP_FMAC2 soap_instantiate_tt__IPv4Configuration(struct soap*, int, const char*, const char*, size_t*);

inline tt__IPv4Configuration * soap_new_tt__IPv4Configuration(struct soap *soap, int n = -1) { return soap_instantiate_tt__IPv4Configuration(soap, n, NULL, NULL, NULL); }

inline tt__IPv4Configuration * soap_new_req_tt__IPv4Configuration(
	struct soap *soap,
	bool DHCP)
{	tt__IPv4Configuration *_p = soap_new_tt__IPv4Configuration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__IPv4Configuration::DHCP = DHCP;
	}
	return _p;
}

inline tt__IPv4Configuration * soap_new_set_tt__IPv4Configuration(
	struct soap *soap,
	const std::vector<tt__PrefixedIPv4Address *> & Manual,
	tt__PrefixedIPv4Address *LinkLocal,
	tt__PrefixedIPv4Address *FromDHCP,
	bool DHCP)
{	tt__IPv4Configuration *_p = soap_new_tt__IPv4Configuration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__IPv4Configuration::Manual = Manual;
		_p->tt__IPv4Configuration::LinkLocal = LinkLocal;
		_p->tt__IPv4Configuration::FromDHCP = FromDHCP;
		_p->tt__IPv4Configuration::DHCP = DHCP;
	}
	return _p;
}

#ifndef soap_write_tt__IPv4Configuration
#define soap_write_tt__IPv4Configuration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:IPv4Configuration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPv4Configuration * SOAP_FMAC4 soap_get_tt__IPv4Configuration(struct soap*, tt__IPv4Configuration *, const char*, const char*);

#ifndef soap_read_tt__IPv4Configuration
#define soap_read_tt__IPv4Configuration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IPv4Configuration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IPv4NetworkInterface
#define SOAP_TYPE_tt__IPv4NetworkInterface (425)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPv4NetworkInterface(struct soap*, const char*, int, const tt__IPv4NetworkInterface *, const char*);
SOAP_FMAC3 tt__IPv4NetworkInterface * SOAP_FMAC4 soap_in_tt__IPv4NetworkInterface(struct soap*, const char*, tt__IPv4NetworkInterface *, const char*);
SOAP_FMAC1 tt__IPv4NetworkInterface * SOAP_FMAC2 soap_instantiate_tt__IPv4NetworkInterface(struct soap*, int, const char*, const char*, size_t*);

inline tt__IPv4NetworkInterface * soap_new_tt__IPv4NetworkInterface(struct soap *soap, int n = -1) { return soap_instantiate_tt__IPv4NetworkInterface(soap, n, NULL, NULL, NULL); }

inline tt__IPv4NetworkInterface * soap_new_req_tt__IPv4NetworkInterface(
	struct soap *soap,
	bool Enabled,
	tt__IPv4Configuration *Config)
{	tt__IPv4NetworkInterface *_p = soap_new_tt__IPv4NetworkInterface(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__IPv4NetworkInterface::Enabled = Enabled;
		_p->tt__IPv4NetworkInterface::Config = Config;
	}
	return _p;
}

inline tt__IPv4NetworkInterface * soap_new_set_tt__IPv4NetworkInterface(
	struct soap *soap,
	bool Enabled,
	tt__IPv4Configuration *Config)
{	tt__IPv4NetworkInterface *_p = soap_new_tt__IPv4NetworkInterface(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__IPv4NetworkInterface::Enabled = Enabled;
		_p->tt__IPv4NetworkInterface::Config = Config;
	}
	return _p;
}

#ifndef soap_write_tt__IPv4NetworkInterface
#define soap_write_tt__IPv4NetworkInterface(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:IPv4NetworkInterface", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPv4NetworkInterface * SOAP_FMAC4 soap_get_tt__IPv4NetworkInterface(struct soap*, tt__IPv4NetworkInterface *, const char*, const char*);

#ifndef soap_read_tt__IPv4NetworkInterface
#define soap_read_tt__IPv4NetworkInterface(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IPv4NetworkInterface(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IPv6NetworkInterface
#define SOAP_TYPE_tt__IPv6NetworkInterface (424)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IPv6NetworkInterface(struct soap*, const char*, int, const tt__IPv6NetworkInterface *, const char*);
SOAP_FMAC3 tt__IPv6NetworkInterface * SOAP_FMAC4 soap_in_tt__IPv6NetworkInterface(struct soap*, const char*, tt__IPv6NetworkInterface *, const char*);
SOAP_FMAC1 tt__IPv6NetworkInterface * SOAP_FMAC2 soap_instantiate_tt__IPv6NetworkInterface(struct soap*, int, const char*, const char*, size_t*);

inline tt__IPv6NetworkInterface * soap_new_tt__IPv6NetworkInterface(struct soap *soap, int n = -1) { return soap_instantiate_tt__IPv6NetworkInterface(soap, n, NULL, NULL, NULL); }

inline tt__IPv6NetworkInterface * soap_new_req_tt__IPv6NetworkInterface(
	struct soap *soap,
	bool Enabled)
{	tt__IPv6NetworkInterface *_p = soap_new_tt__IPv6NetworkInterface(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__IPv6NetworkInterface::Enabled = Enabled;
	}
	return _p;
}

inline tt__IPv6NetworkInterface * soap_new_set_tt__IPv6NetworkInterface(
	struct soap *soap,
	bool Enabled,
	tt__IPv6Configuration *Config)
{	tt__IPv6NetworkInterface *_p = soap_new_tt__IPv6NetworkInterface(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__IPv6NetworkInterface::Enabled = Enabled;
		_p->tt__IPv6NetworkInterface::Config = Config;
	}
	return _p;
}

#ifndef soap_write_tt__IPv6NetworkInterface
#define soap_write_tt__IPv6NetworkInterface(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:IPv6NetworkInterface", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPv6NetworkInterface * SOAP_FMAC4 soap_get_tt__IPv6NetworkInterface(struct soap*, tt__IPv6NetworkInterface *, const char*, const char*);

#ifndef soap_read_tt__IPv6NetworkInterface
#define soap_read_tt__IPv6NetworkInterface(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IPv6NetworkInterface(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__NetworkInterfaceInfo
#define SOAP_TYPE_tt__NetworkInterfaceInfo (423)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkInterfaceInfo(struct soap*, const char*, int, const tt__NetworkInterfaceInfo *, const char*);
SOAP_FMAC3 tt__NetworkInterfaceInfo * SOAP_FMAC4 soap_in_tt__NetworkInterfaceInfo(struct soap*, const char*, tt__NetworkInterfaceInfo *, const char*);
SOAP_FMAC1 tt__NetworkInterfaceInfo * SOAP_FMAC2 soap_instantiate_tt__NetworkInterfaceInfo(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkInterfaceInfo * soap_new_tt__NetworkInterfaceInfo(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkInterfaceInfo(soap, n, NULL, NULL, NULL); }

inline tt__NetworkInterfaceInfo * soap_new_req_tt__NetworkInterfaceInfo(
	struct soap *soap,
	const std::string& HwAddress)
{	tt__NetworkInterfaceInfo *_p = soap_new_tt__NetworkInterfaceInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__NetworkInterfaceInfo::HwAddress = HwAddress;
	}
	return _p;
}

inline tt__NetworkInterfaceInfo * soap_new_set_tt__NetworkInterfaceInfo(
	struct soap *soap,
	std::string *Name,
	const std::string& HwAddress,
	int *MTU)
{	tt__NetworkInterfaceInfo *_p = soap_new_tt__NetworkInterfaceInfo(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__NetworkInterfaceInfo::Name = Name;
		_p->tt__NetworkInterfaceInfo::HwAddress = HwAddress;
		_p->tt__NetworkInterfaceInfo::MTU = MTU;
	}
	return _p;
}

#ifndef soap_write_tt__NetworkInterfaceInfo
#define soap_write_tt__NetworkInterfaceInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:NetworkInterfaceInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceInfo * SOAP_FMAC4 soap_get_tt__NetworkInterfaceInfo(struct soap*, tt__NetworkInterfaceInfo *, const char*, const char*);

#ifndef soap_read_tt__NetworkInterfaceInfo
#define soap_read_tt__NetworkInterfaceInfo(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__NetworkInterfaceInfo(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__NetworkInterfaceConnectionSetting
#define SOAP_TYPE_tt__NetworkInterfaceConnectionSetting (422)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkInterfaceConnectionSetting(struct soap*, const char*, int, const tt__NetworkInterfaceConnectionSetting *, const char*);
SOAP_FMAC3 tt__NetworkInterfaceConnectionSetting * SOAP_FMAC4 soap_in_tt__NetworkInterfaceConnectionSetting(struct soap*, const char*, tt__NetworkInterfaceConnectionSetting *, const char*);
SOAP_FMAC1 tt__NetworkInterfaceConnectionSetting * SOAP_FMAC2 soap_instantiate_tt__NetworkInterfaceConnectionSetting(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkInterfaceConnectionSetting * soap_new_tt__NetworkInterfaceConnectionSetting(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkInterfaceConnectionSetting(soap, n, NULL, NULL, NULL); }

inline tt__NetworkInterfaceConnectionSetting * soap_new_req_tt__NetworkInterfaceConnectionSetting(
	struct soap *soap,
	bool AutoNegotiation,
	int Speed,
	enum tt__Duplex Duplex)
{	tt__NetworkInterfaceConnectionSetting *_p = soap_new_tt__NetworkInterfaceConnectionSetting(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__NetworkInterfaceConnectionSetting::AutoNegotiation = AutoNegotiation;
		_p->tt__NetworkInterfaceConnectionSetting::Speed = Speed;
		_p->tt__NetworkInterfaceConnectionSetting::Duplex = Duplex;
	}
	return _p;
}

inline tt__NetworkInterfaceConnectionSetting * soap_new_set_tt__NetworkInterfaceConnectionSetting(
	struct soap *soap,
	bool AutoNegotiation,
	int Speed,
	enum tt__Duplex Duplex)
{	tt__NetworkInterfaceConnectionSetting *_p = soap_new_tt__NetworkInterfaceConnectionSetting(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__NetworkInterfaceConnectionSetting::AutoNegotiation = AutoNegotiation;
		_p->tt__NetworkInterfaceConnectionSetting::Speed = Speed;
		_p->tt__NetworkInterfaceConnectionSetting::Duplex = Duplex;
	}
	return _p;
}

#ifndef soap_write_tt__NetworkInterfaceConnectionSetting
#define soap_write_tt__NetworkInterfaceConnectionSetting(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:NetworkInterfaceConnectionSetting", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceConnectionSetting * SOAP_FMAC4 soap_get_tt__NetworkInterfaceConnectionSetting(struct soap*, tt__NetworkInterfaceConnectionSetting *, const char*, const char*);

#ifndef soap_read_tt__NetworkInterfaceConnectionSetting
#define soap_read_tt__NetworkInterfaceConnectionSetting(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__NetworkInterfaceConnectionSetting(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__NetworkInterfaceLink
#define SOAP_TYPE_tt__NetworkInterfaceLink (421)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkInterfaceLink(struct soap*, const char*, int, const tt__NetworkInterfaceLink *, const char*);
SOAP_FMAC3 tt__NetworkInterfaceLink * SOAP_FMAC4 soap_in_tt__NetworkInterfaceLink(struct soap*, const char*, tt__NetworkInterfaceLink *, const char*);
SOAP_FMAC1 tt__NetworkInterfaceLink * SOAP_FMAC2 soap_instantiate_tt__NetworkInterfaceLink(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkInterfaceLink * soap_new_tt__NetworkInterfaceLink(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkInterfaceLink(soap, n, NULL, NULL, NULL); }

inline tt__NetworkInterfaceLink * soap_new_req_tt__NetworkInterfaceLink(
	struct soap *soap,
	tt__NetworkInterfaceConnectionSetting *AdminSettings,
	tt__NetworkInterfaceConnectionSetting *OperSettings,
	int InterfaceType)
{	tt__NetworkInterfaceLink *_p = soap_new_tt__NetworkInterfaceLink(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__NetworkInterfaceLink::AdminSettings = AdminSettings;
		_p->tt__NetworkInterfaceLink::OperSettings = OperSettings;
		_p->tt__NetworkInterfaceLink::InterfaceType = InterfaceType;
	}
	return _p;
}

inline tt__NetworkInterfaceLink * soap_new_set_tt__NetworkInterfaceLink(
	struct soap *soap,
	tt__NetworkInterfaceConnectionSetting *AdminSettings,
	tt__NetworkInterfaceConnectionSetting *OperSettings,
	int InterfaceType)
{	tt__NetworkInterfaceLink *_p = soap_new_tt__NetworkInterfaceLink(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__NetworkInterfaceLink::AdminSettings = AdminSettings;
		_p->tt__NetworkInterfaceLink::OperSettings = OperSettings;
		_p->tt__NetworkInterfaceLink::InterfaceType = InterfaceType;
	}
	return _p;
}

#ifndef soap_write_tt__NetworkInterfaceLink
#define soap_write_tt__NetworkInterfaceLink(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:NetworkInterfaceLink", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceLink * SOAP_FMAC4 soap_get_tt__NetworkInterfaceLink(struct soap*, tt__NetworkInterfaceLink *, const char*, const char*);

#ifndef soap_read_tt__NetworkInterfaceLink
#define soap_read_tt__NetworkInterfaceLink(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__NetworkInterfaceLink(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__NetworkInterfaceExtension2
#define SOAP_TYPE_tt__NetworkInterfaceExtension2 (420)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkInterfaceExtension2(struct soap*, const char*, int, const tt__NetworkInterfaceExtension2 *, const char*);
SOAP_FMAC3 tt__NetworkInterfaceExtension2 * SOAP_FMAC4 soap_in_tt__NetworkInterfaceExtension2(struct soap*, const char*, tt__NetworkInterfaceExtension2 *, const char*);
SOAP_FMAC1 tt__NetworkInterfaceExtension2 * SOAP_FMAC2 soap_instantiate_tt__NetworkInterfaceExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkInterfaceExtension2 * soap_new_tt__NetworkInterfaceExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkInterfaceExtension2(soap, n, NULL, NULL, NULL); }

inline tt__NetworkInterfaceExtension2 * soap_new_req_tt__NetworkInterfaceExtension2(
	struct soap *soap)
{	tt__NetworkInterfaceExtension2 *_p = soap_new_tt__NetworkInterfaceExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__NetworkInterfaceExtension2 * soap_new_set_tt__NetworkInterfaceExtension2(
	struct soap *soap)
{	tt__NetworkInterfaceExtension2 *_p = soap_new_tt__NetworkInterfaceExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__NetworkInterfaceExtension2
#define soap_write_tt__NetworkInterfaceExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:NetworkInterfaceExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceExtension2 * SOAP_FMAC4 soap_get_tt__NetworkInterfaceExtension2(struct soap*, tt__NetworkInterfaceExtension2 *, const char*, const char*);

#ifndef soap_read_tt__NetworkInterfaceExtension2
#define soap_read_tt__NetworkInterfaceExtension2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__NetworkInterfaceExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Dot3Configuration
#define SOAP_TYPE_tt__Dot3Configuration (419)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Dot3Configuration(struct soap*, const char*, int, const tt__Dot3Configuration *, const char*);
SOAP_FMAC3 tt__Dot3Configuration * SOAP_FMAC4 soap_in_tt__Dot3Configuration(struct soap*, const char*, tt__Dot3Configuration *, const char*);
SOAP_FMAC1 tt__Dot3Configuration * SOAP_FMAC2 soap_instantiate_tt__Dot3Configuration(struct soap*, int, const char*, const char*, size_t*);

inline tt__Dot3Configuration * soap_new_tt__Dot3Configuration(struct soap *soap, int n = -1) { return soap_instantiate_tt__Dot3Configuration(soap, n, NULL, NULL, NULL); }

inline tt__Dot3Configuration * soap_new_req_tt__Dot3Configuration(
	struct soap *soap)
{	tt__Dot3Configuration *_p = soap_new_tt__Dot3Configuration(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__Dot3Configuration * soap_new_set_tt__Dot3Configuration(
	struct soap *soap)
{	tt__Dot3Configuration *_p = soap_new_tt__Dot3Configuration(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__Dot3Configuration
#define soap_write_tt__Dot3Configuration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Dot3Configuration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot3Configuration * SOAP_FMAC4 soap_get_tt__Dot3Configuration(struct soap*, tt__Dot3Configuration *, const char*, const char*);

#ifndef soap_read_tt__Dot3Configuration
#define soap_read_tt__Dot3Configuration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Dot3Configuration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__NetworkInterfaceExtension
#define SOAP_TYPE_tt__NetworkInterfaceExtension (418)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkInterfaceExtension(struct soap*, const char*, int, const tt__NetworkInterfaceExtension *, const char*);
SOAP_FMAC3 tt__NetworkInterfaceExtension * SOAP_FMAC4 soap_in_tt__NetworkInterfaceExtension(struct soap*, const char*, tt__NetworkInterfaceExtension *, const char*);
SOAP_FMAC1 tt__NetworkInterfaceExtension * SOAP_FMAC2 soap_instantiate_tt__NetworkInterfaceExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkInterfaceExtension * soap_new_tt__NetworkInterfaceExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkInterfaceExtension(soap, n, NULL, NULL, NULL); }

inline tt__NetworkInterfaceExtension * soap_new_req_tt__NetworkInterfaceExtension(
	struct soap *soap,
	int InterfaceType)
{	tt__NetworkInterfaceExtension *_p = soap_new_tt__NetworkInterfaceExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__NetworkInterfaceExtension::InterfaceType = InterfaceType;
	}
	return _p;
}

inline tt__NetworkInterfaceExtension * soap_new_set_tt__NetworkInterfaceExtension(
	struct soap *soap,
	int InterfaceType,
	const std::vector<tt__Dot3Configuration *> & Dot3,
	const std::vector<tt__Dot11Configuration *> & Dot11,
	tt__NetworkInterfaceExtension2 *Extension)
{	tt__NetworkInterfaceExtension *_p = soap_new_tt__NetworkInterfaceExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__NetworkInterfaceExtension::InterfaceType = InterfaceType;
		_p->tt__NetworkInterfaceExtension::Dot3 = Dot3;
		_p->tt__NetworkInterfaceExtension::Dot11 = Dot11;
		_p->tt__NetworkInterfaceExtension::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__NetworkInterfaceExtension
#define soap_write_tt__NetworkInterfaceExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:NetworkInterfaceExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceExtension * SOAP_FMAC4 soap_get_tt__NetworkInterfaceExtension(struct soap*, tt__NetworkInterfaceExtension *, const char*, const char*);

#ifndef soap_read_tt__NetworkInterfaceExtension
#define soap_read_tt__NetworkInterfaceExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__NetworkInterfaceExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__NetworkInterface
#define SOAP_TYPE_tt__NetworkInterface (417)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__NetworkInterface(struct soap*, const char*, int, const tt__NetworkInterface *, const char*);
SOAP_FMAC3 tt__NetworkInterface * SOAP_FMAC4 soap_in_tt__NetworkInterface(struct soap*, const char*, tt__NetworkInterface *, const char*);
SOAP_FMAC1 tt__NetworkInterface * SOAP_FMAC2 soap_instantiate_tt__NetworkInterface(struct soap*, int, const char*, const char*, size_t*);

inline tt__NetworkInterface * soap_new_tt__NetworkInterface(struct soap *soap, int n = -1) { return soap_instantiate_tt__NetworkInterface(soap, n, NULL, NULL, NULL); }

inline tt__NetworkInterface * soap_new_req_tt__NetworkInterface(
	struct soap *soap,
	bool Enabled,
	const std::string& token1)
{	tt__NetworkInterface *_p = soap_new_tt__NetworkInterface(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__NetworkInterface::Enabled = Enabled;
		_p->tt__DeviceEntity::token = token1;
	}
	return _p;
}

inline tt__NetworkInterface * soap_new_set_tt__NetworkInterface(
	struct soap *soap,
	bool Enabled,
	tt__NetworkInterfaceInfo *Info,
	tt__NetworkInterfaceLink *Link,
	tt__IPv4NetworkInterface *IPv4,
	tt__IPv6NetworkInterface *IPv6,
	tt__NetworkInterfaceExtension *Extension,
	const std::string& token1)
{	tt__NetworkInterface *_p = soap_new_tt__NetworkInterface(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__NetworkInterface::Enabled = Enabled;
		_p->tt__NetworkInterface::Info = Info;
		_p->tt__NetworkInterface::Link = Link;
		_p->tt__NetworkInterface::IPv4 = IPv4;
		_p->tt__NetworkInterface::IPv6 = IPv6;
		_p->tt__NetworkInterface::Extension = Extension;
		_p->tt__DeviceEntity::token = token1;
	}
	return _p;
}

#ifndef soap_write_tt__NetworkInterface
#define soap_write_tt__NetworkInterface(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:NetworkInterface", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterface * SOAP_FMAC4 soap_get_tt__NetworkInterface(struct soap*, tt__NetworkInterface *, const char*, const char*);

#ifndef soap_read_tt__NetworkInterface
#define soap_read_tt__NetworkInterface(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__NetworkInterface(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Scope
#define SOAP_TYPE_tt__Scope (416)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Scope(struct soap*, const char*, int, const tt__Scope *, const char*);
SOAP_FMAC3 tt__Scope * SOAP_FMAC4 soap_in_tt__Scope(struct soap*, const char*, tt__Scope *, const char*);
SOAP_FMAC1 tt__Scope * SOAP_FMAC2 soap_instantiate_tt__Scope(struct soap*, int, const char*, const char*, size_t*);

inline tt__Scope * soap_new_tt__Scope(struct soap *soap, int n = -1) { return soap_instantiate_tt__Scope(soap, n, NULL, NULL, NULL); }

inline tt__Scope * soap_new_req_tt__Scope(
	struct soap *soap,
	enum tt__ScopeDefinition ScopeDef,
	const std::string& ScopeItem)
{	tt__Scope *_p = soap_new_tt__Scope(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Scope::ScopeDef = ScopeDef;
		_p->tt__Scope::ScopeItem = ScopeItem;
	}
	return _p;
}

inline tt__Scope * soap_new_set_tt__Scope(
	struct soap *soap,
	enum tt__ScopeDefinition ScopeDef,
	const std::string& ScopeItem)
{	tt__Scope *_p = soap_new_tt__Scope(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Scope::ScopeDef = ScopeDef;
		_p->tt__Scope::ScopeItem = ScopeItem;
	}
	return _p;
}

#ifndef soap_write_tt__Scope
#define soap_write_tt__Scope(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Scope", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Scope * SOAP_FMAC4 soap_get_tt__Scope(struct soap*, tt__Scope *, const char*, const char*);

#ifndef soap_read_tt__Scope
#define soap_read_tt__Scope(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Scope(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__MediaUri
#define SOAP_TYPE_tt__MediaUri (415)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MediaUri(struct soap*, const char*, int, const tt__MediaUri *, const char*);
SOAP_FMAC3 tt__MediaUri * SOAP_FMAC4 soap_in_tt__MediaUri(struct soap*, const char*, tt__MediaUri *, const char*);
SOAP_FMAC1 tt__MediaUri * SOAP_FMAC2 soap_instantiate_tt__MediaUri(struct soap*, int, const char*, const char*, size_t*);

inline tt__MediaUri * soap_new_tt__MediaUri(struct soap *soap, int n = -1) { return soap_instantiate_tt__MediaUri(soap, n, NULL, NULL, NULL); }

inline tt__MediaUri * soap_new_req_tt__MediaUri(
	struct soap *soap,
	const std::string& Uri,
	bool InvalidAfterConnect,
	bool InvalidAfterReboot,
	LONG64 Timeout)
{	tt__MediaUri *_p = soap_new_tt__MediaUri(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__MediaUri::Uri = Uri;
		_p->tt__MediaUri::InvalidAfterConnect = InvalidAfterConnect;
		_p->tt__MediaUri::InvalidAfterReboot = InvalidAfterReboot;
		_p->tt__MediaUri::Timeout = Timeout;
	}
	return _p;
}

inline tt__MediaUri * soap_new_set_tt__MediaUri(
	struct soap *soap,
	const std::string& Uri,
	bool InvalidAfterConnect,
	bool InvalidAfterReboot,
	LONG64 Timeout)
{	tt__MediaUri *_p = soap_new_tt__MediaUri(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__MediaUri::Uri = Uri;
		_p->tt__MediaUri::InvalidAfterConnect = InvalidAfterConnect;
		_p->tt__MediaUri::InvalidAfterReboot = InvalidAfterReboot;
		_p->tt__MediaUri::Timeout = Timeout;
	}
	return _p;
}

#ifndef soap_write_tt__MediaUri
#define soap_write_tt__MediaUri(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:MediaUri", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MediaUri * SOAP_FMAC4 soap_get_tt__MediaUri(struct soap*, tt__MediaUri *, const char*, const char*);

#ifndef soap_read_tt__MediaUri
#define soap_read_tt__MediaUri(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MediaUri(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Transport
#define SOAP_TYPE_tt__Transport (414)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Transport(struct soap*, const char*, int, const tt__Transport *, const char*);
SOAP_FMAC3 tt__Transport * SOAP_FMAC4 soap_in_tt__Transport(struct soap*, const char*, tt__Transport *, const char*);
SOAP_FMAC1 tt__Transport * SOAP_FMAC2 soap_instantiate_tt__Transport(struct soap*, int, const char*, const char*, size_t*);

inline tt__Transport * soap_new_tt__Transport(struct soap *soap, int n = -1) { return soap_instantiate_tt__Transport(soap, n, NULL, NULL, NULL); }

inline tt__Transport * soap_new_req_tt__Transport(
	struct soap *soap,
	enum tt__TransportProtocol Protocol)
{	tt__Transport *_p = soap_new_tt__Transport(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Transport::Protocol = Protocol;
	}
	return _p;
}

inline tt__Transport * soap_new_set_tt__Transport(
	struct soap *soap,
	enum tt__TransportProtocol Protocol,
	tt__Transport *Tunnel)
{	tt__Transport *_p = soap_new_tt__Transport(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Transport::Protocol = Protocol;
		_p->tt__Transport::Tunnel = Tunnel;
	}
	return _p;
}

#ifndef soap_write_tt__Transport
#define soap_write_tt__Transport(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Transport", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Transport * SOAP_FMAC4 soap_get_tt__Transport(struct soap*, tt__Transport *, const char*, const char*);

#ifndef soap_read_tt__Transport
#define soap_read_tt__Transport(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Transport(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__StreamSetup
#define SOAP_TYPE_tt__StreamSetup (413)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__StreamSetup(struct soap*, const char*, int, const tt__StreamSetup *, const char*);
SOAP_FMAC3 tt__StreamSetup * SOAP_FMAC4 soap_in_tt__StreamSetup(struct soap*, const char*, tt__StreamSetup *, const char*);
SOAP_FMAC1 tt__StreamSetup * SOAP_FMAC2 soap_instantiate_tt__StreamSetup(struct soap*, int, const char*, const char*, size_t*);

inline tt__StreamSetup * soap_new_tt__StreamSetup(struct soap *soap, int n = -1) { return soap_instantiate_tt__StreamSetup(soap, n, NULL, NULL, NULL); }

inline tt__StreamSetup * soap_new_req_tt__StreamSetup(
	struct soap *soap,
	enum tt__StreamType Stream,
	tt__Transport *Transport)
{	tt__StreamSetup *_p = soap_new_tt__StreamSetup(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__StreamSetup::Stream = Stream;
		_p->tt__StreamSetup::Transport = Transport;
	}
	return _p;
}

inline tt__StreamSetup * soap_new_set_tt__StreamSetup(
	struct soap *soap,
	enum tt__StreamType Stream,
	tt__Transport *Transport)
{	tt__StreamSetup *_p = soap_new_tt__StreamSetup(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__StreamSetup::Stream = Stream;
		_p->tt__StreamSetup::Transport = Transport;
	}
	return _p;
}

#ifndef soap_write_tt__StreamSetup
#define soap_write_tt__StreamSetup(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:StreamSetup", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__StreamSetup * SOAP_FMAC4 soap_get_tt__StreamSetup(struct soap*, tt__StreamSetup *, const char*, const char*);

#ifndef soap_read_tt__StreamSetup
#define soap_read_tt__StreamSetup(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__StreamSetup(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__MulticastConfiguration
#define SOAP_TYPE_tt__MulticastConfiguration (412)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MulticastConfiguration(struct soap*, const char*, int, const tt__MulticastConfiguration *, const char*);
SOAP_FMAC3 tt__MulticastConfiguration * SOAP_FMAC4 soap_in_tt__MulticastConfiguration(struct soap*, const char*, tt__MulticastConfiguration *, const char*);
SOAP_FMAC1 tt__MulticastConfiguration * SOAP_FMAC2 soap_instantiate_tt__MulticastConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__MulticastConfiguration * soap_new_tt__MulticastConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__MulticastConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__MulticastConfiguration * soap_new_req_tt__MulticastConfiguration(
	struct soap *soap,
	tt__IPAddress *Address,
	int Port,
	int TTL,
	bool AutoStart)
{	tt__MulticastConfiguration *_p = soap_new_tt__MulticastConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__MulticastConfiguration::Address = Address;
		_p->tt__MulticastConfiguration::Port = Port;
		_p->tt__MulticastConfiguration::TTL = TTL;
		_p->tt__MulticastConfiguration::AutoStart = AutoStart;
	}
	return _p;
}

inline tt__MulticastConfiguration * soap_new_set_tt__MulticastConfiguration(
	struct soap *soap,
	tt__IPAddress *Address,
	int Port,
	int TTL,
	bool AutoStart)
{	tt__MulticastConfiguration *_p = soap_new_tt__MulticastConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__MulticastConfiguration::Address = Address;
		_p->tt__MulticastConfiguration::Port = Port;
		_p->tt__MulticastConfiguration::TTL = TTL;
		_p->tt__MulticastConfiguration::AutoStart = AutoStart;
	}
	return _p;
}

#ifndef soap_write_tt__MulticastConfiguration
#define soap_write_tt__MulticastConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:MulticastConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MulticastConfiguration * SOAP_FMAC4 soap_get_tt__MulticastConfiguration(struct soap*, tt__MulticastConfiguration *, const char*, const char*);

#ifndef soap_read_tt__MulticastConfiguration
#define soap_read_tt__MulticastConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MulticastConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AudioDecoderConfigurationOptionsExtension
#define SOAP_TYPE_tt__AudioDecoderConfigurationOptionsExtension (411)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioDecoderConfigurationOptionsExtension(struct soap*, const char*, int, const tt__AudioDecoderConfigurationOptionsExtension *, const char*);
SOAP_FMAC3 tt__AudioDecoderConfigurationOptionsExtension * SOAP_FMAC4 soap_in_tt__AudioDecoderConfigurationOptionsExtension(struct soap*, const char*, tt__AudioDecoderConfigurationOptionsExtension *, const char*);
SOAP_FMAC1 tt__AudioDecoderConfigurationOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__AudioDecoderConfigurationOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioDecoderConfigurationOptionsExtension * soap_new_tt__AudioDecoderConfigurationOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioDecoderConfigurationOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__AudioDecoderConfigurationOptionsExtension * soap_new_req_tt__AudioDecoderConfigurationOptionsExtension(
	struct soap *soap)
{	tt__AudioDecoderConfigurationOptionsExtension *_p = soap_new_tt__AudioDecoderConfigurationOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__AudioDecoderConfigurationOptionsExtension * soap_new_set_tt__AudioDecoderConfigurationOptionsExtension(
	struct soap *soap)
{	tt__AudioDecoderConfigurationOptionsExtension *_p = soap_new_tt__AudioDecoderConfigurationOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__AudioDecoderConfigurationOptionsExtension
#define soap_write_tt__AudioDecoderConfigurationOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AudioDecoderConfigurationOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioDecoderConfigurationOptionsExtension * SOAP_FMAC4 soap_get_tt__AudioDecoderConfigurationOptionsExtension(struct soap*, tt__AudioDecoderConfigurationOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__AudioDecoderConfigurationOptionsExtension
#define soap_read_tt__AudioDecoderConfigurationOptionsExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AudioDecoderConfigurationOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__G726DecOptions
#define SOAP_TYPE_tt__G726DecOptions (410)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__G726DecOptions(struct soap*, const char*, int, const tt__G726DecOptions *, const char*);
SOAP_FMAC3 tt__G726DecOptions * SOAP_FMAC4 soap_in_tt__G726DecOptions(struct soap*, const char*, tt__G726DecOptions *, const char*);
SOAP_FMAC1 tt__G726DecOptions * SOAP_FMAC2 soap_instantiate_tt__G726DecOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__G726DecOptions * soap_new_tt__G726DecOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__G726DecOptions(soap, n, NULL, NULL, NULL); }

inline tt__G726DecOptions * soap_new_req_tt__G726DecOptions(
	struct soap *soap,
	tt__IntList *Bitrate,
	tt__IntList *SampleRateRange)
{	tt__G726DecOptions *_p = soap_new_tt__G726DecOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__G726DecOptions::Bitrate = Bitrate;
		_p->tt__G726DecOptions::SampleRateRange = SampleRateRange;
	}
	return _p;
}

inline tt__G726DecOptions * soap_new_set_tt__G726DecOptions(
	struct soap *soap,
	tt__IntList *Bitrate,
	tt__IntList *SampleRateRange)
{	tt__G726DecOptions *_p = soap_new_tt__G726DecOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__G726DecOptions::Bitrate = Bitrate;
		_p->tt__G726DecOptions::SampleRateRange = SampleRateRange;
	}
	return _p;
}

#ifndef soap_write_tt__G726DecOptions
#define soap_write_tt__G726DecOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:G726DecOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__G726DecOptions * SOAP_FMAC4 soap_get_tt__G726DecOptions(struct soap*, tt__G726DecOptions *, const char*, const char*);

#ifndef soap_read_tt__G726DecOptions
#define soap_read_tt__G726DecOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__G726DecOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AACDecOptions
#define SOAP_TYPE_tt__AACDecOptions (409)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AACDecOptions(struct soap*, const char*, int, const tt__AACDecOptions *, const char*);
SOAP_FMAC3 tt__AACDecOptions * SOAP_FMAC4 soap_in_tt__AACDecOptions(struct soap*, const char*, tt__AACDecOptions *, const char*);
SOAP_FMAC1 tt__AACDecOptions * SOAP_FMAC2 soap_instantiate_tt__AACDecOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__AACDecOptions * soap_new_tt__AACDecOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__AACDecOptions(soap, n, NULL, NULL, NULL); }

inline tt__AACDecOptions * soap_new_req_tt__AACDecOptions(
	struct soap *soap,
	tt__IntList *Bitrate,
	tt__IntList *SampleRateRange)
{	tt__AACDecOptions *_p = soap_new_tt__AACDecOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AACDecOptions::Bitrate = Bitrate;
		_p->tt__AACDecOptions::SampleRateRange = SampleRateRange;
	}
	return _p;
}

inline tt__AACDecOptions * soap_new_set_tt__AACDecOptions(
	struct soap *soap,
	tt__IntList *Bitrate,
	tt__IntList *SampleRateRange)
{	tt__AACDecOptions *_p = soap_new_tt__AACDecOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AACDecOptions::Bitrate = Bitrate;
		_p->tt__AACDecOptions::SampleRateRange = SampleRateRange;
	}
	return _p;
}

#ifndef soap_write_tt__AACDecOptions
#define soap_write_tt__AACDecOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AACDecOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AACDecOptions * SOAP_FMAC4 soap_get_tt__AACDecOptions(struct soap*, tt__AACDecOptions *, const char*, const char*);

#ifndef soap_read_tt__AACDecOptions
#define soap_read_tt__AACDecOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AACDecOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__G711DecOptions
#define SOAP_TYPE_tt__G711DecOptions (408)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__G711DecOptions(struct soap*, const char*, int, const tt__G711DecOptions *, const char*);
SOAP_FMAC3 tt__G711DecOptions * SOAP_FMAC4 soap_in_tt__G711DecOptions(struct soap*, const char*, tt__G711DecOptions *, const char*);
SOAP_FMAC1 tt__G711DecOptions * SOAP_FMAC2 soap_instantiate_tt__G711DecOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__G711DecOptions * soap_new_tt__G711DecOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__G711DecOptions(soap, n, NULL, NULL, NULL); }

inline tt__G711DecOptions * soap_new_req_tt__G711DecOptions(
	struct soap *soap,
	tt__IntList *Bitrate,
	tt__IntList *SampleRateRange)
{	tt__G711DecOptions *_p = soap_new_tt__G711DecOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__G711DecOptions::Bitrate = Bitrate;
		_p->tt__G711DecOptions::SampleRateRange = SampleRateRange;
	}
	return _p;
}

inline tt__G711DecOptions * soap_new_set_tt__G711DecOptions(
	struct soap *soap,
	tt__IntList *Bitrate,
	tt__IntList *SampleRateRange)
{	tt__G711DecOptions *_p = soap_new_tt__G711DecOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__G711DecOptions::Bitrate = Bitrate;
		_p->tt__G711DecOptions::SampleRateRange = SampleRateRange;
	}
	return _p;
}

#ifndef soap_write_tt__G711DecOptions
#define soap_write_tt__G711DecOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:G711DecOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__G711DecOptions * SOAP_FMAC4 soap_get_tt__G711DecOptions(struct soap*, tt__G711DecOptions *, const char*, const char*);

#ifndef soap_read_tt__G711DecOptions
#define soap_read_tt__G711DecOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__G711DecOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AudioDecoderConfigurationOptions
#define SOAP_TYPE_tt__AudioDecoderConfigurationOptions (407)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioDecoderConfigurationOptions(struct soap*, const char*, int, const tt__AudioDecoderConfigurationOptions *, const char*);
SOAP_FMAC3 tt__AudioDecoderConfigurationOptions * SOAP_FMAC4 soap_in_tt__AudioDecoderConfigurationOptions(struct soap*, const char*, tt__AudioDecoderConfigurationOptions *, const char*);
SOAP_FMAC1 tt__AudioDecoderConfigurationOptions * SOAP_FMAC2 soap_instantiate_tt__AudioDecoderConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioDecoderConfigurationOptions * soap_new_tt__AudioDecoderConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioDecoderConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline tt__AudioDecoderConfigurationOptions * soap_new_req_tt__AudioDecoderConfigurationOptions(
	struct soap *soap)
{	tt__AudioDecoderConfigurationOptions *_p = soap_new_tt__AudioDecoderConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__AudioDecoderConfigurationOptions * soap_new_set_tt__AudioDecoderConfigurationOptions(
	struct soap *soap,
	tt__AACDecOptions *AACDecOptions,
	tt__G711DecOptions *G711DecOptions,
	tt__G726DecOptions *G726DecOptions,
	tt__AudioDecoderConfigurationOptionsExtension *Extension)
{	tt__AudioDecoderConfigurationOptions *_p = soap_new_tt__AudioDecoderConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AudioDecoderConfigurationOptions::AACDecOptions = AACDecOptions;
		_p->tt__AudioDecoderConfigurationOptions::G711DecOptions = G711DecOptions;
		_p->tt__AudioDecoderConfigurationOptions::G726DecOptions = G726DecOptions;
		_p->tt__AudioDecoderConfigurationOptions::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__AudioDecoderConfigurationOptions
#define soap_write_tt__AudioDecoderConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AudioDecoderConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioDecoderConfigurationOptions * SOAP_FMAC4 soap_get_tt__AudioDecoderConfigurationOptions(struct soap*, tt__AudioDecoderConfigurationOptions *, const char*, const char*);

#ifndef soap_read_tt__AudioDecoderConfigurationOptions
#define soap_read_tt__AudioDecoderConfigurationOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AudioDecoderConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AudioDecoderConfiguration
#define SOAP_TYPE_tt__AudioDecoderConfiguration (406)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioDecoderConfiguration(struct soap*, const char*, int, const tt__AudioDecoderConfiguration *, const char*);
SOAP_FMAC3 tt__AudioDecoderConfiguration * SOAP_FMAC4 soap_in_tt__AudioDecoderConfiguration(struct soap*, const char*, tt__AudioDecoderConfiguration *, const char*);
SOAP_FMAC1 tt__AudioDecoderConfiguration * SOAP_FMAC2 soap_instantiate_tt__AudioDecoderConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioDecoderConfiguration * soap_new_tt__AudioDecoderConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioDecoderConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__AudioDecoderConfiguration * soap_new_req_tt__AudioDecoderConfiguration(
	struct soap *soap,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__AudioDecoderConfiguration *_p = soap_new_tt__AudioDecoderConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

inline tt__AudioDecoderConfiguration * soap_new_set_tt__AudioDecoderConfiguration(
	struct soap *soap,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__AudioDecoderConfiguration *_p = soap_new_tt__AudioDecoderConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

#ifndef soap_write_tt__AudioDecoderConfiguration
#define soap_write_tt__AudioDecoderConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AudioDecoderConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioDecoderConfiguration * SOAP_FMAC4 soap_get_tt__AudioDecoderConfiguration(struct soap*, tt__AudioDecoderConfiguration *, const char*, const char*);

#ifndef soap_read_tt__AudioDecoderConfiguration
#define soap_read_tt__AudioDecoderConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AudioDecoderConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AudioOutputConfigurationOptions
#define SOAP_TYPE_tt__AudioOutputConfigurationOptions (405)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioOutputConfigurationOptions(struct soap*, const char*, int, const tt__AudioOutputConfigurationOptions *, const char*);
SOAP_FMAC3 tt__AudioOutputConfigurationOptions * SOAP_FMAC4 soap_in_tt__AudioOutputConfigurationOptions(struct soap*, const char*, tt__AudioOutputConfigurationOptions *, const char*);
SOAP_FMAC1 tt__AudioOutputConfigurationOptions * SOAP_FMAC2 soap_instantiate_tt__AudioOutputConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioOutputConfigurationOptions * soap_new_tt__AudioOutputConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioOutputConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline tt__AudioOutputConfigurationOptions * soap_new_req_tt__AudioOutputConfigurationOptions(
	struct soap *soap,
	const std::vector<std::string> & OutputTokensAvailable,
	tt__IntRange *OutputLevelRange)
{	tt__AudioOutputConfigurationOptions *_p = soap_new_tt__AudioOutputConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AudioOutputConfigurationOptions::OutputTokensAvailable = OutputTokensAvailable;
		_p->tt__AudioOutputConfigurationOptions::OutputLevelRange = OutputLevelRange;
	}
	return _p;
}

inline tt__AudioOutputConfigurationOptions * soap_new_set_tt__AudioOutputConfigurationOptions(
	struct soap *soap,
	const std::vector<std::string> & OutputTokensAvailable,
	const std::vector<std::string> & SendPrimacyOptions,
	tt__IntRange *OutputLevelRange)
{	tt__AudioOutputConfigurationOptions *_p = soap_new_tt__AudioOutputConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AudioOutputConfigurationOptions::OutputTokensAvailable = OutputTokensAvailable;
		_p->tt__AudioOutputConfigurationOptions::SendPrimacyOptions = SendPrimacyOptions;
		_p->tt__AudioOutputConfigurationOptions::OutputLevelRange = OutputLevelRange;
	}
	return _p;
}

#ifndef soap_write_tt__AudioOutputConfigurationOptions
#define soap_write_tt__AudioOutputConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AudioOutputConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioOutputConfigurationOptions * SOAP_FMAC4 soap_get_tt__AudioOutputConfigurationOptions(struct soap*, tt__AudioOutputConfigurationOptions *, const char*, const char*);

#ifndef soap_read_tt__AudioOutputConfigurationOptions
#define soap_read_tt__AudioOutputConfigurationOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AudioOutputConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AudioOutputConfiguration
#define SOAP_TYPE_tt__AudioOutputConfiguration (404)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioOutputConfiguration(struct soap*, const char*, int, const tt__AudioOutputConfiguration *, const char*);
SOAP_FMAC3 tt__AudioOutputConfiguration * SOAP_FMAC4 soap_in_tt__AudioOutputConfiguration(struct soap*, const char*, tt__AudioOutputConfiguration *, const char*);
SOAP_FMAC1 tt__AudioOutputConfiguration * SOAP_FMAC2 soap_instantiate_tt__AudioOutputConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioOutputConfiguration * soap_new_tt__AudioOutputConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioOutputConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__AudioOutputConfiguration * soap_new_req_tt__AudioOutputConfiguration(
	struct soap *soap,
	const std::string& OutputToken,
	int OutputLevel,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__AudioOutputConfiguration *_p = soap_new_tt__AudioOutputConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AudioOutputConfiguration::OutputToken = OutputToken;
		_p->tt__AudioOutputConfiguration::OutputLevel = OutputLevel;
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

inline tt__AudioOutputConfiguration * soap_new_set_tt__AudioOutputConfiguration(
	struct soap *soap,
	const std::string& OutputToken,
	std::string *SendPrimacy,
	int OutputLevel,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__AudioOutputConfiguration *_p = soap_new_tt__AudioOutputConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AudioOutputConfiguration::OutputToken = OutputToken;
		_p->tt__AudioOutputConfiguration::SendPrimacy = SendPrimacy;
		_p->tt__AudioOutputConfiguration::OutputLevel = OutputLevel;
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

#ifndef soap_write_tt__AudioOutputConfiguration
#define soap_write_tt__AudioOutputConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AudioOutputConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioOutputConfiguration * SOAP_FMAC4 soap_get_tt__AudioOutputConfiguration(struct soap*, tt__AudioOutputConfiguration *, const char*, const char*);

#ifndef soap_read_tt__AudioOutputConfiguration
#define soap_read_tt__AudioOutputConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AudioOutputConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AudioOutput
#define SOAP_TYPE_tt__AudioOutput (403)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioOutput(struct soap*, const char*, int, const tt__AudioOutput *, const char*);
SOAP_FMAC3 tt__AudioOutput * SOAP_FMAC4 soap_in_tt__AudioOutput(struct soap*, const char*, tt__AudioOutput *, const char*);
SOAP_FMAC1 tt__AudioOutput * SOAP_FMAC2 soap_instantiate_tt__AudioOutput(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioOutput * soap_new_tt__AudioOutput(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioOutput(soap, n, NULL, NULL, NULL); }

inline tt__AudioOutput * soap_new_req_tt__AudioOutput(
	struct soap *soap,
	const std::string& token1)
{	tt__AudioOutput *_p = soap_new_tt__AudioOutput(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__DeviceEntity::token = token1;
	}
	return _p;
}

inline tt__AudioOutput * soap_new_set_tt__AudioOutput(
	struct soap *soap,
	const std::string& token1)
{	tt__AudioOutput *_p = soap_new_tt__AudioOutput(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__DeviceEntity::token = token1;
	}
	return _p;
}

#ifndef soap_write_tt__AudioOutput
#define soap_write_tt__AudioOutput(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AudioOutput", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioOutput * SOAP_FMAC4 soap_get_tt__AudioOutput(struct soap*, tt__AudioOutput *, const char*, const char*);

#ifndef soap_read_tt__AudioOutput
#define soap_read_tt__AudioOutput(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AudioOutput(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoDecoderConfigurationOptionsExtension
#define SOAP_TYPE_tt__VideoDecoderConfigurationOptionsExtension (402)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoDecoderConfigurationOptionsExtension(struct soap*, const char*, int, const tt__VideoDecoderConfigurationOptionsExtension *, const char*);
SOAP_FMAC3 tt__VideoDecoderConfigurationOptionsExtension * SOAP_FMAC4 soap_in_tt__VideoDecoderConfigurationOptionsExtension(struct soap*, const char*, tt__VideoDecoderConfigurationOptionsExtension *, const char*);
SOAP_FMAC1 tt__VideoDecoderConfigurationOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__VideoDecoderConfigurationOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoDecoderConfigurationOptionsExtension * soap_new_tt__VideoDecoderConfigurationOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoDecoderConfigurationOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__VideoDecoderConfigurationOptionsExtension * soap_new_req_tt__VideoDecoderConfigurationOptionsExtension(
	struct soap *soap)
{	tt__VideoDecoderConfigurationOptionsExtension *_p = soap_new_tt__VideoDecoderConfigurationOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__VideoDecoderConfigurationOptionsExtension * soap_new_set_tt__VideoDecoderConfigurationOptionsExtension(
	struct soap *soap)
{	tt__VideoDecoderConfigurationOptionsExtension *_p = soap_new_tt__VideoDecoderConfigurationOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__VideoDecoderConfigurationOptionsExtension
#define soap_write_tt__VideoDecoderConfigurationOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:VideoDecoderConfigurationOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoDecoderConfigurationOptionsExtension * SOAP_FMAC4 soap_get_tt__VideoDecoderConfigurationOptionsExtension(struct soap*, tt__VideoDecoderConfigurationOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__VideoDecoderConfigurationOptionsExtension
#define soap_read_tt__VideoDecoderConfigurationOptionsExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoDecoderConfigurationOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Mpeg4DecOptions
#define SOAP_TYPE_tt__Mpeg4DecOptions (401)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Mpeg4DecOptions(struct soap*, const char*, int, const tt__Mpeg4DecOptions *, const char*);
SOAP_FMAC3 tt__Mpeg4DecOptions * SOAP_FMAC4 soap_in_tt__Mpeg4DecOptions(struct soap*, const char*, tt__Mpeg4DecOptions *, const char*);
SOAP_FMAC1 tt__Mpeg4DecOptions * SOAP_FMAC2 soap_instantiate_tt__Mpeg4DecOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__Mpeg4DecOptions * soap_new_tt__Mpeg4DecOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__Mpeg4DecOptions(soap, n, NULL, NULL, NULL); }

inline tt__Mpeg4DecOptions * soap_new_req_tt__Mpeg4DecOptions(
	struct soap *soap,
	const std::vector<tt__VideoResolution *> & ResolutionsAvailable,
	const std::vector<enum tt__Mpeg4Profile> & SupportedMpeg4Profiles,
	tt__IntRange *SupportedInputBitrate,
	tt__IntRange *SupportedFrameRate)
{	tt__Mpeg4DecOptions *_p = soap_new_tt__Mpeg4DecOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Mpeg4DecOptions::ResolutionsAvailable = ResolutionsAvailable;
		_p->tt__Mpeg4DecOptions::SupportedMpeg4Profiles = SupportedMpeg4Profiles;
		_p->tt__Mpeg4DecOptions::SupportedInputBitrate = SupportedInputBitrate;
		_p->tt__Mpeg4DecOptions::SupportedFrameRate = SupportedFrameRate;
	}
	return _p;
}

inline tt__Mpeg4DecOptions * soap_new_set_tt__Mpeg4DecOptions(
	struct soap *soap,
	const std::vector<tt__VideoResolution *> & ResolutionsAvailable,
	const std::vector<enum tt__Mpeg4Profile> & SupportedMpeg4Profiles,
	tt__IntRange *SupportedInputBitrate,
	tt__IntRange *SupportedFrameRate)
{	tt__Mpeg4DecOptions *_p = soap_new_tt__Mpeg4DecOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Mpeg4DecOptions::ResolutionsAvailable = ResolutionsAvailable;
		_p->tt__Mpeg4DecOptions::SupportedMpeg4Profiles = SupportedMpeg4Profiles;
		_p->tt__Mpeg4DecOptions::SupportedInputBitrate = SupportedInputBitrate;
		_p->tt__Mpeg4DecOptions::SupportedFrameRate = SupportedFrameRate;
	}
	return _p;
}

#ifndef soap_write_tt__Mpeg4DecOptions
#define soap_write_tt__Mpeg4DecOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Mpeg4DecOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Mpeg4DecOptions * SOAP_FMAC4 soap_get_tt__Mpeg4DecOptions(struct soap*, tt__Mpeg4DecOptions *, const char*, const char*);

#ifndef soap_read_tt__Mpeg4DecOptions
#define soap_read_tt__Mpeg4DecOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Mpeg4DecOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__JpegDecOptions
#define SOAP_TYPE_tt__JpegDecOptions (400)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__JpegDecOptions(struct soap*, const char*, int, const tt__JpegDecOptions *, const char*);
SOAP_FMAC3 tt__JpegDecOptions * SOAP_FMAC4 soap_in_tt__JpegDecOptions(struct soap*, const char*, tt__JpegDecOptions *, const char*);
SOAP_FMAC1 tt__JpegDecOptions * SOAP_FMAC2 soap_instantiate_tt__JpegDecOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__JpegDecOptions * soap_new_tt__JpegDecOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__JpegDecOptions(soap, n, NULL, NULL, NULL); }

inline tt__JpegDecOptions * soap_new_req_tt__JpegDecOptions(
	struct soap *soap,
	const std::vector<tt__VideoResolution *> & ResolutionsAvailable,
	tt__IntRange *SupportedInputBitrate,
	tt__IntRange *SupportedFrameRate)
{	tt__JpegDecOptions *_p = soap_new_tt__JpegDecOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__JpegDecOptions::ResolutionsAvailable = ResolutionsAvailable;
		_p->tt__JpegDecOptions::SupportedInputBitrate = SupportedInputBitrate;
		_p->tt__JpegDecOptions::SupportedFrameRate = SupportedFrameRate;
	}
	return _p;
}

inline tt__JpegDecOptions * soap_new_set_tt__JpegDecOptions(
	struct soap *soap,
	const std::vector<tt__VideoResolution *> & ResolutionsAvailable,
	tt__IntRange *SupportedInputBitrate,
	tt__IntRange *SupportedFrameRate)
{	tt__JpegDecOptions *_p = soap_new_tt__JpegDecOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__JpegDecOptions::ResolutionsAvailable = ResolutionsAvailable;
		_p->tt__JpegDecOptions::SupportedInputBitrate = SupportedInputBitrate;
		_p->tt__JpegDecOptions::SupportedFrameRate = SupportedFrameRate;
	}
	return _p;
}

#ifndef soap_write_tt__JpegDecOptions
#define soap_write_tt__JpegDecOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:JpegDecOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__JpegDecOptions * SOAP_FMAC4 soap_get_tt__JpegDecOptions(struct soap*, tt__JpegDecOptions *, const char*, const char*);

#ifndef soap_read_tt__JpegDecOptions
#define soap_read_tt__JpegDecOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__JpegDecOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__H264DecOptions
#define SOAP_TYPE_tt__H264DecOptions (399)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__H264DecOptions(struct soap*, const char*, int, const tt__H264DecOptions *, const char*);
SOAP_FMAC3 tt__H264DecOptions * SOAP_FMAC4 soap_in_tt__H264DecOptions(struct soap*, const char*, tt__H264DecOptions *, const char*);
SOAP_FMAC1 tt__H264DecOptions * SOAP_FMAC2 soap_instantiate_tt__H264DecOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__H264DecOptions * soap_new_tt__H264DecOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__H264DecOptions(soap, n, NULL, NULL, NULL); }

inline tt__H264DecOptions * soap_new_req_tt__H264DecOptions(
	struct soap *soap,
	const std::vector<tt__VideoResolution *> & ResolutionsAvailable,
	const std::vector<enum tt__H264Profile> & SupportedH264Profiles,
	tt__IntRange *SupportedInputBitrate,
	tt__IntRange *SupportedFrameRate)
{	tt__H264DecOptions *_p = soap_new_tt__H264DecOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__H264DecOptions::ResolutionsAvailable = ResolutionsAvailable;
		_p->tt__H264DecOptions::SupportedH264Profiles = SupportedH264Profiles;
		_p->tt__H264DecOptions::SupportedInputBitrate = SupportedInputBitrate;
		_p->tt__H264DecOptions::SupportedFrameRate = SupportedFrameRate;
	}
	return _p;
}

inline tt__H264DecOptions * soap_new_set_tt__H264DecOptions(
	struct soap *soap,
	const std::vector<tt__VideoResolution *> & ResolutionsAvailable,
	const std::vector<enum tt__H264Profile> & SupportedH264Profiles,
	tt__IntRange *SupportedInputBitrate,
	tt__IntRange *SupportedFrameRate)
{	tt__H264DecOptions *_p = soap_new_tt__H264DecOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__H264DecOptions::ResolutionsAvailable = ResolutionsAvailable;
		_p->tt__H264DecOptions::SupportedH264Profiles = SupportedH264Profiles;
		_p->tt__H264DecOptions::SupportedInputBitrate = SupportedInputBitrate;
		_p->tt__H264DecOptions::SupportedFrameRate = SupportedFrameRate;
	}
	return _p;
}

#ifndef soap_write_tt__H264DecOptions
#define soap_write_tt__H264DecOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:H264DecOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__H264DecOptions * SOAP_FMAC4 soap_get_tt__H264DecOptions(struct soap*, tt__H264DecOptions *, const char*, const char*);

#ifndef soap_read_tt__H264DecOptions
#define soap_read_tt__H264DecOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__H264DecOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoDecoderConfigurationOptions
#define SOAP_TYPE_tt__VideoDecoderConfigurationOptions (398)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoDecoderConfigurationOptions(struct soap*, const char*, int, const tt__VideoDecoderConfigurationOptions *, const char*);
SOAP_FMAC3 tt__VideoDecoderConfigurationOptions * SOAP_FMAC4 soap_in_tt__VideoDecoderConfigurationOptions(struct soap*, const char*, tt__VideoDecoderConfigurationOptions *, const char*);
SOAP_FMAC1 tt__VideoDecoderConfigurationOptions * SOAP_FMAC2 soap_instantiate_tt__VideoDecoderConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoDecoderConfigurationOptions * soap_new_tt__VideoDecoderConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoDecoderConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline tt__VideoDecoderConfigurationOptions * soap_new_req_tt__VideoDecoderConfigurationOptions(
	struct soap *soap)
{	tt__VideoDecoderConfigurationOptions *_p = soap_new_tt__VideoDecoderConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__VideoDecoderConfigurationOptions * soap_new_set_tt__VideoDecoderConfigurationOptions(
	struct soap *soap,
	tt__JpegDecOptions *JpegDecOptions,
	tt__H264DecOptions *H264DecOptions,
	tt__Mpeg4DecOptions *Mpeg4DecOptions,
	tt__VideoDecoderConfigurationOptionsExtension *Extension)
{	tt__VideoDecoderConfigurationOptions *_p = soap_new_tt__VideoDecoderConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoDecoderConfigurationOptions::JpegDecOptions = JpegDecOptions;
		_p->tt__VideoDecoderConfigurationOptions::H264DecOptions = H264DecOptions;
		_p->tt__VideoDecoderConfigurationOptions::Mpeg4DecOptions = Mpeg4DecOptions;
		_p->tt__VideoDecoderConfigurationOptions::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__VideoDecoderConfigurationOptions
#define soap_write_tt__VideoDecoderConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:VideoDecoderConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoDecoderConfigurationOptions * SOAP_FMAC4 soap_get_tt__VideoDecoderConfigurationOptions(struct soap*, tt__VideoDecoderConfigurationOptions *, const char*, const char*);

#ifndef soap_read_tt__VideoDecoderConfigurationOptions
#define soap_read_tt__VideoDecoderConfigurationOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoDecoderConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoOutputConfigurationOptions
#define SOAP_TYPE_tt__VideoOutputConfigurationOptions (397)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoOutputConfigurationOptions(struct soap*, const char*, int, const tt__VideoOutputConfigurationOptions *, const char*);
SOAP_FMAC3 tt__VideoOutputConfigurationOptions * SOAP_FMAC4 soap_in_tt__VideoOutputConfigurationOptions(struct soap*, const char*, tt__VideoOutputConfigurationOptions *, const char*);
SOAP_FMAC1 tt__VideoOutputConfigurationOptions * SOAP_FMAC2 soap_instantiate_tt__VideoOutputConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoOutputConfigurationOptions * soap_new_tt__VideoOutputConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoOutputConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline tt__VideoOutputConfigurationOptions * soap_new_req_tt__VideoOutputConfigurationOptions(
	struct soap *soap)
{	tt__VideoOutputConfigurationOptions *_p = soap_new_tt__VideoOutputConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__VideoOutputConfigurationOptions * soap_new_set_tt__VideoOutputConfigurationOptions(
	struct soap *soap)
{	tt__VideoOutputConfigurationOptions *_p = soap_new_tt__VideoOutputConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__VideoOutputConfigurationOptions
#define soap_write_tt__VideoOutputConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:VideoOutputConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoOutputConfigurationOptions * SOAP_FMAC4 soap_get_tt__VideoOutputConfigurationOptions(struct soap*, tt__VideoOutputConfigurationOptions *, const char*, const char*);

#ifndef soap_read_tt__VideoOutputConfigurationOptions
#define soap_read_tt__VideoOutputConfigurationOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoOutputConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoOutputConfiguration
#define SOAP_TYPE_tt__VideoOutputConfiguration (396)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoOutputConfiguration(struct soap*, const char*, int, const tt__VideoOutputConfiguration *, const char*);
SOAP_FMAC3 tt__VideoOutputConfiguration * SOAP_FMAC4 soap_in_tt__VideoOutputConfiguration(struct soap*, const char*, tt__VideoOutputConfiguration *, const char*);
SOAP_FMAC1 tt__VideoOutputConfiguration * SOAP_FMAC2 soap_instantiate_tt__VideoOutputConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoOutputConfiguration * soap_new_tt__VideoOutputConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoOutputConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__VideoOutputConfiguration * soap_new_req_tt__VideoOutputConfiguration(
	struct soap *soap,
	const std::string& OutputToken,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__VideoOutputConfiguration *_p = soap_new_tt__VideoOutputConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoOutputConfiguration::OutputToken = OutputToken;
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

inline tt__VideoOutputConfiguration * soap_new_set_tt__VideoOutputConfiguration(
	struct soap *soap,
	const std::string& OutputToken,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__VideoOutputConfiguration *_p = soap_new_tt__VideoOutputConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoOutputConfiguration::OutputToken = OutputToken;
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

#ifndef soap_write_tt__VideoOutputConfiguration
#define soap_write_tt__VideoOutputConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:VideoOutputConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoOutputConfiguration * SOAP_FMAC4 soap_get_tt__VideoOutputConfiguration(struct soap*, tt__VideoOutputConfiguration *, const char*, const char*);

#ifndef soap_read_tt__VideoOutputConfiguration
#define soap_read_tt__VideoOutputConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoOutputConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoOutputExtension
#define SOAP_TYPE_tt__VideoOutputExtension (395)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoOutputExtension(struct soap*, const char*, int, const tt__VideoOutputExtension *, const char*);
SOAP_FMAC3 tt__VideoOutputExtension * SOAP_FMAC4 soap_in_tt__VideoOutputExtension(struct soap*, const char*, tt__VideoOutputExtension *, const char*);
SOAP_FMAC1 tt__VideoOutputExtension * SOAP_FMAC2 soap_instantiate_tt__VideoOutputExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoOutputExtension * soap_new_tt__VideoOutputExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoOutputExtension(soap, n, NULL, NULL, NULL); }

inline tt__VideoOutputExtension * soap_new_req_tt__VideoOutputExtension(
	struct soap *soap)
{	tt__VideoOutputExtension *_p = soap_new_tt__VideoOutputExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__VideoOutputExtension * soap_new_set_tt__VideoOutputExtension(
	struct soap *soap)
{	tt__VideoOutputExtension *_p = soap_new_tt__VideoOutputExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__VideoOutputExtension
#define soap_write_tt__VideoOutputExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:VideoOutputExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoOutputExtension * SOAP_FMAC4 soap_get_tt__VideoOutputExtension(struct soap*, tt__VideoOutputExtension *, const char*, const char*);

#ifndef soap_read_tt__VideoOutputExtension
#define soap_read_tt__VideoOutputExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoOutputExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoOutput
#define SOAP_TYPE_tt__VideoOutput (394)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoOutput(struct soap*, const char*, int, const tt__VideoOutput *, const char*);
SOAP_FMAC3 tt__VideoOutput * SOAP_FMAC4 soap_in_tt__VideoOutput(struct soap*, const char*, tt__VideoOutput *, const char*);
SOAP_FMAC1 tt__VideoOutput * SOAP_FMAC2 soap_instantiate_tt__VideoOutput(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoOutput * soap_new_tt__VideoOutput(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoOutput(soap, n, NULL, NULL, NULL); }

inline tt__VideoOutput * soap_new_req_tt__VideoOutput(
	struct soap *soap,
	tt__Layout *Layout,
	const std::string& token1)
{	tt__VideoOutput *_p = soap_new_tt__VideoOutput(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoOutput::Layout = Layout;
		_p->tt__DeviceEntity::token = token1;
	}
	return _p;
}

inline tt__VideoOutput * soap_new_set_tt__VideoOutput(
	struct soap *soap,
	tt__Layout *Layout,
	tt__VideoResolution *Resolution,
	float *RefreshRate,
	float *AspectRatio,
	tt__VideoOutputExtension *Extension,
	const std::string& token1)
{	tt__VideoOutput *_p = soap_new_tt__VideoOutput(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoOutput::Layout = Layout;
		_p->tt__VideoOutput::Resolution = Resolution;
		_p->tt__VideoOutput::RefreshRate = RefreshRate;
		_p->tt__VideoOutput::AspectRatio = AspectRatio;
		_p->tt__VideoOutput::Extension = Extension;
		_p->tt__DeviceEntity::token = token1;
	}
	return _p;
}

#ifndef soap_write_tt__VideoOutput
#define soap_write_tt__VideoOutput(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:VideoOutput", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoOutput * SOAP_FMAC4 soap_get_tt__VideoOutput(struct soap*, tt__VideoOutput *, const char*, const char*);

#ifndef soap_read_tt__VideoOutput
#define soap_read_tt__VideoOutput(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoOutput(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZStatusFilterOptionsExtension
#define SOAP_TYPE_tt__PTZStatusFilterOptionsExtension (393)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZStatusFilterOptionsExtension(struct soap*, const char*, int, const tt__PTZStatusFilterOptionsExtension *, const char*);
SOAP_FMAC3 tt__PTZStatusFilterOptionsExtension * SOAP_FMAC4 soap_in_tt__PTZStatusFilterOptionsExtension(struct soap*, const char*, tt__PTZStatusFilterOptionsExtension *, const char*);
SOAP_FMAC1 tt__PTZStatusFilterOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__PTZStatusFilterOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZStatusFilterOptionsExtension * soap_new_tt__PTZStatusFilterOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZStatusFilterOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__PTZStatusFilterOptionsExtension * soap_new_req_tt__PTZStatusFilterOptionsExtension(
	struct soap *soap)
{	tt__PTZStatusFilterOptionsExtension *_p = soap_new_tt__PTZStatusFilterOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__PTZStatusFilterOptionsExtension * soap_new_set_tt__PTZStatusFilterOptionsExtension(
	struct soap *soap)
{	tt__PTZStatusFilterOptionsExtension *_p = soap_new_tt__PTZStatusFilterOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__PTZStatusFilterOptionsExtension
#define soap_write_tt__PTZStatusFilterOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZStatusFilterOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZStatusFilterOptionsExtension * SOAP_FMAC4 soap_get_tt__PTZStatusFilterOptionsExtension(struct soap*, tt__PTZStatusFilterOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__PTZStatusFilterOptionsExtension
#define soap_read_tt__PTZStatusFilterOptionsExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZStatusFilterOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZStatusFilterOptions
#define SOAP_TYPE_tt__PTZStatusFilterOptions (392)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZStatusFilterOptions(struct soap*, const char*, int, const tt__PTZStatusFilterOptions *, const char*);
SOAP_FMAC3 tt__PTZStatusFilterOptions * SOAP_FMAC4 soap_in_tt__PTZStatusFilterOptions(struct soap*, const char*, tt__PTZStatusFilterOptions *, const char*);
SOAP_FMAC1 tt__PTZStatusFilterOptions * SOAP_FMAC2 soap_instantiate_tt__PTZStatusFilterOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZStatusFilterOptions * soap_new_tt__PTZStatusFilterOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZStatusFilterOptions(soap, n, NULL, NULL, NULL); }

inline tt__PTZStatusFilterOptions * soap_new_req_tt__PTZStatusFilterOptions(
	struct soap *soap,
	bool PanTiltStatusSupported,
	bool ZoomStatusSupported)
{	tt__PTZStatusFilterOptions *_p = soap_new_tt__PTZStatusFilterOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZStatusFilterOptions::PanTiltStatusSupported = PanTiltStatusSupported;
		_p->tt__PTZStatusFilterOptions::ZoomStatusSupported = ZoomStatusSupported;
	}
	return _p;
}

inline tt__PTZStatusFilterOptions * soap_new_set_tt__PTZStatusFilterOptions(
	struct soap *soap,
	bool PanTiltStatusSupported,
	bool ZoomStatusSupported,
	bool *PanTiltPositionSupported,
	bool *ZoomPositionSupported,
	tt__PTZStatusFilterOptionsExtension *Extension)
{	tt__PTZStatusFilterOptions *_p = soap_new_tt__PTZStatusFilterOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZStatusFilterOptions::PanTiltStatusSupported = PanTiltStatusSupported;
		_p->tt__PTZStatusFilterOptions::ZoomStatusSupported = ZoomStatusSupported;
		_p->tt__PTZStatusFilterOptions::PanTiltPositionSupported = PanTiltPositionSupported;
		_p->tt__PTZStatusFilterOptions::ZoomPositionSupported = ZoomPositionSupported;
		_p->tt__PTZStatusFilterOptions::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__PTZStatusFilterOptions
#define soap_write_tt__PTZStatusFilterOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZStatusFilterOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZStatusFilterOptions * SOAP_FMAC4 soap_get_tt__PTZStatusFilterOptions(struct soap*, tt__PTZStatusFilterOptions *, const char*, const char*);

#ifndef soap_read_tt__PTZStatusFilterOptions
#define soap_read_tt__PTZStatusFilterOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZStatusFilterOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__MetadataConfigurationOptionsExtension2
#define SOAP_TYPE_tt__MetadataConfigurationOptionsExtension2 (391)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MetadataConfigurationOptionsExtension2(struct soap*, const char*, int, const tt__MetadataConfigurationOptionsExtension2 *, const char*);
SOAP_FMAC3 tt__MetadataConfigurationOptionsExtension2 * SOAP_FMAC4 soap_in_tt__MetadataConfigurationOptionsExtension2(struct soap*, const char*, tt__MetadataConfigurationOptionsExtension2 *, const char*);
SOAP_FMAC1 tt__MetadataConfigurationOptionsExtension2 * SOAP_FMAC2 soap_instantiate_tt__MetadataConfigurationOptionsExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__MetadataConfigurationOptionsExtension2 * soap_new_tt__MetadataConfigurationOptionsExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__MetadataConfigurationOptionsExtension2(soap, n, NULL, NULL, NULL); }

inline tt__MetadataConfigurationOptionsExtension2 * soap_new_req_tt__MetadataConfigurationOptionsExtension2(
	struct soap *soap)
{	tt__MetadataConfigurationOptionsExtension2 *_p = soap_new_tt__MetadataConfigurationOptionsExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__MetadataConfigurationOptionsExtension2 * soap_new_set_tt__MetadataConfigurationOptionsExtension2(
	struct soap *soap)
{	tt__MetadataConfigurationOptionsExtension2 *_p = soap_new_tt__MetadataConfigurationOptionsExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__MetadataConfigurationOptionsExtension2
#define soap_write_tt__MetadataConfigurationOptionsExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:MetadataConfigurationOptionsExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataConfigurationOptionsExtension2 * SOAP_FMAC4 soap_get_tt__MetadataConfigurationOptionsExtension2(struct soap*, tt__MetadataConfigurationOptionsExtension2 *, const char*, const char*);

#ifndef soap_read_tt__MetadataConfigurationOptionsExtension2
#define soap_read_tt__MetadataConfigurationOptionsExtension2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MetadataConfigurationOptionsExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__MetadataConfigurationOptionsExtension
#define SOAP_TYPE_tt__MetadataConfigurationOptionsExtension (390)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MetadataConfigurationOptionsExtension(struct soap*, const char*, int, const tt__MetadataConfigurationOptionsExtension *, const char*);
SOAP_FMAC3 tt__MetadataConfigurationOptionsExtension * SOAP_FMAC4 soap_in_tt__MetadataConfigurationOptionsExtension(struct soap*, const char*, tt__MetadataConfigurationOptionsExtension *, const char*);
SOAP_FMAC1 tt__MetadataConfigurationOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__MetadataConfigurationOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__MetadataConfigurationOptionsExtension * soap_new_tt__MetadataConfigurationOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__MetadataConfigurationOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__MetadataConfigurationOptionsExtension * soap_new_req_tt__MetadataConfigurationOptionsExtension(
	struct soap *soap)
{	tt__MetadataConfigurationOptionsExtension *_p = soap_new_tt__MetadataConfigurationOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__MetadataConfigurationOptionsExtension * soap_new_set_tt__MetadataConfigurationOptionsExtension(
	struct soap *soap,
	const std::vector<std::string> & CompressionType,
	tt__MetadataConfigurationOptionsExtension2 *Extension)
{	tt__MetadataConfigurationOptionsExtension *_p = soap_new_tt__MetadataConfigurationOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__MetadataConfigurationOptionsExtension::CompressionType = CompressionType;
		_p->tt__MetadataConfigurationOptionsExtension::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__MetadataConfigurationOptionsExtension
#define soap_write_tt__MetadataConfigurationOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:MetadataConfigurationOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataConfigurationOptionsExtension * SOAP_FMAC4 soap_get_tt__MetadataConfigurationOptionsExtension(struct soap*, tt__MetadataConfigurationOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__MetadataConfigurationOptionsExtension
#define soap_read_tt__MetadataConfigurationOptionsExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MetadataConfigurationOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__MetadataConfigurationOptions
#define SOAP_TYPE_tt__MetadataConfigurationOptions (389)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MetadataConfigurationOptions(struct soap*, const char*, int, const tt__MetadataConfigurationOptions *, const char*);
SOAP_FMAC3 tt__MetadataConfigurationOptions * SOAP_FMAC4 soap_in_tt__MetadataConfigurationOptions(struct soap*, const char*, tt__MetadataConfigurationOptions *, const char*);
SOAP_FMAC1 tt__MetadataConfigurationOptions * SOAP_FMAC2 soap_instantiate_tt__MetadataConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__MetadataConfigurationOptions * soap_new_tt__MetadataConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__MetadataConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline tt__MetadataConfigurationOptions * soap_new_req_tt__MetadataConfigurationOptions(
	struct soap *soap,
	tt__PTZStatusFilterOptions *PTZStatusFilterOptions)
{	tt__MetadataConfigurationOptions *_p = soap_new_tt__MetadataConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__MetadataConfigurationOptions::PTZStatusFilterOptions = PTZStatusFilterOptions;
	}
	return _p;
}

inline tt__MetadataConfigurationOptions * soap_new_set_tt__MetadataConfigurationOptions(
	struct soap *soap,
	tt__PTZStatusFilterOptions *PTZStatusFilterOptions,
	tt__MetadataConfigurationOptionsExtension *Extension)
{	tt__MetadataConfigurationOptions *_p = soap_new_tt__MetadataConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__MetadataConfigurationOptions::PTZStatusFilterOptions = PTZStatusFilterOptions;
		_p->tt__MetadataConfigurationOptions::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__MetadataConfigurationOptions
#define soap_write_tt__MetadataConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:MetadataConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataConfigurationOptions * SOAP_FMAC4 soap_get_tt__MetadataConfigurationOptions(struct soap*, tt__MetadataConfigurationOptions *, const char*, const char*);

#ifndef soap_read_tt__MetadataConfigurationOptions
#define soap_read_tt__MetadataConfigurationOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MetadataConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__EventSubscription
#define SOAP_TYPE_tt__EventSubscription (388)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__EventSubscription(struct soap*, const char*, int, const tt__EventSubscription *, const char*);
SOAP_FMAC3 tt__EventSubscription * SOAP_FMAC4 soap_in_tt__EventSubscription(struct soap*, const char*, tt__EventSubscription *, const char*);
SOAP_FMAC1 tt__EventSubscription * SOAP_FMAC2 soap_instantiate_tt__EventSubscription(struct soap*, int, const char*, const char*, size_t*);

inline tt__EventSubscription * soap_new_tt__EventSubscription(struct soap *soap, int n = -1) { return soap_instantiate_tt__EventSubscription(soap, n, NULL, NULL, NULL); }

inline tt__EventSubscription * soap_new_req_tt__EventSubscription(
	struct soap *soap)
{	tt__EventSubscription *_p = soap_new_tt__EventSubscription(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__EventSubscription * soap_new_set_tt__EventSubscription(
	struct soap *soap,
	wsnt__FilterType *Filter,
	_tt__EventSubscription_SubscriptionPolicy *SubscriptionPolicy)
{	tt__EventSubscription *_p = soap_new_tt__EventSubscription(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__EventSubscription::Filter = Filter;
		_p->tt__EventSubscription::SubscriptionPolicy = SubscriptionPolicy;
	}
	return _p;
}

#ifndef soap_write_tt__EventSubscription
#define soap_write_tt__EventSubscription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:EventSubscription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EventSubscription * SOAP_FMAC4 soap_get_tt__EventSubscription(struct soap*, tt__EventSubscription *, const char*, const char*);

#ifndef soap_read_tt__EventSubscription
#define soap_read_tt__EventSubscription(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__EventSubscription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__PTZFilter
#define SOAP_TYPE_tt__PTZFilter (387)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__PTZFilter(struct soap*, const char*, int, const tt__PTZFilter *, const char*);
SOAP_FMAC3 tt__PTZFilter * SOAP_FMAC4 soap_in_tt__PTZFilter(struct soap*, const char*, tt__PTZFilter *, const char*);
SOAP_FMAC1 tt__PTZFilter * SOAP_FMAC2 soap_instantiate_tt__PTZFilter(struct soap*, int, const char*, const char*, size_t*);

inline tt__PTZFilter * soap_new_tt__PTZFilter(struct soap *soap, int n = -1) { return soap_instantiate_tt__PTZFilter(soap, n, NULL, NULL, NULL); }

inline tt__PTZFilter * soap_new_req_tt__PTZFilter(
	struct soap *soap,
	bool Status,
	bool Position)
{	tt__PTZFilter *_p = soap_new_tt__PTZFilter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZFilter::Status = Status;
		_p->tt__PTZFilter::Position = Position;
	}
	return _p;
}

inline tt__PTZFilter * soap_new_set_tt__PTZFilter(
	struct soap *soap,
	bool Status,
	bool Position)
{	tt__PTZFilter *_p = soap_new_tt__PTZFilter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__PTZFilter::Status = Status;
		_p->tt__PTZFilter::Position = Position;
	}
	return _p;
}

#ifndef soap_write_tt__PTZFilter
#define soap_write_tt__PTZFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:PTZFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZFilter * SOAP_FMAC4 soap_get_tt__PTZFilter(struct soap*, tt__PTZFilter *, const char*, const char*);

#ifndef soap_read_tt__PTZFilter
#define soap_read_tt__PTZFilter(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__PTZFilter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__MetadataConfigurationExtension
#define SOAP_TYPE_tt__MetadataConfigurationExtension (386)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MetadataConfigurationExtension(struct soap*, const char*, int, const tt__MetadataConfigurationExtension *, const char*);
SOAP_FMAC3 tt__MetadataConfigurationExtension * SOAP_FMAC4 soap_in_tt__MetadataConfigurationExtension(struct soap*, const char*, tt__MetadataConfigurationExtension *, const char*);
SOAP_FMAC1 tt__MetadataConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__MetadataConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__MetadataConfigurationExtension * soap_new_tt__MetadataConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__MetadataConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__MetadataConfigurationExtension * soap_new_req_tt__MetadataConfigurationExtension(
	struct soap *soap)
{	tt__MetadataConfigurationExtension *_p = soap_new_tt__MetadataConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__MetadataConfigurationExtension * soap_new_set_tt__MetadataConfigurationExtension(
	struct soap *soap)
{	tt__MetadataConfigurationExtension *_p = soap_new_tt__MetadataConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__MetadataConfigurationExtension
#define soap_write_tt__MetadataConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:MetadataConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataConfigurationExtension * SOAP_FMAC4 soap_get_tt__MetadataConfigurationExtension(struct soap*, tt__MetadataConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__MetadataConfigurationExtension
#define soap_read_tt__MetadataConfigurationExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MetadataConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__MetadataConfiguration
#define SOAP_TYPE_tt__MetadataConfiguration (385)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__MetadataConfiguration(struct soap*, const char*, int, const tt__MetadataConfiguration *, const char*);
SOAP_FMAC3 tt__MetadataConfiguration * SOAP_FMAC4 soap_in_tt__MetadataConfiguration(struct soap*, const char*, tt__MetadataConfiguration *, const char*);
SOAP_FMAC1 tt__MetadataConfiguration * SOAP_FMAC2 soap_instantiate_tt__MetadataConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__MetadataConfiguration * soap_new_tt__MetadataConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__MetadataConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__MetadataConfiguration * soap_new_req_tt__MetadataConfiguration(
	struct soap *soap,
	tt__MulticastConfiguration *Multicast,
	LONG64 SessionTimeout,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__MetadataConfiguration *_p = soap_new_tt__MetadataConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__MetadataConfiguration::Multicast = Multicast;
		_p->tt__MetadataConfiguration::SessionTimeout = SessionTimeout;
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

inline tt__MetadataConfiguration * soap_new_set_tt__MetadataConfiguration(
	struct soap *soap,
	tt__PTZFilter *PTZStatus,
	tt__EventSubscription *Events,
	bool *Analytics,
	tt__MulticastConfiguration *Multicast,
	LONG64 SessionTimeout,
	tt__AnalyticsEngineConfiguration *AnalyticsEngineConfiguration,
	tt__MetadataConfigurationExtension *Extension,
	std::string *CompressionType,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__MetadataConfiguration *_p = soap_new_tt__MetadataConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__MetadataConfiguration::PTZStatus = PTZStatus;
		_p->tt__MetadataConfiguration::Events = Events;
		_p->tt__MetadataConfiguration::Analytics = Analytics;
		_p->tt__MetadataConfiguration::Multicast = Multicast;
		_p->tt__MetadataConfiguration::SessionTimeout = SessionTimeout;
		_p->tt__MetadataConfiguration::AnalyticsEngineConfiguration = AnalyticsEngineConfiguration;
		_p->tt__MetadataConfiguration::Extension = Extension;
		_p->tt__MetadataConfiguration::CompressionType = CompressionType;
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

#ifndef soap_write_tt__MetadataConfiguration
#define soap_write_tt__MetadataConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:MetadataConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataConfiguration * SOAP_FMAC4 soap_get_tt__MetadataConfiguration(struct soap*, tt__MetadataConfiguration *, const char*, const char*);

#ifndef soap_read_tt__MetadataConfiguration
#define soap_read_tt__MetadataConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__MetadataConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoAnalyticsConfiguration
#define SOAP_TYPE_tt__VideoAnalyticsConfiguration (384)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoAnalyticsConfiguration(struct soap*, const char*, int, const tt__VideoAnalyticsConfiguration *, const char*);
SOAP_FMAC3 tt__VideoAnalyticsConfiguration * SOAP_FMAC4 soap_in_tt__VideoAnalyticsConfiguration(struct soap*, const char*, tt__VideoAnalyticsConfiguration *, const char*);
SOAP_FMAC1 tt__VideoAnalyticsConfiguration * SOAP_FMAC2 soap_instantiate_tt__VideoAnalyticsConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoAnalyticsConfiguration * soap_new_tt__VideoAnalyticsConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoAnalyticsConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__VideoAnalyticsConfiguration * soap_new_req_tt__VideoAnalyticsConfiguration(
	struct soap *soap,
	tt__AnalyticsEngineConfiguration *AnalyticsEngineConfiguration,
	tt__RuleEngineConfiguration *RuleEngineConfiguration,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__VideoAnalyticsConfiguration *_p = soap_new_tt__VideoAnalyticsConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoAnalyticsConfiguration::AnalyticsEngineConfiguration = AnalyticsEngineConfiguration;
		_p->tt__VideoAnalyticsConfiguration::RuleEngineConfiguration = RuleEngineConfiguration;
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

inline tt__VideoAnalyticsConfiguration * soap_new_set_tt__VideoAnalyticsConfiguration(
	struct soap *soap,
	tt__AnalyticsEngineConfiguration *AnalyticsEngineConfiguration,
	tt__RuleEngineConfiguration *RuleEngineConfiguration,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__VideoAnalyticsConfiguration *_p = soap_new_tt__VideoAnalyticsConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoAnalyticsConfiguration::AnalyticsEngineConfiguration = AnalyticsEngineConfiguration;
		_p->tt__VideoAnalyticsConfiguration::RuleEngineConfiguration = RuleEngineConfiguration;
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

#ifndef soap_write_tt__VideoAnalyticsConfiguration
#define soap_write_tt__VideoAnalyticsConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:VideoAnalyticsConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoAnalyticsConfiguration * SOAP_FMAC4 soap_get_tt__VideoAnalyticsConfiguration(struct soap*, tt__VideoAnalyticsConfiguration *, const char*, const char*);

#ifndef soap_read_tt__VideoAnalyticsConfiguration
#define soap_read_tt__VideoAnalyticsConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoAnalyticsConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AudioEncoder2ConfigurationOptions
#define SOAP_TYPE_tt__AudioEncoder2ConfigurationOptions (383)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioEncoder2ConfigurationOptions(struct soap*, const char*, int, const tt__AudioEncoder2ConfigurationOptions *, const char*);
SOAP_FMAC3 tt__AudioEncoder2ConfigurationOptions * SOAP_FMAC4 soap_in_tt__AudioEncoder2ConfigurationOptions(struct soap*, const char*, tt__AudioEncoder2ConfigurationOptions *, const char*);
SOAP_FMAC1 tt__AudioEncoder2ConfigurationOptions * SOAP_FMAC2 soap_instantiate_tt__AudioEncoder2ConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioEncoder2ConfigurationOptions * soap_new_tt__AudioEncoder2ConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioEncoder2ConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline tt__AudioEncoder2ConfigurationOptions * soap_new_req_tt__AudioEncoder2ConfigurationOptions(
	struct soap *soap,
	const std::string& Encoding,
	tt__IntList *BitrateList,
	tt__IntList *SampleRateList)
{	tt__AudioEncoder2ConfigurationOptions *_p = soap_new_tt__AudioEncoder2ConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AudioEncoder2ConfigurationOptions::Encoding = Encoding;
		_p->tt__AudioEncoder2ConfigurationOptions::BitrateList = BitrateList;
		_p->tt__AudioEncoder2ConfigurationOptions::SampleRateList = SampleRateList;
	}
	return _p;
}

inline tt__AudioEncoder2ConfigurationOptions * soap_new_set_tt__AudioEncoder2ConfigurationOptions(
	struct soap *soap,
	const std::string& Encoding,
	tt__IntList *BitrateList,
	tt__IntList *SampleRateList)
{	tt__AudioEncoder2ConfigurationOptions *_p = soap_new_tt__AudioEncoder2ConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AudioEncoder2ConfigurationOptions::Encoding = Encoding;
		_p->tt__AudioEncoder2ConfigurationOptions::BitrateList = BitrateList;
		_p->tt__AudioEncoder2ConfigurationOptions::SampleRateList = SampleRateList;
	}
	return _p;
}

#ifndef soap_write_tt__AudioEncoder2ConfigurationOptions
#define soap_write_tt__AudioEncoder2ConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AudioEncoder2ConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioEncoder2ConfigurationOptions * SOAP_FMAC4 soap_get_tt__AudioEncoder2ConfigurationOptions(struct soap*, tt__AudioEncoder2ConfigurationOptions *, const char*, const char*);

#ifndef soap_read_tt__AudioEncoder2ConfigurationOptions
#define soap_read_tt__AudioEncoder2ConfigurationOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AudioEncoder2ConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AudioEncoder2Configuration
#define SOAP_TYPE_tt__AudioEncoder2Configuration (382)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioEncoder2Configuration(struct soap*, const char*, int, const tt__AudioEncoder2Configuration *, const char*);
SOAP_FMAC3 tt__AudioEncoder2Configuration * SOAP_FMAC4 soap_in_tt__AudioEncoder2Configuration(struct soap*, const char*, tt__AudioEncoder2Configuration *, const char*);
SOAP_FMAC1 tt__AudioEncoder2Configuration * SOAP_FMAC2 soap_instantiate_tt__AudioEncoder2Configuration(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioEncoder2Configuration * soap_new_tt__AudioEncoder2Configuration(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioEncoder2Configuration(soap, n, NULL, NULL, NULL); }

inline tt__AudioEncoder2Configuration * soap_new_req_tt__AudioEncoder2Configuration(
	struct soap *soap,
	const std::string& Encoding,
	int Bitrate,
	int SampleRate,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__AudioEncoder2Configuration *_p = soap_new_tt__AudioEncoder2Configuration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AudioEncoder2Configuration::Encoding = Encoding;
		_p->tt__AudioEncoder2Configuration::Bitrate = Bitrate;
		_p->tt__AudioEncoder2Configuration::SampleRate = SampleRate;
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

inline tt__AudioEncoder2Configuration * soap_new_set_tt__AudioEncoder2Configuration(
	struct soap *soap,
	const std::string& Encoding,
	tt__MulticastConfiguration *Multicast,
	int Bitrate,
	int SampleRate,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__AudioEncoder2Configuration *_p = soap_new_tt__AudioEncoder2Configuration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AudioEncoder2Configuration::Encoding = Encoding;
		_p->tt__AudioEncoder2Configuration::Multicast = Multicast;
		_p->tt__AudioEncoder2Configuration::Bitrate = Bitrate;
		_p->tt__AudioEncoder2Configuration::SampleRate = SampleRate;
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

#ifndef soap_write_tt__AudioEncoder2Configuration
#define soap_write_tt__AudioEncoder2Configuration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AudioEncoder2Configuration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioEncoder2Configuration * SOAP_FMAC4 soap_get_tt__AudioEncoder2Configuration(struct soap*, tt__AudioEncoder2Configuration *, const char*, const char*);

#ifndef soap_read_tt__AudioEncoder2Configuration
#define soap_read_tt__AudioEncoder2Configuration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AudioEncoder2Configuration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AudioEncoderConfigurationOption
#define SOAP_TYPE_tt__AudioEncoderConfigurationOption (381)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioEncoderConfigurationOption(struct soap*, const char*, int, const tt__AudioEncoderConfigurationOption *, const char*);
SOAP_FMAC3 tt__AudioEncoderConfigurationOption * SOAP_FMAC4 soap_in_tt__AudioEncoderConfigurationOption(struct soap*, const char*, tt__AudioEncoderConfigurationOption *, const char*);
SOAP_FMAC1 tt__AudioEncoderConfigurationOption * SOAP_FMAC2 soap_instantiate_tt__AudioEncoderConfigurationOption(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioEncoderConfigurationOption * soap_new_tt__AudioEncoderConfigurationOption(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioEncoderConfigurationOption(soap, n, NULL, NULL, NULL); }

inline tt__AudioEncoderConfigurationOption * soap_new_req_tt__AudioEncoderConfigurationOption(
	struct soap *soap,
	enum tt__AudioEncoding Encoding,
	tt__IntList *BitrateList,
	tt__IntList *SampleRateList)
{	tt__AudioEncoderConfigurationOption *_p = soap_new_tt__AudioEncoderConfigurationOption(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AudioEncoderConfigurationOption::Encoding = Encoding;
		_p->tt__AudioEncoderConfigurationOption::BitrateList = BitrateList;
		_p->tt__AudioEncoderConfigurationOption::SampleRateList = SampleRateList;
	}
	return _p;
}

inline tt__AudioEncoderConfigurationOption * soap_new_set_tt__AudioEncoderConfigurationOption(
	struct soap *soap,
	enum tt__AudioEncoding Encoding,
	tt__IntList *BitrateList,
	tt__IntList *SampleRateList)
{	tt__AudioEncoderConfigurationOption *_p = soap_new_tt__AudioEncoderConfigurationOption(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AudioEncoderConfigurationOption::Encoding = Encoding;
		_p->tt__AudioEncoderConfigurationOption::BitrateList = BitrateList;
		_p->tt__AudioEncoderConfigurationOption::SampleRateList = SampleRateList;
	}
	return _p;
}

#ifndef soap_write_tt__AudioEncoderConfigurationOption
#define soap_write_tt__AudioEncoderConfigurationOption(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AudioEncoderConfigurationOption", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioEncoderConfigurationOption * SOAP_FMAC4 soap_get_tt__AudioEncoderConfigurationOption(struct soap*, tt__AudioEncoderConfigurationOption *, const char*, const char*);

#ifndef soap_read_tt__AudioEncoderConfigurationOption
#define soap_read_tt__AudioEncoderConfigurationOption(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AudioEncoderConfigurationOption(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AudioEncoderConfigurationOptions
#define SOAP_TYPE_tt__AudioEncoderConfigurationOptions (380)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioEncoderConfigurationOptions(struct soap*, const char*, int, const tt__AudioEncoderConfigurationOptions *, const char*);
SOAP_FMAC3 tt__AudioEncoderConfigurationOptions * SOAP_FMAC4 soap_in_tt__AudioEncoderConfigurationOptions(struct soap*, const char*, tt__AudioEncoderConfigurationOptions *, const char*);
SOAP_FMAC1 tt__AudioEncoderConfigurationOptions * SOAP_FMAC2 soap_instantiate_tt__AudioEncoderConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioEncoderConfigurationOptions * soap_new_tt__AudioEncoderConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioEncoderConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline tt__AudioEncoderConfigurationOptions * soap_new_req_tt__AudioEncoderConfigurationOptions(
	struct soap *soap)
{	tt__AudioEncoderConfigurationOptions *_p = soap_new_tt__AudioEncoderConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__AudioEncoderConfigurationOptions * soap_new_set_tt__AudioEncoderConfigurationOptions(
	struct soap *soap,
	const std::vector<tt__AudioEncoderConfigurationOption *> & Options)
{	tt__AudioEncoderConfigurationOptions *_p = soap_new_tt__AudioEncoderConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AudioEncoderConfigurationOptions::Options = Options;
	}
	return _p;
}

#ifndef soap_write_tt__AudioEncoderConfigurationOptions
#define soap_write_tt__AudioEncoderConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AudioEncoderConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioEncoderConfigurationOptions * SOAP_FMAC4 soap_get_tt__AudioEncoderConfigurationOptions(struct soap*, tt__AudioEncoderConfigurationOptions *, const char*, const char*);

#ifndef soap_read_tt__AudioEncoderConfigurationOptions
#define soap_read_tt__AudioEncoderConfigurationOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AudioEncoderConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AudioEncoderConfiguration
#define SOAP_TYPE_tt__AudioEncoderConfiguration (379)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioEncoderConfiguration(struct soap*, const char*, int, const tt__AudioEncoderConfiguration *, const char*);
SOAP_FMAC3 tt__AudioEncoderConfiguration * SOAP_FMAC4 soap_in_tt__AudioEncoderConfiguration(struct soap*, const char*, tt__AudioEncoderConfiguration *, const char*);
SOAP_FMAC1 tt__AudioEncoderConfiguration * SOAP_FMAC2 soap_instantiate_tt__AudioEncoderConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioEncoderConfiguration * soap_new_tt__AudioEncoderConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioEncoderConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__AudioEncoderConfiguration * soap_new_req_tt__AudioEncoderConfiguration(
	struct soap *soap,
	enum tt__AudioEncoding Encoding,
	int Bitrate,
	int SampleRate,
	tt__MulticastConfiguration *Multicast,
	LONG64 SessionTimeout,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__AudioEncoderConfiguration *_p = soap_new_tt__AudioEncoderConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AudioEncoderConfiguration::Encoding = Encoding;
		_p->tt__AudioEncoderConfiguration::Bitrate = Bitrate;
		_p->tt__AudioEncoderConfiguration::SampleRate = SampleRate;
		_p->tt__AudioEncoderConfiguration::Multicast = Multicast;
		_p->tt__AudioEncoderConfiguration::SessionTimeout = SessionTimeout;
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

inline tt__AudioEncoderConfiguration * soap_new_set_tt__AudioEncoderConfiguration(
	struct soap *soap,
	enum tt__AudioEncoding Encoding,
	int Bitrate,
	int SampleRate,
	tt__MulticastConfiguration *Multicast,
	LONG64 SessionTimeout,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__AudioEncoderConfiguration *_p = soap_new_tt__AudioEncoderConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AudioEncoderConfiguration::Encoding = Encoding;
		_p->tt__AudioEncoderConfiguration::Bitrate = Bitrate;
		_p->tt__AudioEncoderConfiguration::SampleRate = SampleRate;
		_p->tt__AudioEncoderConfiguration::Multicast = Multicast;
		_p->tt__AudioEncoderConfiguration::SessionTimeout = SessionTimeout;
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

#ifndef soap_write_tt__AudioEncoderConfiguration
#define soap_write_tt__AudioEncoderConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AudioEncoderConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioEncoderConfiguration * SOAP_FMAC4 soap_get_tt__AudioEncoderConfiguration(struct soap*, tt__AudioEncoderConfiguration *, const char*, const char*);

#ifndef soap_read_tt__AudioEncoderConfiguration
#define soap_read_tt__AudioEncoderConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AudioEncoderConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AudioSourceOptionsExtension
#define SOAP_TYPE_tt__AudioSourceOptionsExtension (378)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioSourceOptionsExtension(struct soap*, const char*, int, const tt__AudioSourceOptionsExtension *, const char*);
SOAP_FMAC3 tt__AudioSourceOptionsExtension * SOAP_FMAC4 soap_in_tt__AudioSourceOptionsExtension(struct soap*, const char*, tt__AudioSourceOptionsExtension *, const char*);
SOAP_FMAC1 tt__AudioSourceOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__AudioSourceOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioSourceOptionsExtension * soap_new_tt__AudioSourceOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioSourceOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__AudioSourceOptionsExtension * soap_new_req_tt__AudioSourceOptionsExtension(
	struct soap *soap)
{	tt__AudioSourceOptionsExtension *_p = soap_new_tt__AudioSourceOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__AudioSourceOptionsExtension * soap_new_set_tt__AudioSourceOptionsExtension(
	struct soap *soap)
{	tt__AudioSourceOptionsExtension *_p = soap_new_tt__AudioSourceOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__AudioSourceOptionsExtension
#define soap_write_tt__AudioSourceOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AudioSourceOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioSourceOptionsExtension * SOAP_FMAC4 soap_get_tt__AudioSourceOptionsExtension(struct soap*, tt__AudioSourceOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__AudioSourceOptionsExtension
#define soap_read_tt__AudioSourceOptionsExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AudioSourceOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AudioSourceConfigurationOptions
#define SOAP_TYPE_tt__AudioSourceConfigurationOptions (377)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioSourceConfigurationOptions(struct soap*, const char*, int, const tt__AudioSourceConfigurationOptions *, const char*);
SOAP_FMAC3 tt__AudioSourceConfigurationOptions * SOAP_FMAC4 soap_in_tt__AudioSourceConfigurationOptions(struct soap*, const char*, tt__AudioSourceConfigurationOptions *, const char*);
SOAP_FMAC1 tt__AudioSourceConfigurationOptions * SOAP_FMAC2 soap_instantiate_tt__AudioSourceConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioSourceConfigurationOptions * soap_new_tt__AudioSourceConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioSourceConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline tt__AudioSourceConfigurationOptions * soap_new_req_tt__AudioSourceConfigurationOptions(
	struct soap *soap,
	const std::vector<std::string> & InputTokensAvailable)
{	tt__AudioSourceConfigurationOptions *_p = soap_new_tt__AudioSourceConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AudioSourceConfigurationOptions::InputTokensAvailable = InputTokensAvailable;
	}
	return _p;
}

inline tt__AudioSourceConfigurationOptions * soap_new_set_tt__AudioSourceConfigurationOptions(
	struct soap *soap,
	const std::vector<std::string> & InputTokensAvailable,
	tt__AudioSourceOptionsExtension *Extension)
{	tt__AudioSourceConfigurationOptions *_p = soap_new_tt__AudioSourceConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AudioSourceConfigurationOptions::InputTokensAvailable = InputTokensAvailable;
		_p->tt__AudioSourceConfigurationOptions::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__AudioSourceConfigurationOptions
#define soap_write_tt__AudioSourceConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AudioSourceConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioSourceConfigurationOptions * SOAP_FMAC4 soap_get_tt__AudioSourceConfigurationOptions(struct soap*, tt__AudioSourceConfigurationOptions *, const char*, const char*);

#ifndef soap_read_tt__AudioSourceConfigurationOptions
#define soap_read_tt__AudioSourceConfigurationOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AudioSourceConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AudioSourceConfiguration
#define SOAP_TYPE_tt__AudioSourceConfiguration (376)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioSourceConfiguration(struct soap*, const char*, int, const tt__AudioSourceConfiguration *, const char*);
SOAP_FMAC3 tt__AudioSourceConfiguration * SOAP_FMAC4 soap_in_tt__AudioSourceConfiguration(struct soap*, const char*, tt__AudioSourceConfiguration *, const char*);
SOAP_FMAC1 tt__AudioSourceConfiguration * SOAP_FMAC2 soap_instantiate_tt__AudioSourceConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioSourceConfiguration * soap_new_tt__AudioSourceConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioSourceConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__AudioSourceConfiguration * soap_new_req_tt__AudioSourceConfiguration(
	struct soap *soap,
	const std::string& SourceToken,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__AudioSourceConfiguration *_p = soap_new_tt__AudioSourceConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AudioSourceConfiguration::SourceToken = SourceToken;
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

inline tt__AudioSourceConfiguration * soap_new_set_tt__AudioSourceConfiguration(
	struct soap *soap,
	const std::string& SourceToken,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__AudioSourceConfiguration *_p = soap_new_tt__AudioSourceConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AudioSourceConfiguration::SourceToken = SourceToken;
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

#ifndef soap_write_tt__AudioSourceConfiguration
#define soap_write_tt__AudioSourceConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AudioSourceConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioSourceConfiguration * SOAP_FMAC4 soap_get_tt__AudioSourceConfiguration(struct soap*, tt__AudioSourceConfiguration *, const char*, const char*);

#ifndef soap_read_tt__AudioSourceConfiguration
#define soap_read_tt__AudioSourceConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AudioSourceConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoEncoder2ConfigurationOptions
#define SOAP_TYPE_tt__VideoEncoder2ConfigurationOptions (375)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoEncoder2ConfigurationOptions(struct soap*, const char*, int, const tt__VideoEncoder2ConfigurationOptions *, const char*);
SOAP_FMAC3 tt__VideoEncoder2ConfigurationOptions * SOAP_FMAC4 soap_in_tt__VideoEncoder2ConfigurationOptions(struct soap*, const char*, tt__VideoEncoder2ConfigurationOptions *, const char*);
SOAP_FMAC1 tt__VideoEncoder2ConfigurationOptions * SOAP_FMAC2 soap_instantiate_tt__VideoEncoder2ConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoEncoder2ConfigurationOptions * soap_new_tt__VideoEncoder2ConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoEncoder2ConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline tt__VideoEncoder2ConfigurationOptions * soap_new_req_tt__VideoEncoder2ConfigurationOptions(
	struct soap *soap,
	const std::string& Encoding,
	tt__FloatRange *QualityRange,
	const std::vector<tt__VideoResolution2 *> & ResolutionsAvailable,
	tt__IntRange *BitrateRange)
{	tt__VideoEncoder2ConfigurationOptions *_p = soap_new_tt__VideoEncoder2ConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoEncoder2ConfigurationOptions::Encoding = Encoding;
		_p->tt__VideoEncoder2ConfigurationOptions::QualityRange = QualityRange;
		_p->tt__VideoEncoder2ConfigurationOptions::ResolutionsAvailable = ResolutionsAvailable;
		_p->tt__VideoEncoder2ConfigurationOptions::BitrateRange = BitrateRange;
	}
	return _p;
}

inline tt__VideoEncoder2ConfigurationOptions * soap_new_set_tt__VideoEncoder2ConfigurationOptions(
	struct soap *soap,
	const std::string& Encoding,
	tt__FloatRange *QualityRange,
	const std::vector<tt__VideoResolution2 *> & ResolutionsAvailable,
	tt__IntRange *BitrateRange,
	std::string *GovLengthRange,
	std::string *FrameRatesSupported,
	std::string *ProfilesSupported,
	bool *ConstantBitRateSupported)
{	tt__VideoEncoder2ConfigurationOptions *_p = soap_new_tt__VideoEncoder2ConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoEncoder2ConfigurationOptions::Encoding = Encoding;
		_p->tt__VideoEncoder2ConfigurationOptions::QualityRange = QualityRange;
		_p->tt__VideoEncoder2ConfigurationOptions::ResolutionsAvailable = ResolutionsAvailable;
		_p->tt__VideoEncoder2ConfigurationOptions::BitrateRange = BitrateRange;
		_p->tt__VideoEncoder2ConfigurationOptions::GovLengthRange = GovLengthRange;
		_p->tt__VideoEncoder2ConfigurationOptions::FrameRatesSupported = FrameRatesSupported;
		_p->tt__VideoEncoder2ConfigurationOptions::ProfilesSupported = ProfilesSupported;
		_p->tt__VideoEncoder2ConfigurationOptions::ConstantBitRateSupported = ConstantBitRateSupported;
	}
	return _p;
}

#ifndef soap_write_tt__VideoEncoder2ConfigurationOptions
#define soap_write_tt__VideoEncoder2ConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:VideoEncoder2ConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoEncoder2ConfigurationOptions * SOAP_FMAC4 soap_get_tt__VideoEncoder2ConfigurationOptions(struct soap*, tt__VideoEncoder2ConfigurationOptions *, const char*, const char*);

#ifndef soap_read_tt__VideoEncoder2ConfigurationOptions
#define soap_read_tt__VideoEncoder2ConfigurationOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoEncoder2ConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoRateControl2
#define SOAP_TYPE_tt__VideoRateControl2 (374)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoRateControl2(struct soap*, const char*, int, const tt__VideoRateControl2 *, const char*);
SOAP_FMAC3 tt__VideoRateControl2 * SOAP_FMAC4 soap_in_tt__VideoRateControl2(struct soap*, const char*, tt__VideoRateControl2 *, const char*);
SOAP_FMAC1 tt__VideoRateControl2 * SOAP_FMAC2 soap_instantiate_tt__VideoRateControl2(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoRateControl2 * soap_new_tt__VideoRateControl2(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoRateControl2(soap, n, NULL, NULL, NULL); }

inline tt__VideoRateControl2 * soap_new_req_tt__VideoRateControl2(
	struct soap *soap,
	float FrameRateLimit,
	int BitrateLimit)
{	tt__VideoRateControl2 *_p = soap_new_tt__VideoRateControl2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoRateControl2::FrameRateLimit = FrameRateLimit;
		_p->tt__VideoRateControl2::BitrateLimit = BitrateLimit;
	}
	return _p;
}

inline tt__VideoRateControl2 * soap_new_set_tt__VideoRateControl2(
	struct soap *soap,
	float FrameRateLimit,
	int BitrateLimit,
	bool *ConstantBitRate)
{	tt__VideoRateControl2 *_p = soap_new_tt__VideoRateControl2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoRateControl2::FrameRateLimit = FrameRateLimit;
		_p->tt__VideoRateControl2::BitrateLimit = BitrateLimit;
		_p->tt__VideoRateControl2::ConstantBitRate = ConstantBitRate;
	}
	return _p;
}

#ifndef soap_write_tt__VideoRateControl2
#define soap_write_tt__VideoRateControl2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:VideoRateControl2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoRateControl2 * SOAP_FMAC4 soap_get_tt__VideoRateControl2(struct soap*, tt__VideoRateControl2 *, const char*, const char*);

#ifndef soap_read_tt__VideoRateControl2
#define soap_read_tt__VideoRateControl2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoRateControl2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoResolution2
#define SOAP_TYPE_tt__VideoResolution2 (373)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoResolution2(struct soap*, const char*, int, const tt__VideoResolution2 *, const char*);
SOAP_FMAC3 tt__VideoResolution2 * SOAP_FMAC4 soap_in_tt__VideoResolution2(struct soap*, const char*, tt__VideoResolution2 *, const char*);
SOAP_FMAC1 tt__VideoResolution2 * SOAP_FMAC2 soap_instantiate_tt__VideoResolution2(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoResolution2 * soap_new_tt__VideoResolution2(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoResolution2(soap, n, NULL, NULL, NULL); }

inline tt__VideoResolution2 * soap_new_req_tt__VideoResolution2(
	struct soap *soap,
	int Width,
	int Height)
{	tt__VideoResolution2 *_p = soap_new_tt__VideoResolution2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoResolution2::Width = Width;
		_p->tt__VideoResolution2::Height = Height;
	}
	return _p;
}

inline tt__VideoResolution2 * soap_new_set_tt__VideoResolution2(
	struct soap *soap,
	int Width,
	int Height)
{	tt__VideoResolution2 *_p = soap_new_tt__VideoResolution2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoResolution2::Width = Width;
		_p->tt__VideoResolution2::Height = Height;
	}
	return _p;
}

#ifndef soap_write_tt__VideoResolution2
#define soap_write_tt__VideoResolution2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:VideoResolution2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoResolution2 * SOAP_FMAC4 soap_get_tt__VideoResolution2(struct soap*, tt__VideoResolution2 *, const char*, const char*);

#ifndef soap_read_tt__VideoResolution2
#define soap_read_tt__VideoResolution2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoResolution2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoEncoder2Configuration
#define SOAP_TYPE_tt__VideoEncoder2Configuration (372)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoEncoder2Configuration(struct soap*, const char*, int, const tt__VideoEncoder2Configuration *, const char*);
SOAP_FMAC3 tt__VideoEncoder2Configuration * SOAP_FMAC4 soap_in_tt__VideoEncoder2Configuration(struct soap*, const char*, tt__VideoEncoder2Configuration *, const char*);
SOAP_FMAC1 tt__VideoEncoder2Configuration * SOAP_FMAC2 soap_instantiate_tt__VideoEncoder2Configuration(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoEncoder2Configuration * soap_new_tt__VideoEncoder2Configuration(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoEncoder2Configuration(soap, n, NULL, NULL, NULL); }

inline tt__VideoEncoder2Configuration * soap_new_req_tt__VideoEncoder2Configuration(
	struct soap *soap,
	const std::string& Encoding,
	tt__VideoResolution2 *Resolution,
	float Quality,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__VideoEncoder2Configuration *_p = soap_new_tt__VideoEncoder2Configuration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoEncoder2Configuration::Encoding = Encoding;
		_p->tt__VideoEncoder2Configuration::Resolution = Resolution;
		_p->tt__VideoEncoder2Configuration::Quality = Quality;
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

inline tt__VideoEncoder2Configuration * soap_new_set_tt__VideoEncoder2Configuration(
	struct soap *soap,
	const std::string& Encoding,
	tt__VideoResolution2 *Resolution,
	tt__VideoRateControl2 *RateControl,
	tt__MulticastConfiguration *Multicast,
	float Quality,
	int *GovLength,
	std::string *Profile,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__VideoEncoder2Configuration *_p = soap_new_tt__VideoEncoder2Configuration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoEncoder2Configuration::Encoding = Encoding;
		_p->tt__VideoEncoder2Configuration::Resolution = Resolution;
		_p->tt__VideoEncoder2Configuration::RateControl = RateControl;
		_p->tt__VideoEncoder2Configuration::Multicast = Multicast;
		_p->tt__VideoEncoder2Configuration::Quality = Quality;
		_p->tt__VideoEncoder2Configuration::GovLength = GovLength;
		_p->tt__VideoEncoder2Configuration::Profile = Profile;
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

#ifndef soap_write_tt__VideoEncoder2Configuration
#define soap_write_tt__VideoEncoder2Configuration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:VideoEncoder2Configuration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoEncoder2Configuration * SOAP_FMAC4 soap_get_tt__VideoEncoder2Configuration(struct soap*, tt__VideoEncoder2Configuration *, const char*, const char*);

#ifndef soap_read_tt__VideoEncoder2Configuration
#define soap_read_tt__VideoEncoder2Configuration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoEncoder2Configuration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__H264Options2
#define SOAP_TYPE_tt__H264Options2 (371)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__H264Options2(struct soap*, const char*, int, const tt__H264Options2 *, const char*);
SOAP_FMAC3 tt__H264Options2 * SOAP_FMAC4 soap_in_tt__H264Options2(struct soap*, const char*, tt__H264Options2 *, const char*);
SOAP_FMAC1 tt__H264Options2 * SOAP_FMAC2 soap_instantiate_tt__H264Options2(struct soap*, int, const char*, const char*, size_t*);

inline tt__H264Options2 * soap_new_tt__H264Options2(struct soap *soap, int n = -1) { return soap_instantiate_tt__H264Options2(soap, n, NULL, NULL, NULL); }

inline tt__H264Options2 * soap_new_req_tt__H264Options2(
	struct soap *soap,
	tt__IntRange *BitrateRange,
	const std::vector<tt__VideoResolution *> & ResolutionsAvailable1,
	tt__IntRange *GovLengthRange1,
	tt__IntRange *FrameRateRange1,
	tt__IntRange *EncodingIntervalRange1,
	const std::vector<enum tt__H264Profile> & H264ProfilesSupported1)
{	tt__H264Options2 *_p = soap_new_tt__H264Options2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__H264Options2::BitrateRange = BitrateRange;
		_p->tt__H264Options::ResolutionsAvailable = ResolutionsAvailable1;
		_p->tt__H264Options::GovLengthRange = GovLengthRange1;
		_p->tt__H264Options::FrameRateRange = FrameRateRange1;
		_p->tt__H264Options::EncodingIntervalRange = EncodingIntervalRange1;
		_p->tt__H264Options::H264ProfilesSupported = H264ProfilesSupported1;
	}
	return _p;
}

inline tt__H264Options2 * soap_new_set_tt__H264Options2(
	struct soap *soap,
	tt__IntRange *BitrateRange,
	const std::vector<tt__VideoResolution *> & ResolutionsAvailable1,
	tt__IntRange *GovLengthRange1,
	tt__IntRange *FrameRateRange1,
	tt__IntRange *EncodingIntervalRange1,
	const std::vector<enum tt__H264Profile> & H264ProfilesSupported1)
{	tt__H264Options2 *_p = soap_new_tt__H264Options2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__H264Options2::BitrateRange = BitrateRange;
		_p->tt__H264Options::ResolutionsAvailable = ResolutionsAvailable1;
		_p->tt__H264Options::GovLengthRange = GovLengthRange1;
		_p->tt__H264Options::FrameRateRange = FrameRateRange1;
		_p->tt__H264Options::EncodingIntervalRange = EncodingIntervalRange1;
		_p->tt__H264Options::H264ProfilesSupported = H264ProfilesSupported1;
	}
	return _p;
}

#ifndef soap_write_tt__H264Options2
#define soap_write_tt__H264Options2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:H264Options2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__H264Options2 * SOAP_FMAC4 soap_get_tt__H264Options2(struct soap*, tt__H264Options2 *, const char*, const char*);

#ifndef soap_read_tt__H264Options2
#define soap_read_tt__H264Options2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__H264Options2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__H264Options
#define SOAP_TYPE_tt__H264Options (370)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__H264Options(struct soap*, const char*, int, const tt__H264Options *, const char*);
SOAP_FMAC3 tt__H264Options * SOAP_FMAC4 soap_in_tt__H264Options(struct soap*, const char*, tt__H264Options *, const char*);
SOAP_FMAC1 tt__H264Options * SOAP_FMAC2 soap_instantiate_tt__H264Options(struct soap*, int, const char*, const char*, size_t*);

inline tt__H264Options * soap_new_tt__H264Options(struct soap *soap, int n = -1) { return soap_instantiate_tt__H264Options(soap, n, NULL, NULL, NULL); }

inline tt__H264Options * soap_new_req_tt__H264Options(
	struct soap *soap,
	const std::vector<tt__VideoResolution *> & ResolutionsAvailable,
	tt__IntRange *GovLengthRange,
	tt__IntRange *FrameRateRange,
	tt__IntRange *EncodingIntervalRange,
	const std::vector<enum tt__H264Profile> & H264ProfilesSupported)
{	tt__H264Options *_p = soap_new_tt__H264Options(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__H264Options::ResolutionsAvailable = ResolutionsAvailable;
		_p->tt__H264Options::GovLengthRange = GovLengthRange;
		_p->tt__H264Options::FrameRateRange = FrameRateRange;
		_p->tt__H264Options::EncodingIntervalRange = EncodingIntervalRange;
		_p->tt__H264Options::H264ProfilesSupported = H264ProfilesSupported;
	}
	return _p;
}

inline tt__H264Options * soap_new_set_tt__H264Options(
	struct soap *soap,
	const std::vector<tt__VideoResolution *> & ResolutionsAvailable,
	tt__IntRange *GovLengthRange,
	tt__IntRange *FrameRateRange,
	tt__IntRange *EncodingIntervalRange,
	const std::vector<enum tt__H264Profile> & H264ProfilesSupported)
{	tt__H264Options *_p = soap_new_tt__H264Options(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__H264Options::ResolutionsAvailable = ResolutionsAvailable;
		_p->tt__H264Options::GovLengthRange = GovLengthRange;
		_p->tt__H264Options::FrameRateRange = FrameRateRange;
		_p->tt__H264Options::EncodingIntervalRange = EncodingIntervalRange;
		_p->tt__H264Options::H264ProfilesSupported = H264ProfilesSupported;
	}
	return _p;
}

#ifndef soap_write_tt__H264Options
#define soap_write_tt__H264Options(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:H264Options", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__H264Options * SOAP_FMAC4 soap_get_tt__H264Options(struct soap*, tt__H264Options *, const char*, const char*);

#ifndef soap_read_tt__H264Options
#define soap_read_tt__H264Options(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__H264Options(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Mpeg4Options2
#define SOAP_TYPE_tt__Mpeg4Options2 (369)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Mpeg4Options2(struct soap*, const char*, int, const tt__Mpeg4Options2 *, const char*);
SOAP_FMAC3 tt__Mpeg4Options2 * SOAP_FMAC4 soap_in_tt__Mpeg4Options2(struct soap*, const char*, tt__Mpeg4Options2 *, const char*);
SOAP_FMAC1 tt__Mpeg4Options2 * SOAP_FMAC2 soap_instantiate_tt__Mpeg4Options2(struct soap*, int, const char*, const char*, size_t*);

inline tt__Mpeg4Options2 * soap_new_tt__Mpeg4Options2(struct soap *soap, int n = -1) { return soap_instantiate_tt__Mpeg4Options2(soap, n, NULL, NULL, NULL); }

inline tt__Mpeg4Options2 * soap_new_req_tt__Mpeg4Options2(
	struct soap *soap,
	tt__IntRange *BitrateRange,
	const std::vector<tt__VideoResolution *> & ResolutionsAvailable1,
	tt__IntRange *GovLengthRange1,
	tt__IntRange *FrameRateRange1,
	tt__IntRange *EncodingIntervalRange1,
	const std::vector<enum tt__Mpeg4Profile> & Mpeg4ProfilesSupported1)
{	tt__Mpeg4Options2 *_p = soap_new_tt__Mpeg4Options2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Mpeg4Options2::BitrateRange = BitrateRange;
		_p->tt__Mpeg4Options::ResolutionsAvailable = ResolutionsAvailable1;
		_p->tt__Mpeg4Options::GovLengthRange = GovLengthRange1;
		_p->tt__Mpeg4Options::FrameRateRange = FrameRateRange1;
		_p->tt__Mpeg4Options::EncodingIntervalRange = EncodingIntervalRange1;
		_p->tt__Mpeg4Options::Mpeg4ProfilesSupported = Mpeg4ProfilesSupported1;
	}
	return _p;
}

inline tt__Mpeg4Options2 * soap_new_set_tt__Mpeg4Options2(
	struct soap *soap,
	tt__IntRange *BitrateRange,
	const std::vector<tt__VideoResolution *> & ResolutionsAvailable1,
	tt__IntRange *GovLengthRange1,
	tt__IntRange *FrameRateRange1,
	tt__IntRange *EncodingIntervalRange1,
	const std::vector<enum tt__Mpeg4Profile> & Mpeg4ProfilesSupported1)
{	tt__Mpeg4Options2 *_p = soap_new_tt__Mpeg4Options2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Mpeg4Options2::BitrateRange = BitrateRange;
		_p->tt__Mpeg4Options::ResolutionsAvailable = ResolutionsAvailable1;
		_p->tt__Mpeg4Options::GovLengthRange = GovLengthRange1;
		_p->tt__Mpeg4Options::FrameRateRange = FrameRateRange1;
		_p->tt__Mpeg4Options::EncodingIntervalRange = EncodingIntervalRange1;
		_p->tt__Mpeg4Options::Mpeg4ProfilesSupported = Mpeg4ProfilesSupported1;
	}
	return _p;
}

#ifndef soap_write_tt__Mpeg4Options2
#define soap_write_tt__Mpeg4Options2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Mpeg4Options2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Mpeg4Options2 * SOAP_FMAC4 soap_get_tt__Mpeg4Options2(struct soap*, tt__Mpeg4Options2 *, const char*, const char*);

#ifndef soap_read_tt__Mpeg4Options2
#define soap_read_tt__Mpeg4Options2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Mpeg4Options2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Mpeg4Options
#define SOAP_TYPE_tt__Mpeg4Options (368)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Mpeg4Options(struct soap*, const char*, int, const tt__Mpeg4Options *, const char*);
SOAP_FMAC3 tt__Mpeg4Options * SOAP_FMAC4 soap_in_tt__Mpeg4Options(struct soap*, const char*, tt__Mpeg4Options *, const char*);
SOAP_FMAC1 tt__Mpeg4Options * SOAP_FMAC2 soap_instantiate_tt__Mpeg4Options(struct soap*, int, const char*, const char*, size_t*);

inline tt__Mpeg4Options * soap_new_tt__Mpeg4Options(struct soap *soap, int n = -1) { return soap_instantiate_tt__Mpeg4Options(soap, n, NULL, NULL, NULL); }

inline tt__Mpeg4Options * soap_new_req_tt__Mpeg4Options(
	struct soap *soap,
	const std::vector<tt__VideoResolution *> & ResolutionsAvailable,
	tt__IntRange *GovLengthRange,
	tt__IntRange *FrameRateRange,
	tt__IntRange *EncodingIntervalRange,
	const std::vector<enum tt__Mpeg4Profile> & Mpeg4ProfilesSupported)
{	tt__Mpeg4Options *_p = soap_new_tt__Mpeg4Options(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Mpeg4Options::ResolutionsAvailable = ResolutionsAvailable;
		_p->tt__Mpeg4Options::GovLengthRange = GovLengthRange;
		_p->tt__Mpeg4Options::FrameRateRange = FrameRateRange;
		_p->tt__Mpeg4Options::EncodingIntervalRange = EncodingIntervalRange;
		_p->tt__Mpeg4Options::Mpeg4ProfilesSupported = Mpeg4ProfilesSupported;
	}
	return _p;
}

inline tt__Mpeg4Options * soap_new_set_tt__Mpeg4Options(
	struct soap *soap,
	const std::vector<tt__VideoResolution *> & ResolutionsAvailable,
	tt__IntRange *GovLengthRange,
	tt__IntRange *FrameRateRange,
	tt__IntRange *EncodingIntervalRange,
	const std::vector<enum tt__Mpeg4Profile> & Mpeg4ProfilesSupported)
{	tt__Mpeg4Options *_p = soap_new_tt__Mpeg4Options(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Mpeg4Options::ResolutionsAvailable = ResolutionsAvailable;
		_p->tt__Mpeg4Options::GovLengthRange = GovLengthRange;
		_p->tt__Mpeg4Options::FrameRateRange = FrameRateRange;
		_p->tt__Mpeg4Options::EncodingIntervalRange = EncodingIntervalRange;
		_p->tt__Mpeg4Options::Mpeg4ProfilesSupported = Mpeg4ProfilesSupported;
	}
	return _p;
}

#ifndef soap_write_tt__Mpeg4Options
#define soap_write_tt__Mpeg4Options(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Mpeg4Options", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Mpeg4Options * SOAP_FMAC4 soap_get_tt__Mpeg4Options(struct soap*, tt__Mpeg4Options *, const char*, const char*);

#ifndef soap_read_tt__Mpeg4Options
#define soap_read_tt__Mpeg4Options(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Mpeg4Options(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__JpegOptions2
#define SOAP_TYPE_tt__JpegOptions2 (367)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__JpegOptions2(struct soap*, const char*, int, const tt__JpegOptions2 *, const char*);
SOAP_FMAC3 tt__JpegOptions2 * SOAP_FMAC4 soap_in_tt__JpegOptions2(struct soap*, const char*, tt__JpegOptions2 *, const char*);
SOAP_FMAC1 tt__JpegOptions2 * SOAP_FMAC2 soap_instantiate_tt__JpegOptions2(struct soap*, int, const char*, const char*, size_t*);

inline tt__JpegOptions2 * soap_new_tt__JpegOptions2(struct soap *soap, int n = -1) { return soap_instantiate_tt__JpegOptions2(soap, n, NULL, NULL, NULL); }

inline tt__JpegOptions2 * soap_new_req_tt__JpegOptions2(
	struct soap *soap,
	tt__IntRange *BitrateRange,
	const std::vector<tt__VideoResolution *> & ResolutionsAvailable1,
	tt__IntRange *FrameRateRange1,
	tt__IntRange *EncodingIntervalRange1)
{	tt__JpegOptions2 *_p = soap_new_tt__JpegOptions2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__JpegOptions2::BitrateRange = BitrateRange;
		_p->tt__JpegOptions::ResolutionsAvailable = ResolutionsAvailable1;
		_p->tt__JpegOptions::FrameRateRange = FrameRateRange1;
		_p->tt__JpegOptions::EncodingIntervalRange = EncodingIntervalRange1;
	}
	return _p;
}

inline tt__JpegOptions2 * soap_new_set_tt__JpegOptions2(
	struct soap *soap,
	tt__IntRange *BitrateRange,
	const std::vector<tt__VideoResolution *> & ResolutionsAvailable1,
	tt__IntRange *FrameRateRange1,
	tt__IntRange *EncodingIntervalRange1)
{	tt__JpegOptions2 *_p = soap_new_tt__JpegOptions2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__JpegOptions2::BitrateRange = BitrateRange;
		_p->tt__JpegOptions::ResolutionsAvailable = ResolutionsAvailable1;
		_p->tt__JpegOptions::FrameRateRange = FrameRateRange1;
		_p->tt__JpegOptions::EncodingIntervalRange = EncodingIntervalRange1;
	}
	return _p;
}

#ifndef soap_write_tt__JpegOptions2
#define soap_write_tt__JpegOptions2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:JpegOptions2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__JpegOptions2 * SOAP_FMAC4 soap_get_tt__JpegOptions2(struct soap*, tt__JpegOptions2 *, const char*, const char*);

#ifndef soap_read_tt__JpegOptions2
#define soap_read_tt__JpegOptions2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__JpegOptions2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__JpegOptions
#define SOAP_TYPE_tt__JpegOptions (366)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__JpegOptions(struct soap*, const char*, int, const tt__JpegOptions *, const char*);
SOAP_FMAC3 tt__JpegOptions * SOAP_FMAC4 soap_in_tt__JpegOptions(struct soap*, const char*, tt__JpegOptions *, const char*);
SOAP_FMAC1 tt__JpegOptions * SOAP_FMAC2 soap_instantiate_tt__JpegOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__JpegOptions * soap_new_tt__JpegOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__JpegOptions(soap, n, NULL, NULL, NULL); }

inline tt__JpegOptions * soap_new_req_tt__JpegOptions(
	struct soap *soap,
	const std::vector<tt__VideoResolution *> & ResolutionsAvailable,
	tt__IntRange *FrameRateRange,
	tt__IntRange *EncodingIntervalRange)
{	tt__JpegOptions *_p = soap_new_tt__JpegOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__JpegOptions::ResolutionsAvailable = ResolutionsAvailable;
		_p->tt__JpegOptions::FrameRateRange = FrameRateRange;
		_p->tt__JpegOptions::EncodingIntervalRange = EncodingIntervalRange;
	}
	return _p;
}

inline tt__JpegOptions * soap_new_set_tt__JpegOptions(
	struct soap *soap,
	const std::vector<tt__VideoResolution *> & ResolutionsAvailable,
	tt__IntRange *FrameRateRange,
	tt__IntRange *EncodingIntervalRange)
{	tt__JpegOptions *_p = soap_new_tt__JpegOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__JpegOptions::ResolutionsAvailable = ResolutionsAvailable;
		_p->tt__JpegOptions::FrameRateRange = FrameRateRange;
		_p->tt__JpegOptions::EncodingIntervalRange = EncodingIntervalRange;
	}
	return _p;
}

#ifndef soap_write_tt__JpegOptions
#define soap_write_tt__JpegOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:JpegOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__JpegOptions * SOAP_FMAC4 soap_get_tt__JpegOptions(struct soap*, tt__JpegOptions *, const char*, const char*);

#ifndef soap_read_tt__JpegOptions
#define soap_read_tt__JpegOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__JpegOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoEncoderOptionsExtension2
#define SOAP_TYPE_tt__VideoEncoderOptionsExtension2 (365)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoEncoderOptionsExtension2(struct soap*, const char*, int, const tt__VideoEncoderOptionsExtension2 *, const char*);
SOAP_FMAC3 tt__VideoEncoderOptionsExtension2 * SOAP_FMAC4 soap_in_tt__VideoEncoderOptionsExtension2(struct soap*, const char*, tt__VideoEncoderOptionsExtension2 *, const char*);
SOAP_FMAC1 tt__VideoEncoderOptionsExtension2 * SOAP_FMAC2 soap_instantiate_tt__VideoEncoderOptionsExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoEncoderOptionsExtension2 * soap_new_tt__VideoEncoderOptionsExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoEncoderOptionsExtension2(soap, n, NULL, NULL, NULL); }

inline tt__VideoEncoderOptionsExtension2 * soap_new_req_tt__VideoEncoderOptionsExtension2(
	struct soap *soap)
{	tt__VideoEncoderOptionsExtension2 *_p = soap_new_tt__VideoEncoderOptionsExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__VideoEncoderOptionsExtension2 * soap_new_set_tt__VideoEncoderOptionsExtension2(
	struct soap *soap)
{	tt__VideoEncoderOptionsExtension2 *_p = soap_new_tt__VideoEncoderOptionsExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__VideoEncoderOptionsExtension2
#define soap_write_tt__VideoEncoderOptionsExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:VideoEncoderOptionsExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoEncoderOptionsExtension2 * SOAP_FMAC4 soap_get_tt__VideoEncoderOptionsExtension2(struct soap*, tt__VideoEncoderOptionsExtension2 *, const char*, const char*);

#ifndef soap_read_tt__VideoEncoderOptionsExtension2
#define soap_read_tt__VideoEncoderOptionsExtension2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoEncoderOptionsExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoEncoderOptionsExtension
#define SOAP_TYPE_tt__VideoEncoderOptionsExtension (364)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoEncoderOptionsExtension(struct soap*, const char*, int, const tt__VideoEncoderOptionsExtension *, const char*);
SOAP_FMAC3 tt__VideoEncoderOptionsExtension * SOAP_FMAC4 soap_in_tt__VideoEncoderOptionsExtension(struct soap*, const char*, tt__VideoEncoderOptionsExtension *, const char*);
SOAP_FMAC1 tt__VideoEncoderOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__VideoEncoderOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoEncoderOptionsExtension * soap_new_tt__VideoEncoderOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoEncoderOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__VideoEncoderOptionsExtension * soap_new_req_tt__VideoEncoderOptionsExtension(
	struct soap *soap)
{	tt__VideoEncoderOptionsExtension *_p = soap_new_tt__VideoEncoderOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__VideoEncoderOptionsExtension * soap_new_set_tt__VideoEncoderOptionsExtension(
	struct soap *soap,
	tt__JpegOptions2 *JPEG,
	tt__Mpeg4Options2 *MPEG4,
	tt__H264Options2 *H264,
	tt__VideoEncoderOptionsExtension2 *Extension)
{	tt__VideoEncoderOptionsExtension *_p = soap_new_tt__VideoEncoderOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoEncoderOptionsExtension::JPEG = JPEG;
		_p->tt__VideoEncoderOptionsExtension::MPEG4 = MPEG4;
		_p->tt__VideoEncoderOptionsExtension::H264 = H264;
		_p->tt__VideoEncoderOptionsExtension::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__VideoEncoderOptionsExtension
#define soap_write_tt__VideoEncoderOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:VideoEncoderOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoEncoderOptionsExtension * SOAP_FMAC4 soap_get_tt__VideoEncoderOptionsExtension(struct soap*, tt__VideoEncoderOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__VideoEncoderOptionsExtension
#define soap_read_tt__VideoEncoderOptionsExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoEncoderOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoEncoderConfigurationOptions
#define SOAP_TYPE_tt__VideoEncoderConfigurationOptions (363)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoEncoderConfigurationOptions(struct soap*, const char*, int, const tt__VideoEncoderConfigurationOptions *, const char*);
SOAP_FMAC3 tt__VideoEncoderConfigurationOptions * SOAP_FMAC4 soap_in_tt__VideoEncoderConfigurationOptions(struct soap*, const char*, tt__VideoEncoderConfigurationOptions *, const char*);
SOAP_FMAC1 tt__VideoEncoderConfigurationOptions * SOAP_FMAC2 soap_instantiate_tt__VideoEncoderConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoEncoderConfigurationOptions * soap_new_tt__VideoEncoderConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoEncoderConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline tt__VideoEncoderConfigurationOptions * soap_new_req_tt__VideoEncoderConfigurationOptions(
	struct soap *soap,
	tt__IntRange *QualityRange)
{	tt__VideoEncoderConfigurationOptions *_p = soap_new_tt__VideoEncoderConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoEncoderConfigurationOptions::QualityRange = QualityRange;
	}
	return _p;
}

inline tt__VideoEncoderConfigurationOptions * soap_new_set_tt__VideoEncoderConfigurationOptions(
	struct soap *soap,
	tt__IntRange *QualityRange,
	tt__JpegOptions *JPEG,
	tt__Mpeg4Options *MPEG4,
	tt__H264Options *H264,
	tt__VideoEncoderOptionsExtension *Extension)
{	tt__VideoEncoderConfigurationOptions *_p = soap_new_tt__VideoEncoderConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoEncoderConfigurationOptions::QualityRange = QualityRange;
		_p->tt__VideoEncoderConfigurationOptions::JPEG = JPEG;
		_p->tt__VideoEncoderConfigurationOptions::MPEG4 = MPEG4;
		_p->tt__VideoEncoderConfigurationOptions::H264 = H264;
		_p->tt__VideoEncoderConfigurationOptions::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__VideoEncoderConfigurationOptions
#define soap_write_tt__VideoEncoderConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:VideoEncoderConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoEncoderConfigurationOptions * SOAP_FMAC4 soap_get_tt__VideoEncoderConfigurationOptions(struct soap*, tt__VideoEncoderConfigurationOptions *, const char*, const char*);

#ifndef soap_read_tt__VideoEncoderConfigurationOptions
#define soap_read_tt__VideoEncoderConfigurationOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoEncoderConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__H264Configuration
#define SOAP_TYPE_tt__H264Configuration (362)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__H264Configuration(struct soap*, const char*, int, const tt__H264Configuration *, const char*);
SOAP_FMAC3 tt__H264Configuration * SOAP_FMAC4 soap_in_tt__H264Configuration(struct soap*, const char*, tt__H264Configuration *, const char*);
SOAP_FMAC1 tt__H264Configuration * SOAP_FMAC2 soap_instantiate_tt__H264Configuration(struct soap*, int, const char*, const char*, size_t*);

inline tt__H264Configuration * soap_new_tt__H264Configuration(struct soap *soap, int n = -1) { return soap_instantiate_tt__H264Configuration(soap, n, NULL, NULL, NULL); }

inline tt__H264Configuration * soap_new_req_tt__H264Configuration(
	struct soap *soap,
	int GovLength,
	enum tt__H264Profile H264Profile)
{	tt__H264Configuration *_p = soap_new_tt__H264Configuration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__H264Configuration::GovLength = GovLength;
		_p->tt__H264Configuration::H264Profile = H264Profile;
	}
	return _p;
}

inline tt__H264Configuration * soap_new_set_tt__H264Configuration(
	struct soap *soap,
	int GovLength,
	enum tt__H264Profile H264Profile)
{	tt__H264Configuration *_p = soap_new_tt__H264Configuration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__H264Configuration::GovLength = GovLength;
		_p->tt__H264Configuration::H264Profile = H264Profile;
	}
	return _p;
}

#ifndef soap_write_tt__H264Configuration
#define soap_write_tt__H264Configuration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:H264Configuration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__H264Configuration * SOAP_FMAC4 soap_get_tt__H264Configuration(struct soap*, tt__H264Configuration *, const char*, const char*);

#ifndef soap_read_tt__H264Configuration
#define soap_read_tt__H264Configuration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__H264Configuration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Mpeg4Configuration
#define SOAP_TYPE_tt__Mpeg4Configuration (361)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Mpeg4Configuration(struct soap*, const char*, int, const tt__Mpeg4Configuration *, const char*);
SOAP_FMAC3 tt__Mpeg4Configuration * SOAP_FMAC4 soap_in_tt__Mpeg4Configuration(struct soap*, const char*, tt__Mpeg4Configuration *, const char*);
SOAP_FMAC1 tt__Mpeg4Configuration * SOAP_FMAC2 soap_instantiate_tt__Mpeg4Configuration(struct soap*, int, const char*, const char*, size_t*);

inline tt__Mpeg4Configuration * soap_new_tt__Mpeg4Configuration(struct soap *soap, int n = -1) { return soap_instantiate_tt__Mpeg4Configuration(soap, n, NULL, NULL, NULL); }

inline tt__Mpeg4Configuration * soap_new_req_tt__Mpeg4Configuration(
	struct soap *soap,
	int GovLength,
	enum tt__Mpeg4Profile Mpeg4Profile)
{	tt__Mpeg4Configuration *_p = soap_new_tt__Mpeg4Configuration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Mpeg4Configuration::GovLength = GovLength;
		_p->tt__Mpeg4Configuration::Mpeg4Profile = Mpeg4Profile;
	}
	return _p;
}

inline tt__Mpeg4Configuration * soap_new_set_tt__Mpeg4Configuration(
	struct soap *soap,
	int GovLength,
	enum tt__Mpeg4Profile Mpeg4Profile)
{	tt__Mpeg4Configuration *_p = soap_new_tt__Mpeg4Configuration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Mpeg4Configuration::GovLength = GovLength;
		_p->tt__Mpeg4Configuration::Mpeg4Profile = Mpeg4Profile;
	}
	return _p;
}

#ifndef soap_write_tt__Mpeg4Configuration
#define soap_write_tt__Mpeg4Configuration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Mpeg4Configuration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Mpeg4Configuration * SOAP_FMAC4 soap_get_tt__Mpeg4Configuration(struct soap*, tt__Mpeg4Configuration *, const char*, const char*);

#ifndef soap_read_tt__Mpeg4Configuration
#define soap_read_tt__Mpeg4Configuration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Mpeg4Configuration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoRateControl
#define SOAP_TYPE_tt__VideoRateControl (360)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoRateControl(struct soap*, const char*, int, const tt__VideoRateControl *, const char*);
SOAP_FMAC3 tt__VideoRateControl * SOAP_FMAC4 soap_in_tt__VideoRateControl(struct soap*, const char*, tt__VideoRateControl *, const char*);
SOAP_FMAC1 tt__VideoRateControl * SOAP_FMAC2 soap_instantiate_tt__VideoRateControl(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoRateControl * soap_new_tt__VideoRateControl(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoRateControl(soap, n, NULL, NULL, NULL); }

inline tt__VideoRateControl * soap_new_req_tt__VideoRateControl(
	struct soap *soap,
	int FrameRateLimit,
	int EncodingInterval,
	int BitrateLimit)
{	tt__VideoRateControl *_p = soap_new_tt__VideoRateControl(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoRateControl::FrameRateLimit = FrameRateLimit;
		_p->tt__VideoRateControl::EncodingInterval = EncodingInterval;
		_p->tt__VideoRateControl::BitrateLimit = BitrateLimit;
	}
	return _p;
}

inline tt__VideoRateControl * soap_new_set_tt__VideoRateControl(
	struct soap *soap,
	int FrameRateLimit,
	int EncodingInterval,
	int BitrateLimit)
{	tt__VideoRateControl *_p = soap_new_tt__VideoRateControl(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoRateControl::FrameRateLimit = FrameRateLimit;
		_p->tt__VideoRateControl::EncodingInterval = EncodingInterval;
		_p->tt__VideoRateControl::BitrateLimit = BitrateLimit;
	}
	return _p;
}

#ifndef soap_write_tt__VideoRateControl
#define soap_write_tt__VideoRateControl(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:VideoRateControl", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoRateControl * SOAP_FMAC4 soap_get_tt__VideoRateControl(struct soap*, tt__VideoRateControl *, const char*, const char*);

#ifndef soap_read_tt__VideoRateControl
#define soap_read_tt__VideoRateControl(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoRateControl(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoResolution
#define SOAP_TYPE_tt__VideoResolution (359)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoResolution(struct soap*, const char*, int, const tt__VideoResolution *, const char*);
SOAP_FMAC3 tt__VideoResolution * SOAP_FMAC4 soap_in_tt__VideoResolution(struct soap*, const char*, tt__VideoResolution *, const char*);
SOAP_FMAC1 tt__VideoResolution * SOAP_FMAC2 soap_instantiate_tt__VideoResolution(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoResolution * soap_new_tt__VideoResolution(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoResolution(soap, n, NULL, NULL, NULL); }

inline tt__VideoResolution * soap_new_req_tt__VideoResolution(
	struct soap *soap,
	int Width,
	int Height)
{	tt__VideoResolution *_p = soap_new_tt__VideoResolution(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoResolution::Width = Width;
		_p->tt__VideoResolution::Height = Height;
	}
	return _p;
}

inline tt__VideoResolution * soap_new_set_tt__VideoResolution(
	struct soap *soap,
	int Width,
	int Height)
{	tt__VideoResolution *_p = soap_new_tt__VideoResolution(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoResolution::Width = Width;
		_p->tt__VideoResolution::Height = Height;
	}
	return _p;
}

#ifndef soap_write_tt__VideoResolution
#define soap_write_tt__VideoResolution(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:VideoResolution", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoResolution * SOAP_FMAC4 soap_get_tt__VideoResolution(struct soap*, tt__VideoResolution *, const char*, const char*);

#ifndef soap_read_tt__VideoResolution
#define soap_read_tt__VideoResolution(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoResolution(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoEncoderConfiguration
#define SOAP_TYPE_tt__VideoEncoderConfiguration (358)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoEncoderConfiguration(struct soap*, const char*, int, const tt__VideoEncoderConfiguration *, const char*);
SOAP_FMAC3 tt__VideoEncoderConfiguration * SOAP_FMAC4 soap_in_tt__VideoEncoderConfiguration(struct soap*, const char*, tt__VideoEncoderConfiguration *, const char*);
SOAP_FMAC1 tt__VideoEncoderConfiguration * SOAP_FMAC2 soap_instantiate_tt__VideoEncoderConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoEncoderConfiguration * soap_new_tt__VideoEncoderConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoEncoderConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__VideoEncoderConfiguration * soap_new_req_tt__VideoEncoderConfiguration(
	struct soap *soap,
	enum tt__VideoEncoding Encoding,
	tt__VideoResolution *Resolution,
	float Quality,
	tt__MulticastConfiguration *Multicast,
	LONG64 SessionTimeout,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__VideoEncoderConfiguration *_p = soap_new_tt__VideoEncoderConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoEncoderConfiguration::Encoding = Encoding;
		_p->tt__VideoEncoderConfiguration::Resolution = Resolution;
		_p->tt__VideoEncoderConfiguration::Quality = Quality;
		_p->tt__VideoEncoderConfiguration::Multicast = Multicast;
		_p->tt__VideoEncoderConfiguration::SessionTimeout = SessionTimeout;
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

inline tt__VideoEncoderConfiguration * soap_new_set_tt__VideoEncoderConfiguration(
	struct soap *soap,
	enum tt__VideoEncoding Encoding,
	tt__VideoResolution *Resolution,
	float Quality,
	tt__VideoRateControl *RateControl,
	tt__Mpeg4Configuration *MPEG4,
	tt__H264Configuration *H264,
	tt__MulticastConfiguration *Multicast,
	LONG64 SessionTimeout,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__VideoEncoderConfiguration *_p = soap_new_tt__VideoEncoderConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoEncoderConfiguration::Encoding = Encoding;
		_p->tt__VideoEncoderConfiguration::Resolution = Resolution;
		_p->tt__VideoEncoderConfiguration::Quality = Quality;
		_p->tt__VideoEncoderConfiguration::RateControl = RateControl;
		_p->tt__VideoEncoderConfiguration::MPEG4 = MPEG4;
		_p->tt__VideoEncoderConfiguration::H264 = H264;
		_p->tt__VideoEncoderConfiguration::Multicast = Multicast;
		_p->tt__VideoEncoderConfiguration::SessionTimeout = SessionTimeout;
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

#ifndef soap_write_tt__VideoEncoderConfiguration
#define soap_write_tt__VideoEncoderConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:VideoEncoderConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoEncoderConfiguration * SOAP_FMAC4 soap_get_tt__VideoEncoderConfiguration(struct soap*, tt__VideoEncoderConfiguration *, const char*, const char*);

#ifndef soap_read_tt__VideoEncoderConfiguration
#define soap_read_tt__VideoEncoderConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoEncoderConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__SceneOrientation
#define SOAP_TYPE_tt__SceneOrientation (357)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__SceneOrientation(struct soap*, const char*, int, const tt__SceneOrientation *, const char*);
SOAP_FMAC3 tt__SceneOrientation * SOAP_FMAC4 soap_in_tt__SceneOrientation(struct soap*, const char*, tt__SceneOrientation *, const char*);
SOAP_FMAC1 tt__SceneOrientation * SOAP_FMAC2 soap_instantiate_tt__SceneOrientation(struct soap*, int, const char*, const char*, size_t*);

inline tt__SceneOrientation * soap_new_tt__SceneOrientation(struct soap *soap, int n = -1) { return soap_instantiate_tt__SceneOrientation(soap, n, NULL, NULL, NULL); }

inline tt__SceneOrientation * soap_new_req_tt__SceneOrientation(
	struct soap *soap,
	enum tt__SceneOrientationMode Mode)
{	tt__SceneOrientation *_p = soap_new_tt__SceneOrientation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__SceneOrientation::Mode = Mode;
	}
	return _p;
}

inline tt__SceneOrientation * soap_new_set_tt__SceneOrientation(
	struct soap *soap,
	enum tt__SceneOrientationMode Mode,
	std::string *Orientation)
{	tt__SceneOrientation *_p = soap_new_tt__SceneOrientation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__SceneOrientation::Mode = Mode;
		_p->tt__SceneOrientation::Orientation = Orientation;
	}
	return _p;
}

#ifndef soap_write_tt__SceneOrientation
#define soap_write_tt__SceneOrientation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:SceneOrientation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SceneOrientation * SOAP_FMAC4 soap_get_tt__SceneOrientation(struct soap*, tt__SceneOrientation *, const char*, const char*);

#ifndef soap_read_tt__SceneOrientation
#define soap_read_tt__SceneOrientation(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__SceneOrientation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RotateOptionsExtension
#define SOAP_TYPE_tt__RotateOptionsExtension (356)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RotateOptionsExtension(struct soap*, const char*, int, const tt__RotateOptionsExtension *, const char*);
SOAP_FMAC3 tt__RotateOptionsExtension * SOAP_FMAC4 soap_in_tt__RotateOptionsExtension(struct soap*, const char*, tt__RotateOptionsExtension *, const char*);
SOAP_FMAC1 tt__RotateOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__RotateOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__RotateOptionsExtension * soap_new_tt__RotateOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__RotateOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__RotateOptionsExtension * soap_new_req_tt__RotateOptionsExtension(
	struct soap *soap)
{	tt__RotateOptionsExtension *_p = soap_new_tt__RotateOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__RotateOptionsExtension * soap_new_set_tt__RotateOptionsExtension(
	struct soap *soap)
{	tt__RotateOptionsExtension *_p = soap_new_tt__RotateOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__RotateOptionsExtension
#define soap_write_tt__RotateOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:RotateOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RotateOptionsExtension * SOAP_FMAC4 soap_get_tt__RotateOptionsExtension(struct soap*, tt__RotateOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__RotateOptionsExtension
#define soap_read_tt__RotateOptionsExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RotateOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RotateOptions
#define SOAP_TYPE_tt__RotateOptions (355)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RotateOptions(struct soap*, const char*, int, const tt__RotateOptions *, const char*);
SOAP_FMAC3 tt__RotateOptions * SOAP_FMAC4 soap_in_tt__RotateOptions(struct soap*, const char*, tt__RotateOptions *, const char*);
SOAP_FMAC1 tt__RotateOptions * SOAP_FMAC2 soap_instantiate_tt__RotateOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__RotateOptions * soap_new_tt__RotateOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__RotateOptions(soap, n, NULL, NULL, NULL); }

inline tt__RotateOptions * soap_new_req_tt__RotateOptions(
	struct soap *soap,
	const std::vector<enum tt__RotateMode> & Mode)
{	tt__RotateOptions *_p = soap_new_tt__RotateOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RotateOptions::Mode = Mode;
	}
	return _p;
}

inline tt__RotateOptions * soap_new_set_tt__RotateOptions(
	struct soap *soap,
	const std::vector<enum tt__RotateMode> & Mode,
	tt__IntList *DegreeList,
	tt__RotateOptionsExtension *Extension)
{	tt__RotateOptions *_p = soap_new_tt__RotateOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__RotateOptions::Mode = Mode;
		_p->tt__RotateOptions::DegreeList = DegreeList;
		_p->tt__RotateOptions::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__RotateOptions
#define soap_write_tt__RotateOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:RotateOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RotateOptions * SOAP_FMAC4 soap_get_tt__RotateOptions(struct soap*, tt__RotateOptions *, const char*, const char*);

#ifndef soap_read_tt__RotateOptions
#define soap_read_tt__RotateOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RotateOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoSourceConfigurationOptionsExtension2
#define SOAP_TYPE_tt__VideoSourceConfigurationOptionsExtension2 (354)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoSourceConfigurationOptionsExtension2(struct soap*, const char*, int, const tt__VideoSourceConfigurationOptionsExtension2 *, const char*);
SOAP_FMAC3 tt__VideoSourceConfigurationOptionsExtension2 * SOAP_FMAC4 soap_in_tt__VideoSourceConfigurationOptionsExtension2(struct soap*, const char*, tt__VideoSourceConfigurationOptionsExtension2 *, const char*);
SOAP_FMAC1 tt__VideoSourceConfigurationOptionsExtension2 * SOAP_FMAC2 soap_instantiate_tt__VideoSourceConfigurationOptionsExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoSourceConfigurationOptionsExtension2 * soap_new_tt__VideoSourceConfigurationOptionsExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoSourceConfigurationOptionsExtension2(soap, n, NULL, NULL, NULL); }

inline tt__VideoSourceConfigurationOptionsExtension2 * soap_new_req_tt__VideoSourceConfigurationOptionsExtension2(
	struct soap *soap)
{	tt__VideoSourceConfigurationOptionsExtension2 *_p = soap_new_tt__VideoSourceConfigurationOptionsExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__VideoSourceConfigurationOptionsExtension2 * soap_new_set_tt__VideoSourceConfigurationOptionsExtension2(
	struct soap *soap,
	const std::vector<enum tt__SceneOrientationMode> & SceneOrientationMode)
{	tt__VideoSourceConfigurationOptionsExtension2 *_p = soap_new_tt__VideoSourceConfigurationOptionsExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoSourceConfigurationOptionsExtension2::SceneOrientationMode = SceneOrientationMode;
	}
	return _p;
}

#ifndef soap_write_tt__VideoSourceConfigurationOptionsExtension2
#define soap_write_tt__VideoSourceConfigurationOptionsExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:VideoSourceConfigurationOptionsExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceConfigurationOptionsExtension2 * SOAP_FMAC4 soap_get_tt__VideoSourceConfigurationOptionsExtension2(struct soap*, tt__VideoSourceConfigurationOptionsExtension2 *, const char*, const char*);

#ifndef soap_read_tt__VideoSourceConfigurationOptionsExtension2
#define soap_read_tt__VideoSourceConfigurationOptionsExtension2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoSourceConfigurationOptionsExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoSourceConfigurationOptionsExtension
#define SOAP_TYPE_tt__VideoSourceConfigurationOptionsExtension (353)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoSourceConfigurationOptionsExtension(struct soap*, const char*, int, const tt__VideoSourceConfigurationOptionsExtension *, const char*);
SOAP_FMAC3 tt__VideoSourceConfigurationOptionsExtension * SOAP_FMAC4 soap_in_tt__VideoSourceConfigurationOptionsExtension(struct soap*, const char*, tt__VideoSourceConfigurationOptionsExtension *, const char*);
SOAP_FMAC1 tt__VideoSourceConfigurationOptionsExtension * SOAP_FMAC2 soap_instantiate_tt__VideoSourceConfigurationOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoSourceConfigurationOptionsExtension * soap_new_tt__VideoSourceConfigurationOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoSourceConfigurationOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tt__VideoSourceConfigurationOptionsExtension * soap_new_req_tt__VideoSourceConfigurationOptionsExtension(
	struct soap *soap)
{	tt__VideoSourceConfigurationOptionsExtension *_p = soap_new_tt__VideoSourceConfigurationOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__VideoSourceConfigurationOptionsExtension * soap_new_set_tt__VideoSourceConfigurationOptionsExtension(
	struct soap *soap,
	tt__RotateOptions *Rotate,
	tt__VideoSourceConfigurationOptionsExtension2 *Extension)
{	tt__VideoSourceConfigurationOptionsExtension *_p = soap_new_tt__VideoSourceConfigurationOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoSourceConfigurationOptionsExtension::Rotate = Rotate;
		_p->tt__VideoSourceConfigurationOptionsExtension::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__VideoSourceConfigurationOptionsExtension
#define soap_write_tt__VideoSourceConfigurationOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:VideoSourceConfigurationOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceConfigurationOptionsExtension * SOAP_FMAC4 soap_get_tt__VideoSourceConfigurationOptionsExtension(struct soap*, tt__VideoSourceConfigurationOptionsExtension *, const char*, const char*);

#ifndef soap_read_tt__VideoSourceConfigurationOptionsExtension
#define soap_read_tt__VideoSourceConfigurationOptionsExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoSourceConfigurationOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoSourceConfigurationOptions
#define SOAP_TYPE_tt__VideoSourceConfigurationOptions (352)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoSourceConfigurationOptions(struct soap*, const char*, int, const tt__VideoSourceConfigurationOptions *, const char*);
SOAP_FMAC3 tt__VideoSourceConfigurationOptions * SOAP_FMAC4 soap_in_tt__VideoSourceConfigurationOptions(struct soap*, const char*, tt__VideoSourceConfigurationOptions *, const char*);
SOAP_FMAC1 tt__VideoSourceConfigurationOptions * SOAP_FMAC2 soap_instantiate_tt__VideoSourceConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoSourceConfigurationOptions * soap_new_tt__VideoSourceConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoSourceConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline tt__VideoSourceConfigurationOptions * soap_new_req_tt__VideoSourceConfigurationOptions(
	struct soap *soap,
	tt__IntRectangleRange *BoundsRange,
	const std::vector<std::string> & VideoSourceTokensAvailable)
{	tt__VideoSourceConfigurationOptions *_p = soap_new_tt__VideoSourceConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoSourceConfigurationOptions::BoundsRange = BoundsRange;
		_p->tt__VideoSourceConfigurationOptions::VideoSourceTokensAvailable = VideoSourceTokensAvailable;
	}
	return _p;
}

inline tt__VideoSourceConfigurationOptions * soap_new_set_tt__VideoSourceConfigurationOptions(
	struct soap *soap,
	tt__IntRectangleRange *BoundsRange,
	const std::vector<std::string> & VideoSourceTokensAvailable,
	tt__VideoSourceConfigurationOptionsExtension *Extension,
	int *MaximumNumberOfProfiles)
{	tt__VideoSourceConfigurationOptions *_p = soap_new_tt__VideoSourceConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoSourceConfigurationOptions::BoundsRange = BoundsRange;
		_p->tt__VideoSourceConfigurationOptions::VideoSourceTokensAvailable = VideoSourceTokensAvailable;
		_p->tt__VideoSourceConfigurationOptions::Extension = Extension;
		_p->tt__VideoSourceConfigurationOptions::MaximumNumberOfProfiles = MaximumNumberOfProfiles;
	}
	return _p;
}

#ifndef soap_write_tt__VideoSourceConfigurationOptions
#define soap_write_tt__VideoSourceConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:VideoSourceConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceConfigurationOptions * SOAP_FMAC4 soap_get_tt__VideoSourceConfigurationOptions(struct soap*, tt__VideoSourceConfigurationOptions *, const char*, const char*);

#ifndef soap_read_tt__VideoSourceConfigurationOptions
#define soap_read_tt__VideoSourceConfigurationOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoSourceConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__LensDescription
#define SOAP_TYPE_tt__LensDescription (351)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__LensDescription(struct soap*, const char*, int, const tt__LensDescription *, const char*);
SOAP_FMAC3 tt__LensDescription * SOAP_FMAC4 soap_in_tt__LensDescription(struct soap*, const char*, tt__LensDescription *, const char*);
SOAP_FMAC1 tt__LensDescription * SOAP_FMAC2 soap_instantiate_tt__LensDescription(struct soap*, int, const char*, const char*, size_t*);

inline tt__LensDescription * soap_new_tt__LensDescription(struct soap *soap, int n = -1) { return soap_instantiate_tt__LensDescription(soap, n, NULL, NULL, NULL); }

inline tt__LensDescription * soap_new_req_tt__LensDescription(
	struct soap *soap,
	tt__LensOffset *Offset,
	const std::vector<tt__LensProjection *> & Projection,
	float XFactor)
{	tt__LensDescription *_p = soap_new_tt__LensDescription(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__LensDescription::Offset = Offset;
		_p->tt__LensDescription::Projection = Projection;
		_p->tt__LensDescription::XFactor = XFactor;
	}
	return _p;
}

inline tt__LensDescription * soap_new_set_tt__LensDescription(
	struct soap *soap,
	tt__LensOffset *Offset,
	const std::vector<tt__LensProjection *> & Projection,
	float XFactor,
	float *FocalLength)
{	tt__LensDescription *_p = soap_new_tt__LensDescription(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__LensDescription::Offset = Offset;
		_p->tt__LensDescription::Projection = Projection;
		_p->tt__LensDescription::XFactor = XFactor;
		_p->tt__LensDescription::FocalLength = FocalLength;
	}
	return _p;
}

#ifndef soap_write_tt__LensDescription
#define soap_write_tt__LensDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:LensDescription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__LensDescription * SOAP_FMAC4 soap_get_tt__LensDescription(struct soap*, tt__LensDescription *, const char*, const char*);

#ifndef soap_read_tt__LensDescription
#define soap_read_tt__LensDescription(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__LensDescription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__LensOffset
#define SOAP_TYPE_tt__LensOffset (350)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__LensOffset(struct soap*, const char*, int, const tt__LensOffset *, const char*);
SOAP_FMAC3 tt__LensOffset * SOAP_FMAC4 soap_in_tt__LensOffset(struct soap*, const char*, tt__LensOffset *, const char*);
SOAP_FMAC1 tt__LensOffset * SOAP_FMAC2 soap_instantiate_tt__LensOffset(struct soap*, int, const char*, const char*, size_t*);

inline tt__LensOffset * soap_new_tt__LensOffset(struct soap *soap, int n = -1) { return soap_instantiate_tt__LensOffset(soap, n, NULL, NULL, NULL); }

inline tt__LensOffset * soap_new_req_tt__LensOffset(
	struct soap *soap)
{	tt__LensOffset *_p = soap_new_tt__LensOffset(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__LensOffset * soap_new_set_tt__LensOffset(
	struct soap *soap,
	float *x,
	float *y)
{	tt__LensOffset *_p = soap_new_tt__LensOffset(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__LensOffset::x = x;
		_p->tt__LensOffset::y = y;
	}
	return _p;
}

#ifndef soap_write_tt__LensOffset
#define soap_write_tt__LensOffset(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:LensOffset", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__LensOffset * SOAP_FMAC4 soap_get_tt__LensOffset(struct soap*, tt__LensOffset *, const char*, const char*);

#ifndef soap_read_tt__LensOffset
#define soap_read_tt__LensOffset(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__LensOffset(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__LensProjection
#define SOAP_TYPE_tt__LensProjection (349)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__LensProjection(struct soap*, const char*, int, const tt__LensProjection *, const char*);
SOAP_FMAC3 tt__LensProjection * SOAP_FMAC4 soap_in_tt__LensProjection(struct soap*, const char*, tt__LensProjection *, const char*);
SOAP_FMAC1 tt__LensProjection * SOAP_FMAC2 soap_instantiate_tt__LensProjection(struct soap*, int, const char*, const char*, size_t*);

inline tt__LensProjection * soap_new_tt__LensProjection(struct soap *soap, int n = -1) { return soap_instantiate_tt__LensProjection(soap, n, NULL, NULL, NULL); }

inline tt__LensProjection * soap_new_req_tt__LensProjection(
	struct soap *soap,
	float Angle,
	float Radius)
{	tt__LensProjection *_p = soap_new_tt__LensProjection(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__LensProjection::Angle = Angle;
		_p->tt__LensProjection::Radius = Radius;
	}
	return _p;
}

inline tt__LensProjection * soap_new_set_tt__LensProjection(
	struct soap *soap,
	float Angle,
	float Radius,
	float *Transmittance)
{	tt__LensProjection *_p = soap_new_tt__LensProjection(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__LensProjection::Angle = Angle;
		_p->tt__LensProjection::Radius = Radius;
		_p->tt__LensProjection::Transmittance = Transmittance;
	}
	return _p;
}

#ifndef soap_write_tt__LensProjection
#define soap_write_tt__LensProjection(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:LensProjection", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__LensProjection * SOAP_FMAC4 soap_get_tt__LensProjection(struct soap*, tt__LensProjection *, const char*, const char*);

#ifndef soap_read_tt__LensProjection
#define soap_read_tt__LensProjection(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__LensProjection(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__RotateExtension
#define SOAP_TYPE_tt__RotateExtension (348)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__RotateExtension(struct soap*, const char*, int, const tt__RotateExtension *, const char*);
SOAP_FMAC3 tt__RotateExtension * SOAP_FMAC4 soap_in_tt__RotateExtension(struct soap*, const char*, tt__RotateExtension *, const char*);
SOAP_FMAC1 tt__RotateExtension * SOAP_FMAC2 soap_instantiate_tt__RotateExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__RotateExtension * soap_new_tt__RotateExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__RotateExtension(soap, n, NULL, NULL, NULL); }

inline tt__RotateExtension * soap_new_req_tt__RotateExtension(
	struct soap *soap)
{	tt__RotateExtension *_p = soap_new_tt__RotateExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__RotateExtension * soap_new_set_tt__RotateExtension(
	struct soap *soap)
{	tt__RotateExtension *_p = soap_new_tt__RotateExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__RotateExtension
#define soap_write_tt__RotateExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:RotateExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RotateExtension * SOAP_FMAC4 soap_get_tt__RotateExtension(struct soap*, tt__RotateExtension *, const char*, const char*);

#ifndef soap_read_tt__RotateExtension
#define soap_read_tt__RotateExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__RotateExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Rotate
#define SOAP_TYPE_tt__Rotate (347)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Rotate(struct soap*, const char*, int, const tt__Rotate *, const char*);
SOAP_FMAC3 tt__Rotate * SOAP_FMAC4 soap_in_tt__Rotate(struct soap*, const char*, tt__Rotate *, const char*);
SOAP_FMAC1 tt__Rotate * SOAP_FMAC2 soap_instantiate_tt__Rotate(struct soap*, int, const char*, const char*, size_t*);

inline tt__Rotate * soap_new_tt__Rotate(struct soap *soap, int n = -1) { return soap_instantiate_tt__Rotate(soap, n, NULL, NULL, NULL); }

inline tt__Rotate * soap_new_req_tt__Rotate(
	struct soap *soap,
	enum tt__RotateMode Mode)
{	tt__Rotate *_p = soap_new_tt__Rotate(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Rotate::Mode = Mode;
	}
	return _p;
}

inline tt__Rotate * soap_new_set_tt__Rotate(
	struct soap *soap,
	enum tt__RotateMode Mode,
	int *Degree,
	tt__RotateExtension *Extension)
{	tt__Rotate *_p = soap_new_tt__Rotate(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Rotate::Mode = Mode;
		_p->tt__Rotate::Degree = Degree;
		_p->tt__Rotate::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__Rotate
#define soap_write_tt__Rotate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Rotate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Rotate * SOAP_FMAC4 soap_get_tt__Rotate(struct soap*, tt__Rotate *, const char*, const char*);

#ifndef soap_read_tt__Rotate
#define soap_read_tt__Rotate(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Rotate(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoSourceConfigurationExtension2
#define SOAP_TYPE_tt__VideoSourceConfigurationExtension2 (346)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoSourceConfigurationExtension2(struct soap*, const char*, int, const tt__VideoSourceConfigurationExtension2 *, const char*);
SOAP_FMAC3 tt__VideoSourceConfigurationExtension2 * SOAP_FMAC4 soap_in_tt__VideoSourceConfigurationExtension2(struct soap*, const char*, tt__VideoSourceConfigurationExtension2 *, const char*);
SOAP_FMAC1 tt__VideoSourceConfigurationExtension2 * SOAP_FMAC2 soap_instantiate_tt__VideoSourceConfigurationExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoSourceConfigurationExtension2 * soap_new_tt__VideoSourceConfigurationExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoSourceConfigurationExtension2(soap, n, NULL, NULL, NULL); }

inline tt__VideoSourceConfigurationExtension2 * soap_new_req_tt__VideoSourceConfigurationExtension2(
	struct soap *soap)
{	tt__VideoSourceConfigurationExtension2 *_p = soap_new_tt__VideoSourceConfigurationExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__VideoSourceConfigurationExtension2 * soap_new_set_tt__VideoSourceConfigurationExtension2(
	struct soap *soap,
	const std::vector<tt__LensDescription *> & LensDescription,
	tt__SceneOrientation *SceneOrientation)
{	tt__VideoSourceConfigurationExtension2 *_p = soap_new_tt__VideoSourceConfigurationExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoSourceConfigurationExtension2::LensDescription = LensDescription;
		_p->tt__VideoSourceConfigurationExtension2::SceneOrientation = SceneOrientation;
	}
	return _p;
}

#ifndef soap_write_tt__VideoSourceConfigurationExtension2
#define soap_write_tt__VideoSourceConfigurationExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:VideoSourceConfigurationExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceConfigurationExtension2 * SOAP_FMAC4 soap_get_tt__VideoSourceConfigurationExtension2(struct soap*, tt__VideoSourceConfigurationExtension2 *, const char*, const char*);

#ifndef soap_read_tt__VideoSourceConfigurationExtension2
#define soap_read_tt__VideoSourceConfigurationExtension2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoSourceConfigurationExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoSourceConfigurationExtension
#define SOAP_TYPE_tt__VideoSourceConfigurationExtension (345)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoSourceConfigurationExtension(struct soap*, const char*, int, const tt__VideoSourceConfigurationExtension *, const char*);
SOAP_FMAC3 tt__VideoSourceConfigurationExtension * SOAP_FMAC4 soap_in_tt__VideoSourceConfigurationExtension(struct soap*, const char*, tt__VideoSourceConfigurationExtension *, const char*);
SOAP_FMAC1 tt__VideoSourceConfigurationExtension * SOAP_FMAC2 soap_instantiate_tt__VideoSourceConfigurationExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoSourceConfigurationExtension * soap_new_tt__VideoSourceConfigurationExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoSourceConfigurationExtension(soap, n, NULL, NULL, NULL); }

inline tt__VideoSourceConfigurationExtension * soap_new_req_tt__VideoSourceConfigurationExtension(
	struct soap *soap)
{	tt__VideoSourceConfigurationExtension *_p = soap_new_tt__VideoSourceConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__VideoSourceConfigurationExtension * soap_new_set_tt__VideoSourceConfigurationExtension(
	struct soap *soap,
	tt__Rotate *Rotate,
	tt__VideoSourceConfigurationExtension2 *Extension)
{	tt__VideoSourceConfigurationExtension *_p = soap_new_tt__VideoSourceConfigurationExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoSourceConfigurationExtension::Rotate = Rotate;
		_p->tt__VideoSourceConfigurationExtension::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__VideoSourceConfigurationExtension
#define soap_write_tt__VideoSourceConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:VideoSourceConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceConfigurationExtension * SOAP_FMAC4 soap_get_tt__VideoSourceConfigurationExtension(struct soap*, tt__VideoSourceConfigurationExtension *, const char*, const char*);

#ifndef soap_read_tt__VideoSourceConfigurationExtension
#define soap_read_tt__VideoSourceConfigurationExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoSourceConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoSourceConfiguration
#define SOAP_TYPE_tt__VideoSourceConfiguration (344)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoSourceConfiguration(struct soap*, const char*, int, const tt__VideoSourceConfiguration *, const char*);
SOAP_FMAC3 tt__VideoSourceConfiguration * SOAP_FMAC4 soap_in_tt__VideoSourceConfiguration(struct soap*, const char*, tt__VideoSourceConfiguration *, const char*);
SOAP_FMAC1 tt__VideoSourceConfiguration * SOAP_FMAC2 soap_instantiate_tt__VideoSourceConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoSourceConfiguration * soap_new_tt__VideoSourceConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoSourceConfiguration(soap, n, NULL, NULL, NULL); }

inline tt__VideoSourceConfiguration * soap_new_req_tt__VideoSourceConfiguration(
	struct soap *soap,
	const std::string& SourceToken,
	tt__IntRectangle *Bounds,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__VideoSourceConfiguration *_p = soap_new_tt__VideoSourceConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoSourceConfiguration::SourceToken = SourceToken;
		_p->tt__VideoSourceConfiguration::Bounds = Bounds;
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

inline tt__VideoSourceConfiguration * soap_new_set_tt__VideoSourceConfiguration(
	struct soap *soap,
	const std::string& SourceToken,
	tt__IntRectangle *Bounds,
	tt__VideoSourceConfigurationExtension *Extension,
	std::string *ViewMode,
	const std::string& Name1,
	int UseCount1,
	const std::string& token1)
{	tt__VideoSourceConfiguration *_p = soap_new_tt__VideoSourceConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoSourceConfiguration::SourceToken = SourceToken;
		_p->tt__VideoSourceConfiguration::Bounds = Bounds;
		_p->tt__VideoSourceConfiguration::Extension = Extension;
		_p->tt__VideoSourceConfiguration::ViewMode = ViewMode;
		_p->tt__ConfigurationEntity::Name = Name1;
		_p->tt__ConfigurationEntity::UseCount = UseCount1;
		_p->tt__ConfigurationEntity::token = token1;
	}
	return _p;
}

#ifndef soap_write_tt__VideoSourceConfiguration
#define soap_write_tt__VideoSourceConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:VideoSourceConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceConfiguration * SOAP_FMAC4 soap_get_tt__VideoSourceConfiguration(struct soap*, tt__VideoSourceConfiguration *, const char*, const char*);

#ifndef soap_read_tt__VideoSourceConfiguration
#define soap_read_tt__VideoSourceConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoSourceConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ConfigurationEntity
#define SOAP_TYPE_tt__ConfigurationEntity (343)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ConfigurationEntity(struct soap*, const char*, int, const tt__ConfigurationEntity *, const char*);
SOAP_FMAC3 tt__ConfigurationEntity * SOAP_FMAC4 soap_in_tt__ConfigurationEntity(struct soap*, const char*, tt__ConfigurationEntity *, const char*);
SOAP_FMAC1 tt__ConfigurationEntity * SOAP_FMAC2 soap_instantiate_tt__ConfigurationEntity(struct soap*, int, const char*, const char*, size_t*);

inline tt__ConfigurationEntity * soap_new_tt__ConfigurationEntity(struct soap *soap, int n = -1) { return soap_instantiate_tt__ConfigurationEntity(soap, n, NULL, NULL, NULL); }

inline tt__ConfigurationEntity * soap_new_req_tt__ConfigurationEntity(
	struct soap *soap,
	const std::string& Name,
	int UseCount,
	const std::string& token)
{	tt__ConfigurationEntity *_p = soap_new_tt__ConfigurationEntity(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ConfigurationEntity::Name = Name;
		_p->tt__ConfigurationEntity::UseCount = UseCount;
		_p->tt__ConfigurationEntity::token = token;
	}
	return _p;
}

inline tt__ConfigurationEntity * soap_new_set_tt__ConfigurationEntity(
	struct soap *soap,
	const std::string& Name,
	int UseCount,
	const std::string& token)
{	tt__ConfigurationEntity *_p = soap_new_tt__ConfigurationEntity(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ConfigurationEntity::Name = Name;
		_p->tt__ConfigurationEntity::UseCount = UseCount;
		_p->tt__ConfigurationEntity::token = token;
	}
	return _p;
}

#ifndef soap_write_tt__ConfigurationEntity
#define soap_write_tt__ConfigurationEntity(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ConfigurationEntity", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ConfigurationEntity * SOAP_FMAC4 soap_get_tt__ConfigurationEntity(struct soap*, tt__ConfigurationEntity *, const char*, const char*);

#ifndef soap_read_tt__ConfigurationEntity
#define soap_read_tt__ConfigurationEntity(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ConfigurationEntity(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ProfileExtension2
#define SOAP_TYPE_tt__ProfileExtension2 (342)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ProfileExtension2(struct soap*, const char*, int, const tt__ProfileExtension2 *, const char*);
SOAP_FMAC3 tt__ProfileExtension2 * SOAP_FMAC4 soap_in_tt__ProfileExtension2(struct soap*, const char*, tt__ProfileExtension2 *, const char*);
SOAP_FMAC1 tt__ProfileExtension2 * SOAP_FMAC2 soap_instantiate_tt__ProfileExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__ProfileExtension2 * soap_new_tt__ProfileExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__ProfileExtension2(soap, n, NULL, NULL, NULL); }

inline tt__ProfileExtension2 * soap_new_req_tt__ProfileExtension2(
	struct soap *soap)
{	tt__ProfileExtension2 *_p = soap_new_tt__ProfileExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ProfileExtension2 * soap_new_set_tt__ProfileExtension2(
	struct soap *soap)
{	tt__ProfileExtension2 *_p = soap_new_tt__ProfileExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__ProfileExtension2
#define soap_write_tt__ProfileExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ProfileExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ProfileExtension2 * SOAP_FMAC4 soap_get_tt__ProfileExtension2(struct soap*, tt__ProfileExtension2 *, const char*, const char*);

#ifndef soap_read_tt__ProfileExtension2
#define soap_read_tt__ProfileExtension2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ProfileExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__ProfileExtension
#define SOAP_TYPE_tt__ProfileExtension (341)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__ProfileExtension(struct soap*, const char*, int, const tt__ProfileExtension *, const char*);
SOAP_FMAC3 tt__ProfileExtension * SOAP_FMAC4 soap_in_tt__ProfileExtension(struct soap*, const char*, tt__ProfileExtension *, const char*);
SOAP_FMAC1 tt__ProfileExtension * SOAP_FMAC2 soap_instantiate_tt__ProfileExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__ProfileExtension * soap_new_tt__ProfileExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__ProfileExtension(soap, n, NULL, NULL, NULL); }

inline tt__ProfileExtension * soap_new_req_tt__ProfileExtension(
	struct soap *soap)
{	tt__ProfileExtension *_p = soap_new_tt__ProfileExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__ProfileExtension * soap_new_set_tt__ProfileExtension(
	struct soap *soap,
	tt__AudioOutputConfiguration *AudioOutputConfiguration,
	tt__AudioDecoderConfiguration *AudioDecoderConfiguration,
	tt__ProfileExtension2 *Extension)
{	tt__ProfileExtension *_p = soap_new_tt__ProfileExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__ProfileExtension::AudioOutputConfiguration = AudioOutputConfiguration;
		_p->tt__ProfileExtension::AudioDecoderConfiguration = AudioDecoderConfiguration;
		_p->tt__ProfileExtension::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__ProfileExtension
#define soap_write_tt__ProfileExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:ProfileExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ProfileExtension * SOAP_FMAC4 soap_get_tt__ProfileExtension(struct soap*, tt__ProfileExtension *, const char*, const char*);

#ifndef soap_read_tt__ProfileExtension
#define soap_read_tt__ProfileExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__ProfileExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__Profile
#define SOAP_TYPE_tt__Profile (340)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__Profile(struct soap*, const char*, int, const tt__Profile *, const char*);
SOAP_FMAC3 tt__Profile * SOAP_FMAC4 soap_in_tt__Profile(struct soap*, const char*, tt__Profile *, const char*);
SOAP_FMAC1 tt__Profile * SOAP_FMAC2 soap_instantiate_tt__Profile(struct soap*, int, const char*, const char*, size_t*);

inline tt__Profile * soap_new_tt__Profile(struct soap *soap, int n = -1) { return soap_instantiate_tt__Profile(soap, n, NULL, NULL, NULL); }

inline tt__Profile * soap_new_req_tt__Profile(
	struct soap *soap,
	const std::string& Name,
	const std::string& token)
{	tt__Profile *_p = soap_new_tt__Profile(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Profile::Name = Name;
		_p->tt__Profile::token = token;
	}
	return _p;
}

inline tt__Profile * soap_new_set_tt__Profile(
	struct soap *soap,
	const std::string& Name,
	tt__VideoSourceConfiguration *VideoSourceConfiguration,
	tt__AudioSourceConfiguration *AudioSourceConfiguration,
	tt__VideoEncoderConfiguration *VideoEncoderConfiguration,
	tt__AudioEncoderConfiguration *AudioEncoderConfiguration,
	tt__VideoAnalyticsConfiguration *VideoAnalyticsConfiguration,
	tt__PTZConfiguration *PTZConfiguration,
	tt__MetadataConfiguration *MetadataConfiguration,
	tt__ProfileExtension *Extension,
	const std::string& token,
	bool *fixed)
{	tt__Profile *_p = soap_new_tt__Profile(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__Profile::Name = Name;
		_p->tt__Profile::VideoSourceConfiguration = VideoSourceConfiguration;
		_p->tt__Profile::AudioSourceConfiguration = AudioSourceConfiguration;
		_p->tt__Profile::VideoEncoderConfiguration = VideoEncoderConfiguration;
		_p->tt__Profile::AudioEncoderConfiguration = AudioEncoderConfiguration;
		_p->tt__Profile::VideoAnalyticsConfiguration = VideoAnalyticsConfiguration;
		_p->tt__Profile::PTZConfiguration = PTZConfiguration;
		_p->tt__Profile::MetadataConfiguration = MetadataConfiguration;
		_p->tt__Profile::Extension = Extension;
		_p->tt__Profile::token = token;
		_p->tt__Profile::fixed = fixed;
	}
	return _p;
}

#ifndef soap_write_tt__Profile
#define soap_write_tt__Profile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:Profile", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Profile * SOAP_FMAC4 soap_get_tt__Profile(struct soap*, tt__Profile *, const char*, const char*);

#ifndef soap_read_tt__Profile
#define soap_read_tt__Profile(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__Profile(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AudioSource
#define SOAP_TYPE_tt__AudioSource (339)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AudioSource(struct soap*, const char*, int, const tt__AudioSource *, const char*);
SOAP_FMAC3 tt__AudioSource * SOAP_FMAC4 soap_in_tt__AudioSource(struct soap*, const char*, tt__AudioSource *, const char*);
SOAP_FMAC1 tt__AudioSource * SOAP_FMAC2 soap_instantiate_tt__AudioSource(struct soap*, int, const char*, const char*, size_t*);

inline tt__AudioSource * soap_new_tt__AudioSource(struct soap *soap, int n = -1) { return soap_instantiate_tt__AudioSource(soap, n, NULL, NULL, NULL); }

inline tt__AudioSource * soap_new_req_tt__AudioSource(
	struct soap *soap,
	int Channels,
	const std::string& token1)
{	tt__AudioSource *_p = soap_new_tt__AudioSource(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AudioSource::Channels = Channels;
		_p->tt__DeviceEntity::token = token1;
	}
	return _p;
}

inline tt__AudioSource * soap_new_set_tt__AudioSource(
	struct soap *soap,
	int Channels,
	const std::string& token1)
{	tt__AudioSource *_p = soap_new_tt__AudioSource(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__AudioSource::Channels = Channels;
		_p->tt__DeviceEntity::token = token1;
	}
	return _p;
}

#ifndef soap_write_tt__AudioSource
#define soap_write_tt__AudioSource(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AudioSource", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioSource * SOAP_FMAC4 soap_get_tt__AudioSource(struct soap*, tt__AudioSource *, const char*, const char*);

#ifndef soap_read_tt__AudioSource
#define soap_read_tt__AudioSource(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AudioSource(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoSourceExtension2
#define SOAP_TYPE_tt__VideoSourceExtension2 (338)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoSourceExtension2(struct soap*, const char*, int, const tt__VideoSourceExtension2 *, const char*);
SOAP_FMAC3 tt__VideoSourceExtension2 * SOAP_FMAC4 soap_in_tt__VideoSourceExtension2(struct soap*, const char*, tt__VideoSourceExtension2 *, const char*);
SOAP_FMAC1 tt__VideoSourceExtension2 * SOAP_FMAC2 soap_instantiate_tt__VideoSourceExtension2(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoSourceExtension2 * soap_new_tt__VideoSourceExtension2(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoSourceExtension2(soap, n, NULL, NULL, NULL); }

inline tt__VideoSourceExtension2 * soap_new_req_tt__VideoSourceExtension2(
	struct soap *soap)
{	tt__VideoSourceExtension2 *_p = soap_new_tt__VideoSourceExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__VideoSourceExtension2 * soap_new_set_tt__VideoSourceExtension2(
	struct soap *soap)
{	tt__VideoSourceExtension2 *_p = soap_new_tt__VideoSourceExtension2(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__VideoSourceExtension2
#define soap_write_tt__VideoSourceExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:VideoSourceExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceExtension2 * SOAP_FMAC4 soap_get_tt__VideoSourceExtension2(struct soap*, tt__VideoSourceExtension2 *, const char*, const char*);

#ifndef soap_read_tt__VideoSourceExtension2
#define soap_read_tt__VideoSourceExtension2(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoSourceExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoSourceExtension
#define SOAP_TYPE_tt__VideoSourceExtension (337)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoSourceExtension(struct soap*, const char*, int, const tt__VideoSourceExtension *, const char*);
SOAP_FMAC3 tt__VideoSourceExtension * SOAP_FMAC4 soap_in_tt__VideoSourceExtension(struct soap*, const char*, tt__VideoSourceExtension *, const char*);
SOAP_FMAC1 tt__VideoSourceExtension * SOAP_FMAC2 soap_instantiate_tt__VideoSourceExtension(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoSourceExtension * soap_new_tt__VideoSourceExtension(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoSourceExtension(soap, n, NULL, NULL, NULL); }

inline tt__VideoSourceExtension * soap_new_req_tt__VideoSourceExtension(
	struct soap *soap)
{	tt__VideoSourceExtension *_p = soap_new_tt__VideoSourceExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__VideoSourceExtension * soap_new_set_tt__VideoSourceExtension(
	struct soap *soap,
	tt__ImagingSettings20 *Imaging,
	tt__VideoSourceExtension2 *Extension)
{	tt__VideoSourceExtension *_p = soap_new_tt__VideoSourceExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoSourceExtension::Imaging = Imaging;
		_p->tt__VideoSourceExtension::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tt__VideoSourceExtension
#define soap_write_tt__VideoSourceExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:VideoSourceExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceExtension * SOAP_FMAC4 soap_get_tt__VideoSourceExtension(struct soap*, tt__VideoSourceExtension *, const char*, const char*);

#ifndef soap_read_tt__VideoSourceExtension
#define soap_read_tt__VideoSourceExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoSourceExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__VideoSource
#define SOAP_TYPE_tt__VideoSource (336)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__VideoSource(struct soap*, const char*, int, const tt__VideoSource *, const char*);
SOAP_FMAC3 tt__VideoSource * SOAP_FMAC4 soap_in_tt__VideoSource(struct soap*, const char*, tt__VideoSource *, const char*);
SOAP_FMAC1 tt__VideoSource * SOAP_FMAC2 soap_instantiate_tt__VideoSource(struct soap*, int, const char*, const char*, size_t*);

inline tt__VideoSource * soap_new_tt__VideoSource(struct soap *soap, int n = -1) { return soap_instantiate_tt__VideoSource(soap, n, NULL, NULL, NULL); }

inline tt__VideoSource * soap_new_req_tt__VideoSource(
	struct soap *soap,
	float Framerate,
	tt__VideoResolution *Resolution,
	const std::string& token1)
{	tt__VideoSource *_p = soap_new_tt__VideoSource(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoSource::Framerate = Framerate;
		_p->tt__VideoSource::Resolution = Resolution;
		_p->tt__DeviceEntity::token = token1;
	}
	return _p;
}

inline tt__VideoSource * soap_new_set_tt__VideoSource(
	struct soap *soap,
	float Framerate,
	tt__VideoResolution *Resolution,
	tt__ImagingSettings *Imaging,
	tt__VideoSourceExtension *Extension,
	const std::string& token1)
{	tt__VideoSource *_p = soap_new_tt__VideoSource(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__VideoSource::Framerate = Framerate;
		_p->tt__VideoSource::Resolution = Resolution;
		_p->tt__VideoSource::Imaging = Imaging;
		_p->tt__VideoSource::Extension = Extension;
		_p->tt__DeviceEntity::token = token1;
	}
	return _p;
}

#ifndef soap_write_tt__VideoSource
#define soap_write_tt__VideoSource(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:VideoSource", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSource * SOAP_FMAC4 soap_get_tt__VideoSource(struct soap*, tt__VideoSource *, const char*, const char*);

#ifndef soap_read_tt__VideoSource
#define soap_read_tt__VideoSource(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__VideoSource(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__AnyHolder
#define SOAP_TYPE_tt__AnyHolder (335)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__AnyHolder(struct soap*, const char*, int, const tt__AnyHolder *, const char*);
SOAP_FMAC3 tt__AnyHolder * SOAP_FMAC4 soap_in_tt__AnyHolder(struct soap*, const char*, tt__AnyHolder *, const char*);
SOAP_FMAC1 tt__AnyHolder * SOAP_FMAC2 soap_instantiate_tt__AnyHolder(struct soap*, int, const char*, const char*, size_t*);

inline tt__AnyHolder * soap_new_tt__AnyHolder(struct soap *soap, int n = -1) { return soap_instantiate_tt__AnyHolder(soap, n, NULL, NULL, NULL); }

inline tt__AnyHolder * soap_new_req_tt__AnyHolder(
	struct soap *soap)
{	tt__AnyHolder *_p = soap_new_tt__AnyHolder(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__AnyHolder * soap_new_set_tt__AnyHolder(
	struct soap *soap)
{	tt__AnyHolder *_p = soap_new_tt__AnyHolder(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tt__AnyHolder
#define soap_write_tt__AnyHolder(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:AnyHolder", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnyHolder * SOAP_FMAC4 soap_get_tt__AnyHolder(struct soap*, tt__AnyHolder *, const char*, const char*);

#ifndef soap_read_tt__AnyHolder
#define soap_read_tt__AnyHolder(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__AnyHolder(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__FloatList
#define SOAP_TYPE_tt__FloatList (334)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FloatList(struct soap*, const char*, int, const tt__FloatList *, const char*);
SOAP_FMAC3 tt__FloatList * SOAP_FMAC4 soap_in_tt__FloatList(struct soap*, const char*, tt__FloatList *, const char*);
SOAP_FMAC1 tt__FloatList * SOAP_FMAC2 soap_instantiate_tt__FloatList(struct soap*, int, const char*, const char*, size_t*);

inline tt__FloatList * soap_new_tt__FloatList(struct soap *soap, int n = -1) { return soap_instantiate_tt__FloatList(soap, n, NULL, NULL, NULL); }

inline tt__FloatList * soap_new_req_tt__FloatList(
	struct soap *soap)
{	tt__FloatList *_p = soap_new_tt__FloatList(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__FloatList * soap_new_set_tt__FloatList(
	struct soap *soap,
	const std::vector<float> & Items)
{	tt__FloatList *_p = soap_new_tt__FloatList(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FloatList::Items = Items;
	}
	return _p;
}

#ifndef soap_write_tt__FloatList
#define soap_write_tt__FloatList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:FloatList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FloatList * SOAP_FMAC4 soap_get_tt__FloatList(struct soap*, tt__FloatList *, const char*, const char*);

#ifndef soap_read_tt__FloatList
#define soap_read_tt__FloatList(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__FloatList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IntList
#define SOAP_TYPE_tt__IntList (333)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IntList(struct soap*, const char*, int, const tt__IntList *, const char*);
SOAP_FMAC3 tt__IntList * SOAP_FMAC4 soap_in_tt__IntList(struct soap*, const char*, tt__IntList *, const char*);
SOAP_FMAC1 tt__IntList * SOAP_FMAC2 soap_instantiate_tt__IntList(struct soap*, int, const char*, const char*, size_t*);

inline tt__IntList * soap_new_tt__IntList(struct soap *soap, int n = -1) { return soap_instantiate_tt__IntList(soap, n, NULL, NULL, NULL); }

inline tt__IntList * soap_new_req_tt__IntList(
	struct soap *soap)
{	tt__IntList *_p = soap_new_tt__IntList(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tt__IntList * soap_new_set_tt__IntList(
	struct soap *soap,
	const std::vector<int> & Items)
{	tt__IntList *_p = soap_new_tt__IntList(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__IntList::Items = Items;
	}
	return _p;
}

#ifndef soap_write_tt__IntList
#define soap_write_tt__IntList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:IntList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IntList * SOAP_FMAC4 soap_get_tt__IntList(struct soap*, tt__IntList *, const char*, const char*);

#ifndef soap_read_tt__IntList
#define soap_read_tt__IntList(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IntList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__DurationRange
#define SOAP_TYPE_tt__DurationRange (332)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DurationRange(struct soap*, const char*, int, const tt__DurationRange *, const char*);
SOAP_FMAC3 tt__DurationRange * SOAP_FMAC4 soap_in_tt__DurationRange(struct soap*, const char*, tt__DurationRange *, const char*);
SOAP_FMAC1 tt__DurationRange * SOAP_FMAC2 soap_instantiate_tt__DurationRange(struct soap*, int, const char*, const char*, size_t*);

inline tt__DurationRange * soap_new_tt__DurationRange(struct soap *soap, int n = -1) { return soap_instantiate_tt__DurationRange(soap, n, NULL, NULL, NULL); }

inline tt__DurationRange * soap_new_req_tt__DurationRange(
	struct soap *soap,
	LONG64 Min,
	LONG64 Max)
{	tt__DurationRange *_p = soap_new_tt__DurationRange(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__DurationRange::Min = Min;
		_p->tt__DurationRange::Max = Max;
	}
	return _p;
}

inline tt__DurationRange * soap_new_set_tt__DurationRange(
	struct soap *soap,
	LONG64 Min,
	LONG64 Max)
{	tt__DurationRange *_p = soap_new_tt__DurationRange(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__DurationRange::Min = Min;
		_p->tt__DurationRange::Max = Max;
	}
	return _p;
}

#ifndef soap_write_tt__DurationRange
#define soap_write_tt__DurationRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:DurationRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DurationRange * SOAP_FMAC4 soap_get_tt__DurationRange(struct soap*, tt__DurationRange *, const char*, const char*);

#ifndef soap_read_tt__DurationRange
#define soap_read_tt__DurationRange(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__DurationRange(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__FloatRange
#define SOAP_TYPE_tt__FloatRange (331)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__FloatRange(struct soap*, const char*, int, const tt__FloatRange *, const char*);
SOAP_FMAC3 tt__FloatRange * SOAP_FMAC4 soap_in_tt__FloatRange(struct soap*, const char*, tt__FloatRange *, const char*);
SOAP_FMAC1 tt__FloatRange * SOAP_FMAC2 soap_instantiate_tt__FloatRange(struct soap*, int, const char*, const char*, size_t*);

inline tt__FloatRange * soap_new_tt__FloatRange(struct soap *soap, int n = -1) { return soap_instantiate_tt__FloatRange(soap, n, NULL, NULL, NULL); }

inline tt__FloatRange * soap_new_req_tt__FloatRange(
	struct soap *soap,
	float Min,
	float Max)
{	tt__FloatRange *_p = soap_new_tt__FloatRange(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FloatRange::Min = Min;
		_p->tt__FloatRange::Max = Max;
	}
	return _p;
}

inline tt__FloatRange * soap_new_set_tt__FloatRange(
	struct soap *soap,
	float Min,
	float Max)
{	tt__FloatRange *_p = soap_new_tt__FloatRange(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__FloatRange::Min = Min;
		_p->tt__FloatRange::Max = Max;
	}
	return _p;
}

#ifndef soap_write_tt__FloatRange
#define soap_write_tt__FloatRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:FloatRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FloatRange * SOAP_FMAC4 soap_get_tt__FloatRange(struct soap*, tt__FloatRange *, const char*, const char*);

#ifndef soap_read_tt__FloatRange
#define soap_read_tt__FloatRange(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__FloatRange(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IntRange
#define SOAP_TYPE_tt__IntRange (330)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IntRange(struct soap*, const char*, int, const tt__IntRange *, const char*);
SOAP_FMAC3 tt__IntRange * SOAP_FMAC4 soap_in_tt__IntRange(struct soap*, const char*, tt__IntRange *, const char*);
SOAP_FMAC1 tt__IntRange * SOAP_FMAC2 soap_instantiate_tt__IntRange(struct soap*, int, const char*, const char*, size_t*);

inline tt__IntRange * soap_new_tt__IntRange(struct soap *soap, int n = -1) { return soap_instantiate_tt__IntRange(soap, n, NULL, NULL, NULL); }

inline tt__IntRange * soap_new_req_tt__IntRange(
	struct soap *soap,
	int Min,
	int Max)
{	tt__IntRange *_p = soap_new_tt__IntRange(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__IntRange::Min = Min;
		_p->tt__IntRange::Max = Max;
	}
	return _p;
}

inline tt__IntRange * soap_new_set_tt__IntRange(
	struct soap *soap,
	int Min,
	int Max)
{	tt__IntRange *_p = soap_new_tt__IntRange(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__IntRange::Min = Min;
		_p->tt__IntRange::Max = Max;
	}
	return _p;
}

#ifndef soap_write_tt__IntRange
#define soap_write_tt__IntRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:IntRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IntRange * SOAP_FMAC4 soap_get_tt__IntRange(struct soap*, tt__IntRange *, const char*, const char*);

#ifndef soap_read_tt__IntRange
#define soap_read_tt__IntRange(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IntRange(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IntRectangleRange
#define SOAP_TYPE_tt__IntRectangleRange (329)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IntRectangleRange(struct soap*, const char*, int, const tt__IntRectangleRange *, const char*);
SOAP_FMAC3 tt__IntRectangleRange * SOAP_FMAC4 soap_in_tt__IntRectangleRange(struct soap*, const char*, tt__IntRectangleRange *, const char*);
SOAP_FMAC1 tt__IntRectangleRange * SOAP_FMAC2 soap_instantiate_tt__IntRectangleRange(struct soap*, int, const char*, const char*, size_t*);

inline tt__IntRectangleRange * soap_new_tt__IntRectangleRange(struct soap *soap, int n = -1) { return soap_instantiate_tt__IntRectangleRange(soap, n, NULL, NULL, NULL); }

inline tt__IntRectangleRange * soap_new_req_tt__IntRectangleRange(
	struct soap *soap,
	tt__IntRange *XRange,
	tt__IntRange *YRange,
	tt__IntRange *WidthRange,
	tt__IntRange *HeightRange)
{	tt__IntRectangleRange *_p = soap_new_tt__IntRectangleRange(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__IntRectangleRange::XRange = XRange;
		_p->tt__IntRectangleRange::YRange = YRange;
		_p->tt__IntRectangleRange::WidthRange = WidthRange;
		_p->tt__IntRectangleRange::HeightRange = HeightRange;
	}
	return _p;
}

inline tt__IntRectangleRange * soap_new_set_tt__IntRectangleRange(
	struct soap *soap,
	tt__IntRange *XRange,
	tt__IntRange *YRange,
	tt__IntRange *WidthRange,
	tt__IntRange *HeightRange)
{	tt__IntRectangleRange *_p = soap_new_tt__IntRectangleRange(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__IntRectangleRange::XRange = XRange;
		_p->tt__IntRectangleRange::YRange = YRange;
		_p->tt__IntRectangleRange::WidthRange = WidthRange;
		_p->tt__IntRectangleRange::HeightRange = HeightRange;
	}
	return _p;
}

#ifndef soap_write_tt__IntRectangleRange
#define soap_write_tt__IntRectangleRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:IntRectangleRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IntRectangleRange * SOAP_FMAC4 soap_get_tt__IntRectangleRange(struct soap*, tt__IntRectangleRange *, const char*, const char*);

#ifndef soap_read_tt__IntRectangleRange
#define soap_read_tt__IntRectangleRange(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IntRectangleRange(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__IntRectangle
#define SOAP_TYPE_tt__IntRectangle (328)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__IntRectangle(struct soap*, const char*, int, const tt__IntRectangle *, const char*);
SOAP_FMAC3 tt__IntRectangle * SOAP_FMAC4 soap_in_tt__IntRectangle(struct soap*, const char*, tt__IntRectangle *, const char*);
SOAP_FMAC1 tt__IntRectangle * SOAP_FMAC2 soap_instantiate_tt__IntRectangle(struct soap*, int, const char*, const char*, size_t*);

inline tt__IntRectangle * soap_new_tt__IntRectangle(struct soap *soap, int n = -1) { return soap_instantiate_tt__IntRectangle(soap, n, NULL, NULL, NULL); }

inline tt__IntRectangle * soap_new_req_tt__IntRectangle(
	struct soap *soap,
	int x,
	int y,
	int width,
	int height)
{	tt__IntRectangle *_p = soap_new_tt__IntRectangle(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__IntRectangle::x = x;
		_p->tt__IntRectangle::y = y;
		_p->tt__IntRectangle::width = width;
		_p->tt__IntRectangle::height = height;
	}
	return _p;
}

inline tt__IntRectangle * soap_new_set_tt__IntRectangle(
	struct soap *soap,
	int x,
	int y,
	int width,
	int height)
{	tt__IntRectangle *_p = soap_new_tt__IntRectangle(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__IntRectangle::x = x;
		_p->tt__IntRectangle::y = y;
		_p->tt__IntRectangle::width = width;
		_p->tt__IntRectangle::height = height;
	}
	return _p;
}

#ifndef soap_write_tt__IntRectangle
#define soap_write_tt__IntRectangle(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:IntRectangle", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IntRectangle * SOAP_FMAC4 soap_get_tt__IntRectangle(struct soap*, tt__IntRectangle *, const char*, const char*);

#ifndef soap_read_tt__IntRectangle
#define soap_read_tt__IntRectangle(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__IntRectangle(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tt__DeviceEntity
#define SOAP_TYPE_tt__DeviceEntity (327)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tt__DeviceEntity(struct soap*, const char*, int, const tt__DeviceEntity *, const char*);
SOAP_FMAC3 tt__DeviceEntity * SOAP_FMAC4 soap_in_tt__DeviceEntity(struct soap*, const char*, tt__DeviceEntity *, const char*);
SOAP_FMAC1 tt__DeviceEntity * SOAP_FMAC2 soap_instantiate_tt__DeviceEntity(struct soap*, int, const char*, const char*, size_t*);

inline tt__DeviceEntity * soap_new_tt__DeviceEntity(struct soap *soap, int n = -1) { return soap_instantiate_tt__DeviceEntity(soap, n, NULL, NULL, NULL); }

inline tt__DeviceEntity * soap_new_req_tt__DeviceEntity(
	struct soap *soap,
	const std::string& token)
{	tt__DeviceEntity *_p = soap_new_tt__DeviceEntity(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__DeviceEntity::token = token;
	}
	return _p;
}

inline tt__DeviceEntity * soap_new_set_tt__DeviceEntity(
	struct soap *soap,
	const std::string& token)
{	tt__DeviceEntity *_p = soap_new_tt__DeviceEntity(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__DeviceEntity::token = token;
	}
	return _p;
}

#ifndef soap_write_tt__DeviceEntity
#define soap_write_tt__DeviceEntity(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tt:DeviceEntity", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DeviceEntity * SOAP_FMAC4 soap_get_tt__DeviceEntity(struct soap*, tt__DeviceEntity *, const char*, const char*);

#ifndef soap_read_tt__DeviceEntity
#define soap_read_tt__DeviceEntity(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tt__DeviceEntity(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__DeleteGeoLocationResponse
#define SOAP_TYPE__tds__DeleteGeoLocationResponse (326)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__DeleteGeoLocationResponse(struct soap*, const char*, int, const _tds__DeleteGeoLocationResponse *, const char*);
SOAP_FMAC3 _tds__DeleteGeoLocationResponse * SOAP_FMAC4 soap_in__tds__DeleteGeoLocationResponse(struct soap*, const char*, _tds__DeleteGeoLocationResponse *, const char*);
SOAP_FMAC1 _tds__DeleteGeoLocationResponse * SOAP_FMAC2 soap_instantiate__tds__DeleteGeoLocationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__DeleteGeoLocationResponse * soap_new__tds__DeleteGeoLocationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__DeleteGeoLocationResponse(soap, n, NULL, NULL, NULL); }

inline _tds__DeleteGeoLocationResponse * soap_new_req__tds__DeleteGeoLocationResponse(
	struct soap *soap)
{	_tds__DeleteGeoLocationResponse *_p = soap_new__tds__DeleteGeoLocationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__DeleteGeoLocationResponse * soap_new_set__tds__DeleteGeoLocationResponse(
	struct soap *soap)
{	_tds__DeleteGeoLocationResponse *_p = soap_new__tds__DeleteGeoLocationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__DeleteGeoLocationResponse
#define soap_write__tds__DeleteGeoLocationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:DeleteGeoLocationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__DeleteGeoLocationResponse * SOAP_FMAC4 soap_get__tds__DeleteGeoLocationResponse(struct soap*, _tds__DeleteGeoLocationResponse *, const char*, const char*);

#ifndef soap_read__tds__DeleteGeoLocationResponse
#define soap_read__tds__DeleteGeoLocationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__DeleteGeoLocationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__DeleteGeoLocation
#define SOAP_TYPE__tds__DeleteGeoLocation (325)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__DeleteGeoLocation(struct soap*, const char*, int, const _tds__DeleteGeoLocation *, const char*);
SOAP_FMAC3 _tds__DeleteGeoLocation * SOAP_FMAC4 soap_in__tds__DeleteGeoLocation(struct soap*, const char*, _tds__DeleteGeoLocation *, const char*);
SOAP_FMAC1 _tds__DeleteGeoLocation * SOAP_FMAC2 soap_instantiate__tds__DeleteGeoLocation(struct soap*, int, const char*, const char*, size_t*);

inline _tds__DeleteGeoLocation * soap_new__tds__DeleteGeoLocation(struct soap *soap, int n = -1) { return soap_instantiate__tds__DeleteGeoLocation(soap, n, NULL, NULL, NULL); }

inline _tds__DeleteGeoLocation * soap_new_req__tds__DeleteGeoLocation(
	struct soap *soap,
	const std::vector<tt__LocationEntity *> & Location)
{	_tds__DeleteGeoLocation *_p = soap_new__tds__DeleteGeoLocation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__DeleteGeoLocation::Location = Location;
	}
	return _p;
}

inline _tds__DeleteGeoLocation * soap_new_set__tds__DeleteGeoLocation(
	struct soap *soap,
	const std::vector<tt__LocationEntity *> & Location)
{	_tds__DeleteGeoLocation *_p = soap_new__tds__DeleteGeoLocation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__DeleteGeoLocation::Location = Location;
	}
	return _p;
}

#ifndef soap_write__tds__DeleteGeoLocation
#define soap_write__tds__DeleteGeoLocation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:DeleteGeoLocation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__DeleteGeoLocation * SOAP_FMAC4 soap_get__tds__DeleteGeoLocation(struct soap*, _tds__DeleteGeoLocation *, const char*, const char*);

#ifndef soap_read__tds__DeleteGeoLocation
#define soap_read__tds__DeleteGeoLocation(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__DeleteGeoLocation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetGeoLocationResponse
#define SOAP_TYPE__tds__SetGeoLocationResponse (324)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetGeoLocationResponse(struct soap*, const char*, int, const _tds__SetGeoLocationResponse *, const char*);
SOAP_FMAC3 _tds__SetGeoLocationResponse * SOAP_FMAC4 soap_in__tds__SetGeoLocationResponse(struct soap*, const char*, _tds__SetGeoLocationResponse *, const char*);
SOAP_FMAC1 _tds__SetGeoLocationResponse * SOAP_FMAC2 soap_instantiate__tds__SetGeoLocationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetGeoLocationResponse * soap_new__tds__SetGeoLocationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetGeoLocationResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetGeoLocationResponse * soap_new_req__tds__SetGeoLocationResponse(
	struct soap *soap)
{	_tds__SetGeoLocationResponse *_p = soap_new__tds__SetGeoLocationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SetGeoLocationResponse * soap_new_set__tds__SetGeoLocationResponse(
	struct soap *soap)
{	_tds__SetGeoLocationResponse *_p = soap_new__tds__SetGeoLocationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__SetGeoLocationResponse
#define soap_write__tds__SetGeoLocationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetGeoLocationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetGeoLocationResponse * SOAP_FMAC4 soap_get__tds__SetGeoLocationResponse(struct soap*, _tds__SetGeoLocationResponse *, const char*, const char*);

#ifndef soap_read__tds__SetGeoLocationResponse
#define soap_read__tds__SetGeoLocationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetGeoLocationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetGeoLocation
#define SOAP_TYPE__tds__SetGeoLocation (323)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetGeoLocation(struct soap*, const char*, int, const _tds__SetGeoLocation *, const char*);
SOAP_FMAC3 _tds__SetGeoLocation * SOAP_FMAC4 soap_in__tds__SetGeoLocation(struct soap*, const char*, _tds__SetGeoLocation *, const char*);
SOAP_FMAC1 _tds__SetGeoLocation * SOAP_FMAC2 soap_instantiate__tds__SetGeoLocation(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetGeoLocation * soap_new__tds__SetGeoLocation(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetGeoLocation(soap, n, NULL, NULL, NULL); }

inline _tds__SetGeoLocation * soap_new_req__tds__SetGeoLocation(
	struct soap *soap,
	const std::vector<tt__LocationEntity *> & Location)
{	_tds__SetGeoLocation *_p = soap_new__tds__SetGeoLocation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetGeoLocation::Location = Location;
	}
	return _p;
}

inline _tds__SetGeoLocation * soap_new_set__tds__SetGeoLocation(
	struct soap *soap,
	const std::vector<tt__LocationEntity *> & Location)
{	_tds__SetGeoLocation *_p = soap_new__tds__SetGeoLocation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetGeoLocation::Location = Location;
	}
	return _p;
}

#ifndef soap_write__tds__SetGeoLocation
#define soap_write__tds__SetGeoLocation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetGeoLocation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetGeoLocation * SOAP_FMAC4 soap_get__tds__SetGeoLocation(struct soap*, _tds__SetGeoLocation *, const char*, const char*);

#ifndef soap_read__tds__SetGeoLocation
#define soap_read__tds__SetGeoLocation(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetGeoLocation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetGeoLocationResponse
#define SOAP_TYPE__tds__GetGeoLocationResponse (322)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetGeoLocationResponse(struct soap*, const char*, int, const _tds__GetGeoLocationResponse *, const char*);
SOAP_FMAC3 _tds__GetGeoLocationResponse * SOAP_FMAC4 soap_in__tds__GetGeoLocationResponse(struct soap*, const char*, _tds__GetGeoLocationResponse *, const char*);
SOAP_FMAC1 _tds__GetGeoLocationResponse * SOAP_FMAC2 soap_instantiate__tds__GetGeoLocationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetGeoLocationResponse * soap_new__tds__GetGeoLocationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetGeoLocationResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetGeoLocationResponse * soap_new_req__tds__GetGeoLocationResponse(
	struct soap *soap)
{	_tds__GetGeoLocationResponse *_p = soap_new__tds__GetGeoLocationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetGeoLocationResponse * soap_new_set__tds__GetGeoLocationResponse(
	struct soap *soap,
	const std::vector<tt__LocationEntity *> & Location)
{	_tds__GetGeoLocationResponse *_p = soap_new__tds__GetGeoLocationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetGeoLocationResponse::Location = Location;
	}
	return _p;
}

#ifndef soap_write__tds__GetGeoLocationResponse
#define soap_write__tds__GetGeoLocationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetGeoLocationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetGeoLocationResponse * SOAP_FMAC4 soap_get__tds__GetGeoLocationResponse(struct soap*, _tds__GetGeoLocationResponse *, const char*, const char*);

#ifndef soap_read__tds__GetGeoLocationResponse
#define soap_read__tds__GetGeoLocationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetGeoLocationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetGeoLocation
#define SOAP_TYPE__tds__GetGeoLocation (321)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetGeoLocation(struct soap*, const char*, int, const _tds__GetGeoLocation *, const char*);
SOAP_FMAC3 _tds__GetGeoLocation * SOAP_FMAC4 soap_in__tds__GetGeoLocation(struct soap*, const char*, _tds__GetGeoLocation *, const char*);
SOAP_FMAC1 _tds__GetGeoLocation * SOAP_FMAC2 soap_instantiate__tds__GetGeoLocation(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetGeoLocation * soap_new__tds__GetGeoLocation(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetGeoLocation(soap, n, NULL, NULL, NULL); }

inline _tds__GetGeoLocation * soap_new_req__tds__GetGeoLocation(
	struct soap *soap)
{	_tds__GetGeoLocation *_p = soap_new__tds__GetGeoLocation(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetGeoLocation * soap_new_set__tds__GetGeoLocation(
	struct soap *soap)
{	_tds__GetGeoLocation *_p = soap_new__tds__GetGeoLocation(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetGeoLocation
#define soap_write__tds__GetGeoLocation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetGeoLocation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetGeoLocation * SOAP_FMAC4 soap_get__tds__GetGeoLocation(struct soap*, _tds__GetGeoLocation *, const char*, const char*);

#ifndef soap_read__tds__GetGeoLocation
#define soap_read__tds__GetGeoLocation(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetGeoLocation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__DeleteStorageConfigurationResponse
#define SOAP_TYPE__tds__DeleteStorageConfigurationResponse (320)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__DeleteStorageConfigurationResponse(struct soap*, const char*, int, const _tds__DeleteStorageConfigurationResponse *, const char*);
SOAP_FMAC3 _tds__DeleteStorageConfigurationResponse * SOAP_FMAC4 soap_in__tds__DeleteStorageConfigurationResponse(struct soap*, const char*, _tds__DeleteStorageConfigurationResponse *, const char*);
SOAP_FMAC1 _tds__DeleteStorageConfigurationResponse * SOAP_FMAC2 soap_instantiate__tds__DeleteStorageConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__DeleteStorageConfigurationResponse * soap_new__tds__DeleteStorageConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__DeleteStorageConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tds__DeleteStorageConfigurationResponse * soap_new_req__tds__DeleteStorageConfigurationResponse(
	struct soap *soap)
{	_tds__DeleteStorageConfigurationResponse *_p = soap_new__tds__DeleteStorageConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__DeleteStorageConfigurationResponse * soap_new_set__tds__DeleteStorageConfigurationResponse(
	struct soap *soap)
{	_tds__DeleteStorageConfigurationResponse *_p = soap_new__tds__DeleteStorageConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__DeleteStorageConfigurationResponse
#define soap_write__tds__DeleteStorageConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:DeleteStorageConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__DeleteStorageConfigurationResponse * SOAP_FMAC4 soap_get__tds__DeleteStorageConfigurationResponse(struct soap*, _tds__DeleteStorageConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tds__DeleteStorageConfigurationResponse
#define soap_read__tds__DeleteStorageConfigurationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__DeleteStorageConfigurationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__DeleteStorageConfiguration
#define SOAP_TYPE__tds__DeleteStorageConfiguration (319)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__DeleteStorageConfiguration(struct soap*, const char*, int, const _tds__DeleteStorageConfiguration *, const char*);
SOAP_FMAC3 _tds__DeleteStorageConfiguration * SOAP_FMAC4 soap_in__tds__DeleteStorageConfiguration(struct soap*, const char*, _tds__DeleteStorageConfiguration *, const char*);
SOAP_FMAC1 _tds__DeleteStorageConfiguration * SOAP_FMAC2 soap_instantiate__tds__DeleteStorageConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tds__DeleteStorageConfiguration * soap_new__tds__DeleteStorageConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tds__DeleteStorageConfiguration(soap, n, NULL, NULL, NULL); }

inline _tds__DeleteStorageConfiguration * soap_new_req__tds__DeleteStorageConfiguration(
	struct soap *soap,
	const std::string& Token)
{	_tds__DeleteStorageConfiguration *_p = soap_new__tds__DeleteStorageConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__DeleteStorageConfiguration::Token = Token;
	}
	return _p;
}

inline _tds__DeleteStorageConfiguration * soap_new_set__tds__DeleteStorageConfiguration(
	struct soap *soap,
	const std::string& Token)
{	_tds__DeleteStorageConfiguration *_p = soap_new__tds__DeleteStorageConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__DeleteStorageConfiguration::Token = Token;
	}
	return _p;
}

#ifndef soap_write__tds__DeleteStorageConfiguration
#define soap_write__tds__DeleteStorageConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:DeleteStorageConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__DeleteStorageConfiguration * SOAP_FMAC4 soap_get__tds__DeleteStorageConfiguration(struct soap*, _tds__DeleteStorageConfiguration *, const char*, const char*);

#ifndef soap_read__tds__DeleteStorageConfiguration
#define soap_read__tds__DeleteStorageConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__DeleteStorageConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetStorageConfigurationResponse
#define SOAP_TYPE__tds__SetStorageConfigurationResponse (318)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetStorageConfigurationResponse(struct soap*, const char*, int, const _tds__SetStorageConfigurationResponse *, const char*);
SOAP_FMAC3 _tds__SetStorageConfigurationResponse * SOAP_FMAC4 soap_in__tds__SetStorageConfigurationResponse(struct soap*, const char*, _tds__SetStorageConfigurationResponse *, const char*);
SOAP_FMAC1 _tds__SetStorageConfigurationResponse * SOAP_FMAC2 soap_instantiate__tds__SetStorageConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetStorageConfigurationResponse * soap_new__tds__SetStorageConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetStorageConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetStorageConfigurationResponse * soap_new_req__tds__SetStorageConfigurationResponse(
	struct soap *soap)
{	_tds__SetStorageConfigurationResponse *_p = soap_new__tds__SetStorageConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SetStorageConfigurationResponse * soap_new_set__tds__SetStorageConfigurationResponse(
	struct soap *soap)
{	_tds__SetStorageConfigurationResponse *_p = soap_new__tds__SetStorageConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__SetStorageConfigurationResponse
#define soap_write__tds__SetStorageConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetStorageConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetStorageConfigurationResponse * SOAP_FMAC4 soap_get__tds__SetStorageConfigurationResponse(struct soap*, _tds__SetStorageConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tds__SetStorageConfigurationResponse
#define soap_read__tds__SetStorageConfigurationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetStorageConfigurationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetStorageConfiguration
#define SOAP_TYPE__tds__SetStorageConfiguration (317)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetStorageConfiguration(struct soap*, const char*, int, const _tds__SetStorageConfiguration *, const char*);
SOAP_FMAC3 _tds__SetStorageConfiguration * SOAP_FMAC4 soap_in__tds__SetStorageConfiguration(struct soap*, const char*, _tds__SetStorageConfiguration *, const char*);
SOAP_FMAC1 _tds__SetStorageConfiguration * SOAP_FMAC2 soap_instantiate__tds__SetStorageConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetStorageConfiguration * soap_new__tds__SetStorageConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetStorageConfiguration(soap, n, NULL, NULL, NULL); }

inline _tds__SetStorageConfiguration * soap_new_req__tds__SetStorageConfiguration(
	struct soap *soap,
	tds__StorageConfiguration *StorageConfiguration)
{	_tds__SetStorageConfiguration *_p = soap_new__tds__SetStorageConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetStorageConfiguration::StorageConfiguration = StorageConfiguration;
	}
	return _p;
}

inline _tds__SetStorageConfiguration * soap_new_set__tds__SetStorageConfiguration(
	struct soap *soap,
	tds__StorageConfiguration *StorageConfiguration)
{	_tds__SetStorageConfiguration *_p = soap_new__tds__SetStorageConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetStorageConfiguration::StorageConfiguration = StorageConfiguration;
	}
	return _p;
}

#ifndef soap_write__tds__SetStorageConfiguration
#define soap_write__tds__SetStorageConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetStorageConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetStorageConfiguration * SOAP_FMAC4 soap_get__tds__SetStorageConfiguration(struct soap*, _tds__SetStorageConfiguration *, const char*, const char*);

#ifndef soap_read__tds__SetStorageConfiguration
#define soap_read__tds__SetStorageConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetStorageConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetStorageConfigurationResponse
#define SOAP_TYPE__tds__GetStorageConfigurationResponse (316)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetStorageConfigurationResponse(struct soap*, const char*, int, const _tds__GetStorageConfigurationResponse *, const char*);
SOAP_FMAC3 _tds__GetStorageConfigurationResponse * SOAP_FMAC4 soap_in__tds__GetStorageConfigurationResponse(struct soap*, const char*, _tds__GetStorageConfigurationResponse *, const char*);
SOAP_FMAC1 _tds__GetStorageConfigurationResponse * SOAP_FMAC2 soap_instantiate__tds__GetStorageConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetStorageConfigurationResponse * soap_new__tds__GetStorageConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetStorageConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetStorageConfigurationResponse * soap_new_req__tds__GetStorageConfigurationResponse(
	struct soap *soap,
	tds__StorageConfiguration *StorageConfiguration)
{	_tds__GetStorageConfigurationResponse *_p = soap_new__tds__GetStorageConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetStorageConfigurationResponse::StorageConfiguration = StorageConfiguration;
	}
	return _p;
}

inline _tds__GetStorageConfigurationResponse * soap_new_set__tds__GetStorageConfigurationResponse(
	struct soap *soap,
	tds__StorageConfiguration *StorageConfiguration)
{	_tds__GetStorageConfigurationResponse *_p = soap_new__tds__GetStorageConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetStorageConfigurationResponse::StorageConfiguration = StorageConfiguration;
	}
	return _p;
}

#ifndef soap_write__tds__GetStorageConfigurationResponse
#define soap_write__tds__GetStorageConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetStorageConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetStorageConfigurationResponse * SOAP_FMAC4 soap_get__tds__GetStorageConfigurationResponse(struct soap*, _tds__GetStorageConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tds__GetStorageConfigurationResponse
#define soap_read__tds__GetStorageConfigurationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetStorageConfigurationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetStorageConfiguration
#define SOAP_TYPE__tds__GetStorageConfiguration (315)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetStorageConfiguration(struct soap*, const char*, int, const _tds__GetStorageConfiguration *, const char*);
SOAP_FMAC3 _tds__GetStorageConfiguration * SOAP_FMAC4 soap_in__tds__GetStorageConfiguration(struct soap*, const char*, _tds__GetStorageConfiguration *, const char*);
SOAP_FMAC1 _tds__GetStorageConfiguration * SOAP_FMAC2 soap_instantiate__tds__GetStorageConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetStorageConfiguration * soap_new__tds__GetStorageConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetStorageConfiguration(soap, n, NULL, NULL, NULL); }

inline _tds__GetStorageConfiguration * soap_new_req__tds__GetStorageConfiguration(
	struct soap *soap,
	const std::string& Token)
{	_tds__GetStorageConfiguration *_p = soap_new__tds__GetStorageConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetStorageConfiguration::Token = Token;
	}
	return _p;
}

inline _tds__GetStorageConfiguration * soap_new_set__tds__GetStorageConfiguration(
	struct soap *soap,
	const std::string& Token)
{	_tds__GetStorageConfiguration *_p = soap_new__tds__GetStorageConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetStorageConfiguration::Token = Token;
	}
	return _p;
}

#ifndef soap_write__tds__GetStorageConfiguration
#define soap_write__tds__GetStorageConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetStorageConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetStorageConfiguration * SOAP_FMAC4 soap_get__tds__GetStorageConfiguration(struct soap*, _tds__GetStorageConfiguration *, const char*, const char*);

#ifndef soap_read__tds__GetStorageConfiguration
#define soap_read__tds__GetStorageConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetStorageConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__CreateStorageConfigurationResponse
#define SOAP_TYPE__tds__CreateStorageConfigurationResponse (314)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__CreateStorageConfigurationResponse(struct soap*, const char*, int, const _tds__CreateStorageConfigurationResponse *, const char*);
SOAP_FMAC3 _tds__CreateStorageConfigurationResponse * SOAP_FMAC4 soap_in__tds__CreateStorageConfigurationResponse(struct soap*, const char*, _tds__CreateStorageConfigurationResponse *, const char*);
SOAP_FMAC1 _tds__CreateStorageConfigurationResponse * SOAP_FMAC2 soap_instantiate__tds__CreateStorageConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__CreateStorageConfigurationResponse * soap_new__tds__CreateStorageConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__CreateStorageConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tds__CreateStorageConfigurationResponse * soap_new_req__tds__CreateStorageConfigurationResponse(
	struct soap *soap,
	const std::string& Token)
{	_tds__CreateStorageConfigurationResponse *_p = soap_new__tds__CreateStorageConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__CreateStorageConfigurationResponse::Token = Token;
	}
	return _p;
}

inline _tds__CreateStorageConfigurationResponse * soap_new_set__tds__CreateStorageConfigurationResponse(
	struct soap *soap,
	const std::string& Token)
{	_tds__CreateStorageConfigurationResponse *_p = soap_new__tds__CreateStorageConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__CreateStorageConfigurationResponse::Token = Token;
	}
	return _p;
}

#ifndef soap_write__tds__CreateStorageConfigurationResponse
#define soap_write__tds__CreateStorageConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:CreateStorageConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__CreateStorageConfigurationResponse * SOAP_FMAC4 soap_get__tds__CreateStorageConfigurationResponse(struct soap*, _tds__CreateStorageConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tds__CreateStorageConfigurationResponse
#define soap_read__tds__CreateStorageConfigurationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__CreateStorageConfigurationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__CreateStorageConfiguration
#define SOAP_TYPE__tds__CreateStorageConfiguration (313)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__CreateStorageConfiguration(struct soap*, const char*, int, const _tds__CreateStorageConfiguration *, const char*);
SOAP_FMAC3 _tds__CreateStorageConfiguration * SOAP_FMAC4 soap_in__tds__CreateStorageConfiguration(struct soap*, const char*, _tds__CreateStorageConfiguration *, const char*);
SOAP_FMAC1 _tds__CreateStorageConfiguration * SOAP_FMAC2 soap_instantiate__tds__CreateStorageConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tds__CreateStorageConfiguration * soap_new__tds__CreateStorageConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tds__CreateStorageConfiguration(soap, n, NULL, NULL, NULL); }

inline _tds__CreateStorageConfiguration * soap_new_req__tds__CreateStorageConfiguration(
	struct soap *soap,
	tds__StorageConfigurationData *StorageConfiguration)
{	_tds__CreateStorageConfiguration *_p = soap_new__tds__CreateStorageConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__CreateStorageConfiguration::StorageConfiguration = StorageConfiguration;
	}
	return _p;
}

inline _tds__CreateStorageConfiguration * soap_new_set__tds__CreateStorageConfiguration(
	struct soap *soap,
	tds__StorageConfigurationData *StorageConfiguration)
{	_tds__CreateStorageConfiguration *_p = soap_new__tds__CreateStorageConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__CreateStorageConfiguration::StorageConfiguration = StorageConfiguration;
	}
	return _p;
}

#ifndef soap_write__tds__CreateStorageConfiguration
#define soap_write__tds__CreateStorageConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:CreateStorageConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__CreateStorageConfiguration * SOAP_FMAC4 soap_get__tds__CreateStorageConfiguration(struct soap*, _tds__CreateStorageConfiguration *, const char*, const char*);

#ifndef soap_read__tds__CreateStorageConfiguration
#define soap_read__tds__CreateStorageConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__CreateStorageConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetStorageConfigurationsResponse
#define SOAP_TYPE__tds__GetStorageConfigurationsResponse (312)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetStorageConfigurationsResponse(struct soap*, const char*, int, const _tds__GetStorageConfigurationsResponse *, const char*);
SOAP_FMAC3 _tds__GetStorageConfigurationsResponse * SOAP_FMAC4 soap_in__tds__GetStorageConfigurationsResponse(struct soap*, const char*, _tds__GetStorageConfigurationsResponse *, const char*);
SOAP_FMAC1 _tds__GetStorageConfigurationsResponse * SOAP_FMAC2 soap_instantiate__tds__GetStorageConfigurationsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetStorageConfigurationsResponse * soap_new__tds__GetStorageConfigurationsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetStorageConfigurationsResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetStorageConfigurationsResponse * soap_new_req__tds__GetStorageConfigurationsResponse(
	struct soap *soap)
{	_tds__GetStorageConfigurationsResponse *_p = soap_new__tds__GetStorageConfigurationsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetStorageConfigurationsResponse * soap_new_set__tds__GetStorageConfigurationsResponse(
	struct soap *soap,
	const std::vector<tds__StorageConfiguration *> & StorageConfigurations)
{	_tds__GetStorageConfigurationsResponse *_p = soap_new__tds__GetStorageConfigurationsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetStorageConfigurationsResponse::StorageConfigurations = StorageConfigurations;
	}
	return _p;
}

#ifndef soap_write__tds__GetStorageConfigurationsResponse
#define soap_write__tds__GetStorageConfigurationsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetStorageConfigurationsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetStorageConfigurationsResponse * SOAP_FMAC4 soap_get__tds__GetStorageConfigurationsResponse(struct soap*, _tds__GetStorageConfigurationsResponse *, const char*, const char*);

#ifndef soap_read__tds__GetStorageConfigurationsResponse
#define soap_read__tds__GetStorageConfigurationsResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetStorageConfigurationsResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetStorageConfigurations
#define SOAP_TYPE__tds__GetStorageConfigurations (311)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetStorageConfigurations(struct soap*, const char*, int, const _tds__GetStorageConfigurations *, const char*);
SOAP_FMAC3 _tds__GetStorageConfigurations * SOAP_FMAC4 soap_in__tds__GetStorageConfigurations(struct soap*, const char*, _tds__GetStorageConfigurations *, const char*);
SOAP_FMAC1 _tds__GetStorageConfigurations * SOAP_FMAC2 soap_instantiate__tds__GetStorageConfigurations(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetStorageConfigurations * soap_new__tds__GetStorageConfigurations(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetStorageConfigurations(soap, n, NULL, NULL, NULL); }

inline _tds__GetStorageConfigurations * soap_new_req__tds__GetStorageConfigurations(
	struct soap *soap)
{	_tds__GetStorageConfigurations *_p = soap_new__tds__GetStorageConfigurations(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetStorageConfigurations * soap_new_set__tds__GetStorageConfigurations(
	struct soap *soap)
{	_tds__GetStorageConfigurations *_p = soap_new__tds__GetStorageConfigurations(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetStorageConfigurations
#define soap_write__tds__GetStorageConfigurations(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetStorageConfigurations", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetStorageConfigurations * SOAP_FMAC4 soap_get__tds__GetStorageConfigurations(struct soap*, _tds__GetStorageConfigurations *, const char*, const char*);

#ifndef soap_read__tds__GetStorageConfigurations
#define soap_read__tds__GetStorageConfigurations(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetStorageConfigurations(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__StartSystemRestoreResponse
#define SOAP_TYPE__tds__StartSystemRestoreResponse (310)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__StartSystemRestoreResponse(struct soap*, const char*, int, const _tds__StartSystemRestoreResponse *, const char*);
SOAP_FMAC3 _tds__StartSystemRestoreResponse * SOAP_FMAC4 soap_in__tds__StartSystemRestoreResponse(struct soap*, const char*, _tds__StartSystemRestoreResponse *, const char*);
SOAP_FMAC1 _tds__StartSystemRestoreResponse * SOAP_FMAC2 soap_instantiate__tds__StartSystemRestoreResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__StartSystemRestoreResponse * soap_new__tds__StartSystemRestoreResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__StartSystemRestoreResponse(soap, n, NULL, NULL, NULL); }

inline _tds__StartSystemRestoreResponse * soap_new_req__tds__StartSystemRestoreResponse(
	struct soap *soap,
	const std::string& UploadUri,
	LONG64 ExpectedDownTime)
{	_tds__StartSystemRestoreResponse *_p = soap_new__tds__StartSystemRestoreResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__StartSystemRestoreResponse::UploadUri = UploadUri;
		_p->_tds__StartSystemRestoreResponse::ExpectedDownTime = ExpectedDownTime;
	}
	return _p;
}

inline _tds__StartSystemRestoreResponse * soap_new_set__tds__StartSystemRestoreResponse(
	struct soap *soap,
	const std::string& UploadUri,
	LONG64 ExpectedDownTime)
{	_tds__StartSystemRestoreResponse *_p = soap_new__tds__StartSystemRestoreResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__StartSystemRestoreResponse::UploadUri = UploadUri;
		_p->_tds__StartSystemRestoreResponse::ExpectedDownTime = ExpectedDownTime;
	}
	return _p;
}

#ifndef soap_write__tds__StartSystemRestoreResponse
#define soap_write__tds__StartSystemRestoreResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:StartSystemRestoreResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__StartSystemRestoreResponse * SOAP_FMAC4 soap_get__tds__StartSystemRestoreResponse(struct soap*, _tds__StartSystemRestoreResponse *, const char*, const char*);

#ifndef soap_read__tds__StartSystemRestoreResponse
#define soap_read__tds__StartSystemRestoreResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__StartSystemRestoreResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__StartSystemRestore
#define SOAP_TYPE__tds__StartSystemRestore (309)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__StartSystemRestore(struct soap*, const char*, int, const _tds__StartSystemRestore *, const char*);
SOAP_FMAC3 _tds__StartSystemRestore * SOAP_FMAC4 soap_in__tds__StartSystemRestore(struct soap*, const char*, _tds__StartSystemRestore *, const char*);
SOAP_FMAC1 _tds__StartSystemRestore * SOAP_FMAC2 soap_instantiate__tds__StartSystemRestore(struct soap*, int, const char*, const char*, size_t*);

inline _tds__StartSystemRestore * soap_new__tds__StartSystemRestore(struct soap *soap, int n = -1) { return soap_instantiate__tds__StartSystemRestore(soap, n, NULL, NULL, NULL); }

inline _tds__StartSystemRestore * soap_new_req__tds__StartSystemRestore(
	struct soap *soap)
{	_tds__StartSystemRestore *_p = soap_new__tds__StartSystemRestore(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__StartSystemRestore * soap_new_set__tds__StartSystemRestore(
	struct soap *soap)
{	_tds__StartSystemRestore *_p = soap_new__tds__StartSystemRestore(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__StartSystemRestore
#define soap_write__tds__StartSystemRestore(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:StartSystemRestore", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__StartSystemRestore * SOAP_FMAC4 soap_get__tds__StartSystemRestore(struct soap*, _tds__StartSystemRestore *, const char*, const char*);

#ifndef soap_read__tds__StartSystemRestore
#define soap_read__tds__StartSystemRestore(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__StartSystemRestore(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__StartFirmwareUpgradeResponse
#define SOAP_TYPE__tds__StartFirmwareUpgradeResponse (308)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__StartFirmwareUpgradeResponse(struct soap*, const char*, int, const _tds__StartFirmwareUpgradeResponse *, const char*);
SOAP_FMAC3 _tds__StartFirmwareUpgradeResponse * SOAP_FMAC4 soap_in__tds__StartFirmwareUpgradeResponse(struct soap*, const char*, _tds__StartFirmwareUpgradeResponse *, const char*);
SOAP_FMAC1 _tds__StartFirmwareUpgradeResponse * SOAP_FMAC2 soap_instantiate__tds__StartFirmwareUpgradeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__StartFirmwareUpgradeResponse * soap_new__tds__StartFirmwareUpgradeResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__StartFirmwareUpgradeResponse(soap, n, NULL, NULL, NULL); }

inline _tds__StartFirmwareUpgradeResponse * soap_new_req__tds__StartFirmwareUpgradeResponse(
	struct soap *soap,
	const std::string& UploadUri,
	LONG64 UploadDelay,
	LONG64 ExpectedDownTime)
{	_tds__StartFirmwareUpgradeResponse *_p = soap_new__tds__StartFirmwareUpgradeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__StartFirmwareUpgradeResponse::UploadUri = UploadUri;
		_p->_tds__StartFirmwareUpgradeResponse::UploadDelay = UploadDelay;
		_p->_tds__StartFirmwareUpgradeResponse::ExpectedDownTime = ExpectedDownTime;
	}
	return _p;
}

inline _tds__StartFirmwareUpgradeResponse * soap_new_set__tds__StartFirmwareUpgradeResponse(
	struct soap *soap,
	const std::string& UploadUri,
	LONG64 UploadDelay,
	LONG64 ExpectedDownTime)
{	_tds__StartFirmwareUpgradeResponse *_p = soap_new__tds__StartFirmwareUpgradeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__StartFirmwareUpgradeResponse::UploadUri = UploadUri;
		_p->_tds__StartFirmwareUpgradeResponse::UploadDelay = UploadDelay;
		_p->_tds__StartFirmwareUpgradeResponse::ExpectedDownTime = ExpectedDownTime;
	}
	return _p;
}

#ifndef soap_write__tds__StartFirmwareUpgradeResponse
#define soap_write__tds__StartFirmwareUpgradeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:StartFirmwareUpgradeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__StartFirmwareUpgradeResponse * SOAP_FMAC4 soap_get__tds__StartFirmwareUpgradeResponse(struct soap*, _tds__StartFirmwareUpgradeResponse *, const char*, const char*);

#ifndef soap_read__tds__StartFirmwareUpgradeResponse
#define soap_read__tds__StartFirmwareUpgradeResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__StartFirmwareUpgradeResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__StartFirmwareUpgrade
#define SOAP_TYPE__tds__StartFirmwareUpgrade (307)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__StartFirmwareUpgrade(struct soap*, const char*, int, const _tds__StartFirmwareUpgrade *, const char*);
SOAP_FMAC3 _tds__StartFirmwareUpgrade * SOAP_FMAC4 soap_in__tds__StartFirmwareUpgrade(struct soap*, const char*, _tds__StartFirmwareUpgrade *, const char*);
SOAP_FMAC1 _tds__StartFirmwareUpgrade * SOAP_FMAC2 soap_instantiate__tds__StartFirmwareUpgrade(struct soap*, int, const char*, const char*, size_t*);

inline _tds__StartFirmwareUpgrade * soap_new__tds__StartFirmwareUpgrade(struct soap *soap, int n = -1) { return soap_instantiate__tds__StartFirmwareUpgrade(soap, n, NULL, NULL, NULL); }

inline _tds__StartFirmwareUpgrade * soap_new_req__tds__StartFirmwareUpgrade(
	struct soap *soap)
{	_tds__StartFirmwareUpgrade *_p = soap_new__tds__StartFirmwareUpgrade(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__StartFirmwareUpgrade * soap_new_set__tds__StartFirmwareUpgrade(
	struct soap *soap)
{	_tds__StartFirmwareUpgrade *_p = soap_new__tds__StartFirmwareUpgrade(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__StartFirmwareUpgrade
#define soap_write__tds__StartFirmwareUpgrade(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:StartFirmwareUpgrade", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__StartFirmwareUpgrade * SOAP_FMAC4 soap_get__tds__StartFirmwareUpgrade(struct soap*, _tds__StartFirmwareUpgrade *, const char*, const char*);

#ifndef soap_read__tds__StartFirmwareUpgrade
#define soap_read__tds__StartFirmwareUpgrade(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__StartFirmwareUpgrade(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetSystemUrisResponse
#define SOAP_TYPE__tds__GetSystemUrisResponse (306)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetSystemUrisResponse(struct soap*, const char*, int, const _tds__GetSystemUrisResponse *, const char*);
SOAP_FMAC3 _tds__GetSystemUrisResponse * SOAP_FMAC4 soap_in__tds__GetSystemUrisResponse(struct soap*, const char*, _tds__GetSystemUrisResponse *, const char*);
SOAP_FMAC1 _tds__GetSystemUrisResponse * SOAP_FMAC2 soap_instantiate__tds__GetSystemUrisResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetSystemUrisResponse * soap_new__tds__GetSystemUrisResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetSystemUrisResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetSystemUrisResponse * soap_new_req__tds__GetSystemUrisResponse(
	struct soap *soap)
{	_tds__GetSystemUrisResponse *_p = soap_new__tds__GetSystemUrisResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetSystemUrisResponse * soap_new_set__tds__GetSystemUrisResponse(
	struct soap *soap,
	tt__SystemLogUriList *SystemLogUris,
	std::string *SupportInfoUri,
	std::string *SystemBackupUri,
	_tds__GetSystemUrisResponse_Extension *Extension)
{	_tds__GetSystemUrisResponse *_p = soap_new__tds__GetSystemUrisResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetSystemUrisResponse::SystemLogUris = SystemLogUris;
		_p->_tds__GetSystemUrisResponse::SupportInfoUri = SupportInfoUri;
		_p->_tds__GetSystemUrisResponse::SystemBackupUri = SystemBackupUri;
		_p->_tds__GetSystemUrisResponse::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write__tds__GetSystemUrisResponse
#define soap_write__tds__GetSystemUrisResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetSystemUrisResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemUrisResponse * SOAP_FMAC4 soap_get__tds__GetSystemUrisResponse(struct soap*, _tds__GetSystemUrisResponse *, const char*, const char*);

#ifndef soap_read__tds__GetSystemUrisResponse
#define soap_read__tds__GetSystemUrisResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetSystemUrisResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetSystemUris
#define SOAP_TYPE__tds__GetSystemUris (305)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetSystemUris(struct soap*, const char*, int, const _tds__GetSystemUris *, const char*);
SOAP_FMAC3 _tds__GetSystemUris * SOAP_FMAC4 soap_in__tds__GetSystemUris(struct soap*, const char*, _tds__GetSystemUris *, const char*);
SOAP_FMAC1 _tds__GetSystemUris * SOAP_FMAC2 soap_instantiate__tds__GetSystemUris(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetSystemUris * soap_new__tds__GetSystemUris(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetSystemUris(soap, n, NULL, NULL, NULL); }

inline _tds__GetSystemUris * soap_new_req__tds__GetSystemUris(
	struct soap *soap)
{	_tds__GetSystemUris *_p = soap_new__tds__GetSystemUris(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetSystemUris * soap_new_set__tds__GetSystemUris(
	struct soap *soap)
{	_tds__GetSystemUris *_p = soap_new__tds__GetSystemUris(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetSystemUris
#define soap_write__tds__GetSystemUris(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetSystemUris", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemUris * SOAP_FMAC4 soap_get__tds__GetSystemUris(struct soap*, _tds__GetSystemUris *, const char*, const char*);

#ifndef soap_read__tds__GetSystemUris
#define soap_read__tds__GetSystemUris(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetSystemUris(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__ScanAvailableDot11NetworksResponse
#define SOAP_TYPE__tds__ScanAvailableDot11NetworksResponse (304)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__ScanAvailableDot11NetworksResponse(struct soap*, const char*, int, const _tds__ScanAvailableDot11NetworksResponse *, const char*);
SOAP_FMAC3 _tds__ScanAvailableDot11NetworksResponse * SOAP_FMAC4 soap_in__tds__ScanAvailableDot11NetworksResponse(struct soap*, const char*, _tds__ScanAvailableDot11NetworksResponse *, const char*);
SOAP_FMAC1 _tds__ScanAvailableDot11NetworksResponse * SOAP_FMAC2 soap_instantiate__tds__ScanAvailableDot11NetworksResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__ScanAvailableDot11NetworksResponse * soap_new__tds__ScanAvailableDot11NetworksResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__ScanAvailableDot11NetworksResponse(soap, n, NULL, NULL, NULL); }

inline _tds__ScanAvailableDot11NetworksResponse * soap_new_req__tds__ScanAvailableDot11NetworksResponse(
	struct soap *soap)
{	_tds__ScanAvailableDot11NetworksResponse *_p = soap_new__tds__ScanAvailableDot11NetworksResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__ScanAvailableDot11NetworksResponse * soap_new_set__tds__ScanAvailableDot11NetworksResponse(
	struct soap *soap,
	const std::vector<tt__Dot11AvailableNetworks *> & Networks)
{	_tds__ScanAvailableDot11NetworksResponse *_p = soap_new__tds__ScanAvailableDot11NetworksResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__ScanAvailableDot11NetworksResponse::Networks = Networks;
	}
	return _p;
}

#ifndef soap_write__tds__ScanAvailableDot11NetworksResponse
#define soap_write__tds__ScanAvailableDot11NetworksResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:ScanAvailableDot11NetworksResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__ScanAvailableDot11NetworksResponse * SOAP_FMAC4 soap_get__tds__ScanAvailableDot11NetworksResponse(struct soap*, _tds__ScanAvailableDot11NetworksResponse *, const char*, const char*);

#ifndef soap_read__tds__ScanAvailableDot11NetworksResponse
#define soap_read__tds__ScanAvailableDot11NetworksResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__ScanAvailableDot11NetworksResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__ScanAvailableDot11Networks
#define SOAP_TYPE__tds__ScanAvailableDot11Networks (303)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__ScanAvailableDot11Networks(struct soap*, const char*, int, const _tds__ScanAvailableDot11Networks *, const char*);
SOAP_FMAC3 _tds__ScanAvailableDot11Networks * SOAP_FMAC4 soap_in__tds__ScanAvailableDot11Networks(struct soap*, const char*, _tds__ScanAvailableDot11Networks *, const char*);
SOAP_FMAC1 _tds__ScanAvailableDot11Networks * SOAP_FMAC2 soap_instantiate__tds__ScanAvailableDot11Networks(struct soap*, int, const char*, const char*, size_t*);

inline _tds__ScanAvailableDot11Networks * soap_new__tds__ScanAvailableDot11Networks(struct soap *soap, int n = -1) { return soap_instantiate__tds__ScanAvailableDot11Networks(soap, n, NULL, NULL, NULL); }

inline _tds__ScanAvailableDot11Networks * soap_new_req__tds__ScanAvailableDot11Networks(
	struct soap *soap,
	const std::string& InterfaceToken)
{	_tds__ScanAvailableDot11Networks *_p = soap_new__tds__ScanAvailableDot11Networks(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__ScanAvailableDot11Networks::InterfaceToken = InterfaceToken;
	}
	return _p;
}

inline _tds__ScanAvailableDot11Networks * soap_new_set__tds__ScanAvailableDot11Networks(
	struct soap *soap,
	const std::string& InterfaceToken)
{	_tds__ScanAvailableDot11Networks *_p = soap_new__tds__ScanAvailableDot11Networks(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__ScanAvailableDot11Networks::InterfaceToken = InterfaceToken;
	}
	return _p;
}

#ifndef soap_write__tds__ScanAvailableDot11Networks
#define soap_write__tds__ScanAvailableDot11Networks(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:ScanAvailableDot11Networks", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__ScanAvailableDot11Networks * SOAP_FMAC4 soap_get__tds__ScanAvailableDot11Networks(struct soap*, _tds__ScanAvailableDot11Networks *, const char*, const char*);

#ifndef soap_read__tds__ScanAvailableDot11Networks
#define soap_read__tds__ScanAvailableDot11Networks(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__ScanAvailableDot11Networks(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetDot11StatusResponse
#define SOAP_TYPE__tds__GetDot11StatusResponse (302)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDot11StatusResponse(struct soap*, const char*, int, const _tds__GetDot11StatusResponse *, const char*);
SOAP_FMAC3 _tds__GetDot11StatusResponse * SOAP_FMAC4 soap_in__tds__GetDot11StatusResponse(struct soap*, const char*, _tds__GetDot11StatusResponse *, const char*);
SOAP_FMAC1 _tds__GetDot11StatusResponse * SOAP_FMAC2 soap_instantiate__tds__GetDot11StatusResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDot11StatusResponse * soap_new__tds__GetDot11StatusResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDot11StatusResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetDot11StatusResponse * soap_new_req__tds__GetDot11StatusResponse(
	struct soap *soap,
	tt__Dot11Status *Status)
{	_tds__GetDot11StatusResponse *_p = soap_new__tds__GetDot11StatusResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetDot11StatusResponse::Status = Status;
	}
	return _p;
}

inline _tds__GetDot11StatusResponse * soap_new_set__tds__GetDot11StatusResponse(
	struct soap *soap,
	tt__Dot11Status *Status)
{	_tds__GetDot11StatusResponse *_p = soap_new__tds__GetDot11StatusResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetDot11StatusResponse::Status = Status;
	}
	return _p;
}

#ifndef soap_write__tds__GetDot11StatusResponse
#define soap_write__tds__GetDot11StatusResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetDot11StatusResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDot11StatusResponse * SOAP_FMAC4 soap_get__tds__GetDot11StatusResponse(struct soap*, _tds__GetDot11StatusResponse *, const char*, const char*);

#ifndef soap_read__tds__GetDot11StatusResponse
#define soap_read__tds__GetDot11StatusResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetDot11StatusResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetDot11Status
#define SOAP_TYPE__tds__GetDot11Status (301)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDot11Status(struct soap*, const char*, int, const _tds__GetDot11Status *, const char*);
SOAP_FMAC3 _tds__GetDot11Status * SOAP_FMAC4 soap_in__tds__GetDot11Status(struct soap*, const char*, _tds__GetDot11Status *, const char*);
SOAP_FMAC1 _tds__GetDot11Status * SOAP_FMAC2 soap_instantiate__tds__GetDot11Status(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDot11Status * soap_new__tds__GetDot11Status(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDot11Status(soap, n, NULL, NULL, NULL); }

inline _tds__GetDot11Status * soap_new_req__tds__GetDot11Status(
	struct soap *soap,
	const std::string& InterfaceToken)
{	_tds__GetDot11Status *_p = soap_new__tds__GetDot11Status(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetDot11Status::InterfaceToken = InterfaceToken;
	}
	return _p;
}

inline _tds__GetDot11Status * soap_new_set__tds__GetDot11Status(
	struct soap *soap,
	const std::string& InterfaceToken)
{	_tds__GetDot11Status *_p = soap_new__tds__GetDot11Status(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetDot11Status::InterfaceToken = InterfaceToken;
	}
	return _p;
}

#ifndef soap_write__tds__GetDot11Status
#define soap_write__tds__GetDot11Status(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetDot11Status", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDot11Status * SOAP_FMAC4 soap_get__tds__GetDot11Status(struct soap*, _tds__GetDot11Status *, const char*, const char*);

#ifndef soap_read__tds__GetDot11Status
#define soap_read__tds__GetDot11Status(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetDot11Status(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetDot11CapabilitiesResponse
#define SOAP_TYPE__tds__GetDot11CapabilitiesResponse (300)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDot11CapabilitiesResponse(struct soap*, const char*, int, const _tds__GetDot11CapabilitiesResponse *, const char*);
SOAP_FMAC3 _tds__GetDot11CapabilitiesResponse * SOAP_FMAC4 soap_in__tds__GetDot11CapabilitiesResponse(struct soap*, const char*, _tds__GetDot11CapabilitiesResponse *, const char*);
SOAP_FMAC1 _tds__GetDot11CapabilitiesResponse * SOAP_FMAC2 soap_instantiate__tds__GetDot11CapabilitiesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDot11CapabilitiesResponse * soap_new__tds__GetDot11CapabilitiesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDot11CapabilitiesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetDot11CapabilitiesResponse * soap_new_req__tds__GetDot11CapabilitiesResponse(
	struct soap *soap,
	tt__Dot11Capabilities *Capabilities)
{	_tds__GetDot11CapabilitiesResponse *_p = soap_new__tds__GetDot11CapabilitiesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetDot11CapabilitiesResponse::Capabilities = Capabilities;
	}
	return _p;
}

inline _tds__GetDot11CapabilitiesResponse * soap_new_set__tds__GetDot11CapabilitiesResponse(
	struct soap *soap,
	tt__Dot11Capabilities *Capabilities)
{	_tds__GetDot11CapabilitiesResponse *_p = soap_new__tds__GetDot11CapabilitiesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetDot11CapabilitiesResponse::Capabilities = Capabilities;
	}
	return _p;
}

#ifndef soap_write__tds__GetDot11CapabilitiesResponse
#define soap_write__tds__GetDot11CapabilitiesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetDot11CapabilitiesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDot11CapabilitiesResponse * SOAP_FMAC4 soap_get__tds__GetDot11CapabilitiesResponse(struct soap*, _tds__GetDot11CapabilitiesResponse *, const char*, const char*);

#ifndef soap_read__tds__GetDot11CapabilitiesResponse
#define soap_read__tds__GetDot11CapabilitiesResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetDot11CapabilitiesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetDot11Capabilities
#define SOAP_TYPE__tds__GetDot11Capabilities (299)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDot11Capabilities(struct soap*, const char*, int, const _tds__GetDot11Capabilities *, const char*);
SOAP_FMAC3 _tds__GetDot11Capabilities * SOAP_FMAC4 soap_in__tds__GetDot11Capabilities(struct soap*, const char*, _tds__GetDot11Capabilities *, const char*);
SOAP_FMAC1 _tds__GetDot11Capabilities * SOAP_FMAC2 soap_instantiate__tds__GetDot11Capabilities(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDot11Capabilities * soap_new__tds__GetDot11Capabilities(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDot11Capabilities(soap, n, NULL, NULL, NULL); }

inline _tds__GetDot11Capabilities * soap_new_req__tds__GetDot11Capabilities(
	struct soap *soap)
{	_tds__GetDot11Capabilities *_p = soap_new__tds__GetDot11Capabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetDot11Capabilities * soap_new_set__tds__GetDot11Capabilities(
	struct soap *soap)
{	_tds__GetDot11Capabilities *_p = soap_new__tds__GetDot11Capabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetDot11Capabilities
#define soap_write__tds__GetDot11Capabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetDot11Capabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDot11Capabilities * SOAP_FMAC4 soap_get__tds__GetDot11Capabilities(struct soap*, _tds__GetDot11Capabilities *, const char*, const char*);

#ifndef soap_read__tds__GetDot11Capabilities
#define soap_read__tds__GetDot11Capabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetDot11Capabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SendAuxiliaryCommandResponse
#define SOAP_TYPE__tds__SendAuxiliaryCommandResponse (298)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SendAuxiliaryCommandResponse(struct soap*, const char*, int, const _tds__SendAuxiliaryCommandResponse *, const char*);
SOAP_FMAC3 _tds__SendAuxiliaryCommandResponse * SOAP_FMAC4 soap_in__tds__SendAuxiliaryCommandResponse(struct soap*, const char*, _tds__SendAuxiliaryCommandResponse *, const char*);
SOAP_FMAC1 _tds__SendAuxiliaryCommandResponse * SOAP_FMAC2 soap_instantiate__tds__SendAuxiliaryCommandResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SendAuxiliaryCommandResponse * soap_new__tds__SendAuxiliaryCommandResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SendAuxiliaryCommandResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SendAuxiliaryCommandResponse * soap_new_req__tds__SendAuxiliaryCommandResponse(
	struct soap *soap)
{	_tds__SendAuxiliaryCommandResponse *_p = soap_new__tds__SendAuxiliaryCommandResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SendAuxiliaryCommandResponse * soap_new_set__tds__SendAuxiliaryCommandResponse(
	struct soap *soap,
	std::string *AuxiliaryCommandResponse)
{	_tds__SendAuxiliaryCommandResponse *_p = soap_new__tds__SendAuxiliaryCommandResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SendAuxiliaryCommandResponse::AuxiliaryCommandResponse = AuxiliaryCommandResponse;
	}
	return _p;
}

#ifndef soap_write__tds__SendAuxiliaryCommandResponse
#define soap_write__tds__SendAuxiliaryCommandResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SendAuxiliaryCommandResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SendAuxiliaryCommandResponse * SOAP_FMAC4 soap_get__tds__SendAuxiliaryCommandResponse(struct soap*, _tds__SendAuxiliaryCommandResponse *, const char*, const char*);

#ifndef soap_read__tds__SendAuxiliaryCommandResponse
#define soap_read__tds__SendAuxiliaryCommandResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SendAuxiliaryCommandResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SendAuxiliaryCommand
#define SOAP_TYPE__tds__SendAuxiliaryCommand (297)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SendAuxiliaryCommand(struct soap*, const char*, int, const _tds__SendAuxiliaryCommand *, const char*);
SOAP_FMAC3 _tds__SendAuxiliaryCommand * SOAP_FMAC4 soap_in__tds__SendAuxiliaryCommand(struct soap*, const char*, _tds__SendAuxiliaryCommand *, const char*);
SOAP_FMAC1 _tds__SendAuxiliaryCommand * SOAP_FMAC2 soap_instantiate__tds__SendAuxiliaryCommand(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SendAuxiliaryCommand * soap_new__tds__SendAuxiliaryCommand(struct soap *soap, int n = -1) { return soap_instantiate__tds__SendAuxiliaryCommand(soap, n, NULL, NULL, NULL); }

inline _tds__SendAuxiliaryCommand * soap_new_req__tds__SendAuxiliaryCommand(
	struct soap *soap,
	const std::string& AuxiliaryCommand)
{	_tds__SendAuxiliaryCommand *_p = soap_new__tds__SendAuxiliaryCommand(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SendAuxiliaryCommand::AuxiliaryCommand = AuxiliaryCommand;
	}
	return _p;
}

inline _tds__SendAuxiliaryCommand * soap_new_set__tds__SendAuxiliaryCommand(
	struct soap *soap,
	const std::string& AuxiliaryCommand)
{	_tds__SendAuxiliaryCommand *_p = soap_new__tds__SendAuxiliaryCommand(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SendAuxiliaryCommand::AuxiliaryCommand = AuxiliaryCommand;
	}
	return _p;
}

#ifndef soap_write__tds__SendAuxiliaryCommand
#define soap_write__tds__SendAuxiliaryCommand(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SendAuxiliaryCommand", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SendAuxiliaryCommand * SOAP_FMAC4 soap_get__tds__SendAuxiliaryCommand(struct soap*, _tds__SendAuxiliaryCommand *, const char*, const char*);

#ifndef soap_read__tds__SendAuxiliaryCommand
#define soap_read__tds__SendAuxiliaryCommand(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SendAuxiliaryCommand(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetRelayOutputStateResponse
#define SOAP_TYPE__tds__SetRelayOutputStateResponse (296)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetRelayOutputStateResponse(struct soap*, const char*, int, const _tds__SetRelayOutputStateResponse *, const char*);
SOAP_FMAC3 _tds__SetRelayOutputStateResponse * SOAP_FMAC4 soap_in__tds__SetRelayOutputStateResponse(struct soap*, const char*, _tds__SetRelayOutputStateResponse *, const char*);
SOAP_FMAC1 _tds__SetRelayOutputStateResponse * SOAP_FMAC2 soap_instantiate__tds__SetRelayOutputStateResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetRelayOutputStateResponse * soap_new__tds__SetRelayOutputStateResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetRelayOutputStateResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetRelayOutputStateResponse * soap_new_req__tds__SetRelayOutputStateResponse(
	struct soap *soap)
{	_tds__SetRelayOutputStateResponse *_p = soap_new__tds__SetRelayOutputStateResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SetRelayOutputStateResponse * soap_new_set__tds__SetRelayOutputStateResponse(
	struct soap *soap)
{	_tds__SetRelayOutputStateResponse *_p = soap_new__tds__SetRelayOutputStateResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__SetRelayOutputStateResponse
#define soap_write__tds__SetRelayOutputStateResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetRelayOutputStateResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetRelayOutputStateResponse * SOAP_FMAC4 soap_get__tds__SetRelayOutputStateResponse(struct soap*, _tds__SetRelayOutputStateResponse *, const char*, const char*);

#ifndef soap_read__tds__SetRelayOutputStateResponse
#define soap_read__tds__SetRelayOutputStateResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetRelayOutputStateResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetRelayOutputState
#define SOAP_TYPE__tds__SetRelayOutputState (295)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetRelayOutputState(struct soap*, const char*, int, const _tds__SetRelayOutputState *, const char*);
SOAP_FMAC3 _tds__SetRelayOutputState * SOAP_FMAC4 soap_in__tds__SetRelayOutputState(struct soap*, const char*, _tds__SetRelayOutputState *, const char*);
SOAP_FMAC1 _tds__SetRelayOutputState * SOAP_FMAC2 soap_instantiate__tds__SetRelayOutputState(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetRelayOutputState * soap_new__tds__SetRelayOutputState(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetRelayOutputState(soap, n, NULL, NULL, NULL); }

inline _tds__SetRelayOutputState * soap_new_req__tds__SetRelayOutputState(
	struct soap *soap,
	const std::string& RelayOutputToken,
	enum tt__RelayLogicalState LogicalState)
{	_tds__SetRelayOutputState *_p = soap_new__tds__SetRelayOutputState(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetRelayOutputState::RelayOutputToken = RelayOutputToken;
		_p->_tds__SetRelayOutputState::LogicalState = LogicalState;
	}
	return _p;
}

inline _tds__SetRelayOutputState * soap_new_set__tds__SetRelayOutputState(
	struct soap *soap,
	const std::string& RelayOutputToken,
	enum tt__RelayLogicalState LogicalState)
{	_tds__SetRelayOutputState *_p = soap_new__tds__SetRelayOutputState(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetRelayOutputState::RelayOutputToken = RelayOutputToken;
		_p->_tds__SetRelayOutputState::LogicalState = LogicalState;
	}
	return _p;
}

#ifndef soap_write__tds__SetRelayOutputState
#define soap_write__tds__SetRelayOutputState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetRelayOutputState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetRelayOutputState * SOAP_FMAC4 soap_get__tds__SetRelayOutputState(struct soap*, _tds__SetRelayOutputState *, const char*, const char*);

#ifndef soap_read__tds__SetRelayOutputState
#define soap_read__tds__SetRelayOutputState(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetRelayOutputState(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetRelayOutputSettingsResponse
#define SOAP_TYPE__tds__SetRelayOutputSettingsResponse (294)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetRelayOutputSettingsResponse(struct soap*, const char*, int, const _tds__SetRelayOutputSettingsResponse *, const char*);
SOAP_FMAC3 _tds__SetRelayOutputSettingsResponse * SOAP_FMAC4 soap_in__tds__SetRelayOutputSettingsResponse(struct soap*, const char*, _tds__SetRelayOutputSettingsResponse *, const char*);
SOAP_FMAC1 _tds__SetRelayOutputSettingsResponse * SOAP_FMAC2 soap_instantiate__tds__SetRelayOutputSettingsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetRelayOutputSettingsResponse * soap_new__tds__SetRelayOutputSettingsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetRelayOutputSettingsResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetRelayOutputSettingsResponse * soap_new_req__tds__SetRelayOutputSettingsResponse(
	struct soap *soap)
{	_tds__SetRelayOutputSettingsResponse *_p = soap_new__tds__SetRelayOutputSettingsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SetRelayOutputSettingsResponse * soap_new_set__tds__SetRelayOutputSettingsResponse(
	struct soap *soap)
{	_tds__SetRelayOutputSettingsResponse *_p = soap_new__tds__SetRelayOutputSettingsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__SetRelayOutputSettingsResponse
#define soap_write__tds__SetRelayOutputSettingsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetRelayOutputSettingsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetRelayOutputSettingsResponse * SOAP_FMAC4 soap_get__tds__SetRelayOutputSettingsResponse(struct soap*, _tds__SetRelayOutputSettingsResponse *, const char*, const char*);

#ifndef soap_read__tds__SetRelayOutputSettingsResponse
#define soap_read__tds__SetRelayOutputSettingsResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetRelayOutputSettingsResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetRelayOutputSettings
#define SOAP_TYPE__tds__SetRelayOutputSettings (293)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetRelayOutputSettings(struct soap*, const char*, int, const _tds__SetRelayOutputSettings *, const char*);
SOAP_FMAC3 _tds__SetRelayOutputSettings * SOAP_FMAC4 soap_in__tds__SetRelayOutputSettings(struct soap*, const char*, _tds__SetRelayOutputSettings *, const char*);
SOAP_FMAC1 _tds__SetRelayOutputSettings * SOAP_FMAC2 soap_instantiate__tds__SetRelayOutputSettings(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetRelayOutputSettings * soap_new__tds__SetRelayOutputSettings(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetRelayOutputSettings(soap, n, NULL, NULL, NULL); }

inline _tds__SetRelayOutputSettings * soap_new_req__tds__SetRelayOutputSettings(
	struct soap *soap,
	const std::string& RelayOutputToken,
	tt__RelayOutputSettings *Properties)
{	_tds__SetRelayOutputSettings *_p = soap_new__tds__SetRelayOutputSettings(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetRelayOutputSettings::RelayOutputToken = RelayOutputToken;
		_p->_tds__SetRelayOutputSettings::Properties = Properties;
	}
	return _p;
}

inline _tds__SetRelayOutputSettings * soap_new_set__tds__SetRelayOutputSettings(
	struct soap *soap,
	const std::string& RelayOutputToken,
	tt__RelayOutputSettings *Properties)
{	_tds__SetRelayOutputSettings *_p = soap_new__tds__SetRelayOutputSettings(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetRelayOutputSettings::RelayOutputToken = RelayOutputToken;
		_p->_tds__SetRelayOutputSettings::Properties = Properties;
	}
	return _p;
}

#ifndef soap_write__tds__SetRelayOutputSettings
#define soap_write__tds__SetRelayOutputSettings(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetRelayOutputSettings", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetRelayOutputSettings * SOAP_FMAC4 soap_get__tds__SetRelayOutputSettings(struct soap*, _tds__SetRelayOutputSettings *, const char*, const char*);

#ifndef soap_read__tds__SetRelayOutputSettings
#define soap_read__tds__SetRelayOutputSettings(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetRelayOutputSettings(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetRelayOutputsResponse
#define SOAP_TYPE__tds__GetRelayOutputsResponse (292)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetRelayOutputsResponse(struct soap*, const char*, int, const _tds__GetRelayOutputsResponse *, const char*);
SOAP_FMAC3 _tds__GetRelayOutputsResponse * SOAP_FMAC4 soap_in__tds__GetRelayOutputsResponse(struct soap*, const char*, _tds__GetRelayOutputsResponse *, const char*);
SOAP_FMAC1 _tds__GetRelayOutputsResponse * SOAP_FMAC2 soap_instantiate__tds__GetRelayOutputsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetRelayOutputsResponse * soap_new__tds__GetRelayOutputsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetRelayOutputsResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetRelayOutputsResponse * soap_new_req__tds__GetRelayOutputsResponse(
	struct soap *soap)
{	_tds__GetRelayOutputsResponse *_p = soap_new__tds__GetRelayOutputsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetRelayOutputsResponse * soap_new_set__tds__GetRelayOutputsResponse(
	struct soap *soap,
	const std::vector<tt__RelayOutput *> & RelayOutputs)
{	_tds__GetRelayOutputsResponse *_p = soap_new__tds__GetRelayOutputsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetRelayOutputsResponse::RelayOutputs = RelayOutputs;
	}
	return _p;
}

#ifndef soap_write__tds__GetRelayOutputsResponse
#define soap_write__tds__GetRelayOutputsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetRelayOutputsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetRelayOutputsResponse * SOAP_FMAC4 soap_get__tds__GetRelayOutputsResponse(struct soap*, _tds__GetRelayOutputsResponse *, const char*, const char*);

#ifndef soap_read__tds__GetRelayOutputsResponse
#define soap_read__tds__GetRelayOutputsResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetRelayOutputsResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetRelayOutputs
#define SOAP_TYPE__tds__GetRelayOutputs (291)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetRelayOutputs(struct soap*, const char*, int, const _tds__GetRelayOutputs *, const char*);
SOAP_FMAC3 _tds__GetRelayOutputs * SOAP_FMAC4 soap_in__tds__GetRelayOutputs(struct soap*, const char*, _tds__GetRelayOutputs *, const char*);
SOAP_FMAC1 _tds__GetRelayOutputs * SOAP_FMAC2 soap_instantiate__tds__GetRelayOutputs(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetRelayOutputs * soap_new__tds__GetRelayOutputs(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetRelayOutputs(soap, n, NULL, NULL, NULL); }

inline _tds__GetRelayOutputs * soap_new_req__tds__GetRelayOutputs(
	struct soap *soap)
{	_tds__GetRelayOutputs *_p = soap_new__tds__GetRelayOutputs(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetRelayOutputs * soap_new_set__tds__GetRelayOutputs(
	struct soap *soap)
{	_tds__GetRelayOutputs *_p = soap_new__tds__GetRelayOutputs(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetRelayOutputs
#define soap_write__tds__GetRelayOutputs(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetRelayOutputs", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetRelayOutputs * SOAP_FMAC4 soap_get__tds__GetRelayOutputs(struct soap*, _tds__GetRelayOutputs *, const char*, const char*);

#ifndef soap_read__tds__GetRelayOutputs
#define soap_read__tds__GetRelayOutputs(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetRelayOutputs(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__DeleteDot1XConfigurationResponse
#define SOAP_TYPE__tds__DeleteDot1XConfigurationResponse (290)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__DeleteDot1XConfigurationResponse(struct soap*, const char*, int, const _tds__DeleteDot1XConfigurationResponse *, const char*);
SOAP_FMAC3 _tds__DeleteDot1XConfigurationResponse * SOAP_FMAC4 soap_in__tds__DeleteDot1XConfigurationResponse(struct soap*, const char*, _tds__DeleteDot1XConfigurationResponse *, const char*);
SOAP_FMAC1 _tds__DeleteDot1XConfigurationResponse * SOAP_FMAC2 soap_instantiate__tds__DeleteDot1XConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__DeleteDot1XConfigurationResponse * soap_new__tds__DeleteDot1XConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__DeleteDot1XConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tds__DeleteDot1XConfigurationResponse * soap_new_req__tds__DeleteDot1XConfigurationResponse(
	struct soap *soap)
{	_tds__DeleteDot1XConfigurationResponse *_p = soap_new__tds__DeleteDot1XConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__DeleteDot1XConfigurationResponse * soap_new_set__tds__DeleteDot1XConfigurationResponse(
	struct soap *soap)
{	_tds__DeleteDot1XConfigurationResponse *_p = soap_new__tds__DeleteDot1XConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__DeleteDot1XConfigurationResponse
#define soap_write__tds__DeleteDot1XConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:DeleteDot1XConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__DeleteDot1XConfigurationResponse * SOAP_FMAC4 soap_get__tds__DeleteDot1XConfigurationResponse(struct soap*, _tds__DeleteDot1XConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tds__DeleteDot1XConfigurationResponse
#define soap_read__tds__DeleteDot1XConfigurationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__DeleteDot1XConfigurationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__DeleteDot1XConfiguration
#define SOAP_TYPE__tds__DeleteDot1XConfiguration (289)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__DeleteDot1XConfiguration(struct soap*, const char*, int, const _tds__DeleteDot1XConfiguration *, const char*);
SOAP_FMAC3 _tds__DeleteDot1XConfiguration * SOAP_FMAC4 soap_in__tds__DeleteDot1XConfiguration(struct soap*, const char*, _tds__DeleteDot1XConfiguration *, const char*);
SOAP_FMAC1 _tds__DeleteDot1XConfiguration * SOAP_FMAC2 soap_instantiate__tds__DeleteDot1XConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tds__DeleteDot1XConfiguration * soap_new__tds__DeleteDot1XConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tds__DeleteDot1XConfiguration(soap, n, NULL, NULL, NULL); }

inline _tds__DeleteDot1XConfiguration * soap_new_req__tds__DeleteDot1XConfiguration(
	struct soap *soap)
{	_tds__DeleteDot1XConfiguration *_p = soap_new__tds__DeleteDot1XConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__DeleteDot1XConfiguration * soap_new_set__tds__DeleteDot1XConfiguration(
	struct soap *soap,
	const std::vector<std::string> & Dot1XConfigurationToken)
{	_tds__DeleteDot1XConfiguration *_p = soap_new__tds__DeleteDot1XConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__DeleteDot1XConfiguration::Dot1XConfigurationToken = Dot1XConfigurationToken;
	}
	return _p;
}

#ifndef soap_write__tds__DeleteDot1XConfiguration
#define soap_write__tds__DeleteDot1XConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:DeleteDot1XConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__DeleteDot1XConfiguration * SOAP_FMAC4 soap_get__tds__DeleteDot1XConfiguration(struct soap*, _tds__DeleteDot1XConfiguration *, const char*, const char*);

#ifndef soap_read__tds__DeleteDot1XConfiguration
#define soap_read__tds__DeleteDot1XConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__DeleteDot1XConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetDot1XConfigurationsResponse
#define SOAP_TYPE__tds__GetDot1XConfigurationsResponse (288)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDot1XConfigurationsResponse(struct soap*, const char*, int, const _tds__GetDot1XConfigurationsResponse *, const char*);
SOAP_FMAC3 _tds__GetDot1XConfigurationsResponse * SOAP_FMAC4 soap_in__tds__GetDot1XConfigurationsResponse(struct soap*, const char*, _tds__GetDot1XConfigurationsResponse *, const char*);
SOAP_FMAC1 _tds__GetDot1XConfigurationsResponse * SOAP_FMAC2 soap_instantiate__tds__GetDot1XConfigurationsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDot1XConfigurationsResponse * soap_new__tds__GetDot1XConfigurationsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDot1XConfigurationsResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetDot1XConfigurationsResponse * soap_new_req__tds__GetDot1XConfigurationsResponse(
	struct soap *soap)
{	_tds__GetDot1XConfigurationsResponse *_p = soap_new__tds__GetDot1XConfigurationsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetDot1XConfigurationsResponse * soap_new_set__tds__GetDot1XConfigurationsResponse(
	struct soap *soap,
	const std::vector<tt__Dot1XConfiguration *> & Dot1XConfiguration)
{	_tds__GetDot1XConfigurationsResponse *_p = soap_new__tds__GetDot1XConfigurationsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetDot1XConfigurationsResponse::Dot1XConfiguration = Dot1XConfiguration;
	}
	return _p;
}

#ifndef soap_write__tds__GetDot1XConfigurationsResponse
#define soap_write__tds__GetDot1XConfigurationsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetDot1XConfigurationsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDot1XConfigurationsResponse * SOAP_FMAC4 soap_get__tds__GetDot1XConfigurationsResponse(struct soap*, _tds__GetDot1XConfigurationsResponse *, const char*, const char*);

#ifndef soap_read__tds__GetDot1XConfigurationsResponse
#define soap_read__tds__GetDot1XConfigurationsResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetDot1XConfigurationsResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetDot1XConfigurations
#define SOAP_TYPE__tds__GetDot1XConfigurations (287)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDot1XConfigurations(struct soap*, const char*, int, const _tds__GetDot1XConfigurations *, const char*);
SOAP_FMAC3 _tds__GetDot1XConfigurations * SOAP_FMAC4 soap_in__tds__GetDot1XConfigurations(struct soap*, const char*, _tds__GetDot1XConfigurations *, const char*);
SOAP_FMAC1 _tds__GetDot1XConfigurations * SOAP_FMAC2 soap_instantiate__tds__GetDot1XConfigurations(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDot1XConfigurations * soap_new__tds__GetDot1XConfigurations(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDot1XConfigurations(soap, n, NULL, NULL, NULL); }

inline _tds__GetDot1XConfigurations * soap_new_req__tds__GetDot1XConfigurations(
	struct soap *soap)
{	_tds__GetDot1XConfigurations *_p = soap_new__tds__GetDot1XConfigurations(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetDot1XConfigurations * soap_new_set__tds__GetDot1XConfigurations(
	struct soap *soap)
{	_tds__GetDot1XConfigurations *_p = soap_new__tds__GetDot1XConfigurations(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetDot1XConfigurations
#define soap_write__tds__GetDot1XConfigurations(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetDot1XConfigurations", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDot1XConfigurations * SOAP_FMAC4 soap_get__tds__GetDot1XConfigurations(struct soap*, _tds__GetDot1XConfigurations *, const char*, const char*);

#ifndef soap_read__tds__GetDot1XConfigurations
#define soap_read__tds__GetDot1XConfigurations(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetDot1XConfigurations(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetDot1XConfigurationResponse
#define SOAP_TYPE__tds__GetDot1XConfigurationResponse (286)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDot1XConfigurationResponse(struct soap*, const char*, int, const _tds__GetDot1XConfigurationResponse *, const char*);
SOAP_FMAC3 _tds__GetDot1XConfigurationResponse * SOAP_FMAC4 soap_in__tds__GetDot1XConfigurationResponse(struct soap*, const char*, _tds__GetDot1XConfigurationResponse *, const char*);
SOAP_FMAC1 _tds__GetDot1XConfigurationResponse * SOAP_FMAC2 soap_instantiate__tds__GetDot1XConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDot1XConfigurationResponse * soap_new__tds__GetDot1XConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDot1XConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetDot1XConfigurationResponse * soap_new_req__tds__GetDot1XConfigurationResponse(
	struct soap *soap,
	tt__Dot1XConfiguration *Dot1XConfiguration)
{	_tds__GetDot1XConfigurationResponse *_p = soap_new__tds__GetDot1XConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetDot1XConfigurationResponse::Dot1XConfiguration = Dot1XConfiguration;
	}
	return _p;
}

inline _tds__GetDot1XConfigurationResponse * soap_new_set__tds__GetDot1XConfigurationResponse(
	struct soap *soap,
	tt__Dot1XConfiguration *Dot1XConfiguration)
{	_tds__GetDot1XConfigurationResponse *_p = soap_new__tds__GetDot1XConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetDot1XConfigurationResponse::Dot1XConfiguration = Dot1XConfiguration;
	}
	return _p;
}

#ifndef soap_write__tds__GetDot1XConfigurationResponse
#define soap_write__tds__GetDot1XConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetDot1XConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDot1XConfigurationResponse * SOAP_FMAC4 soap_get__tds__GetDot1XConfigurationResponse(struct soap*, _tds__GetDot1XConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tds__GetDot1XConfigurationResponse
#define soap_read__tds__GetDot1XConfigurationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetDot1XConfigurationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetDot1XConfiguration
#define SOAP_TYPE__tds__GetDot1XConfiguration (285)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDot1XConfiguration(struct soap*, const char*, int, const _tds__GetDot1XConfiguration *, const char*);
SOAP_FMAC3 _tds__GetDot1XConfiguration * SOAP_FMAC4 soap_in__tds__GetDot1XConfiguration(struct soap*, const char*, _tds__GetDot1XConfiguration *, const char*);
SOAP_FMAC1 _tds__GetDot1XConfiguration * SOAP_FMAC2 soap_instantiate__tds__GetDot1XConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDot1XConfiguration * soap_new__tds__GetDot1XConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDot1XConfiguration(soap, n, NULL, NULL, NULL); }

inline _tds__GetDot1XConfiguration * soap_new_req__tds__GetDot1XConfiguration(
	struct soap *soap,
	const std::string& Dot1XConfigurationToken)
{	_tds__GetDot1XConfiguration *_p = soap_new__tds__GetDot1XConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetDot1XConfiguration::Dot1XConfigurationToken = Dot1XConfigurationToken;
	}
	return _p;
}

inline _tds__GetDot1XConfiguration * soap_new_set__tds__GetDot1XConfiguration(
	struct soap *soap,
	const std::string& Dot1XConfigurationToken)
{	_tds__GetDot1XConfiguration *_p = soap_new__tds__GetDot1XConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetDot1XConfiguration::Dot1XConfigurationToken = Dot1XConfigurationToken;
	}
	return _p;
}

#ifndef soap_write__tds__GetDot1XConfiguration
#define soap_write__tds__GetDot1XConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetDot1XConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDot1XConfiguration * SOAP_FMAC4 soap_get__tds__GetDot1XConfiguration(struct soap*, _tds__GetDot1XConfiguration *, const char*, const char*);

#ifndef soap_read__tds__GetDot1XConfiguration
#define soap_read__tds__GetDot1XConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetDot1XConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetDot1XConfigurationResponse
#define SOAP_TYPE__tds__SetDot1XConfigurationResponse (284)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetDot1XConfigurationResponse(struct soap*, const char*, int, const _tds__SetDot1XConfigurationResponse *, const char*);
SOAP_FMAC3 _tds__SetDot1XConfigurationResponse * SOAP_FMAC4 soap_in__tds__SetDot1XConfigurationResponse(struct soap*, const char*, _tds__SetDot1XConfigurationResponse *, const char*);
SOAP_FMAC1 _tds__SetDot1XConfigurationResponse * SOAP_FMAC2 soap_instantiate__tds__SetDot1XConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetDot1XConfigurationResponse * soap_new__tds__SetDot1XConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetDot1XConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetDot1XConfigurationResponse * soap_new_req__tds__SetDot1XConfigurationResponse(
	struct soap *soap)
{	_tds__SetDot1XConfigurationResponse *_p = soap_new__tds__SetDot1XConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SetDot1XConfigurationResponse * soap_new_set__tds__SetDot1XConfigurationResponse(
	struct soap *soap)
{	_tds__SetDot1XConfigurationResponse *_p = soap_new__tds__SetDot1XConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__SetDot1XConfigurationResponse
#define soap_write__tds__SetDot1XConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetDot1XConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDot1XConfigurationResponse * SOAP_FMAC4 soap_get__tds__SetDot1XConfigurationResponse(struct soap*, _tds__SetDot1XConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tds__SetDot1XConfigurationResponse
#define soap_read__tds__SetDot1XConfigurationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetDot1XConfigurationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetDot1XConfiguration
#define SOAP_TYPE__tds__SetDot1XConfiguration (283)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetDot1XConfiguration(struct soap*, const char*, int, const _tds__SetDot1XConfiguration *, const char*);
SOAP_FMAC3 _tds__SetDot1XConfiguration * SOAP_FMAC4 soap_in__tds__SetDot1XConfiguration(struct soap*, const char*, _tds__SetDot1XConfiguration *, const char*);
SOAP_FMAC1 _tds__SetDot1XConfiguration * SOAP_FMAC2 soap_instantiate__tds__SetDot1XConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetDot1XConfiguration * soap_new__tds__SetDot1XConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetDot1XConfiguration(soap, n, NULL, NULL, NULL); }

inline _tds__SetDot1XConfiguration * soap_new_req__tds__SetDot1XConfiguration(
	struct soap *soap,
	tt__Dot1XConfiguration *Dot1XConfiguration)
{	_tds__SetDot1XConfiguration *_p = soap_new__tds__SetDot1XConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetDot1XConfiguration::Dot1XConfiguration = Dot1XConfiguration;
	}
	return _p;
}

inline _tds__SetDot1XConfiguration * soap_new_set__tds__SetDot1XConfiguration(
	struct soap *soap,
	tt__Dot1XConfiguration *Dot1XConfiguration)
{	_tds__SetDot1XConfiguration *_p = soap_new__tds__SetDot1XConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetDot1XConfiguration::Dot1XConfiguration = Dot1XConfiguration;
	}
	return _p;
}

#ifndef soap_write__tds__SetDot1XConfiguration
#define soap_write__tds__SetDot1XConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetDot1XConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDot1XConfiguration * SOAP_FMAC4 soap_get__tds__SetDot1XConfiguration(struct soap*, _tds__SetDot1XConfiguration *, const char*, const char*);

#ifndef soap_read__tds__SetDot1XConfiguration
#define soap_read__tds__SetDot1XConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetDot1XConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__CreateDot1XConfigurationResponse
#define SOAP_TYPE__tds__CreateDot1XConfigurationResponse (282)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__CreateDot1XConfigurationResponse(struct soap*, const char*, int, const _tds__CreateDot1XConfigurationResponse *, const char*);
SOAP_FMAC3 _tds__CreateDot1XConfigurationResponse * SOAP_FMAC4 soap_in__tds__CreateDot1XConfigurationResponse(struct soap*, const char*, _tds__CreateDot1XConfigurationResponse *, const char*);
SOAP_FMAC1 _tds__CreateDot1XConfigurationResponse * SOAP_FMAC2 soap_instantiate__tds__CreateDot1XConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__CreateDot1XConfigurationResponse * soap_new__tds__CreateDot1XConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__CreateDot1XConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tds__CreateDot1XConfigurationResponse * soap_new_req__tds__CreateDot1XConfigurationResponse(
	struct soap *soap)
{	_tds__CreateDot1XConfigurationResponse *_p = soap_new__tds__CreateDot1XConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__CreateDot1XConfigurationResponse * soap_new_set__tds__CreateDot1XConfigurationResponse(
	struct soap *soap)
{	_tds__CreateDot1XConfigurationResponse *_p = soap_new__tds__CreateDot1XConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__CreateDot1XConfigurationResponse
#define soap_write__tds__CreateDot1XConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:CreateDot1XConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__CreateDot1XConfigurationResponse * SOAP_FMAC4 soap_get__tds__CreateDot1XConfigurationResponse(struct soap*, _tds__CreateDot1XConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tds__CreateDot1XConfigurationResponse
#define soap_read__tds__CreateDot1XConfigurationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__CreateDot1XConfigurationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__CreateDot1XConfiguration
#define SOAP_TYPE__tds__CreateDot1XConfiguration (281)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__CreateDot1XConfiguration(struct soap*, const char*, int, const _tds__CreateDot1XConfiguration *, const char*);
SOAP_FMAC3 _tds__CreateDot1XConfiguration * SOAP_FMAC4 soap_in__tds__CreateDot1XConfiguration(struct soap*, const char*, _tds__CreateDot1XConfiguration *, const char*);
SOAP_FMAC1 _tds__CreateDot1XConfiguration * SOAP_FMAC2 soap_instantiate__tds__CreateDot1XConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tds__CreateDot1XConfiguration * soap_new__tds__CreateDot1XConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tds__CreateDot1XConfiguration(soap, n, NULL, NULL, NULL); }

inline _tds__CreateDot1XConfiguration * soap_new_req__tds__CreateDot1XConfiguration(
	struct soap *soap,
	tt__Dot1XConfiguration *Dot1XConfiguration)
{	_tds__CreateDot1XConfiguration *_p = soap_new__tds__CreateDot1XConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__CreateDot1XConfiguration::Dot1XConfiguration = Dot1XConfiguration;
	}
	return _p;
}

inline _tds__CreateDot1XConfiguration * soap_new_set__tds__CreateDot1XConfiguration(
	struct soap *soap,
	tt__Dot1XConfiguration *Dot1XConfiguration)
{	_tds__CreateDot1XConfiguration *_p = soap_new__tds__CreateDot1XConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__CreateDot1XConfiguration::Dot1XConfiguration = Dot1XConfiguration;
	}
	return _p;
}

#ifndef soap_write__tds__CreateDot1XConfiguration
#define soap_write__tds__CreateDot1XConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:CreateDot1XConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__CreateDot1XConfiguration * SOAP_FMAC4 soap_get__tds__CreateDot1XConfiguration(struct soap*, _tds__CreateDot1XConfiguration *, const char*, const char*);

#ifndef soap_read__tds__CreateDot1XConfiguration
#define soap_read__tds__CreateDot1XConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__CreateDot1XConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__LoadCACertificatesResponse
#define SOAP_TYPE__tds__LoadCACertificatesResponse (280)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__LoadCACertificatesResponse(struct soap*, const char*, int, const _tds__LoadCACertificatesResponse *, const char*);
SOAP_FMAC3 _tds__LoadCACertificatesResponse * SOAP_FMAC4 soap_in__tds__LoadCACertificatesResponse(struct soap*, const char*, _tds__LoadCACertificatesResponse *, const char*);
SOAP_FMAC1 _tds__LoadCACertificatesResponse * SOAP_FMAC2 soap_instantiate__tds__LoadCACertificatesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__LoadCACertificatesResponse * soap_new__tds__LoadCACertificatesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__LoadCACertificatesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__LoadCACertificatesResponse * soap_new_req__tds__LoadCACertificatesResponse(
	struct soap *soap)
{	_tds__LoadCACertificatesResponse *_p = soap_new__tds__LoadCACertificatesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__LoadCACertificatesResponse * soap_new_set__tds__LoadCACertificatesResponse(
	struct soap *soap)
{	_tds__LoadCACertificatesResponse *_p = soap_new__tds__LoadCACertificatesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__LoadCACertificatesResponse
#define soap_write__tds__LoadCACertificatesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:LoadCACertificatesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__LoadCACertificatesResponse * SOAP_FMAC4 soap_get__tds__LoadCACertificatesResponse(struct soap*, _tds__LoadCACertificatesResponse *, const char*, const char*);

#ifndef soap_read__tds__LoadCACertificatesResponse
#define soap_read__tds__LoadCACertificatesResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__LoadCACertificatesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__LoadCACertificates
#define SOAP_TYPE__tds__LoadCACertificates (279)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__LoadCACertificates(struct soap*, const char*, int, const _tds__LoadCACertificates *, const char*);
SOAP_FMAC3 _tds__LoadCACertificates * SOAP_FMAC4 soap_in__tds__LoadCACertificates(struct soap*, const char*, _tds__LoadCACertificates *, const char*);
SOAP_FMAC1 _tds__LoadCACertificates * SOAP_FMAC2 soap_instantiate__tds__LoadCACertificates(struct soap*, int, const char*, const char*, size_t*);

inline _tds__LoadCACertificates * soap_new__tds__LoadCACertificates(struct soap *soap, int n = -1) { return soap_instantiate__tds__LoadCACertificates(soap, n, NULL, NULL, NULL); }

inline _tds__LoadCACertificates * soap_new_req__tds__LoadCACertificates(
	struct soap *soap,
	const std::vector<tt__Certificate *> & CACertificate)
{	_tds__LoadCACertificates *_p = soap_new__tds__LoadCACertificates(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__LoadCACertificates::CACertificate = CACertificate;
	}
	return _p;
}

inline _tds__LoadCACertificates * soap_new_set__tds__LoadCACertificates(
	struct soap *soap,
	const std::vector<tt__Certificate *> & CACertificate)
{	_tds__LoadCACertificates *_p = soap_new__tds__LoadCACertificates(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__LoadCACertificates::CACertificate = CACertificate;
	}
	return _p;
}

#ifndef soap_write__tds__LoadCACertificates
#define soap_write__tds__LoadCACertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:LoadCACertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__LoadCACertificates * SOAP_FMAC4 soap_get__tds__LoadCACertificates(struct soap*, _tds__LoadCACertificates *, const char*, const char*);

#ifndef soap_read__tds__LoadCACertificates
#define soap_read__tds__LoadCACertificates(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__LoadCACertificates(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetCertificateInformationResponse
#define SOAP_TYPE__tds__GetCertificateInformationResponse (278)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetCertificateInformationResponse(struct soap*, const char*, int, const _tds__GetCertificateInformationResponse *, const char*);
SOAP_FMAC3 _tds__GetCertificateInformationResponse * SOAP_FMAC4 soap_in__tds__GetCertificateInformationResponse(struct soap*, const char*, _tds__GetCertificateInformationResponse *, const char*);
SOAP_FMAC1 _tds__GetCertificateInformationResponse * SOAP_FMAC2 soap_instantiate__tds__GetCertificateInformationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetCertificateInformationResponse * soap_new__tds__GetCertificateInformationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetCertificateInformationResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetCertificateInformationResponse * soap_new_req__tds__GetCertificateInformationResponse(
	struct soap *soap,
	tt__CertificateInformation *CertificateInformation)
{	_tds__GetCertificateInformationResponse *_p = soap_new__tds__GetCertificateInformationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetCertificateInformationResponse::CertificateInformation = CertificateInformation;
	}
	return _p;
}

inline _tds__GetCertificateInformationResponse * soap_new_set__tds__GetCertificateInformationResponse(
	struct soap *soap,
	tt__CertificateInformation *CertificateInformation)
{	_tds__GetCertificateInformationResponse *_p = soap_new__tds__GetCertificateInformationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetCertificateInformationResponse::CertificateInformation = CertificateInformation;
	}
	return _p;
}

#ifndef soap_write__tds__GetCertificateInformationResponse
#define soap_write__tds__GetCertificateInformationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetCertificateInformationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCertificateInformationResponse * SOAP_FMAC4 soap_get__tds__GetCertificateInformationResponse(struct soap*, _tds__GetCertificateInformationResponse *, const char*, const char*);

#ifndef soap_read__tds__GetCertificateInformationResponse
#define soap_read__tds__GetCertificateInformationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetCertificateInformationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetCertificateInformation
#define SOAP_TYPE__tds__GetCertificateInformation (277)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetCertificateInformation(struct soap*, const char*, int, const _tds__GetCertificateInformation *, const char*);
SOAP_FMAC3 _tds__GetCertificateInformation * SOAP_FMAC4 soap_in__tds__GetCertificateInformation(struct soap*, const char*, _tds__GetCertificateInformation *, const char*);
SOAP_FMAC1 _tds__GetCertificateInformation * SOAP_FMAC2 soap_instantiate__tds__GetCertificateInformation(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetCertificateInformation * soap_new__tds__GetCertificateInformation(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetCertificateInformation(soap, n, NULL, NULL, NULL); }

inline _tds__GetCertificateInformation * soap_new_req__tds__GetCertificateInformation(
	struct soap *soap,
	const std::string& CertificateID)
{	_tds__GetCertificateInformation *_p = soap_new__tds__GetCertificateInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetCertificateInformation::CertificateID = CertificateID;
	}
	return _p;
}

inline _tds__GetCertificateInformation * soap_new_set__tds__GetCertificateInformation(
	struct soap *soap,
	const std::string& CertificateID)
{	_tds__GetCertificateInformation *_p = soap_new__tds__GetCertificateInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetCertificateInformation::CertificateID = CertificateID;
	}
	return _p;
}

#ifndef soap_write__tds__GetCertificateInformation
#define soap_write__tds__GetCertificateInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetCertificateInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCertificateInformation * SOAP_FMAC4 soap_get__tds__GetCertificateInformation(struct soap*, _tds__GetCertificateInformation *, const char*, const char*);

#ifndef soap_read__tds__GetCertificateInformation
#define soap_read__tds__GetCertificateInformation(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetCertificateInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__LoadCertificateWithPrivateKeyResponse
#define SOAP_TYPE__tds__LoadCertificateWithPrivateKeyResponse (276)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, const char*, int, const _tds__LoadCertificateWithPrivateKeyResponse *, const char*);
SOAP_FMAC3 _tds__LoadCertificateWithPrivateKeyResponse * SOAP_FMAC4 soap_in__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, const char*, _tds__LoadCertificateWithPrivateKeyResponse *, const char*);
SOAP_FMAC1 _tds__LoadCertificateWithPrivateKeyResponse * SOAP_FMAC2 soap_instantiate__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__LoadCertificateWithPrivateKeyResponse * soap_new__tds__LoadCertificateWithPrivateKeyResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__LoadCertificateWithPrivateKeyResponse(soap, n, NULL, NULL, NULL); }

inline _tds__LoadCertificateWithPrivateKeyResponse * soap_new_req__tds__LoadCertificateWithPrivateKeyResponse(
	struct soap *soap)
{	_tds__LoadCertificateWithPrivateKeyResponse *_p = soap_new__tds__LoadCertificateWithPrivateKeyResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__LoadCertificateWithPrivateKeyResponse * soap_new_set__tds__LoadCertificateWithPrivateKeyResponse(
	struct soap *soap)
{	_tds__LoadCertificateWithPrivateKeyResponse *_p = soap_new__tds__LoadCertificateWithPrivateKeyResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__LoadCertificateWithPrivateKeyResponse
#define soap_write__tds__LoadCertificateWithPrivateKeyResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:LoadCertificateWithPrivateKeyResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__LoadCertificateWithPrivateKeyResponse * SOAP_FMAC4 soap_get__tds__LoadCertificateWithPrivateKeyResponse(struct soap*, _tds__LoadCertificateWithPrivateKeyResponse *, const char*, const char*);

#ifndef soap_read__tds__LoadCertificateWithPrivateKeyResponse
#define soap_read__tds__LoadCertificateWithPrivateKeyResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__LoadCertificateWithPrivateKeyResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__LoadCertificateWithPrivateKey
#define SOAP_TYPE__tds__LoadCertificateWithPrivateKey (275)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__LoadCertificateWithPrivateKey(struct soap*, const char*, int, const _tds__LoadCertificateWithPrivateKey *, const char*);
SOAP_FMAC3 _tds__LoadCertificateWithPrivateKey * SOAP_FMAC4 soap_in__tds__LoadCertificateWithPrivateKey(struct soap*, const char*, _tds__LoadCertificateWithPrivateKey *, const char*);
SOAP_FMAC1 _tds__LoadCertificateWithPrivateKey * SOAP_FMAC2 soap_instantiate__tds__LoadCertificateWithPrivateKey(struct soap*, int, const char*, const char*, size_t*);

inline _tds__LoadCertificateWithPrivateKey * soap_new__tds__LoadCertificateWithPrivateKey(struct soap *soap, int n = -1) { return soap_instantiate__tds__LoadCertificateWithPrivateKey(soap, n, NULL, NULL, NULL); }

inline _tds__LoadCertificateWithPrivateKey * soap_new_req__tds__LoadCertificateWithPrivateKey(
	struct soap *soap,
	const std::vector<tt__CertificateWithPrivateKey *> & CertificateWithPrivateKey)
{	_tds__LoadCertificateWithPrivateKey *_p = soap_new__tds__LoadCertificateWithPrivateKey(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__LoadCertificateWithPrivateKey::CertificateWithPrivateKey = CertificateWithPrivateKey;
	}
	return _p;
}

inline _tds__LoadCertificateWithPrivateKey * soap_new_set__tds__LoadCertificateWithPrivateKey(
	struct soap *soap,
	const std::vector<tt__CertificateWithPrivateKey *> & CertificateWithPrivateKey)
{	_tds__LoadCertificateWithPrivateKey *_p = soap_new__tds__LoadCertificateWithPrivateKey(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__LoadCertificateWithPrivateKey::CertificateWithPrivateKey = CertificateWithPrivateKey;
	}
	return _p;
}

#ifndef soap_write__tds__LoadCertificateWithPrivateKey
#define soap_write__tds__LoadCertificateWithPrivateKey(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:LoadCertificateWithPrivateKey", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__LoadCertificateWithPrivateKey * SOAP_FMAC4 soap_get__tds__LoadCertificateWithPrivateKey(struct soap*, _tds__LoadCertificateWithPrivateKey *, const char*, const char*);

#ifndef soap_read__tds__LoadCertificateWithPrivateKey
#define soap_read__tds__LoadCertificateWithPrivateKey(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__LoadCertificateWithPrivateKey(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetCACertificatesResponse
#define SOAP_TYPE__tds__GetCACertificatesResponse (274)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetCACertificatesResponse(struct soap*, const char*, int, const _tds__GetCACertificatesResponse *, const char*);
SOAP_FMAC3 _tds__GetCACertificatesResponse * SOAP_FMAC4 soap_in__tds__GetCACertificatesResponse(struct soap*, const char*, _tds__GetCACertificatesResponse *, const char*);
SOAP_FMAC1 _tds__GetCACertificatesResponse * SOAP_FMAC2 soap_instantiate__tds__GetCACertificatesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetCACertificatesResponse * soap_new__tds__GetCACertificatesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetCACertificatesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetCACertificatesResponse * soap_new_req__tds__GetCACertificatesResponse(
	struct soap *soap)
{	_tds__GetCACertificatesResponse *_p = soap_new__tds__GetCACertificatesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetCACertificatesResponse * soap_new_set__tds__GetCACertificatesResponse(
	struct soap *soap,
	const std::vector<tt__Certificate *> & CACertificate)
{	_tds__GetCACertificatesResponse *_p = soap_new__tds__GetCACertificatesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetCACertificatesResponse::CACertificate = CACertificate;
	}
	return _p;
}

#ifndef soap_write__tds__GetCACertificatesResponse
#define soap_write__tds__GetCACertificatesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetCACertificatesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCACertificatesResponse * SOAP_FMAC4 soap_get__tds__GetCACertificatesResponse(struct soap*, _tds__GetCACertificatesResponse *, const char*, const char*);

#ifndef soap_read__tds__GetCACertificatesResponse
#define soap_read__tds__GetCACertificatesResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetCACertificatesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetCACertificates
#define SOAP_TYPE__tds__GetCACertificates (273)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetCACertificates(struct soap*, const char*, int, const _tds__GetCACertificates *, const char*);
SOAP_FMAC3 _tds__GetCACertificates * SOAP_FMAC4 soap_in__tds__GetCACertificates(struct soap*, const char*, _tds__GetCACertificates *, const char*);
SOAP_FMAC1 _tds__GetCACertificates * SOAP_FMAC2 soap_instantiate__tds__GetCACertificates(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetCACertificates * soap_new__tds__GetCACertificates(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetCACertificates(soap, n, NULL, NULL, NULL); }

inline _tds__GetCACertificates * soap_new_req__tds__GetCACertificates(
	struct soap *soap)
{	_tds__GetCACertificates *_p = soap_new__tds__GetCACertificates(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetCACertificates * soap_new_set__tds__GetCACertificates(
	struct soap *soap)
{	_tds__GetCACertificates *_p = soap_new__tds__GetCACertificates(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetCACertificates
#define soap_write__tds__GetCACertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetCACertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCACertificates * SOAP_FMAC4 soap_get__tds__GetCACertificates(struct soap*, _tds__GetCACertificates *, const char*, const char*);

#ifndef soap_read__tds__GetCACertificates
#define soap_read__tds__GetCACertificates(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetCACertificates(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetClientCertificateModeResponse
#define SOAP_TYPE__tds__SetClientCertificateModeResponse (272)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetClientCertificateModeResponse(struct soap*, const char*, int, const _tds__SetClientCertificateModeResponse *, const char*);
SOAP_FMAC3 _tds__SetClientCertificateModeResponse * SOAP_FMAC4 soap_in__tds__SetClientCertificateModeResponse(struct soap*, const char*, _tds__SetClientCertificateModeResponse *, const char*);
SOAP_FMAC1 _tds__SetClientCertificateModeResponse * SOAP_FMAC2 soap_instantiate__tds__SetClientCertificateModeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetClientCertificateModeResponse * soap_new__tds__SetClientCertificateModeResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetClientCertificateModeResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetClientCertificateModeResponse * soap_new_req__tds__SetClientCertificateModeResponse(
	struct soap *soap)
{	_tds__SetClientCertificateModeResponse *_p = soap_new__tds__SetClientCertificateModeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SetClientCertificateModeResponse * soap_new_set__tds__SetClientCertificateModeResponse(
	struct soap *soap)
{	_tds__SetClientCertificateModeResponse *_p = soap_new__tds__SetClientCertificateModeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__SetClientCertificateModeResponse
#define soap_write__tds__SetClientCertificateModeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetClientCertificateModeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetClientCertificateModeResponse * SOAP_FMAC4 soap_get__tds__SetClientCertificateModeResponse(struct soap*, _tds__SetClientCertificateModeResponse *, const char*, const char*);

#ifndef soap_read__tds__SetClientCertificateModeResponse
#define soap_read__tds__SetClientCertificateModeResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetClientCertificateModeResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetClientCertificateMode
#define SOAP_TYPE__tds__SetClientCertificateMode (271)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetClientCertificateMode(struct soap*, const char*, int, const _tds__SetClientCertificateMode *, const char*);
SOAP_FMAC3 _tds__SetClientCertificateMode * SOAP_FMAC4 soap_in__tds__SetClientCertificateMode(struct soap*, const char*, _tds__SetClientCertificateMode *, const char*);
SOAP_FMAC1 _tds__SetClientCertificateMode * SOAP_FMAC2 soap_instantiate__tds__SetClientCertificateMode(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetClientCertificateMode * soap_new__tds__SetClientCertificateMode(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetClientCertificateMode(soap, n, NULL, NULL, NULL); }

inline _tds__SetClientCertificateMode * soap_new_req__tds__SetClientCertificateMode(
	struct soap *soap,
	bool Enabled)
{	_tds__SetClientCertificateMode *_p = soap_new__tds__SetClientCertificateMode(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetClientCertificateMode::Enabled = Enabled;
	}
	return _p;
}

inline _tds__SetClientCertificateMode * soap_new_set__tds__SetClientCertificateMode(
	struct soap *soap,
	bool Enabled)
{	_tds__SetClientCertificateMode *_p = soap_new__tds__SetClientCertificateMode(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetClientCertificateMode::Enabled = Enabled;
	}
	return _p;
}

#ifndef soap_write__tds__SetClientCertificateMode
#define soap_write__tds__SetClientCertificateMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetClientCertificateMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetClientCertificateMode * SOAP_FMAC4 soap_get__tds__SetClientCertificateMode(struct soap*, _tds__SetClientCertificateMode *, const char*, const char*);

#ifndef soap_read__tds__SetClientCertificateMode
#define soap_read__tds__SetClientCertificateMode(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetClientCertificateMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetClientCertificateModeResponse
#define SOAP_TYPE__tds__GetClientCertificateModeResponse (270)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetClientCertificateModeResponse(struct soap*, const char*, int, const _tds__GetClientCertificateModeResponse *, const char*);
SOAP_FMAC3 _tds__GetClientCertificateModeResponse * SOAP_FMAC4 soap_in__tds__GetClientCertificateModeResponse(struct soap*, const char*, _tds__GetClientCertificateModeResponse *, const char*);
SOAP_FMAC1 _tds__GetClientCertificateModeResponse * SOAP_FMAC2 soap_instantiate__tds__GetClientCertificateModeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetClientCertificateModeResponse * soap_new__tds__GetClientCertificateModeResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetClientCertificateModeResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetClientCertificateModeResponse * soap_new_req__tds__GetClientCertificateModeResponse(
	struct soap *soap,
	bool Enabled)
{	_tds__GetClientCertificateModeResponse *_p = soap_new__tds__GetClientCertificateModeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetClientCertificateModeResponse::Enabled = Enabled;
	}
	return _p;
}

inline _tds__GetClientCertificateModeResponse * soap_new_set__tds__GetClientCertificateModeResponse(
	struct soap *soap,
	bool Enabled)
{	_tds__GetClientCertificateModeResponse *_p = soap_new__tds__GetClientCertificateModeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetClientCertificateModeResponse::Enabled = Enabled;
	}
	return _p;
}

#ifndef soap_write__tds__GetClientCertificateModeResponse
#define soap_write__tds__GetClientCertificateModeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetClientCertificateModeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetClientCertificateModeResponse * SOAP_FMAC4 soap_get__tds__GetClientCertificateModeResponse(struct soap*, _tds__GetClientCertificateModeResponse *, const char*, const char*);

#ifndef soap_read__tds__GetClientCertificateModeResponse
#define soap_read__tds__GetClientCertificateModeResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetClientCertificateModeResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetClientCertificateMode
#define SOAP_TYPE__tds__GetClientCertificateMode (269)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetClientCertificateMode(struct soap*, const char*, int, const _tds__GetClientCertificateMode *, const char*);
SOAP_FMAC3 _tds__GetClientCertificateMode * SOAP_FMAC4 soap_in__tds__GetClientCertificateMode(struct soap*, const char*, _tds__GetClientCertificateMode *, const char*);
SOAP_FMAC1 _tds__GetClientCertificateMode * SOAP_FMAC2 soap_instantiate__tds__GetClientCertificateMode(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetClientCertificateMode * soap_new__tds__GetClientCertificateMode(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetClientCertificateMode(soap, n, NULL, NULL, NULL); }

inline _tds__GetClientCertificateMode * soap_new_req__tds__GetClientCertificateMode(
	struct soap *soap)
{	_tds__GetClientCertificateMode *_p = soap_new__tds__GetClientCertificateMode(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetClientCertificateMode * soap_new_set__tds__GetClientCertificateMode(
	struct soap *soap)
{	_tds__GetClientCertificateMode *_p = soap_new__tds__GetClientCertificateMode(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetClientCertificateMode
#define soap_write__tds__GetClientCertificateMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetClientCertificateMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetClientCertificateMode * SOAP_FMAC4 soap_get__tds__GetClientCertificateMode(struct soap*, _tds__GetClientCertificateMode *, const char*, const char*);

#ifndef soap_read__tds__GetClientCertificateMode
#define soap_read__tds__GetClientCertificateMode(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetClientCertificateMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__LoadCertificatesResponse
#define SOAP_TYPE__tds__LoadCertificatesResponse (268)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__LoadCertificatesResponse(struct soap*, const char*, int, const _tds__LoadCertificatesResponse *, const char*);
SOAP_FMAC3 _tds__LoadCertificatesResponse * SOAP_FMAC4 soap_in__tds__LoadCertificatesResponse(struct soap*, const char*, _tds__LoadCertificatesResponse *, const char*);
SOAP_FMAC1 _tds__LoadCertificatesResponse * SOAP_FMAC2 soap_instantiate__tds__LoadCertificatesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__LoadCertificatesResponse * soap_new__tds__LoadCertificatesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__LoadCertificatesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__LoadCertificatesResponse * soap_new_req__tds__LoadCertificatesResponse(
	struct soap *soap)
{	_tds__LoadCertificatesResponse *_p = soap_new__tds__LoadCertificatesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__LoadCertificatesResponse * soap_new_set__tds__LoadCertificatesResponse(
	struct soap *soap)
{	_tds__LoadCertificatesResponse *_p = soap_new__tds__LoadCertificatesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__LoadCertificatesResponse
#define soap_write__tds__LoadCertificatesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:LoadCertificatesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__LoadCertificatesResponse * SOAP_FMAC4 soap_get__tds__LoadCertificatesResponse(struct soap*, _tds__LoadCertificatesResponse *, const char*, const char*);

#ifndef soap_read__tds__LoadCertificatesResponse
#define soap_read__tds__LoadCertificatesResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__LoadCertificatesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__LoadCertificates
#define SOAP_TYPE__tds__LoadCertificates (267)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__LoadCertificates(struct soap*, const char*, int, const _tds__LoadCertificates *, const char*);
SOAP_FMAC3 _tds__LoadCertificates * SOAP_FMAC4 soap_in__tds__LoadCertificates(struct soap*, const char*, _tds__LoadCertificates *, const char*);
SOAP_FMAC1 _tds__LoadCertificates * SOAP_FMAC2 soap_instantiate__tds__LoadCertificates(struct soap*, int, const char*, const char*, size_t*);

inline _tds__LoadCertificates * soap_new__tds__LoadCertificates(struct soap *soap, int n = -1) { return soap_instantiate__tds__LoadCertificates(soap, n, NULL, NULL, NULL); }

inline _tds__LoadCertificates * soap_new_req__tds__LoadCertificates(
	struct soap *soap,
	const std::vector<tt__Certificate *> & NVTCertificate)
{	_tds__LoadCertificates *_p = soap_new__tds__LoadCertificates(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__LoadCertificates::NVTCertificate = NVTCertificate;
	}
	return _p;
}

inline _tds__LoadCertificates * soap_new_set__tds__LoadCertificates(
	struct soap *soap,
	const std::vector<tt__Certificate *> & NVTCertificate)
{	_tds__LoadCertificates *_p = soap_new__tds__LoadCertificates(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__LoadCertificates::NVTCertificate = NVTCertificate;
	}
	return _p;
}

#ifndef soap_write__tds__LoadCertificates
#define soap_write__tds__LoadCertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:LoadCertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__LoadCertificates * SOAP_FMAC4 soap_get__tds__LoadCertificates(struct soap*, _tds__LoadCertificates *, const char*, const char*);

#ifndef soap_read__tds__LoadCertificates
#define soap_read__tds__LoadCertificates(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__LoadCertificates(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetPkcs10RequestResponse
#define SOAP_TYPE__tds__GetPkcs10RequestResponse (266)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetPkcs10RequestResponse(struct soap*, const char*, int, const _tds__GetPkcs10RequestResponse *, const char*);
SOAP_FMAC3 _tds__GetPkcs10RequestResponse * SOAP_FMAC4 soap_in__tds__GetPkcs10RequestResponse(struct soap*, const char*, _tds__GetPkcs10RequestResponse *, const char*);
SOAP_FMAC1 _tds__GetPkcs10RequestResponse * SOAP_FMAC2 soap_instantiate__tds__GetPkcs10RequestResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetPkcs10RequestResponse * soap_new__tds__GetPkcs10RequestResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetPkcs10RequestResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetPkcs10RequestResponse * soap_new_req__tds__GetPkcs10RequestResponse(
	struct soap *soap,
	tt__BinaryData *Pkcs10Request)
{	_tds__GetPkcs10RequestResponse *_p = soap_new__tds__GetPkcs10RequestResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetPkcs10RequestResponse::Pkcs10Request = Pkcs10Request;
	}
	return _p;
}

inline _tds__GetPkcs10RequestResponse * soap_new_set__tds__GetPkcs10RequestResponse(
	struct soap *soap,
	tt__BinaryData *Pkcs10Request)
{	_tds__GetPkcs10RequestResponse *_p = soap_new__tds__GetPkcs10RequestResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetPkcs10RequestResponse::Pkcs10Request = Pkcs10Request;
	}
	return _p;
}

#ifndef soap_write__tds__GetPkcs10RequestResponse
#define soap_write__tds__GetPkcs10RequestResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetPkcs10RequestResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetPkcs10RequestResponse * SOAP_FMAC4 soap_get__tds__GetPkcs10RequestResponse(struct soap*, _tds__GetPkcs10RequestResponse *, const char*, const char*);

#ifndef soap_read__tds__GetPkcs10RequestResponse
#define soap_read__tds__GetPkcs10RequestResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetPkcs10RequestResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetPkcs10Request
#define SOAP_TYPE__tds__GetPkcs10Request (265)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetPkcs10Request(struct soap*, const char*, int, const _tds__GetPkcs10Request *, const char*);
SOAP_FMAC3 _tds__GetPkcs10Request * SOAP_FMAC4 soap_in__tds__GetPkcs10Request(struct soap*, const char*, _tds__GetPkcs10Request *, const char*);
SOAP_FMAC1 _tds__GetPkcs10Request * SOAP_FMAC2 soap_instantiate__tds__GetPkcs10Request(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetPkcs10Request * soap_new__tds__GetPkcs10Request(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetPkcs10Request(soap, n, NULL, NULL, NULL); }

inline _tds__GetPkcs10Request * soap_new_req__tds__GetPkcs10Request(
	struct soap *soap,
	const std::string& CertificateID)
{	_tds__GetPkcs10Request *_p = soap_new__tds__GetPkcs10Request(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetPkcs10Request::CertificateID = CertificateID;
	}
	return _p;
}

inline _tds__GetPkcs10Request * soap_new_set__tds__GetPkcs10Request(
	struct soap *soap,
	const std::string& CertificateID,
	std::string *Subject,
	tt__BinaryData *Attributes)
{	_tds__GetPkcs10Request *_p = soap_new__tds__GetPkcs10Request(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetPkcs10Request::CertificateID = CertificateID;
		_p->_tds__GetPkcs10Request::Subject = Subject;
		_p->_tds__GetPkcs10Request::Attributes = Attributes;
	}
	return _p;
}

#ifndef soap_write__tds__GetPkcs10Request
#define soap_write__tds__GetPkcs10Request(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetPkcs10Request", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetPkcs10Request * SOAP_FMAC4 soap_get__tds__GetPkcs10Request(struct soap*, _tds__GetPkcs10Request *, const char*, const char*);

#ifndef soap_read__tds__GetPkcs10Request
#define soap_read__tds__GetPkcs10Request(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetPkcs10Request(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__DeleteCertificatesResponse
#define SOAP_TYPE__tds__DeleteCertificatesResponse (264)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__DeleteCertificatesResponse(struct soap*, const char*, int, const _tds__DeleteCertificatesResponse *, const char*);
SOAP_FMAC3 _tds__DeleteCertificatesResponse * SOAP_FMAC4 soap_in__tds__DeleteCertificatesResponse(struct soap*, const char*, _tds__DeleteCertificatesResponse *, const char*);
SOAP_FMAC1 _tds__DeleteCertificatesResponse * SOAP_FMAC2 soap_instantiate__tds__DeleteCertificatesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__DeleteCertificatesResponse * soap_new__tds__DeleteCertificatesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__DeleteCertificatesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__DeleteCertificatesResponse * soap_new_req__tds__DeleteCertificatesResponse(
	struct soap *soap)
{	_tds__DeleteCertificatesResponse *_p = soap_new__tds__DeleteCertificatesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__DeleteCertificatesResponse * soap_new_set__tds__DeleteCertificatesResponse(
	struct soap *soap)
{	_tds__DeleteCertificatesResponse *_p = soap_new__tds__DeleteCertificatesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__DeleteCertificatesResponse
#define soap_write__tds__DeleteCertificatesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:DeleteCertificatesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__DeleteCertificatesResponse * SOAP_FMAC4 soap_get__tds__DeleteCertificatesResponse(struct soap*, _tds__DeleteCertificatesResponse *, const char*, const char*);

#ifndef soap_read__tds__DeleteCertificatesResponse
#define soap_read__tds__DeleteCertificatesResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__DeleteCertificatesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__DeleteCertificates
#define SOAP_TYPE__tds__DeleteCertificates (263)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__DeleteCertificates(struct soap*, const char*, int, const _tds__DeleteCertificates *, const char*);
SOAP_FMAC3 _tds__DeleteCertificates * SOAP_FMAC4 soap_in__tds__DeleteCertificates(struct soap*, const char*, _tds__DeleteCertificates *, const char*);
SOAP_FMAC1 _tds__DeleteCertificates * SOAP_FMAC2 soap_instantiate__tds__DeleteCertificates(struct soap*, int, const char*, const char*, size_t*);

inline _tds__DeleteCertificates * soap_new__tds__DeleteCertificates(struct soap *soap, int n = -1) { return soap_instantiate__tds__DeleteCertificates(soap, n, NULL, NULL, NULL); }

inline _tds__DeleteCertificates * soap_new_req__tds__DeleteCertificates(
	struct soap *soap,
	const std::vector<std::string> & CertificateID)
{	_tds__DeleteCertificates *_p = soap_new__tds__DeleteCertificates(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__DeleteCertificates::CertificateID = CertificateID;
	}
	return _p;
}

inline _tds__DeleteCertificates * soap_new_set__tds__DeleteCertificates(
	struct soap *soap,
	const std::vector<std::string> & CertificateID)
{	_tds__DeleteCertificates *_p = soap_new__tds__DeleteCertificates(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__DeleteCertificates::CertificateID = CertificateID;
	}
	return _p;
}

#ifndef soap_write__tds__DeleteCertificates
#define soap_write__tds__DeleteCertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:DeleteCertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__DeleteCertificates * SOAP_FMAC4 soap_get__tds__DeleteCertificates(struct soap*, _tds__DeleteCertificates *, const char*, const char*);

#ifndef soap_read__tds__DeleteCertificates
#define soap_read__tds__DeleteCertificates(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__DeleteCertificates(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetCertificatesStatusResponse
#define SOAP_TYPE__tds__SetCertificatesStatusResponse (262)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetCertificatesStatusResponse(struct soap*, const char*, int, const _tds__SetCertificatesStatusResponse *, const char*);
SOAP_FMAC3 _tds__SetCertificatesStatusResponse * SOAP_FMAC4 soap_in__tds__SetCertificatesStatusResponse(struct soap*, const char*, _tds__SetCertificatesStatusResponse *, const char*);
SOAP_FMAC1 _tds__SetCertificatesStatusResponse * SOAP_FMAC2 soap_instantiate__tds__SetCertificatesStatusResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetCertificatesStatusResponse * soap_new__tds__SetCertificatesStatusResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetCertificatesStatusResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetCertificatesStatusResponse * soap_new_req__tds__SetCertificatesStatusResponse(
	struct soap *soap)
{	_tds__SetCertificatesStatusResponse *_p = soap_new__tds__SetCertificatesStatusResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SetCertificatesStatusResponse * soap_new_set__tds__SetCertificatesStatusResponse(
	struct soap *soap)
{	_tds__SetCertificatesStatusResponse *_p = soap_new__tds__SetCertificatesStatusResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__SetCertificatesStatusResponse
#define soap_write__tds__SetCertificatesStatusResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetCertificatesStatusResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetCertificatesStatusResponse * SOAP_FMAC4 soap_get__tds__SetCertificatesStatusResponse(struct soap*, _tds__SetCertificatesStatusResponse *, const char*, const char*);

#ifndef soap_read__tds__SetCertificatesStatusResponse
#define soap_read__tds__SetCertificatesStatusResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetCertificatesStatusResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetCertificatesStatus
#define SOAP_TYPE__tds__SetCertificatesStatus (261)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetCertificatesStatus(struct soap*, const char*, int, const _tds__SetCertificatesStatus *, const char*);
SOAP_FMAC3 _tds__SetCertificatesStatus * SOAP_FMAC4 soap_in__tds__SetCertificatesStatus(struct soap*, const char*, _tds__SetCertificatesStatus *, const char*);
SOAP_FMAC1 _tds__SetCertificatesStatus * SOAP_FMAC2 soap_instantiate__tds__SetCertificatesStatus(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetCertificatesStatus * soap_new__tds__SetCertificatesStatus(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetCertificatesStatus(soap, n, NULL, NULL, NULL); }

inline _tds__SetCertificatesStatus * soap_new_req__tds__SetCertificatesStatus(
	struct soap *soap)
{	_tds__SetCertificatesStatus *_p = soap_new__tds__SetCertificatesStatus(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SetCertificatesStatus * soap_new_set__tds__SetCertificatesStatus(
	struct soap *soap,
	const std::vector<tt__CertificateStatus *> & CertificateStatus)
{	_tds__SetCertificatesStatus *_p = soap_new__tds__SetCertificatesStatus(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetCertificatesStatus::CertificateStatus = CertificateStatus;
	}
	return _p;
}

#ifndef soap_write__tds__SetCertificatesStatus
#define soap_write__tds__SetCertificatesStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetCertificatesStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetCertificatesStatus * SOAP_FMAC4 soap_get__tds__SetCertificatesStatus(struct soap*, _tds__SetCertificatesStatus *, const char*, const char*);

#ifndef soap_read__tds__SetCertificatesStatus
#define soap_read__tds__SetCertificatesStatus(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetCertificatesStatus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetCertificatesStatusResponse
#define SOAP_TYPE__tds__GetCertificatesStatusResponse (260)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetCertificatesStatusResponse(struct soap*, const char*, int, const _tds__GetCertificatesStatusResponse *, const char*);
SOAP_FMAC3 _tds__GetCertificatesStatusResponse * SOAP_FMAC4 soap_in__tds__GetCertificatesStatusResponse(struct soap*, const char*, _tds__GetCertificatesStatusResponse *, const char*);
SOAP_FMAC1 _tds__GetCertificatesStatusResponse * SOAP_FMAC2 soap_instantiate__tds__GetCertificatesStatusResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetCertificatesStatusResponse * soap_new__tds__GetCertificatesStatusResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetCertificatesStatusResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetCertificatesStatusResponse * soap_new_req__tds__GetCertificatesStatusResponse(
	struct soap *soap)
{	_tds__GetCertificatesStatusResponse *_p = soap_new__tds__GetCertificatesStatusResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetCertificatesStatusResponse * soap_new_set__tds__GetCertificatesStatusResponse(
	struct soap *soap,
	const std::vector<tt__CertificateStatus *> & CertificateStatus)
{	_tds__GetCertificatesStatusResponse *_p = soap_new__tds__GetCertificatesStatusResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetCertificatesStatusResponse::CertificateStatus = CertificateStatus;
	}
	return _p;
}

#ifndef soap_write__tds__GetCertificatesStatusResponse
#define soap_write__tds__GetCertificatesStatusResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetCertificatesStatusResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCertificatesStatusResponse * SOAP_FMAC4 soap_get__tds__GetCertificatesStatusResponse(struct soap*, _tds__GetCertificatesStatusResponse *, const char*, const char*);

#ifndef soap_read__tds__GetCertificatesStatusResponse
#define soap_read__tds__GetCertificatesStatusResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetCertificatesStatusResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetCertificatesStatus
#define SOAP_TYPE__tds__GetCertificatesStatus (259)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetCertificatesStatus(struct soap*, const char*, int, const _tds__GetCertificatesStatus *, const char*);
SOAP_FMAC3 _tds__GetCertificatesStatus * SOAP_FMAC4 soap_in__tds__GetCertificatesStatus(struct soap*, const char*, _tds__GetCertificatesStatus *, const char*);
SOAP_FMAC1 _tds__GetCertificatesStatus * SOAP_FMAC2 soap_instantiate__tds__GetCertificatesStatus(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetCertificatesStatus * soap_new__tds__GetCertificatesStatus(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetCertificatesStatus(soap, n, NULL, NULL, NULL); }

inline _tds__GetCertificatesStatus * soap_new_req__tds__GetCertificatesStatus(
	struct soap *soap)
{	_tds__GetCertificatesStatus *_p = soap_new__tds__GetCertificatesStatus(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetCertificatesStatus * soap_new_set__tds__GetCertificatesStatus(
	struct soap *soap)
{	_tds__GetCertificatesStatus *_p = soap_new__tds__GetCertificatesStatus(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetCertificatesStatus
#define soap_write__tds__GetCertificatesStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetCertificatesStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCertificatesStatus * SOAP_FMAC4 soap_get__tds__GetCertificatesStatus(struct soap*, _tds__GetCertificatesStatus *, const char*, const char*);

#ifndef soap_read__tds__GetCertificatesStatus
#define soap_read__tds__GetCertificatesStatus(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetCertificatesStatus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetCertificatesResponse
#define SOAP_TYPE__tds__GetCertificatesResponse (258)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetCertificatesResponse(struct soap*, const char*, int, const _tds__GetCertificatesResponse *, const char*);
SOAP_FMAC3 _tds__GetCertificatesResponse * SOAP_FMAC4 soap_in__tds__GetCertificatesResponse(struct soap*, const char*, _tds__GetCertificatesResponse *, const char*);
SOAP_FMAC1 _tds__GetCertificatesResponse * SOAP_FMAC2 soap_instantiate__tds__GetCertificatesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetCertificatesResponse * soap_new__tds__GetCertificatesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetCertificatesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetCertificatesResponse * soap_new_req__tds__GetCertificatesResponse(
	struct soap *soap)
{	_tds__GetCertificatesResponse *_p = soap_new__tds__GetCertificatesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetCertificatesResponse * soap_new_set__tds__GetCertificatesResponse(
	struct soap *soap,
	const std::vector<tt__Certificate *> & NvtCertificate)
{	_tds__GetCertificatesResponse *_p = soap_new__tds__GetCertificatesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetCertificatesResponse::NvtCertificate = NvtCertificate;
	}
	return _p;
}

#ifndef soap_write__tds__GetCertificatesResponse
#define soap_write__tds__GetCertificatesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetCertificatesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCertificatesResponse * SOAP_FMAC4 soap_get__tds__GetCertificatesResponse(struct soap*, _tds__GetCertificatesResponse *, const char*, const char*);

#ifndef soap_read__tds__GetCertificatesResponse
#define soap_read__tds__GetCertificatesResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetCertificatesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetCertificates
#define SOAP_TYPE__tds__GetCertificates (257)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetCertificates(struct soap*, const char*, int, const _tds__GetCertificates *, const char*);
SOAP_FMAC3 _tds__GetCertificates * SOAP_FMAC4 soap_in__tds__GetCertificates(struct soap*, const char*, _tds__GetCertificates *, const char*);
SOAP_FMAC1 _tds__GetCertificates * SOAP_FMAC2 soap_instantiate__tds__GetCertificates(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetCertificates * soap_new__tds__GetCertificates(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetCertificates(soap, n, NULL, NULL, NULL); }

inline _tds__GetCertificates * soap_new_req__tds__GetCertificates(
	struct soap *soap)
{	_tds__GetCertificates *_p = soap_new__tds__GetCertificates(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetCertificates * soap_new_set__tds__GetCertificates(
	struct soap *soap)
{	_tds__GetCertificates *_p = soap_new__tds__GetCertificates(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetCertificates
#define soap_write__tds__GetCertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetCertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCertificates * SOAP_FMAC4 soap_get__tds__GetCertificates(struct soap*, _tds__GetCertificates *, const char*, const char*);

#ifndef soap_read__tds__GetCertificates
#define soap_read__tds__GetCertificates(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetCertificates(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__CreateCertificateResponse
#define SOAP_TYPE__tds__CreateCertificateResponse (256)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__CreateCertificateResponse(struct soap*, const char*, int, const _tds__CreateCertificateResponse *, const char*);
SOAP_FMAC3 _tds__CreateCertificateResponse * SOAP_FMAC4 soap_in__tds__CreateCertificateResponse(struct soap*, const char*, _tds__CreateCertificateResponse *, const char*);
SOAP_FMAC1 _tds__CreateCertificateResponse * SOAP_FMAC2 soap_instantiate__tds__CreateCertificateResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__CreateCertificateResponse * soap_new__tds__CreateCertificateResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__CreateCertificateResponse(soap, n, NULL, NULL, NULL); }

inline _tds__CreateCertificateResponse * soap_new_req__tds__CreateCertificateResponse(
	struct soap *soap,
	tt__Certificate *NvtCertificate)
{	_tds__CreateCertificateResponse *_p = soap_new__tds__CreateCertificateResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__CreateCertificateResponse::NvtCertificate = NvtCertificate;
	}
	return _p;
}

inline _tds__CreateCertificateResponse * soap_new_set__tds__CreateCertificateResponse(
	struct soap *soap,
	tt__Certificate *NvtCertificate)
{	_tds__CreateCertificateResponse *_p = soap_new__tds__CreateCertificateResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__CreateCertificateResponse::NvtCertificate = NvtCertificate;
	}
	return _p;
}

#ifndef soap_write__tds__CreateCertificateResponse
#define soap_write__tds__CreateCertificateResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:CreateCertificateResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__CreateCertificateResponse * SOAP_FMAC4 soap_get__tds__CreateCertificateResponse(struct soap*, _tds__CreateCertificateResponse *, const char*, const char*);

#ifndef soap_read__tds__CreateCertificateResponse
#define soap_read__tds__CreateCertificateResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__CreateCertificateResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__CreateCertificate
#define SOAP_TYPE__tds__CreateCertificate (255)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__CreateCertificate(struct soap*, const char*, int, const _tds__CreateCertificate *, const char*);
SOAP_FMAC3 _tds__CreateCertificate * SOAP_FMAC4 soap_in__tds__CreateCertificate(struct soap*, const char*, _tds__CreateCertificate *, const char*);
SOAP_FMAC1 _tds__CreateCertificate * SOAP_FMAC2 soap_instantiate__tds__CreateCertificate(struct soap*, int, const char*, const char*, size_t*);

inline _tds__CreateCertificate * soap_new__tds__CreateCertificate(struct soap *soap, int n = -1) { return soap_instantiate__tds__CreateCertificate(soap, n, NULL, NULL, NULL); }

inline _tds__CreateCertificate * soap_new_req__tds__CreateCertificate(
	struct soap *soap)
{	_tds__CreateCertificate *_p = soap_new__tds__CreateCertificate(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__CreateCertificate * soap_new_set__tds__CreateCertificate(
	struct soap *soap,
	std::string *CertificateID,
	std::string *Subject,
	time_t *ValidNotBefore,
	time_t *ValidNotAfter)
{	_tds__CreateCertificate *_p = soap_new__tds__CreateCertificate(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__CreateCertificate::CertificateID = CertificateID;
		_p->_tds__CreateCertificate::Subject = Subject;
		_p->_tds__CreateCertificate::ValidNotBefore = ValidNotBefore;
		_p->_tds__CreateCertificate::ValidNotAfter = ValidNotAfter;
	}
	return _p;
}

#ifndef soap_write__tds__CreateCertificate
#define soap_write__tds__CreateCertificate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:CreateCertificate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__CreateCertificate * SOAP_FMAC4 soap_get__tds__CreateCertificate(struct soap*, _tds__CreateCertificate *, const char*, const char*);

#ifndef soap_read__tds__CreateCertificate
#define soap_read__tds__CreateCertificate(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__CreateCertificate(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetAccessPolicyResponse
#define SOAP_TYPE__tds__SetAccessPolicyResponse (254)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetAccessPolicyResponse(struct soap*, const char*, int, const _tds__SetAccessPolicyResponse *, const char*);
SOAP_FMAC3 _tds__SetAccessPolicyResponse * SOAP_FMAC4 soap_in__tds__SetAccessPolicyResponse(struct soap*, const char*, _tds__SetAccessPolicyResponse *, const char*);
SOAP_FMAC1 _tds__SetAccessPolicyResponse * SOAP_FMAC2 soap_instantiate__tds__SetAccessPolicyResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetAccessPolicyResponse * soap_new__tds__SetAccessPolicyResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetAccessPolicyResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetAccessPolicyResponse * soap_new_req__tds__SetAccessPolicyResponse(
	struct soap *soap)
{	_tds__SetAccessPolicyResponse *_p = soap_new__tds__SetAccessPolicyResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SetAccessPolicyResponse * soap_new_set__tds__SetAccessPolicyResponse(
	struct soap *soap)
{	_tds__SetAccessPolicyResponse *_p = soap_new__tds__SetAccessPolicyResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__SetAccessPolicyResponse
#define soap_write__tds__SetAccessPolicyResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetAccessPolicyResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetAccessPolicyResponse * SOAP_FMAC4 soap_get__tds__SetAccessPolicyResponse(struct soap*, _tds__SetAccessPolicyResponse *, const char*, const char*);

#ifndef soap_read__tds__SetAccessPolicyResponse
#define soap_read__tds__SetAccessPolicyResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetAccessPolicyResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetAccessPolicy
#define SOAP_TYPE__tds__SetAccessPolicy (253)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetAccessPolicy(struct soap*, const char*, int, const _tds__SetAccessPolicy *, const char*);
SOAP_FMAC3 _tds__SetAccessPolicy * SOAP_FMAC4 soap_in__tds__SetAccessPolicy(struct soap*, const char*, _tds__SetAccessPolicy *, const char*);
SOAP_FMAC1 _tds__SetAccessPolicy * SOAP_FMAC2 soap_instantiate__tds__SetAccessPolicy(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetAccessPolicy * soap_new__tds__SetAccessPolicy(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetAccessPolicy(soap, n, NULL, NULL, NULL); }

inline _tds__SetAccessPolicy * soap_new_req__tds__SetAccessPolicy(
	struct soap *soap,
	tt__BinaryData *PolicyFile)
{	_tds__SetAccessPolicy *_p = soap_new__tds__SetAccessPolicy(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetAccessPolicy::PolicyFile = PolicyFile;
	}
	return _p;
}

inline _tds__SetAccessPolicy * soap_new_set__tds__SetAccessPolicy(
	struct soap *soap,
	tt__BinaryData *PolicyFile)
{	_tds__SetAccessPolicy *_p = soap_new__tds__SetAccessPolicy(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetAccessPolicy::PolicyFile = PolicyFile;
	}
	return _p;
}

#ifndef soap_write__tds__SetAccessPolicy
#define soap_write__tds__SetAccessPolicy(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetAccessPolicy", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetAccessPolicy * SOAP_FMAC4 soap_get__tds__SetAccessPolicy(struct soap*, _tds__SetAccessPolicy *, const char*, const char*);

#ifndef soap_read__tds__SetAccessPolicy
#define soap_read__tds__SetAccessPolicy(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetAccessPolicy(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetAccessPolicyResponse
#define SOAP_TYPE__tds__GetAccessPolicyResponse (252)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetAccessPolicyResponse(struct soap*, const char*, int, const _tds__GetAccessPolicyResponse *, const char*);
SOAP_FMAC3 _tds__GetAccessPolicyResponse * SOAP_FMAC4 soap_in__tds__GetAccessPolicyResponse(struct soap*, const char*, _tds__GetAccessPolicyResponse *, const char*);
SOAP_FMAC1 _tds__GetAccessPolicyResponse * SOAP_FMAC2 soap_instantiate__tds__GetAccessPolicyResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetAccessPolicyResponse * soap_new__tds__GetAccessPolicyResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetAccessPolicyResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetAccessPolicyResponse * soap_new_req__tds__GetAccessPolicyResponse(
	struct soap *soap,
	tt__BinaryData *PolicyFile)
{	_tds__GetAccessPolicyResponse *_p = soap_new__tds__GetAccessPolicyResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetAccessPolicyResponse::PolicyFile = PolicyFile;
	}
	return _p;
}

inline _tds__GetAccessPolicyResponse * soap_new_set__tds__GetAccessPolicyResponse(
	struct soap *soap,
	tt__BinaryData *PolicyFile)
{	_tds__GetAccessPolicyResponse *_p = soap_new__tds__GetAccessPolicyResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetAccessPolicyResponse::PolicyFile = PolicyFile;
	}
	return _p;
}

#ifndef soap_write__tds__GetAccessPolicyResponse
#define soap_write__tds__GetAccessPolicyResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetAccessPolicyResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetAccessPolicyResponse * SOAP_FMAC4 soap_get__tds__GetAccessPolicyResponse(struct soap*, _tds__GetAccessPolicyResponse *, const char*, const char*);

#ifndef soap_read__tds__GetAccessPolicyResponse
#define soap_read__tds__GetAccessPolicyResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetAccessPolicyResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetAccessPolicy
#define SOAP_TYPE__tds__GetAccessPolicy (251)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetAccessPolicy(struct soap*, const char*, int, const _tds__GetAccessPolicy *, const char*);
SOAP_FMAC3 _tds__GetAccessPolicy * SOAP_FMAC4 soap_in__tds__GetAccessPolicy(struct soap*, const char*, _tds__GetAccessPolicy *, const char*);
SOAP_FMAC1 _tds__GetAccessPolicy * SOAP_FMAC2 soap_instantiate__tds__GetAccessPolicy(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetAccessPolicy * soap_new__tds__GetAccessPolicy(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetAccessPolicy(soap, n, NULL, NULL, NULL); }

inline _tds__GetAccessPolicy * soap_new_req__tds__GetAccessPolicy(
	struct soap *soap)
{	_tds__GetAccessPolicy *_p = soap_new__tds__GetAccessPolicy(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetAccessPolicy * soap_new_set__tds__GetAccessPolicy(
	struct soap *soap)
{	_tds__GetAccessPolicy *_p = soap_new__tds__GetAccessPolicy(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetAccessPolicy
#define soap_write__tds__GetAccessPolicy(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetAccessPolicy", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetAccessPolicy * SOAP_FMAC4 soap_get__tds__GetAccessPolicy(struct soap*, _tds__GetAccessPolicy *, const char*, const char*);

#ifndef soap_read__tds__GetAccessPolicy
#define soap_read__tds__GetAccessPolicy(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetAccessPolicy(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__RemoveIPAddressFilterResponse
#define SOAP_TYPE__tds__RemoveIPAddressFilterResponse (250)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__RemoveIPAddressFilterResponse(struct soap*, const char*, int, const _tds__RemoveIPAddressFilterResponse *, const char*);
SOAP_FMAC3 _tds__RemoveIPAddressFilterResponse * SOAP_FMAC4 soap_in__tds__RemoveIPAddressFilterResponse(struct soap*, const char*, _tds__RemoveIPAddressFilterResponse *, const char*);
SOAP_FMAC1 _tds__RemoveIPAddressFilterResponse * SOAP_FMAC2 soap_instantiate__tds__RemoveIPAddressFilterResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__RemoveIPAddressFilterResponse * soap_new__tds__RemoveIPAddressFilterResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__RemoveIPAddressFilterResponse(soap, n, NULL, NULL, NULL); }

inline _tds__RemoveIPAddressFilterResponse * soap_new_req__tds__RemoveIPAddressFilterResponse(
	struct soap *soap)
{	_tds__RemoveIPAddressFilterResponse *_p = soap_new__tds__RemoveIPAddressFilterResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__RemoveIPAddressFilterResponse * soap_new_set__tds__RemoveIPAddressFilterResponse(
	struct soap *soap)
{	_tds__RemoveIPAddressFilterResponse *_p = soap_new__tds__RemoveIPAddressFilterResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__RemoveIPAddressFilterResponse
#define soap_write__tds__RemoveIPAddressFilterResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:RemoveIPAddressFilterResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__RemoveIPAddressFilterResponse * SOAP_FMAC4 soap_get__tds__RemoveIPAddressFilterResponse(struct soap*, _tds__RemoveIPAddressFilterResponse *, const char*, const char*);

#ifndef soap_read__tds__RemoveIPAddressFilterResponse
#define soap_read__tds__RemoveIPAddressFilterResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__RemoveIPAddressFilterResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__RemoveIPAddressFilter
#define SOAP_TYPE__tds__RemoveIPAddressFilter (249)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__RemoveIPAddressFilter(struct soap*, const char*, int, const _tds__RemoveIPAddressFilter *, const char*);
SOAP_FMAC3 _tds__RemoveIPAddressFilter * SOAP_FMAC4 soap_in__tds__RemoveIPAddressFilter(struct soap*, const char*, _tds__RemoveIPAddressFilter *, const char*);
SOAP_FMAC1 _tds__RemoveIPAddressFilter * SOAP_FMAC2 soap_instantiate__tds__RemoveIPAddressFilter(struct soap*, int, const char*, const char*, size_t*);

inline _tds__RemoveIPAddressFilter * soap_new__tds__RemoveIPAddressFilter(struct soap *soap, int n = -1) { return soap_instantiate__tds__RemoveIPAddressFilter(soap, n, NULL, NULL, NULL); }

inline _tds__RemoveIPAddressFilter * soap_new_req__tds__RemoveIPAddressFilter(
	struct soap *soap,
	tt__IPAddressFilter *IPAddressFilter)
{	_tds__RemoveIPAddressFilter *_p = soap_new__tds__RemoveIPAddressFilter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__RemoveIPAddressFilter::IPAddressFilter = IPAddressFilter;
	}
	return _p;
}

inline _tds__RemoveIPAddressFilter * soap_new_set__tds__RemoveIPAddressFilter(
	struct soap *soap,
	tt__IPAddressFilter *IPAddressFilter)
{	_tds__RemoveIPAddressFilter *_p = soap_new__tds__RemoveIPAddressFilter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__RemoveIPAddressFilter::IPAddressFilter = IPAddressFilter;
	}
	return _p;
}

#ifndef soap_write__tds__RemoveIPAddressFilter
#define soap_write__tds__RemoveIPAddressFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:RemoveIPAddressFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__RemoveIPAddressFilter * SOAP_FMAC4 soap_get__tds__RemoveIPAddressFilter(struct soap*, _tds__RemoveIPAddressFilter *, const char*, const char*);

#ifndef soap_read__tds__RemoveIPAddressFilter
#define soap_read__tds__RemoveIPAddressFilter(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__RemoveIPAddressFilter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__AddIPAddressFilterResponse
#define SOAP_TYPE__tds__AddIPAddressFilterResponse (248)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__AddIPAddressFilterResponse(struct soap*, const char*, int, const _tds__AddIPAddressFilterResponse *, const char*);
SOAP_FMAC3 _tds__AddIPAddressFilterResponse * SOAP_FMAC4 soap_in__tds__AddIPAddressFilterResponse(struct soap*, const char*, _tds__AddIPAddressFilterResponse *, const char*);
SOAP_FMAC1 _tds__AddIPAddressFilterResponse * SOAP_FMAC2 soap_instantiate__tds__AddIPAddressFilterResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__AddIPAddressFilterResponse * soap_new__tds__AddIPAddressFilterResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__AddIPAddressFilterResponse(soap, n, NULL, NULL, NULL); }

inline _tds__AddIPAddressFilterResponse * soap_new_req__tds__AddIPAddressFilterResponse(
	struct soap *soap)
{	_tds__AddIPAddressFilterResponse *_p = soap_new__tds__AddIPAddressFilterResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__AddIPAddressFilterResponse * soap_new_set__tds__AddIPAddressFilterResponse(
	struct soap *soap)
{	_tds__AddIPAddressFilterResponse *_p = soap_new__tds__AddIPAddressFilterResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__AddIPAddressFilterResponse
#define soap_write__tds__AddIPAddressFilterResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:AddIPAddressFilterResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__AddIPAddressFilterResponse * SOAP_FMAC4 soap_get__tds__AddIPAddressFilterResponse(struct soap*, _tds__AddIPAddressFilterResponse *, const char*, const char*);

#ifndef soap_read__tds__AddIPAddressFilterResponse
#define soap_read__tds__AddIPAddressFilterResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__AddIPAddressFilterResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__AddIPAddressFilter
#define SOAP_TYPE__tds__AddIPAddressFilter (247)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__AddIPAddressFilter(struct soap*, const char*, int, const _tds__AddIPAddressFilter *, const char*);
SOAP_FMAC3 _tds__AddIPAddressFilter * SOAP_FMAC4 soap_in__tds__AddIPAddressFilter(struct soap*, const char*, _tds__AddIPAddressFilter *, const char*);
SOAP_FMAC1 _tds__AddIPAddressFilter * SOAP_FMAC2 soap_instantiate__tds__AddIPAddressFilter(struct soap*, int, const char*, const char*, size_t*);

inline _tds__AddIPAddressFilter * soap_new__tds__AddIPAddressFilter(struct soap *soap, int n = -1) { return soap_instantiate__tds__AddIPAddressFilter(soap, n, NULL, NULL, NULL); }

inline _tds__AddIPAddressFilter * soap_new_req__tds__AddIPAddressFilter(
	struct soap *soap,
	tt__IPAddressFilter *IPAddressFilter)
{	_tds__AddIPAddressFilter *_p = soap_new__tds__AddIPAddressFilter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__AddIPAddressFilter::IPAddressFilter = IPAddressFilter;
	}
	return _p;
}

inline _tds__AddIPAddressFilter * soap_new_set__tds__AddIPAddressFilter(
	struct soap *soap,
	tt__IPAddressFilter *IPAddressFilter)
{	_tds__AddIPAddressFilter *_p = soap_new__tds__AddIPAddressFilter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__AddIPAddressFilter::IPAddressFilter = IPAddressFilter;
	}
	return _p;
}

#ifndef soap_write__tds__AddIPAddressFilter
#define soap_write__tds__AddIPAddressFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:AddIPAddressFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__AddIPAddressFilter * SOAP_FMAC4 soap_get__tds__AddIPAddressFilter(struct soap*, _tds__AddIPAddressFilter *, const char*, const char*);

#ifndef soap_read__tds__AddIPAddressFilter
#define soap_read__tds__AddIPAddressFilter(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__AddIPAddressFilter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetIPAddressFilterResponse
#define SOAP_TYPE__tds__SetIPAddressFilterResponse (246)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetIPAddressFilterResponse(struct soap*, const char*, int, const _tds__SetIPAddressFilterResponse *, const char*);
SOAP_FMAC3 _tds__SetIPAddressFilterResponse * SOAP_FMAC4 soap_in__tds__SetIPAddressFilterResponse(struct soap*, const char*, _tds__SetIPAddressFilterResponse *, const char*);
SOAP_FMAC1 _tds__SetIPAddressFilterResponse * SOAP_FMAC2 soap_instantiate__tds__SetIPAddressFilterResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetIPAddressFilterResponse * soap_new__tds__SetIPAddressFilterResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetIPAddressFilterResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetIPAddressFilterResponse * soap_new_req__tds__SetIPAddressFilterResponse(
	struct soap *soap)
{	_tds__SetIPAddressFilterResponse *_p = soap_new__tds__SetIPAddressFilterResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SetIPAddressFilterResponse * soap_new_set__tds__SetIPAddressFilterResponse(
	struct soap *soap)
{	_tds__SetIPAddressFilterResponse *_p = soap_new__tds__SetIPAddressFilterResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__SetIPAddressFilterResponse
#define soap_write__tds__SetIPAddressFilterResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetIPAddressFilterResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetIPAddressFilterResponse * SOAP_FMAC4 soap_get__tds__SetIPAddressFilterResponse(struct soap*, _tds__SetIPAddressFilterResponse *, const char*, const char*);

#ifndef soap_read__tds__SetIPAddressFilterResponse
#define soap_read__tds__SetIPAddressFilterResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetIPAddressFilterResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetIPAddressFilter
#define SOAP_TYPE__tds__SetIPAddressFilter (245)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetIPAddressFilter(struct soap*, const char*, int, const _tds__SetIPAddressFilter *, const char*);
SOAP_FMAC3 _tds__SetIPAddressFilter * SOAP_FMAC4 soap_in__tds__SetIPAddressFilter(struct soap*, const char*, _tds__SetIPAddressFilter *, const char*);
SOAP_FMAC1 _tds__SetIPAddressFilter * SOAP_FMAC2 soap_instantiate__tds__SetIPAddressFilter(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetIPAddressFilter * soap_new__tds__SetIPAddressFilter(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetIPAddressFilter(soap, n, NULL, NULL, NULL); }

inline _tds__SetIPAddressFilter * soap_new_req__tds__SetIPAddressFilter(
	struct soap *soap,
	tt__IPAddressFilter *IPAddressFilter)
{	_tds__SetIPAddressFilter *_p = soap_new__tds__SetIPAddressFilter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetIPAddressFilter::IPAddressFilter = IPAddressFilter;
	}
	return _p;
}

inline _tds__SetIPAddressFilter * soap_new_set__tds__SetIPAddressFilter(
	struct soap *soap,
	tt__IPAddressFilter *IPAddressFilter)
{	_tds__SetIPAddressFilter *_p = soap_new__tds__SetIPAddressFilter(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetIPAddressFilter::IPAddressFilter = IPAddressFilter;
	}
	return _p;
}

#ifndef soap_write__tds__SetIPAddressFilter
#define soap_write__tds__SetIPAddressFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetIPAddressFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetIPAddressFilter * SOAP_FMAC4 soap_get__tds__SetIPAddressFilter(struct soap*, _tds__SetIPAddressFilter *, const char*, const char*);

#ifndef soap_read__tds__SetIPAddressFilter
#define soap_read__tds__SetIPAddressFilter(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetIPAddressFilter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetIPAddressFilterResponse
#define SOAP_TYPE__tds__GetIPAddressFilterResponse (244)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetIPAddressFilterResponse(struct soap*, const char*, int, const _tds__GetIPAddressFilterResponse *, const char*);
SOAP_FMAC3 _tds__GetIPAddressFilterResponse * SOAP_FMAC4 soap_in__tds__GetIPAddressFilterResponse(struct soap*, const char*, _tds__GetIPAddressFilterResponse *, const char*);
SOAP_FMAC1 _tds__GetIPAddressFilterResponse * SOAP_FMAC2 soap_instantiate__tds__GetIPAddressFilterResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetIPAddressFilterResponse * soap_new__tds__GetIPAddressFilterResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetIPAddressFilterResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetIPAddressFilterResponse * soap_new_req__tds__GetIPAddressFilterResponse(
	struct soap *soap,
	tt__IPAddressFilter *IPAddressFilter)
{	_tds__GetIPAddressFilterResponse *_p = soap_new__tds__GetIPAddressFilterResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetIPAddressFilterResponse::IPAddressFilter = IPAddressFilter;
	}
	return _p;
}

inline _tds__GetIPAddressFilterResponse * soap_new_set__tds__GetIPAddressFilterResponse(
	struct soap *soap,
	tt__IPAddressFilter *IPAddressFilter)
{	_tds__GetIPAddressFilterResponse *_p = soap_new__tds__GetIPAddressFilterResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetIPAddressFilterResponse::IPAddressFilter = IPAddressFilter;
	}
	return _p;
}

#ifndef soap_write__tds__GetIPAddressFilterResponse
#define soap_write__tds__GetIPAddressFilterResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetIPAddressFilterResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetIPAddressFilterResponse * SOAP_FMAC4 soap_get__tds__GetIPAddressFilterResponse(struct soap*, _tds__GetIPAddressFilterResponse *, const char*, const char*);

#ifndef soap_read__tds__GetIPAddressFilterResponse
#define soap_read__tds__GetIPAddressFilterResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetIPAddressFilterResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetIPAddressFilter
#define SOAP_TYPE__tds__GetIPAddressFilter (243)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetIPAddressFilter(struct soap*, const char*, int, const _tds__GetIPAddressFilter *, const char*);
SOAP_FMAC3 _tds__GetIPAddressFilter * SOAP_FMAC4 soap_in__tds__GetIPAddressFilter(struct soap*, const char*, _tds__GetIPAddressFilter *, const char*);
SOAP_FMAC1 _tds__GetIPAddressFilter * SOAP_FMAC2 soap_instantiate__tds__GetIPAddressFilter(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetIPAddressFilter * soap_new__tds__GetIPAddressFilter(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetIPAddressFilter(soap, n, NULL, NULL, NULL); }

inline _tds__GetIPAddressFilter * soap_new_req__tds__GetIPAddressFilter(
	struct soap *soap)
{	_tds__GetIPAddressFilter *_p = soap_new__tds__GetIPAddressFilter(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetIPAddressFilter * soap_new_set__tds__GetIPAddressFilter(
	struct soap *soap)
{	_tds__GetIPAddressFilter *_p = soap_new__tds__GetIPAddressFilter(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetIPAddressFilter
#define soap_write__tds__GetIPAddressFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetIPAddressFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetIPAddressFilter * SOAP_FMAC4 soap_get__tds__GetIPAddressFilter(struct soap*, _tds__GetIPAddressFilter *, const char*, const char*);

#ifndef soap_read__tds__GetIPAddressFilter
#define soap_read__tds__GetIPAddressFilter(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetIPAddressFilter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetZeroConfigurationResponse
#define SOAP_TYPE__tds__SetZeroConfigurationResponse (242)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetZeroConfigurationResponse(struct soap*, const char*, int, const _tds__SetZeroConfigurationResponse *, const char*);
SOAP_FMAC3 _tds__SetZeroConfigurationResponse * SOAP_FMAC4 soap_in__tds__SetZeroConfigurationResponse(struct soap*, const char*, _tds__SetZeroConfigurationResponse *, const char*);
SOAP_FMAC1 _tds__SetZeroConfigurationResponse * SOAP_FMAC2 soap_instantiate__tds__SetZeroConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetZeroConfigurationResponse * soap_new__tds__SetZeroConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetZeroConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetZeroConfigurationResponse * soap_new_req__tds__SetZeroConfigurationResponse(
	struct soap *soap)
{	_tds__SetZeroConfigurationResponse *_p = soap_new__tds__SetZeroConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SetZeroConfigurationResponse * soap_new_set__tds__SetZeroConfigurationResponse(
	struct soap *soap)
{	_tds__SetZeroConfigurationResponse *_p = soap_new__tds__SetZeroConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__SetZeroConfigurationResponse
#define soap_write__tds__SetZeroConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetZeroConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetZeroConfigurationResponse * SOAP_FMAC4 soap_get__tds__SetZeroConfigurationResponse(struct soap*, _tds__SetZeroConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tds__SetZeroConfigurationResponse
#define soap_read__tds__SetZeroConfigurationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetZeroConfigurationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetZeroConfiguration
#define SOAP_TYPE__tds__SetZeroConfiguration (241)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetZeroConfiguration(struct soap*, const char*, int, const _tds__SetZeroConfiguration *, const char*);
SOAP_FMAC3 _tds__SetZeroConfiguration * SOAP_FMAC4 soap_in__tds__SetZeroConfiguration(struct soap*, const char*, _tds__SetZeroConfiguration *, const char*);
SOAP_FMAC1 _tds__SetZeroConfiguration * SOAP_FMAC2 soap_instantiate__tds__SetZeroConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetZeroConfiguration * soap_new__tds__SetZeroConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetZeroConfiguration(soap, n, NULL, NULL, NULL); }

inline _tds__SetZeroConfiguration * soap_new_req__tds__SetZeroConfiguration(
	struct soap *soap,
	const std::string& InterfaceToken,
	bool Enabled)
{	_tds__SetZeroConfiguration *_p = soap_new__tds__SetZeroConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetZeroConfiguration::InterfaceToken = InterfaceToken;
		_p->_tds__SetZeroConfiguration::Enabled = Enabled;
	}
	return _p;
}

inline _tds__SetZeroConfiguration * soap_new_set__tds__SetZeroConfiguration(
	struct soap *soap,
	const std::string& InterfaceToken,
	bool Enabled)
{	_tds__SetZeroConfiguration *_p = soap_new__tds__SetZeroConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetZeroConfiguration::InterfaceToken = InterfaceToken;
		_p->_tds__SetZeroConfiguration::Enabled = Enabled;
	}
	return _p;
}

#ifndef soap_write__tds__SetZeroConfiguration
#define soap_write__tds__SetZeroConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetZeroConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetZeroConfiguration * SOAP_FMAC4 soap_get__tds__SetZeroConfiguration(struct soap*, _tds__SetZeroConfiguration *, const char*, const char*);

#ifndef soap_read__tds__SetZeroConfiguration
#define soap_read__tds__SetZeroConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetZeroConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetZeroConfigurationResponse
#define SOAP_TYPE__tds__GetZeroConfigurationResponse (240)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetZeroConfigurationResponse(struct soap*, const char*, int, const _tds__GetZeroConfigurationResponse *, const char*);
SOAP_FMAC3 _tds__GetZeroConfigurationResponse * SOAP_FMAC4 soap_in__tds__GetZeroConfigurationResponse(struct soap*, const char*, _tds__GetZeroConfigurationResponse *, const char*);
SOAP_FMAC1 _tds__GetZeroConfigurationResponse * SOAP_FMAC2 soap_instantiate__tds__GetZeroConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetZeroConfigurationResponse * soap_new__tds__GetZeroConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetZeroConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetZeroConfigurationResponse * soap_new_req__tds__GetZeroConfigurationResponse(
	struct soap *soap,
	tt__NetworkZeroConfiguration *ZeroConfiguration)
{	_tds__GetZeroConfigurationResponse *_p = soap_new__tds__GetZeroConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetZeroConfigurationResponse::ZeroConfiguration = ZeroConfiguration;
	}
	return _p;
}

inline _tds__GetZeroConfigurationResponse * soap_new_set__tds__GetZeroConfigurationResponse(
	struct soap *soap,
	tt__NetworkZeroConfiguration *ZeroConfiguration)
{	_tds__GetZeroConfigurationResponse *_p = soap_new__tds__GetZeroConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetZeroConfigurationResponse::ZeroConfiguration = ZeroConfiguration;
	}
	return _p;
}

#ifndef soap_write__tds__GetZeroConfigurationResponse
#define soap_write__tds__GetZeroConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetZeroConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetZeroConfigurationResponse * SOAP_FMAC4 soap_get__tds__GetZeroConfigurationResponse(struct soap*, _tds__GetZeroConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tds__GetZeroConfigurationResponse
#define soap_read__tds__GetZeroConfigurationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetZeroConfigurationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetZeroConfiguration
#define SOAP_TYPE__tds__GetZeroConfiguration (239)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetZeroConfiguration(struct soap*, const char*, int, const _tds__GetZeroConfiguration *, const char*);
SOAP_FMAC3 _tds__GetZeroConfiguration * SOAP_FMAC4 soap_in__tds__GetZeroConfiguration(struct soap*, const char*, _tds__GetZeroConfiguration *, const char*);
SOAP_FMAC1 _tds__GetZeroConfiguration * SOAP_FMAC2 soap_instantiate__tds__GetZeroConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetZeroConfiguration * soap_new__tds__GetZeroConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetZeroConfiguration(soap, n, NULL, NULL, NULL); }

inline _tds__GetZeroConfiguration * soap_new_req__tds__GetZeroConfiguration(
	struct soap *soap)
{	_tds__GetZeroConfiguration *_p = soap_new__tds__GetZeroConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetZeroConfiguration * soap_new_set__tds__GetZeroConfiguration(
	struct soap *soap)
{	_tds__GetZeroConfiguration *_p = soap_new__tds__GetZeroConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetZeroConfiguration
#define soap_write__tds__GetZeroConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetZeroConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetZeroConfiguration * SOAP_FMAC4 soap_get__tds__GetZeroConfiguration(struct soap*, _tds__GetZeroConfiguration *, const char*, const char*);

#ifndef soap_read__tds__GetZeroConfiguration
#define soap_read__tds__GetZeroConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetZeroConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetNetworkDefaultGatewayResponse
#define SOAP_TYPE__tds__SetNetworkDefaultGatewayResponse (238)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetNetworkDefaultGatewayResponse(struct soap*, const char*, int, const _tds__SetNetworkDefaultGatewayResponse *, const char*);
SOAP_FMAC3 _tds__SetNetworkDefaultGatewayResponse * SOAP_FMAC4 soap_in__tds__SetNetworkDefaultGatewayResponse(struct soap*, const char*, _tds__SetNetworkDefaultGatewayResponse *, const char*);
SOAP_FMAC1 _tds__SetNetworkDefaultGatewayResponse * SOAP_FMAC2 soap_instantiate__tds__SetNetworkDefaultGatewayResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetNetworkDefaultGatewayResponse * soap_new__tds__SetNetworkDefaultGatewayResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetNetworkDefaultGatewayResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetNetworkDefaultGatewayResponse * soap_new_req__tds__SetNetworkDefaultGatewayResponse(
	struct soap *soap)
{	_tds__SetNetworkDefaultGatewayResponse *_p = soap_new__tds__SetNetworkDefaultGatewayResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SetNetworkDefaultGatewayResponse * soap_new_set__tds__SetNetworkDefaultGatewayResponse(
	struct soap *soap)
{	_tds__SetNetworkDefaultGatewayResponse *_p = soap_new__tds__SetNetworkDefaultGatewayResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__SetNetworkDefaultGatewayResponse
#define soap_write__tds__SetNetworkDefaultGatewayResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetNetworkDefaultGatewayResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetNetworkDefaultGatewayResponse * SOAP_FMAC4 soap_get__tds__SetNetworkDefaultGatewayResponse(struct soap*, _tds__SetNetworkDefaultGatewayResponse *, const char*, const char*);

#ifndef soap_read__tds__SetNetworkDefaultGatewayResponse
#define soap_read__tds__SetNetworkDefaultGatewayResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetNetworkDefaultGatewayResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetNetworkDefaultGateway
#define SOAP_TYPE__tds__SetNetworkDefaultGateway (237)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetNetworkDefaultGateway(struct soap*, const char*, int, const _tds__SetNetworkDefaultGateway *, const char*);
SOAP_FMAC3 _tds__SetNetworkDefaultGateway * SOAP_FMAC4 soap_in__tds__SetNetworkDefaultGateway(struct soap*, const char*, _tds__SetNetworkDefaultGateway *, const char*);
SOAP_FMAC1 _tds__SetNetworkDefaultGateway * SOAP_FMAC2 soap_instantiate__tds__SetNetworkDefaultGateway(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetNetworkDefaultGateway * soap_new__tds__SetNetworkDefaultGateway(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetNetworkDefaultGateway(soap, n, NULL, NULL, NULL); }

inline _tds__SetNetworkDefaultGateway * soap_new_req__tds__SetNetworkDefaultGateway(
	struct soap *soap)
{	_tds__SetNetworkDefaultGateway *_p = soap_new__tds__SetNetworkDefaultGateway(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SetNetworkDefaultGateway * soap_new_set__tds__SetNetworkDefaultGateway(
	struct soap *soap,
	const std::vector<std::string> & IPv4Address,
	const std::vector<std::string> & IPv6Address)
{	_tds__SetNetworkDefaultGateway *_p = soap_new__tds__SetNetworkDefaultGateway(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetNetworkDefaultGateway::IPv4Address = IPv4Address;
		_p->_tds__SetNetworkDefaultGateway::IPv6Address = IPv6Address;
	}
	return _p;
}

#ifndef soap_write__tds__SetNetworkDefaultGateway
#define soap_write__tds__SetNetworkDefaultGateway(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetNetworkDefaultGateway", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetNetworkDefaultGateway * SOAP_FMAC4 soap_get__tds__SetNetworkDefaultGateway(struct soap*, _tds__SetNetworkDefaultGateway *, const char*, const char*);

#ifndef soap_read__tds__SetNetworkDefaultGateway
#define soap_read__tds__SetNetworkDefaultGateway(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetNetworkDefaultGateway(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetNetworkDefaultGatewayResponse
#define SOAP_TYPE__tds__GetNetworkDefaultGatewayResponse (236)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetNetworkDefaultGatewayResponse(struct soap*, const char*, int, const _tds__GetNetworkDefaultGatewayResponse *, const char*);
SOAP_FMAC3 _tds__GetNetworkDefaultGatewayResponse * SOAP_FMAC4 soap_in__tds__GetNetworkDefaultGatewayResponse(struct soap*, const char*, _tds__GetNetworkDefaultGatewayResponse *, const char*);
SOAP_FMAC1 _tds__GetNetworkDefaultGatewayResponse * SOAP_FMAC2 soap_instantiate__tds__GetNetworkDefaultGatewayResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetNetworkDefaultGatewayResponse * soap_new__tds__GetNetworkDefaultGatewayResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetNetworkDefaultGatewayResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetNetworkDefaultGatewayResponse * soap_new_req__tds__GetNetworkDefaultGatewayResponse(
	struct soap *soap,
	tt__NetworkGateway *NetworkGateway)
{	_tds__GetNetworkDefaultGatewayResponse *_p = soap_new__tds__GetNetworkDefaultGatewayResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetNetworkDefaultGatewayResponse::NetworkGateway = NetworkGateway;
	}
	return _p;
}

inline _tds__GetNetworkDefaultGatewayResponse * soap_new_set__tds__GetNetworkDefaultGatewayResponse(
	struct soap *soap,
	tt__NetworkGateway *NetworkGateway)
{	_tds__GetNetworkDefaultGatewayResponse *_p = soap_new__tds__GetNetworkDefaultGatewayResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetNetworkDefaultGatewayResponse::NetworkGateway = NetworkGateway;
	}
	return _p;
}

#ifndef soap_write__tds__GetNetworkDefaultGatewayResponse
#define soap_write__tds__GetNetworkDefaultGatewayResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetNetworkDefaultGatewayResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetNetworkDefaultGatewayResponse * SOAP_FMAC4 soap_get__tds__GetNetworkDefaultGatewayResponse(struct soap*, _tds__GetNetworkDefaultGatewayResponse *, const char*, const char*);

#ifndef soap_read__tds__GetNetworkDefaultGatewayResponse
#define soap_read__tds__GetNetworkDefaultGatewayResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetNetworkDefaultGatewayResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetNetworkDefaultGateway
#define SOAP_TYPE__tds__GetNetworkDefaultGateway (235)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetNetworkDefaultGateway(struct soap*, const char*, int, const _tds__GetNetworkDefaultGateway *, const char*);
SOAP_FMAC3 _tds__GetNetworkDefaultGateway * SOAP_FMAC4 soap_in__tds__GetNetworkDefaultGateway(struct soap*, const char*, _tds__GetNetworkDefaultGateway *, const char*);
SOAP_FMAC1 _tds__GetNetworkDefaultGateway * SOAP_FMAC2 soap_instantiate__tds__GetNetworkDefaultGateway(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetNetworkDefaultGateway * soap_new__tds__GetNetworkDefaultGateway(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetNetworkDefaultGateway(soap, n, NULL, NULL, NULL); }

inline _tds__GetNetworkDefaultGateway * soap_new_req__tds__GetNetworkDefaultGateway(
	struct soap *soap)
{	_tds__GetNetworkDefaultGateway *_p = soap_new__tds__GetNetworkDefaultGateway(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetNetworkDefaultGateway * soap_new_set__tds__GetNetworkDefaultGateway(
	struct soap *soap)
{	_tds__GetNetworkDefaultGateway *_p = soap_new__tds__GetNetworkDefaultGateway(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetNetworkDefaultGateway
#define soap_write__tds__GetNetworkDefaultGateway(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetNetworkDefaultGateway", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetNetworkDefaultGateway * SOAP_FMAC4 soap_get__tds__GetNetworkDefaultGateway(struct soap*, _tds__GetNetworkDefaultGateway *, const char*, const char*);

#ifndef soap_read__tds__GetNetworkDefaultGateway
#define soap_read__tds__GetNetworkDefaultGateway(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetNetworkDefaultGateway(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetNetworkProtocolsResponse
#define SOAP_TYPE__tds__SetNetworkProtocolsResponse (234)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetNetworkProtocolsResponse(struct soap*, const char*, int, const _tds__SetNetworkProtocolsResponse *, const char*);
SOAP_FMAC3 _tds__SetNetworkProtocolsResponse * SOAP_FMAC4 soap_in__tds__SetNetworkProtocolsResponse(struct soap*, const char*, _tds__SetNetworkProtocolsResponse *, const char*);
SOAP_FMAC1 _tds__SetNetworkProtocolsResponse * SOAP_FMAC2 soap_instantiate__tds__SetNetworkProtocolsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetNetworkProtocolsResponse * soap_new__tds__SetNetworkProtocolsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetNetworkProtocolsResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetNetworkProtocolsResponse * soap_new_req__tds__SetNetworkProtocolsResponse(
	struct soap *soap)
{	_tds__SetNetworkProtocolsResponse *_p = soap_new__tds__SetNetworkProtocolsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SetNetworkProtocolsResponse * soap_new_set__tds__SetNetworkProtocolsResponse(
	struct soap *soap)
{	_tds__SetNetworkProtocolsResponse *_p = soap_new__tds__SetNetworkProtocolsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__SetNetworkProtocolsResponse
#define soap_write__tds__SetNetworkProtocolsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetNetworkProtocolsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetNetworkProtocolsResponse * SOAP_FMAC4 soap_get__tds__SetNetworkProtocolsResponse(struct soap*, _tds__SetNetworkProtocolsResponse *, const char*, const char*);

#ifndef soap_read__tds__SetNetworkProtocolsResponse
#define soap_read__tds__SetNetworkProtocolsResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetNetworkProtocolsResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetNetworkProtocols
#define SOAP_TYPE__tds__SetNetworkProtocols (233)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetNetworkProtocols(struct soap*, const char*, int, const _tds__SetNetworkProtocols *, const char*);
SOAP_FMAC3 _tds__SetNetworkProtocols * SOAP_FMAC4 soap_in__tds__SetNetworkProtocols(struct soap*, const char*, _tds__SetNetworkProtocols *, const char*);
SOAP_FMAC1 _tds__SetNetworkProtocols * SOAP_FMAC2 soap_instantiate__tds__SetNetworkProtocols(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetNetworkProtocols * soap_new__tds__SetNetworkProtocols(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetNetworkProtocols(soap, n, NULL, NULL, NULL); }

inline _tds__SetNetworkProtocols * soap_new_req__tds__SetNetworkProtocols(
	struct soap *soap,
	const std::vector<tt__NetworkProtocol *> & NetworkProtocols)
{	_tds__SetNetworkProtocols *_p = soap_new__tds__SetNetworkProtocols(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetNetworkProtocols::NetworkProtocols = NetworkProtocols;
	}
	return _p;
}

inline _tds__SetNetworkProtocols * soap_new_set__tds__SetNetworkProtocols(
	struct soap *soap,
	const std::vector<tt__NetworkProtocol *> & NetworkProtocols)
{	_tds__SetNetworkProtocols *_p = soap_new__tds__SetNetworkProtocols(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetNetworkProtocols::NetworkProtocols = NetworkProtocols;
	}
	return _p;
}

#ifndef soap_write__tds__SetNetworkProtocols
#define soap_write__tds__SetNetworkProtocols(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetNetworkProtocols", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetNetworkProtocols * SOAP_FMAC4 soap_get__tds__SetNetworkProtocols(struct soap*, _tds__SetNetworkProtocols *, const char*, const char*);

#ifndef soap_read__tds__SetNetworkProtocols
#define soap_read__tds__SetNetworkProtocols(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetNetworkProtocols(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetNetworkProtocolsResponse
#define SOAP_TYPE__tds__GetNetworkProtocolsResponse (232)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetNetworkProtocolsResponse(struct soap*, const char*, int, const _tds__GetNetworkProtocolsResponse *, const char*);
SOAP_FMAC3 _tds__GetNetworkProtocolsResponse * SOAP_FMAC4 soap_in__tds__GetNetworkProtocolsResponse(struct soap*, const char*, _tds__GetNetworkProtocolsResponse *, const char*);
SOAP_FMAC1 _tds__GetNetworkProtocolsResponse * SOAP_FMAC2 soap_instantiate__tds__GetNetworkProtocolsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetNetworkProtocolsResponse * soap_new__tds__GetNetworkProtocolsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetNetworkProtocolsResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetNetworkProtocolsResponse * soap_new_req__tds__GetNetworkProtocolsResponse(
	struct soap *soap)
{	_tds__GetNetworkProtocolsResponse *_p = soap_new__tds__GetNetworkProtocolsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetNetworkProtocolsResponse * soap_new_set__tds__GetNetworkProtocolsResponse(
	struct soap *soap,
	const std::vector<tt__NetworkProtocol *> & NetworkProtocols)
{	_tds__GetNetworkProtocolsResponse *_p = soap_new__tds__GetNetworkProtocolsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetNetworkProtocolsResponse::NetworkProtocols = NetworkProtocols;
	}
	return _p;
}

#ifndef soap_write__tds__GetNetworkProtocolsResponse
#define soap_write__tds__GetNetworkProtocolsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetNetworkProtocolsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetNetworkProtocolsResponse * SOAP_FMAC4 soap_get__tds__GetNetworkProtocolsResponse(struct soap*, _tds__GetNetworkProtocolsResponse *, const char*, const char*);

#ifndef soap_read__tds__GetNetworkProtocolsResponse
#define soap_read__tds__GetNetworkProtocolsResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetNetworkProtocolsResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetNetworkProtocols
#define SOAP_TYPE__tds__GetNetworkProtocols (231)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetNetworkProtocols(struct soap*, const char*, int, const _tds__GetNetworkProtocols *, const char*);
SOAP_FMAC3 _tds__GetNetworkProtocols * SOAP_FMAC4 soap_in__tds__GetNetworkProtocols(struct soap*, const char*, _tds__GetNetworkProtocols *, const char*);
SOAP_FMAC1 _tds__GetNetworkProtocols * SOAP_FMAC2 soap_instantiate__tds__GetNetworkProtocols(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetNetworkProtocols * soap_new__tds__GetNetworkProtocols(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetNetworkProtocols(soap, n, NULL, NULL, NULL); }

inline _tds__GetNetworkProtocols * soap_new_req__tds__GetNetworkProtocols(
	struct soap *soap)
{	_tds__GetNetworkProtocols *_p = soap_new__tds__GetNetworkProtocols(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetNetworkProtocols * soap_new_set__tds__GetNetworkProtocols(
	struct soap *soap)
{	_tds__GetNetworkProtocols *_p = soap_new__tds__GetNetworkProtocols(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetNetworkProtocols
#define soap_write__tds__GetNetworkProtocols(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetNetworkProtocols", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetNetworkProtocols * SOAP_FMAC4 soap_get__tds__GetNetworkProtocols(struct soap*, _tds__GetNetworkProtocols *, const char*, const char*);

#ifndef soap_read__tds__GetNetworkProtocols
#define soap_read__tds__GetNetworkProtocols(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetNetworkProtocols(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetNetworkInterfacesResponse
#define SOAP_TYPE__tds__SetNetworkInterfacesResponse (230)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetNetworkInterfacesResponse(struct soap*, const char*, int, const _tds__SetNetworkInterfacesResponse *, const char*);
SOAP_FMAC3 _tds__SetNetworkInterfacesResponse * SOAP_FMAC4 soap_in__tds__SetNetworkInterfacesResponse(struct soap*, const char*, _tds__SetNetworkInterfacesResponse *, const char*);
SOAP_FMAC1 _tds__SetNetworkInterfacesResponse * SOAP_FMAC2 soap_instantiate__tds__SetNetworkInterfacesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetNetworkInterfacesResponse * soap_new__tds__SetNetworkInterfacesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetNetworkInterfacesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetNetworkInterfacesResponse * soap_new_req__tds__SetNetworkInterfacesResponse(
	struct soap *soap,
	bool RebootNeeded)
{	_tds__SetNetworkInterfacesResponse *_p = soap_new__tds__SetNetworkInterfacesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetNetworkInterfacesResponse::RebootNeeded = RebootNeeded;
	}
	return _p;
}

inline _tds__SetNetworkInterfacesResponse * soap_new_set__tds__SetNetworkInterfacesResponse(
	struct soap *soap,
	bool RebootNeeded)
{	_tds__SetNetworkInterfacesResponse *_p = soap_new__tds__SetNetworkInterfacesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetNetworkInterfacesResponse::RebootNeeded = RebootNeeded;
	}
	return _p;
}

#ifndef soap_write__tds__SetNetworkInterfacesResponse
#define soap_write__tds__SetNetworkInterfacesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetNetworkInterfacesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetNetworkInterfacesResponse * SOAP_FMAC4 soap_get__tds__SetNetworkInterfacesResponse(struct soap*, _tds__SetNetworkInterfacesResponse *, const char*, const char*);

#ifndef soap_read__tds__SetNetworkInterfacesResponse
#define soap_read__tds__SetNetworkInterfacesResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetNetworkInterfacesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetNetworkInterfaces
#define SOAP_TYPE__tds__SetNetworkInterfaces (229)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetNetworkInterfaces(struct soap*, const char*, int, const _tds__SetNetworkInterfaces *, const char*);
SOAP_FMAC3 _tds__SetNetworkInterfaces * SOAP_FMAC4 soap_in__tds__SetNetworkInterfaces(struct soap*, const char*, _tds__SetNetworkInterfaces *, const char*);
SOAP_FMAC1 _tds__SetNetworkInterfaces * SOAP_FMAC2 soap_instantiate__tds__SetNetworkInterfaces(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetNetworkInterfaces * soap_new__tds__SetNetworkInterfaces(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetNetworkInterfaces(soap, n, NULL, NULL, NULL); }

inline _tds__SetNetworkInterfaces * soap_new_req__tds__SetNetworkInterfaces(
	struct soap *soap,
	const std::string& InterfaceToken,
	tt__NetworkInterfaceSetConfiguration *NetworkInterface)
{	_tds__SetNetworkInterfaces *_p = soap_new__tds__SetNetworkInterfaces(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetNetworkInterfaces::InterfaceToken = InterfaceToken;
		_p->_tds__SetNetworkInterfaces::NetworkInterface = NetworkInterface;
	}
	return _p;
}

inline _tds__SetNetworkInterfaces * soap_new_set__tds__SetNetworkInterfaces(
	struct soap *soap,
	const std::string& InterfaceToken,
	tt__NetworkInterfaceSetConfiguration *NetworkInterface)
{	_tds__SetNetworkInterfaces *_p = soap_new__tds__SetNetworkInterfaces(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetNetworkInterfaces::InterfaceToken = InterfaceToken;
		_p->_tds__SetNetworkInterfaces::NetworkInterface = NetworkInterface;
	}
	return _p;
}

#ifndef soap_write__tds__SetNetworkInterfaces
#define soap_write__tds__SetNetworkInterfaces(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetNetworkInterfaces", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetNetworkInterfaces * SOAP_FMAC4 soap_get__tds__SetNetworkInterfaces(struct soap*, _tds__SetNetworkInterfaces *, const char*, const char*);

#ifndef soap_read__tds__SetNetworkInterfaces
#define soap_read__tds__SetNetworkInterfaces(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetNetworkInterfaces(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetNetworkInterfacesResponse
#define SOAP_TYPE__tds__GetNetworkInterfacesResponse (228)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetNetworkInterfacesResponse(struct soap*, const char*, int, const _tds__GetNetworkInterfacesResponse *, const char*);
SOAP_FMAC3 _tds__GetNetworkInterfacesResponse * SOAP_FMAC4 soap_in__tds__GetNetworkInterfacesResponse(struct soap*, const char*, _tds__GetNetworkInterfacesResponse *, const char*);
SOAP_FMAC1 _tds__GetNetworkInterfacesResponse * SOAP_FMAC2 soap_instantiate__tds__GetNetworkInterfacesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetNetworkInterfacesResponse * soap_new__tds__GetNetworkInterfacesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetNetworkInterfacesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetNetworkInterfacesResponse * soap_new_req__tds__GetNetworkInterfacesResponse(
	struct soap *soap,
	const std::vector<tt__NetworkInterface *> & NetworkInterfaces)
{	_tds__GetNetworkInterfacesResponse *_p = soap_new__tds__GetNetworkInterfacesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetNetworkInterfacesResponse::NetworkInterfaces = NetworkInterfaces;
	}
	return _p;
}

inline _tds__GetNetworkInterfacesResponse * soap_new_set__tds__GetNetworkInterfacesResponse(
	struct soap *soap,
	const std::vector<tt__NetworkInterface *> & NetworkInterfaces)
{	_tds__GetNetworkInterfacesResponse *_p = soap_new__tds__GetNetworkInterfacesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetNetworkInterfacesResponse::NetworkInterfaces = NetworkInterfaces;
	}
	return _p;
}

#ifndef soap_write__tds__GetNetworkInterfacesResponse
#define soap_write__tds__GetNetworkInterfacesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetNetworkInterfacesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetNetworkInterfacesResponse * SOAP_FMAC4 soap_get__tds__GetNetworkInterfacesResponse(struct soap*, _tds__GetNetworkInterfacesResponse *, const char*, const char*);

#ifndef soap_read__tds__GetNetworkInterfacesResponse
#define soap_read__tds__GetNetworkInterfacesResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetNetworkInterfacesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetNetworkInterfaces
#define SOAP_TYPE__tds__GetNetworkInterfaces (227)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetNetworkInterfaces(struct soap*, const char*, int, const _tds__GetNetworkInterfaces *, const char*);
SOAP_FMAC3 _tds__GetNetworkInterfaces * SOAP_FMAC4 soap_in__tds__GetNetworkInterfaces(struct soap*, const char*, _tds__GetNetworkInterfaces *, const char*);
SOAP_FMAC1 _tds__GetNetworkInterfaces * SOAP_FMAC2 soap_instantiate__tds__GetNetworkInterfaces(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetNetworkInterfaces * soap_new__tds__GetNetworkInterfaces(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetNetworkInterfaces(soap, n, NULL, NULL, NULL); }

inline _tds__GetNetworkInterfaces * soap_new_req__tds__GetNetworkInterfaces(
	struct soap *soap)
{	_tds__GetNetworkInterfaces *_p = soap_new__tds__GetNetworkInterfaces(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetNetworkInterfaces * soap_new_set__tds__GetNetworkInterfaces(
	struct soap *soap)
{	_tds__GetNetworkInterfaces *_p = soap_new__tds__GetNetworkInterfaces(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetNetworkInterfaces
#define soap_write__tds__GetNetworkInterfaces(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetNetworkInterfaces", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetNetworkInterfaces * SOAP_FMAC4 soap_get__tds__GetNetworkInterfaces(struct soap*, _tds__GetNetworkInterfaces *, const char*, const char*);

#ifndef soap_read__tds__GetNetworkInterfaces
#define soap_read__tds__GetNetworkInterfaces(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetNetworkInterfaces(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetDynamicDNSResponse
#define SOAP_TYPE__tds__SetDynamicDNSResponse (226)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetDynamicDNSResponse(struct soap*, const char*, int, const _tds__SetDynamicDNSResponse *, const char*);
SOAP_FMAC3 _tds__SetDynamicDNSResponse * SOAP_FMAC4 soap_in__tds__SetDynamicDNSResponse(struct soap*, const char*, _tds__SetDynamicDNSResponse *, const char*);
SOAP_FMAC1 _tds__SetDynamicDNSResponse * SOAP_FMAC2 soap_instantiate__tds__SetDynamicDNSResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetDynamicDNSResponse * soap_new__tds__SetDynamicDNSResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetDynamicDNSResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetDynamicDNSResponse * soap_new_req__tds__SetDynamicDNSResponse(
	struct soap *soap)
{	_tds__SetDynamicDNSResponse *_p = soap_new__tds__SetDynamicDNSResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SetDynamicDNSResponse * soap_new_set__tds__SetDynamicDNSResponse(
	struct soap *soap)
{	_tds__SetDynamicDNSResponse *_p = soap_new__tds__SetDynamicDNSResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__SetDynamicDNSResponse
#define soap_write__tds__SetDynamicDNSResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetDynamicDNSResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDynamicDNSResponse * SOAP_FMAC4 soap_get__tds__SetDynamicDNSResponse(struct soap*, _tds__SetDynamicDNSResponse *, const char*, const char*);

#ifndef soap_read__tds__SetDynamicDNSResponse
#define soap_read__tds__SetDynamicDNSResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetDynamicDNSResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetDynamicDNS
#define SOAP_TYPE__tds__SetDynamicDNS (225)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetDynamicDNS(struct soap*, const char*, int, const _tds__SetDynamicDNS *, const char*);
SOAP_FMAC3 _tds__SetDynamicDNS * SOAP_FMAC4 soap_in__tds__SetDynamicDNS(struct soap*, const char*, _tds__SetDynamicDNS *, const char*);
SOAP_FMAC1 _tds__SetDynamicDNS * SOAP_FMAC2 soap_instantiate__tds__SetDynamicDNS(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetDynamicDNS * soap_new__tds__SetDynamicDNS(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetDynamicDNS(soap, n, NULL, NULL, NULL); }

inline _tds__SetDynamicDNS * soap_new_req__tds__SetDynamicDNS(
	struct soap *soap,
	enum tt__DynamicDNSType Type)
{	_tds__SetDynamicDNS *_p = soap_new__tds__SetDynamicDNS(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetDynamicDNS::Type = Type;
	}
	return _p;
}

inline _tds__SetDynamicDNS * soap_new_set__tds__SetDynamicDNS(
	struct soap *soap,
	enum tt__DynamicDNSType Type,
	std::string *Name,
	LONG64 *TTL)
{	_tds__SetDynamicDNS *_p = soap_new__tds__SetDynamicDNS(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetDynamicDNS::Type = Type;
		_p->_tds__SetDynamicDNS::Name = Name;
		_p->_tds__SetDynamicDNS::TTL = TTL;
	}
	return _p;
}

#ifndef soap_write__tds__SetDynamicDNS
#define soap_write__tds__SetDynamicDNS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetDynamicDNS", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDynamicDNS * SOAP_FMAC4 soap_get__tds__SetDynamicDNS(struct soap*, _tds__SetDynamicDNS *, const char*, const char*);

#ifndef soap_read__tds__SetDynamicDNS
#define soap_read__tds__SetDynamicDNS(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetDynamicDNS(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetDynamicDNSResponse
#define SOAP_TYPE__tds__GetDynamicDNSResponse (224)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDynamicDNSResponse(struct soap*, const char*, int, const _tds__GetDynamicDNSResponse *, const char*);
SOAP_FMAC3 _tds__GetDynamicDNSResponse * SOAP_FMAC4 soap_in__tds__GetDynamicDNSResponse(struct soap*, const char*, _tds__GetDynamicDNSResponse *, const char*);
SOAP_FMAC1 _tds__GetDynamicDNSResponse * SOAP_FMAC2 soap_instantiate__tds__GetDynamicDNSResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDynamicDNSResponse * soap_new__tds__GetDynamicDNSResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDynamicDNSResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetDynamicDNSResponse * soap_new_req__tds__GetDynamicDNSResponse(
	struct soap *soap,
	tt__DynamicDNSInformation *DynamicDNSInformation)
{	_tds__GetDynamicDNSResponse *_p = soap_new__tds__GetDynamicDNSResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetDynamicDNSResponse::DynamicDNSInformation = DynamicDNSInformation;
	}
	return _p;
}

inline _tds__GetDynamicDNSResponse * soap_new_set__tds__GetDynamicDNSResponse(
	struct soap *soap,
	tt__DynamicDNSInformation *DynamicDNSInformation)
{	_tds__GetDynamicDNSResponse *_p = soap_new__tds__GetDynamicDNSResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetDynamicDNSResponse::DynamicDNSInformation = DynamicDNSInformation;
	}
	return _p;
}

#ifndef soap_write__tds__GetDynamicDNSResponse
#define soap_write__tds__GetDynamicDNSResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetDynamicDNSResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDynamicDNSResponse * SOAP_FMAC4 soap_get__tds__GetDynamicDNSResponse(struct soap*, _tds__GetDynamicDNSResponse *, const char*, const char*);

#ifndef soap_read__tds__GetDynamicDNSResponse
#define soap_read__tds__GetDynamicDNSResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetDynamicDNSResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetDynamicDNS
#define SOAP_TYPE__tds__GetDynamicDNS (223)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDynamicDNS(struct soap*, const char*, int, const _tds__GetDynamicDNS *, const char*);
SOAP_FMAC3 _tds__GetDynamicDNS * SOAP_FMAC4 soap_in__tds__GetDynamicDNS(struct soap*, const char*, _tds__GetDynamicDNS *, const char*);
SOAP_FMAC1 _tds__GetDynamicDNS * SOAP_FMAC2 soap_instantiate__tds__GetDynamicDNS(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDynamicDNS * soap_new__tds__GetDynamicDNS(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDynamicDNS(soap, n, NULL, NULL, NULL); }

inline _tds__GetDynamicDNS * soap_new_req__tds__GetDynamicDNS(
	struct soap *soap)
{	_tds__GetDynamicDNS *_p = soap_new__tds__GetDynamicDNS(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetDynamicDNS * soap_new_set__tds__GetDynamicDNS(
	struct soap *soap)
{	_tds__GetDynamicDNS *_p = soap_new__tds__GetDynamicDNS(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetDynamicDNS
#define soap_write__tds__GetDynamicDNS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetDynamicDNS", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDynamicDNS * SOAP_FMAC4 soap_get__tds__GetDynamicDNS(struct soap*, _tds__GetDynamicDNS *, const char*, const char*);

#ifndef soap_read__tds__GetDynamicDNS
#define soap_read__tds__GetDynamicDNS(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetDynamicDNS(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetNTPResponse
#define SOAP_TYPE__tds__SetNTPResponse (222)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetNTPResponse(struct soap*, const char*, int, const _tds__SetNTPResponse *, const char*);
SOAP_FMAC3 _tds__SetNTPResponse * SOAP_FMAC4 soap_in__tds__SetNTPResponse(struct soap*, const char*, _tds__SetNTPResponse *, const char*);
SOAP_FMAC1 _tds__SetNTPResponse * SOAP_FMAC2 soap_instantiate__tds__SetNTPResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetNTPResponse * soap_new__tds__SetNTPResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetNTPResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetNTPResponse * soap_new_req__tds__SetNTPResponse(
	struct soap *soap)
{	_tds__SetNTPResponse *_p = soap_new__tds__SetNTPResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SetNTPResponse * soap_new_set__tds__SetNTPResponse(
	struct soap *soap)
{	_tds__SetNTPResponse *_p = soap_new__tds__SetNTPResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__SetNTPResponse
#define soap_write__tds__SetNTPResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetNTPResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetNTPResponse * SOAP_FMAC4 soap_get__tds__SetNTPResponse(struct soap*, _tds__SetNTPResponse *, const char*, const char*);

#ifndef soap_read__tds__SetNTPResponse
#define soap_read__tds__SetNTPResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetNTPResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetNTP
#define SOAP_TYPE__tds__SetNTP (221)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetNTP(struct soap*, const char*, int, const _tds__SetNTP *, const char*);
SOAP_FMAC3 _tds__SetNTP * SOAP_FMAC4 soap_in__tds__SetNTP(struct soap*, const char*, _tds__SetNTP *, const char*);
SOAP_FMAC1 _tds__SetNTP * SOAP_FMAC2 soap_instantiate__tds__SetNTP(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetNTP * soap_new__tds__SetNTP(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetNTP(soap, n, NULL, NULL, NULL); }

inline _tds__SetNTP * soap_new_req__tds__SetNTP(
	struct soap *soap,
	bool FromDHCP)
{	_tds__SetNTP *_p = soap_new__tds__SetNTP(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetNTP::FromDHCP = FromDHCP;
	}
	return _p;
}

inline _tds__SetNTP * soap_new_set__tds__SetNTP(
	struct soap *soap,
	bool FromDHCP,
	const std::vector<tt__NetworkHost *> & NTPManual)
{	_tds__SetNTP *_p = soap_new__tds__SetNTP(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetNTP::FromDHCP = FromDHCP;
		_p->_tds__SetNTP::NTPManual = NTPManual;
	}
	return _p;
}

#ifndef soap_write__tds__SetNTP
#define soap_write__tds__SetNTP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetNTP", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetNTP * SOAP_FMAC4 soap_get__tds__SetNTP(struct soap*, _tds__SetNTP *, const char*, const char*);

#ifndef soap_read__tds__SetNTP
#define soap_read__tds__SetNTP(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetNTP(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetNTPResponse
#define SOAP_TYPE__tds__GetNTPResponse (220)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetNTPResponse(struct soap*, const char*, int, const _tds__GetNTPResponse *, const char*);
SOAP_FMAC3 _tds__GetNTPResponse * SOAP_FMAC4 soap_in__tds__GetNTPResponse(struct soap*, const char*, _tds__GetNTPResponse *, const char*);
SOAP_FMAC1 _tds__GetNTPResponse * SOAP_FMAC2 soap_instantiate__tds__GetNTPResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetNTPResponse * soap_new__tds__GetNTPResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetNTPResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetNTPResponse * soap_new_req__tds__GetNTPResponse(
	struct soap *soap,
	tt__NTPInformation *NTPInformation)
{	_tds__GetNTPResponse *_p = soap_new__tds__GetNTPResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetNTPResponse::NTPInformation = NTPInformation;
	}
	return _p;
}

inline _tds__GetNTPResponse * soap_new_set__tds__GetNTPResponse(
	struct soap *soap,
	tt__NTPInformation *NTPInformation)
{	_tds__GetNTPResponse *_p = soap_new__tds__GetNTPResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetNTPResponse::NTPInformation = NTPInformation;
	}
	return _p;
}

#ifndef soap_write__tds__GetNTPResponse
#define soap_write__tds__GetNTPResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetNTPResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetNTPResponse * SOAP_FMAC4 soap_get__tds__GetNTPResponse(struct soap*, _tds__GetNTPResponse *, const char*, const char*);

#ifndef soap_read__tds__GetNTPResponse
#define soap_read__tds__GetNTPResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetNTPResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetNTP
#define SOAP_TYPE__tds__GetNTP (219)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetNTP(struct soap*, const char*, int, const _tds__GetNTP *, const char*);
SOAP_FMAC3 _tds__GetNTP * SOAP_FMAC4 soap_in__tds__GetNTP(struct soap*, const char*, _tds__GetNTP *, const char*);
SOAP_FMAC1 _tds__GetNTP * SOAP_FMAC2 soap_instantiate__tds__GetNTP(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetNTP * soap_new__tds__GetNTP(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetNTP(soap, n, NULL, NULL, NULL); }

inline _tds__GetNTP * soap_new_req__tds__GetNTP(
	struct soap *soap)
{	_tds__GetNTP *_p = soap_new__tds__GetNTP(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetNTP * soap_new_set__tds__GetNTP(
	struct soap *soap)
{	_tds__GetNTP *_p = soap_new__tds__GetNTP(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetNTP
#define soap_write__tds__GetNTP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetNTP", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetNTP * SOAP_FMAC4 soap_get__tds__GetNTP(struct soap*, _tds__GetNTP *, const char*, const char*);

#ifndef soap_read__tds__GetNTP
#define soap_read__tds__GetNTP(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetNTP(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetDNSResponse
#define SOAP_TYPE__tds__SetDNSResponse (218)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetDNSResponse(struct soap*, const char*, int, const _tds__SetDNSResponse *, const char*);
SOAP_FMAC3 _tds__SetDNSResponse * SOAP_FMAC4 soap_in__tds__SetDNSResponse(struct soap*, const char*, _tds__SetDNSResponse *, const char*);
SOAP_FMAC1 _tds__SetDNSResponse * SOAP_FMAC2 soap_instantiate__tds__SetDNSResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetDNSResponse * soap_new__tds__SetDNSResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetDNSResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetDNSResponse * soap_new_req__tds__SetDNSResponse(
	struct soap *soap)
{	_tds__SetDNSResponse *_p = soap_new__tds__SetDNSResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SetDNSResponse * soap_new_set__tds__SetDNSResponse(
	struct soap *soap)
{	_tds__SetDNSResponse *_p = soap_new__tds__SetDNSResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__SetDNSResponse
#define soap_write__tds__SetDNSResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetDNSResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDNSResponse * SOAP_FMAC4 soap_get__tds__SetDNSResponse(struct soap*, _tds__SetDNSResponse *, const char*, const char*);

#ifndef soap_read__tds__SetDNSResponse
#define soap_read__tds__SetDNSResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetDNSResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetDNS
#define SOAP_TYPE__tds__SetDNS (217)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetDNS(struct soap*, const char*, int, const _tds__SetDNS *, const char*);
SOAP_FMAC3 _tds__SetDNS * SOAP_FMAC4 soap_in__tds__SetDNS(struct soap*, const char*, _tds__SetDNS *, const char*);
SOAP_FMAC1 _tds__SetDNS * SOAP_FMAC2 soap_instantiate__tds__SetDNS(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetDNS * soap_new__tds__SetDNS(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetDNS(soap, n, NULL, NULL, NULL); }

inline _tds__SetDNS * soap_new_req__tds__SetDNS(
	struct soap *soap,
	bool FromDHCP)
{	_tds__SetDNS *_p = soap_new__tds__SetDNS(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetDNS::FromDHCP = FromDHCP;
	}
	return _p;
}

inline _tds__SetDNS * soap_new_set__tds__SetDNS(
	struct soap *soap,
	bool FromDHCP,
	const std::vector<std::string> & SearchDomain,
	const std::vector<tt__IPAddress *> & DNSManual)
{	_tds__SetDNS *_p = soap_new__tds__SetDNS(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetDNS::FromDHCP = FromDHCP;
		_p->_tds__SetDNS::SearchDomain = SearchDomain;
		_p->_tds__SetDNS::DNSManual = DNSManual;
	}
	return _p;
}

#ifndef soap_write__tds__SetDNS
#define soap_write__tds__SetDNS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetDNS", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDNS * SOAP_FMAC4 soap_get__tds__SetDNS(struct soap*, _tds__SetDNS *, const char*, const char*);

#ifndef soap_read__tds__SetDNS
#define soap_read__tds__SetDNS(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetDNS(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetDNSResponse
#define SOAP_TYPE__tds__GetDNSResponse (216)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDNSResponse(struct soap*, const char*, int, const _tds__GetDNSResponse *, const char*);
SOAP_FMAC3 _tds__GetDNSResponse * SOAP_FMAC4 soap_in__tds__GetDNSResponse(struct soap*, const char*, _tds__GetDNSResponse *, const char*);
SOAP_FMAC1 _tds__GetDNSResponse * SOAP_FMAC2 soap_instantiate__tds__GetDNSResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDNSResponse * soap_new__tds__GetDNSResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDNSResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetDNSResponse * soap_new_req__tds__GetDNSResponse(
	struct soap *soap,
	tt__DNSInformation *DNSInformation)
{	_tds__GetDNSResponse *_p = soap_new__tds__GetDNSResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetDNSResponse::DNSInformation = DNSInformation;
	}
	return _p;
}

inline _tds__GetDNSResponse * soap_new_set__tds__GetDNSResponse(
	struct soap *soap,
	tt__DNSInformation *DNSInformation)
{	_tds__GetDNSResponse *_p = soap_new__tds__GetDNSResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetDNSResponse::DNSInformation = DNSInformation;
	}
	return _p;
}

#ifndef soap_write__tds__GetDNSResponse
#define soap_write__tds__GetDNSResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetDNSResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDNSResponse * SOAP_FMAC4 soap_get__tds__GetDNSResponse(struct soap*, _tds__GetDNSResponse *, const char*, const char*);

#ifndef soap_read__tds__GetDNSResponse
#define soap_read__tds__GetDNSResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetDNSResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetDNS
#define SOAP_TYPE__tds__GetDNS (215)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDNS(struct soap*, const char*, int, const _tds__GetDNS *, const char*);
SOAP_FMAC3 _tds__GetDNS * SOAP_FMAC4 soap_in__tds__GetDNS(struct soap*, const char*, _tds__GetDNS *, const char*);
SOAP_FMAC1 _tds__GetDNS * SOAP_FMAC2 soap_instantiate__tds__GetDNS(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDNS * soap_new__tds__GetDNS(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDNS(soap, n, NULL, NULL, NULL); }

inline _tds__GetDNS * soap_new_req__tds__GetDNS(
	struct soap *soap)
{	_tds__GetDNS *_p = soap_new__tds__GetDNS(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetDNS * soap_new_set__tds__GetDNS(
	struct soap *soap)
{	_tds__GetDNS *_p = soap_new__tds__GetDNS(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetDNS
#define soap_write__tds__GetDNS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetDNS", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDNS * SOAP_FMAC4 soap_get__tds__GetDNS(struct soap*, _tds__GetDNS *, const char*, const char*);

#ifndef soap_read__tds__GetDNS
#define soap_read__tds__GetDNS(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetDNS(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetHostnameFromDHCPResponse
#define SOAP_TYPE__tds__SetHostnameFromDHCPResponse (214)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetHostnameFromDHCPResponse(struct soap*, const char*, int, const _tds__SetHostnameFromDHCPResponse *, const char*);
SOAP_FMAC3 _tds__SetHostnameFromDHCPResponse * SOAP_FMAC4 soap_in__tds__SetHostnameFromDHCPResponse(struct soap*, const char*, _tds__SetHostnameFromDHCPResponse *, const char*);
SOAP_FMAC1 _tds__SetHostnameFromDHCPResponse * SOAP_FMAC2 soap_instantiate__tds__SetHostnameFromDHCPResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetHostnameFromDHCPResponse * soap_new__tds__SetHostnameFromDHCPResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetHostnameFromDHCPResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetHostnameFromDHCPResponse * soap_new_req__tds__SetHostnameFromDHCPResponse(
	struct soap *soap,
	bool RebootNeeded)
{	_tds__SetHostnameFromDHCPResponse *_p = soap_new__tds__SetHostnameFromDHCPResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetHostnameFromDHCPResponse::RebootNeeded = RebootNeeded;
	}
	return _p;
}

inline _tds__SetHostnameFromDHCPResponse * soap_new_set__tds__SetHostnameFromDHCPResponse(
	struct soap *soap,
	bool RebootNeeded)
{	_tds__SetHostnameFromDHCPResponse *_p = soap_new__tds__SetHostnameFromDHCPResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetHostnameFromDHCPResponse::RebootNeeded = RebootNeeded;
	}
	return _p;
}

#ifndef soap_write__tds__SetHostnameFromDHCPResponse
#define soap_write__tds__SetHostnameFromDHCPResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetHostnameFromDHCPResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetHostnameFromDHCPResponse * SOAP_FMAC4 soap_get__tds__SetHostnameFromDHCPResponse(struct soap*, _tds__SetHostnameFromDHCPResponse *, const char*, const char*);

#ifndef soap_read__tds__SetHostnameFromDHCPResponse
#define soap_read__tds__SetHostnameFromDHCPResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetHostnameFromDHCPResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetHostnameFromDHCP
#define SOAP_TYPE__tds__SetHostnameFromDHCP (213)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetHostnameFromDHCP(struct soap*, const char*, int, const _tds__SetHostnameFromDHCP *, const char*);
SOAP_FMAC3 _tds__SetHostnameFromDHCP * SOAP_FMAC4 soap_in__tds__SetHostnameFromDHCP(struct soap*, const char*, _tds__SetHostnameFromDHCP *, const char*);
SOAP_FMAC1 _tds__SetHostnameFromDHCP * SOAP_FMAC2 soap_instantiate__tds__SetHostnameFromDHCP(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetHostnameFromDHCP * soap_new__tds__SetHostnameFromDHCP(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetHostnameFromDHCP(soap, n, NULL, NULL, NULL); }

inline _tds__SetHostnameFromDHCP * soap_new_req__tds__SetHostnameFromDHCP(
	struct soap *soap,
	bool FromDHCP)
{	_tds__SetHostnameFromDHCP *_p = soap_new__tds__SetHostnameFromDHCP(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetHostnameFromDHCP::FromDHCP = FromDHCP;
	}
	return _p;
}

inline _tds__SetHostnameFromDHCP * soap_new_set__tds__SetHostnameFromDHCP(
	struct soap *soap,
	bool FromDHCP)
{	_tds__SetHostnameFromDHCP *_p = soap_new__tds__SetHostnameFromDHCP(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetHostnameFromDHCP::FromDHCP = FromDHCP;
	}
	return _p;
}

#ifndef soap_write__tds__SetHostnameFromDHCP
#define soap_write__tds__SetHostnameFromDHCP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetHostnameFromDHCP", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetHostnameFromDHCP * SOAP_FMAC4 soap_get__tds__SetHostnameFromDHCP(struct soap*, _tds__SetHostnameFromDHCP *, const char*, const char*);

#ifndef soap_read__tds__SetHostnameFromDHCP
#define soap_read__tds__SetHostnameFromDHCP(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetHostnameFromDHCP(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetHostnameResponse
#define SOAP_TYPE__tds__SetHostnameResponse (212)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetHostnameResponse(struct soap*, const char*, int, const _tds__SetHostnameResponse *, const char*);
SOAP_FMAC3 _tds__SetHostnameResponse * SOAP_FMAC4 soap_in__tds__SetHostnameResponse(struct soap*, const char*, _tds__SetHostnameResponse *, const char*);
SOAP_FMAC1 _tds__SetHostnameResponse * SOAP_FMAC2 soap_instantiate__tds__SetHostnameResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetHostnameResponse * soap_new__tds__SetHostnameResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetHostnameResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetHostnameResponse * soap_new_req__tds__SetHostnameResponse(
	struct soap *soap)
{	_tds__SetHostnameResponse *_p = soap_new__tds__SetHostnameResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SetHostnameResponse * soap_new_set__tds__SetHostnameResponse(
	struct soap *soap)
{	_tds__SetHostnameResponse *_p = soap_new__tds__SetHostnameResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__SetHostnameResponse
#define soap_write__tds__SetHostnameResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetHostnameResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetHostnameResponse * SOAP_FMAC4 soap_get__tds__SetHostnameResponse(struct soap*, _tds__SetHostnameResponse *, const char*, const char*);

#ifndef soap_read__tds__SetHostnameResponse
#define soap_read__tds__SetHostnameResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetHostnameResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetHostname
#define SOAP_TYPE__tds__SetHostname (211)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetHostname(struct soap*, const char*, int, const _tds__SetHostname *, const char*);
SOAP_FMAC3 _tds__SetHostname * SOAP_FMAC4 soap_in__tds__SetHostname(struct soap*, const char*, _tds__SetHostname *, const char*);
SOAP_FMAC1 _tds__SetHostname * SOAP_FMAC2 soap_instantiate__tds__SetHostname(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetHostname * soap_new__tds__SetHostname(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetHostname(soap, n, NULL, NULL, NULL); }

inline _tds__SetHostname * soap_new_req__tds__SetHostname(
	struct soap *soap,
	const std::string& Name)
{	_tds__SetHostname *_p = soap_new__tds__SetHostname(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetHostname::Name = Name;
	}
	return _p;
}

inline _tds__SetHostname * soap_new_set__tds__SetHostname(
	struct soap *soap,
	const std::string& Name)
{	_tds__SetHostname *_p = soap_new__tds__SetHostname(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetHostname::Name = Name;
	}
	return _p;
}

#ifndef soap_write__tds__SetHostname
#define soap_write__tds__SetHostname(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetHostname", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetHostname * SOAP_FMAC4 soap_get__tds__SetHostname(struct soap*, _tds__SetHostname *, const char*, const char*);

#ifndef soap_read__tds__SetHostname
#define soap_read__tds__SetHostname(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetHostname(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetHostnameResponse
#define SOAP_TYPE__tds__GetHostnameResponse (210)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetHostnameResponse(struct soap*, const char*, int, const _tds__GetHostnameResponse *, const char*);
SOAP_FMAC3 _tds__GetHostnameResponse * SOAP_FMAC4 soap_in__tds__GetHostnameResponse(struct soap*, const char*, _tds__GetHostnameResponse *, const char*);
SOAP_FMAC1 _tds__GetHostnameResponse * SOAP_FMAC2 soap_instantiate__tds__GetHostnameResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetHostnameResponse * soap_new__tds__GetHostnameResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetHostnameResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetHostnameResponse * soap_new_req__tds__GetHostnameResponse(
	struct soap *soap,
	tt__HostnameInformation *HostnameInformation)
{	_tds__GetHostnameResponse *_p = soap_new__tds__GetHostnameResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetHostnameResponse::HostnameInformation = HostnameInformation;
	}
	return _p;
}

inline _tds__GetHostnameResponse * soap_new_set__tds__GetHostnameResponse(
	struct soap *soap,
	tt__HostnameInformation *HostnameInformation)
{	_tds__GetHostnameResponse *_p = soap_new__tds__GetHostnameResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetHostnameResponse::HostnameInformation = HostnameInformation;
	}
	return _p;
}

#ifndef soap_write__tds__GetHostnameResponse
#define soap_write__tds__GetHostnameResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetHostnameResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetHostnameResponse * SOAP_FMAC4 soap_get__tds__GetHostnameResponse(struct soap*, _tds__GetHostnameResponse *, const char*, const char*);

#ifndef soap_read__tds__GetHostnameResponse
#define soap_read__tds__GetHostnameResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetHostnameResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetHostname
#define SOAP_TYPE__tds__GetHostname (209)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetHostname(struct soap*, const char*, int, const _tds__GetHostname *, const char*);
SOAP_FMAC3 _tds__GetHostname * SOAP_FMAC4 soap_in__tds__GetHostname(struct soap*, const char*, _tds__GetHostname *, const char*);
SOAP_FMAC1 _tds__GetHostname * SOAP_FMAC2 soap_instantiate__tds__GetHostname(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetHostname * soap_new__tds__GetHostname(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetHostname(soap, n, NULL, NULL, NULL); }

inline _tds__GetHostname * soap_new_req__tds__GetHostname(
	struct soap *soap)
{	_tds__GetHostname *_p = soap_new__tds__GetHostname(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetHostname * soap_new_set__tds__GetHostname(
	struct soap *soap)
{	_tds__GetHostname *_p = soap_new__tds__GetHostname(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetHostname
#define soap_write__tds__GetHostname(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetHostname", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetHostname * SOAP_FMAC4 soap_get__tds__GetHostname(struct soap*, _tds__GetHostname *, const char*, const char*);

#ifndef soap_read__tds__GetHostname
#define soap_read__tds__GetHostname(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetHostname(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetCapabilitiesResponse
#define SOAP_TYPE__tds__GetCapabilitiesResponse (208)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetCapabilitiesResponse(struct soap*, const char*, int, const _tds__GetCapabilitiesResponse *, const char*);
SOAP_FMAC3 _tds__GetCapabilitiesResponse * SOAP_FMAC4 soap_in__tds__GetCapabilitiesResponse(struct soap*, const char*, _tds__GetCapabilitiesResponse *, const char*);
SOAP_FMAC1 _tds__GetCapabilitiesResponse * SOAP_FMAC2 soap_instantiate__tds__GetCapabilitiesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetCapabilitiesResponse * soap_new__tds__GetCapabilitiesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetCapabilitiesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetCapabilitiesResponse * soap_new_req__tds__GetCapabilitiesResponse(
	struct soap *soap,
	tt__Capabilities *Capabilities)
{	_tds__GetCapabilitiesResponse *_p = soap_new__tds__GetCapabilitiesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetCapabilitiesResponse::Capabilities = Capabilities;
	}
	return _p;
}

inline _tds__GetCapabilitiesResponse * soap_new_set__tds__GetCapabilitiesResponse(
	struct soap *soap,
	tt__Capabilities *Capabilities)
{	_tds__GetCapabilitiesResponse *_p = soap_new__tds__GetCapabilitiesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetCapabilitiesResponse::Capabilities = Capabilities;
	}
	return _p;
}

#ifndef soap_write__tds__GetCapabilitiesResponse
#define soap_write__tds__GetCapabilitiesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetCapabilitiesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCapabilitiesResponse * SOAP_FMAC4 soap_get__tds__GetCapabilitiesResponse(struct soap*, _tds__GetCapabilitiesResponse *, const char*, const char*);

#ifndef soap_read__tds__GetCapabilitiesResponse
#define soap_read__tds__GetCapabilitiesResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetCapabilitiesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetCapabilities
#define SOAP_TYPE__tds__GetCapabilities (207)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetCapabilities(struct soap*, const char*, int, const _tds__GetCapabilities *, const char*);
SOAP_FMAC3 _tds__GetCapabilities * SOAP_FMAC4 soap_in__tds__GetCapabilities(struct soap*, const char*, _tds__GetCapabilities *, const char*);
SOAP_FMAC1 _tds__GetCapabilities * SOAP_FMAC2 soap_instantiate__tds__GetCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetCapabilities * soap_new__tds__GetCapabilities(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetCapabilities(soap, n, NULL, NULL, NULL); }

inline _tds__GetCapabilities * soap_new_req__tds__GetCapabilities(
	struct soap *soap)
{	_tds__GetCapabilities *_p = soap_new__tds__GetCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetCapabilities * soap_new_set__tds__GetCapabilities(
	struct soap *soap,
	const std::vector<enum tt__CapabilityCategory> & Category)
{	_tds__GetCapabilities *_p = soap_new__tds__GetCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetCapabilities::Category = Category;
	}
	return _p;
}

#ifndef soap_write__tds__GetCapabilities
#define soap_write__tds__GetCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCapabilities * SOAP_FMAC4 soap_get__tds__GetCapabilities(struct soap*, _tds__GetCapabilities *, const char*, const char*);

#ifndef soap_read__tds__GetCapabilities
#define soap_read__tds__GetCapabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetWsdlUrlResponse
#define SOAP_TYPE__tds__GetWsdlUrlResponse (206)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetWsdlUrlResponse(struct soap*, const char*, int, const _tds__GetWsdlUrlResponse *, const char*);
SOAP_FMAC3 _tds__GetWsdlUrlResponse * SOAP_FMAC4 soap_in__tds__GetWsdlUrlResponse(struct soap*, const char*, _tds__GetWsdlUrlResponse *, const char*);
SOAP_FMAC1 _tds__GetWsdlUrlResponse * SOAP_FMAC2 soap_instantiate__tds__GetWsdlUrlResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetWsdlUrlResponse * soap_new__tds__GetWsdlUrlResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetWsdlUrlResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetWsdlUrlResponse * soap_new_req__tds__GetWsdlUrlResponse(
	struct soap *soap,
	const std::string& WsdlUrl)
{	_tds__GetWsdlUrlResponse *_p = soap_new__tds__GetWsdlUrlResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetWsdlUrlResponse::WsdlUrl = WsdlUrl;
	}
	return _p;
}

inline _tds__GetWsdlUrlResponse * soap_new_set__tds__GetWsdlUrlResponse(
	struct soap *soap,
	const std::string& WsdlUrl)
{	_tds__GetWsdlUrlResponse *_p = soap_new__tds__GetWsdlUrlResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetWsdlUrlResponse::WsdlUrl = WsdlUrl;
	}
	return _p;
}

#ifndef soap_write__tds__GetWsdlUrlResponse
#define soap_write__tds__GetWsdlUrlResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetWsdlUrlResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetWsdlUrlResponse * SOAP_FMAC4 soap_get__tds__GetWsdlUrlResponse(struct soap*, _tds__GetWsdlUrlResponse *, const char*, const char*);

#ifndef soap_read__tds__GetWsdlUrlResponse
#define soap_read__tds__GetWsdlUrlResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetWsdlUrlResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetWsdlUrl
#define SOAP_TYPE__tds__GetWsdlUrl (205)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetWsdlUrl(struct soap*, const char*, int, const _tds__GetWsdlUrl *, const char*);
SOAP_FMAC3 _tds__GetWsdlUrl * SOAP_FMAC4 soap_in__tds__GetWsdlUrl(struct soap*, const char*, _tds__GetWsdlUrl *, const char*);
SOAP_FMAC1 _tds__GetWsdlUrl * SOAP_FMAC2 soap_instantiate__tds__GetWsdlUrl(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetWsdlUrl * soap_new__tds__GetWsdlUrl(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetWsdlUrl(soap, n, NULL, NULL, NULL); }

inline _tds__GetWsdlUrl * soap_new_req__tds__GetWsdlUrl(
	struct soap *soap)
{	_tds__GetWsdlUrl *_p = soap_new__tds__GetWsdlUrl(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetWsdlUrl * soap_new_set__tds__GetWsdlUrl(
	struct soap *soap)
{	_tds__GetWsdlUrl *_p = soap_new__tds__GetWsdlUrl(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetWsdlUrl
#define soap_write__tds__GetWsdlUrl(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetWsdlUrl", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetWsdlUrl * SOAP_FMAC4 soap_get__tds__GetWsdlUrl(struct soap*, _tds__GetWsdlUrl *, const char*, const char*);

#ifndef soap_read__tds__GetWsdlUrl
#define soap_read__tds__GetWsdlUrl(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetWsdlUrl(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetUserResponse
#define SOAP_TYPE__tds__SetUserResponse (204)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetUserResponse(struct soap*, const char*, int, const _tds__SetUserResponse *, const char*);
SOAP_FMAC3 _tds__SetUserResponse * SOAP_FMAC4 soap_in__tds__SetUserResponse(struct soap*, const char*, _tds__SetUserResponse *, const char*);
SOAP_FMAC1 _tds__SetUserResponse * SOAP_FMAC2 soap_instantiate__tds__SetUserResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetUserResponse * soap_new__tds__SetUserResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetUserResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetUserResponse * soap_new_req__tds__SetUserResponse(
	struct soap *soap)
{	_tds__SetUserResponse *_p = soap_new__tds__SetUserResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SetUserResponse * soap_new_set__tds__SetUserResponse(
	struct soap *soap)
{	_tds__SetUserResponse *_p = soap_new__tds__SetUserResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__SetUserResponse
#define soap_write__tds__SetUserResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetUserResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetUserResponse * SOAP_FMAC4 soap_get__tds__SetUserResponse(struct soap*, _tds__SetUserResponse *, const char*, const char*);

#ifndef soap_read__tds__SetUserResponse
#define soap_read__tds__SetUserResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetUserResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetUser
#define SOAP_TYPE__tds__SetUser (203)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetUser(struct soap*, const char*, int, const _tds__SetUser *, const char*);
SOAP_FMAC3 _tds__SetUser * SOAP_FMAC4 soap_in__tds__SetUser(struct soap*, const char*, _tds__SetUser *, const char*);
SOAP_FMAC1 _tds__SetUser * SOAP_FMAC2 soap_instantiate__tds__SetUser(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetUser * soap_new__tds__SetUser(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetUser(soap, n, NULL, NULL, NULL); }

inline _tds__SetUser * soap_new_req__tds__SetUser(
	struct soap *soap,
	const std::vector<tt__User *> & User)
{	_tds__SetUser *_p = soap_new__tds__SetUser(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetUser::User = User;
	}
	return _p;
}

inline _tds__SetUser * soap_new_set__tds__SetUser(
	struct soap *soap,
	const std::vector<tt__User *> & User)
{	_tds__SetUser *_p = soap_new__tds__SetUser(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetUser::User = User;
	}
	return _p;
}

#ifndef soap_write__tds__SetUser
#define soap_write__tds__SetUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetUser * SOAP_FMAC4 soap_get__tds__SetUser(struct soap*, _tds__SetUser *, const char*, const char*);

#ifndef soap_read__tds__SetUser
#define soap_read__tds__SetUser(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetUser(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__DeleteUsersResponse
#define SOAP_TYPE__tds__DeleteUsersResponse (202)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__DeleteUsersResponse(struct soap*, const char*, int, const _tds__DeleteUsersResponse *, const char*);
SOAP_FMAC3 _tds__DeleteUsersResponse * SOAP_FMAC4 soap_in__tds__DeleteUsersResponse(struct soap*, const char*, _tds__DeleteUsersResponse *, const char*);
SOAP_FMAC1 _tds__DeleteUsersResponse * SOAP_FMAC2 soap_instantiate__tds__DeleteUsersResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__DeleteUsersResponse * soap_new__tds__DeleteUsersResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__DeleteUsersResponse(soap, n, NULL, NULL, NULL); }

inline _tds__DeleteUsersResponse * soap_new_req__tds__DeleteUsersResponse(
	struct soap *soap)
{	_tds__DeleteUsersResponse *_p = soap_new__tds__DeleteUsersResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__DeleteUsersResponse * soap_new_set__tds__DeleteUsersResponse(
	struct soap *soap)
{	_tds__DeleteUsersResponse *_p = soap_new__tds__DeleteUsersResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__DeleteUsersResponse
#define soap_write__tds__DeleteUsersResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:DeleteUsersResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__DeleteUsersResponse * SOAP_FMAC4 soap_get__tds__DeleteUsersResponse(struct soap*, _tds__DeleteUsersResponse *, const char*, const char*);

#ifndef soap_read__tds__DeleteUsersResponse
#define soap_read__tds__DeleteUsersResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__DeleteUsersResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__DeleteUsers
#define SOAP_TYPE__tds__DeleteUsers (201)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__DeleteUsers(struct soap*, const char*, int, const _tds__DeleteUsers *, const char*);
SOAP_FMAC3 _tds__DeleteUsers * SOAP_FMAC4 soap_in__tds__DeleteUsers(struct soap*, const char*, _tds__DeleteUsers *, const char*);
SOAP_FMAC1 _tds__DeleteUsers * SOAP_FMAC2 soap_instantiate__tds__DeleteUsers(struct soap*, int, const char*, const char*, size_t*);

inline _tds__DeleteUsers * soap_new__tds__DeleteUsers(struct soap *soap, int n = -1) { return soap_instantiate__tds__DeleteUsers(soap, n, NULL, NULL, NULL); }

inline _tds__DeleteUsers * soap_new_req__tds__DeleteUsers(
	struct soap *soap,
	const std::vector<std::string> & Username)
{	_tds__DeleteUsers *_p = soap_new__tds__DeleteUsers(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__DeleteUsers::Username = Username;
	}
	return _p;
}

inline _tds__DeleteUsers * soap_new_set__tds__DeleteUsers(
	struct soap *soap,
	const std::vector<std::string> & Username)
{	_tds__DeleteUsers *_p = soap_new__tds__DeleteUsers(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__DeleteUsers::Username = Username;
	}
	return _p;
}

#ifndef soap_write__tds__DeleteUsers
#define soap_write__tds__DeleteUsers(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:DeleteUsers", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__DeleteUsers * SOAP_FMAC4 soap_get__tds__DeleteUsers(struct soap*, _tds__DeleteUsers *, const char*, const char*);

#ifndef soap_read__tds__DeleteUsers
#define soap_read__tds__DeleteUsers(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__DeleteUsers(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__CreateUsersResponse
#define SOAP_TYPE__tds__CreateUsersResponse (200)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__CreateUsersResponse(struct soap*, const char*, int, const _tds__CreateUsersResponse *, const char*);
SOAP_FMAC3 _tds__CreateUsersResponse * SOAP_FMAC4 soap_in__tds__CreateUsersResponse(struct soap*, const char*, _tds__CreateUsersResponse *, const char*);
SOAP_FMAC1 _tds__CreateUsersResponse * SOAP_FMAC2 soap_instantiate__tds__CreateUsersResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__CreateUsersResponse * soap_new__tds__CreateUsersResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__CreateUsersResponse(soap, n, NULL, NULL, NULL); }

inline _tds__CreateUsersResponse * soap_new_req__tds__CreateUsersResponse(
	struct soap *soap)
{	_tds__CreateUsersResponse *_p = soap_new__tds__CreateUsersResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__CreateUsersResponse * soap_new_set__tds__CreateUsersResponse(
	struct soap *soap)
{	_tds__CreateUsersResponse *_p = soap_new__tds__CreateUsersResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__CreateUsersResponse
#define soap_write__tds__CreateUsersResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:CreateUsersResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__CreateUsersResponse * SOAP_FMAC4 soap_get__tds__CreateUsersResponse(struct soap*, _tds__CreateUsersResponse *, const char*, const char*);

#ifndef soap_read__tds__CreateUsersResponse
#define soap_read__tds__CreateUsersResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__CreateUsersResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__CreateUsers
#define SOAP_TYPE__tds__CreateUsers (199)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__CreateUsers(struct soap*, const char*, int, const _tds__CreateUsers *, const char*);
SOAP_FMAC3 _tds__CreateUsers * SOAP_FMAC4 soap_in__tds__CreateUsers(struct soap*, const char*, _tds__CreateUsers *, const char*);
SOAP_FMAC1 _tds__CreateUsers * SOAP_FMAC2 soap_instantiate__tds__CreateUsers(struct soap*, int, const char*, const char*, size_t*);

inline _tds__CreateUsers * soap_new__tds__CreateUsers(struct soap *soap, int n = -1) { return soap_instantiate__tds__CreateUsers(soap, n, NULL, NULL, NULL); }

inline _tds__CreateUsers * soap_new_req__tds__CreateUsers(
	struct soap *soap,
	const std::vector<tt__User *> & User)
{	_tds__CreateUsers *_p = soap_new__tds__CreateUsers(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__CreateUsers::User = User;
	}
	return _p;
}

inline _tds__CreateUsers * soap_new_set__tds__CreateUsers(
	struct soap *soap,
	const std::vector<tt__User *> & User)
{	_tds__CreateUsers *_p = soap_new__tds__CreateUsers(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__CreateUsers::User = User;
	}
	return _p;
}

#ifndef soap_write__tds__CreateUsers
#define soap_write__tds__CreateUsers(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:CreateUsers", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__CreateUsers * SOAP_FMAC4 soap_get__tds__CreateUsers(struct soap*, _tds__CreateUsers *, const char*, const char*);

#ifndef soap_read__tds__CreateUsers
#define soap_read__tds__CreateUsers(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__CreateUsers(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetUsersResponse
#define SOAP_TYPE__tds__GetUsersResponse (198)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetUsersResponse(struct soap*, const char*, int, const _tds__GetUsersResponse *, const char*);
SOAP_FMAC3 _tds__GetUsersResponse * SOAP_FMAC4 soap_in__tds__GetUsersResponse(struct soap*, const char*, _tds__GetUsersResponse *, const char*);
SOAP_FMAC1 _tds__GetUsersResponse * SOAP_FMAC2 soap_instantiate__tds__GetUsersResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetUsersResponse * soap_new__tds__GetUsersResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetUsersResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetUsersResponse * soap_new_req__tds__GetUsersResponse(
	struct soap *soap)
{	_tds__GetUsersResponse *_p = soap_new__tds__GetUsersResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetUsersResponse * soap_new_set__tds__GetUsersResponse(
	struct soap *soap,
	const std::vector<tt__User *> & User)
{	_tds__GetUsersResponse *_p = soap_new__tds__GetUsersResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetUsersResponse::User = User;
	}
	return _p;
}

#ifndef soap_write__tds__GetUsersResponse
#define soap_write__tds__GetUsersResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetUsersResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetUsersResponse * SOAP_FMAC4 soap_get__tds__GetUsersResponse(struct soap*, _tds__GetUsersResponse *, const char*, const char*);

#ifndef soap_read__tds__GetUsersResponse
#define soap_read__tds__GetUsersResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetUsersResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetUsers
#define SOAP_TYPE__tds__GetUsers (197)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetUsers(struct soap*, const char*, int, const _tds__GetUsers *, const char*);
SOAP_FMAC3 _tds__GetUsers * SOAP_FMAC4 soap_in__tds__GetUsers(struct soap*, const char*, _tds__GetUsers *, const char*);
SOAP_FMAC1 _tds__GetUsers * SOAP_FMAC2 soap_instantiate__tds__GetUsers(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetUsers * soap_new__tds__GetUsers(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetUsers(soap, n, NULL, NULL, NULL); }

inline _tds__GetUsers * soap_new_req__tds__GetUsers(
	struct soap *soap)
{	_tds__GetUsers *_p = soap_new__tds__GetUsers(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetUsers * soap_new_set__tds__GetUsers(
	struct soap *soap)
{	_tds__GetUsers *_p = soap_new__tds__GetUsers(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetUsers
#define soap_write__tds__GetUsers(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetUsers", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetUsers * SOAP_FMAC4 soap_get__tds__GetUsers(struct soap*, _tds__GetUsers *, const char*, const char*);

#ifndef soap_read__tds__GetUsers
#define soap_read__tds__GetUsers(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetUsers(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetRemoteUserResponse
#define SOAP_TYPE__tds__SetRemoteUserResponse (196)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetRemoteUserResponse(struct soap*, const char*, int, const _tds__SetRemoteUserResponse *, const char*);
SOAP_FMAC3 _tds__SetRemoteUserResponse * SOAP_FMAC4 soap_in__tds__SetRemoteUserResponse(struct soap*, const char*, _tds__SetRemoteUserResponse *, const char*);
SOAP_FMAC1 _tds__SetRemoteUserResponse * SOAP_FMAC2 soap_instantiate__tds__SetRemoteUserResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetRemoteUserResponse * soap_new__tds__SetRemoteUserResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetRemoteUserResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetRemoteUserResponse * soap_new_req__tds__SetRemoteUserResponse(
	struct soap *soap)
{	_tds__SetRemoteUserResponse *_p = soap_new__tds__SetRemoteUserResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SetRemoteUserResponse * soap_new_set__tds__SetRemoteUserResponse(
	struct soap *soap)
{	_tds__SetRemoteUserResponse *_p = soap_new__tds__SetRemoteUserResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__SetRemoteUserResponse
#define soap_write__tds__SetRemoteUserResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetRemoteUserResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetRemoteUserResponse * SOAP_FMAC4 soap_get__tds__SetRemoteUserResponse(struct soap*, _tds__SetRemoteUserResponse *, const char*, const char*);

#ifndef soap_read__tds__SetRemoteUserResponse
#define soap_read__tds__SetRemoteUserResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetRemoteUserResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetRemoteUser
#define SOAP_TYPE__tds__SetRemoteUser (195)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetRemoteUser(struct soap*, const char*, int, const _tds__SetRemoteUser *, const char*);
SOAP_FMAC3 _tds__SetRemoteUser * SOAP_FMAC4 soap_in__tds__SetRemoteUser(struct soap*, const char*, _tds__SetRemoteUser *, const char*);
SOAP_FMAC1 _tds__SetRemoteUser * SOAP_FMAC2 soap_instantiate__tds__SetRemoteUser(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetRemoteUser * soap_new__tds__SetRemoteUser(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetRemoteUser(soap, n, NULL, NULL, NULL); }

inline _tds__SetRemoteUser * soap_new_req__tds__SetRemoteUser(
	struct soap *soap)
{	_tds__SetRemoteUser *_p = soap_new__tds__SetRemoteUser(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SetRemoteUser * soap_new_set__tds__SetRemoteUser(
	struct soap *soap,
	tt__RemoteUser *RemoteUser)
{	_tds__SetRemoteUser *_p = soap_new__tds__SetRemoteUser(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetRemoteUser::RemoteUser = RemoteUser;
	}
	return _p;
}

#ifndef soap_write__tds__SetRemoteUser
#define soap_write__tds__SetRemoteUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetRemoteUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetRemoteUser * SOAP_FMAC4 soap_get__tds__SetRemoteUser(struct soap*, _tds__SetRemoteUser *, const char*, const char*);

#ifndef soap_read__tds__SetRemoteUser
#define soap_read__tds__SetRemoteUser(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetRemoteUser(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetRemoteUserResponse
#define SOAP_TYPE__tds__GetRemoteUserResponse (194)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetRemoteUserResponse(struct soap*, const char*, int, const _tds__GetRemoteUserResponse *, const char*);
SOAP_FMAC3 _tds__GetRemoteUserResponse * SOAP_FMAC4 soap_in__tds__GetRemoteUserResponse(struct soap*, const char*, _tds__GetRemoteUserResponse *, const char*);
SOAP_FMAC1 _tds__GetRemoteUserResponse * SOAP_FMAC2 soap_instantiate__tds__GetRemoteUserResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetRemoteUserResponse * soap_new__tds__GetRemoteUserResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetRemoteUserResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetRemoteUserResponse * soap_new_req__tds__GetRemoteUserResponse(
	struct soap *soap)
{	_tds__GetRemoteUserResponse *_p = soap_new__tds__GetRemoteUserResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetRemoteUserResponse * soap_new_set__tds__GetRemoteUserResponse(
	struct soap *soap,
	tt__RemoteUser *RemoteUser)
{	_tds__GetRemoteUserResponse *_p = soap_new__tds__GetRemoteUserResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetRemoteUserResponse::RemoteUser = RemoteUser;
	}
	return _p;
}

#ifndef soap_write__tds__GetRemoteUserResponse
#define soap_write__tds__GetRemoteUserResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetRemoteUserResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetRemoteUserResponse * SOAP_FMAC4 soap_get__tds__GetRemoteUserResponse(struct soap*, _tds__GetRemoteUserResponse *, const char*, const char*);

#ifndef soap_read__tds__GetRemoteUserResponse
#define soap_read__tds__GetRemoteUserResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetRemoteUserResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetRemoteUser
#define SOAP_TYPE__tds__GetRemoteUser (193)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetRemoteUser(struct soap*, const char*, int, const _tds__GetRemoteUser *, const char*);
SOAP_FMAC3 _tds__GetRemoteUser * SOAP_FMAC4 soap_in__tds__GetRemoteUser(struct soap*, const char*, _tds__GetRemoteUser *, const char*);
SOAP_FMAC1 _tds__GetRemoteUser * SOAP_FMAC2 soap_instantiate__tds__GetRemoteUser(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetRemoteUser * soap_new__tds__GetRemoteUser(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetRemoteUser(soap, n, NULL, NULL, NULL); }

inline _tds__GetRemoteUser * soap_new_req__tds__GetRemoteUser(
	struct soap *soap)
{	_tds__GetRemoteUser *_p = soap_new__tds__GetRemoteUser(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetRemoteUser * soap_new_set__tds__GetRemoteUser(
	struct soap *soap)
{	_tds__GetRemoteUser *_p = soap_new__tds__GetRemoteUser(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetRemoteUser
#define soap_write__tds__GetRemoteUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetRemoteUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetRemoteUser * SOAP_FMAC4 soap_get__tds__GetRemoteUser(struct soap*, _tds__GetRemoteUser *, const char*, const char*);

#ifndef soap_read__tds__GetRemoteUser
#define soap_read__tds__GetRemoteUser(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetRemoteUser(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetEndpointReferenceResponse
#define SOAP_TYPE__tds__GetEndpointReferenceResponse (192)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetEndpointReferenceResponse(struct soap*, const char*, int, const _tds__GetEndpointReferenceResponse *, const char*);
SOAP_FMAC3 _tds__GetEndpointReferenceResponse * SOAP_FMAC4 soap_in__tds__GetEndpointReferenceResponse(struct soap*, const char*, _tds__GetEndpointReferenceResponse *, const char*);
SOAP_FMAC1 _tds__GetEndpointReferenceResponse * SOAP_FMAC2 soap_instantiate__tds__GetEndpointReferenceResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetEndpointReferenceResponse * soap_new__tds__GetEndpointReferenceResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetEndpointReferenceResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetEndpointReferenceResponse * soap_new_req__tds__GetEndpointReferenceResponse(
	struct soap *soap,
	const std::string& GUID)
{	_tds__GetEndpointReferenceResponse *_p = soap_new__tds__GetEndpointReferenceResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetEndpointReferenceResponse::GUID = GUID;
	}
	return _p;
}

inline _tds__GetEndpointReferenceResponse * soap_new_set__tds__GetEndpointReferenceResponse(
	struct soap *soap,
	const std::string& GUID)
{	_tds__GetEndpointReferenceResponse *_p = soap_new__tds__GetEndpointReferenceResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetEndpointReferenceResponse::GUID = GUID;
	}
	return _p;
}

#ifndef soap_write__tds__GetEndpointReferenceResponse
#define soap_write__tds__GetEndpointReferenceResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetEndpointReferenceResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetEndpointReferenceResponse * SOAP_FMAC4 soap_get__tds__GetEndpointReferenceResponse(struct soap*, _tds__GetEndpointReferenceResponse *, const char*, const char*);

#ifndef soap_read__tds__GetEndpointReferenceResponse
#define soap_read__tds__GetEndpointReferenceResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetEndpointReferenceResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetEndpointReference
#define SOAP_TYPE__tds__GetEndpointReference (191)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetEndpointReference(struct soap*, const char*, int, const _tds__GetEndpointReference *, const char*);
SOAP_FMAC3 _tds__GetEndpointReference * SOAP_FMAC4 soap_in__tds__GetEndpointReference(struct soap*, const char*, _tds__GetEndpointReference *, const char*);
SOAP_FMAC1 _tds__GetEndpointReference * SOAP_FMAC2 soap_instantiate__tds__GetEndpointReference(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetEndpointReference * soap_new__tds__GetEndpointReference(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetEndpointReference(soap, n, NULL, NULL, NULL); }

inline _tds__GetEndpointReference * soap_new_req__tds__GetEndpointReference(
	struct soap *soap)
{	_tds__GetEndpointReference *_p = soap_new__tds__GetEndpointReference(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetEndpointReference * soap_new_set__tds__GetEndpointReference(
	struct soap *soap)
{	_tds__GetEndpointReference *_p = soap_new__tds__GetEndpointReference(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetEndpointReference
#define soap_write__tds__GetEndpointReference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetEndpointReference", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetEndpointReference * SOAP_FMAC4 soap_get__tds__GetEndpointReference(struct soap*, _tds__GetEndpointReference *, const char*, const char*);

#ifndef soap_read__tds__GetEndpointReference
#define soap_read__tds__GetEndpointReference(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetEndpointReference(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetDPAddressesResponse
#define SOAP_TYPE__tds__SetDPAddressesResponse (190)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetDPAddressesResponse(struct soap*, const char*, int, const _tds__SetDPAddressesResponse *, const char*);
SOAP_FMAC3 _tds__SetDPAddressesResponse * SOAP_FMAC4 soap_in__tds__SetDPAddressesResponse(struct soap*, const char*, _tds__SetDPAddressesResponse *, const char*);
SOAP_FMAC1 _tds__SetDPAddressesResponse * SOAP_FMAC2 soap_instantiate__tds__SetDPAddressesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetDPAddressesResponse * soap_new__tds__SetDPAddressesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetDPAddressesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetDPAddressesResponse * soap_new_req__tds__SetDPAddressesResponse(
	struct soap *soap)
{	_tds__SetDPAddressesResponse *_p = soap_new__tds__SetDPAddressesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SetDPAddressesResponse * soap_new_set__tds__SetDPAddressesResponse(
	struct soap *soap)
{	_tds__SetDPAddressesResponse *_p = soap_new__tds__SetDPAddressesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__SetDPAddressesResponse
#define soap_write__tds__SetDPAddressesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetDPAddressesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDPAddressesResponse * SOAP_FMAC4 soap_get__tds__SetDPAddressesResponse(struct soap*, _tds__SetDPAddressesResponse *, const char*, const char*);

#ifndef soap_read__tds__SetDPAddressesResponse
#define soap_read__tds__SetDPAddressesResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetDPAddressesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetDPAddresses
#define SOAP_TYPE__tds__SetDPAddresses (189)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetDPAddresses(struct soap*, const char*, int, const _tds__SetDPAddresses *, const char*);
SOAP_FMAC3 _tds__SetDPAddresses * SOAP_FMAC4 soap_in__tds__SetDPAddresses(struct soap*, const char*, _tds__SetDPAddresses *, const char*);
SOAP_FMAC1 _tds__SetDPAddresses * SOAP_FMAC2 soap_instantiate__tds__SetDPAddresses(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetDPAddresses * soap_new__tds__SetDPAddresses(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetDPAddresses(soap, n, NULL, NULL, NULL); }

inline _tds__SetDPAddresses * soap_new_req__tds__SetDPAddresses(
	struct soap *soap)
{	_tds__SetDPAddresses *_p = soap_new__tds__SetDPAddresses(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SetDPAddresses * soap_new_set__tds__SetDPAddresses(
	struct soap *soap,
	const std::vector<tt__NetworkHost *> & DPAddress)
{	_tds__SetDPAddresses *_p = soap_new__tds__SetDPAddresses(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetDPAddresses::DPAddress = DPAddress;
	}
	return _p;
}

#ifndef soap_write__tds__SetDPAddresses
#define soap_write__tds__SetDPAddresses(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetDPAddresses", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDPAddresses * SOAP_FMAC4 soap_get__tds__SetDPAddresses(struct soap*, _tds__SetDPAddresses *, const char*, const char*);

#ifndef soap_read__tds__SetDPAddresses
#define soap_read__tds__SetDPAddresses(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetDPAddresses(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetDPAddressesResponse
#define SOAP_TYPE__tds__GetDPAddressesResponse (188)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDPAddressesResponse(struct soap*, const char*, int, const _tds__GetDPAddressesResponse *, const char*);
SOAP_FMAC3 _tds__GetDPAddressesResponse * SOAP_FMAC4 soap_in__tds__GetDPAddressesResponse(struct soap*, const char*, _tds__GetDPAddressesResponse *, const char*);
SOAP_FMAC1 _tds__GetDPAddressesResponse * SOAP_FMAC2 soap_instantiate__tds__GetDPAddressesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDPAddressesResponse * soap_new__tds__GetDPAddressesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDPAddressesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetDPAddressesResponse * soap_new_req__tds__GetDPAddressesResponse(
	struct soap *soap)
{	_tds__GetDPAddressesResponse *_p = soap_new__tds__GetDPAddressesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetDPAddressesResponse * soap_new_set__tds__GetDPAddressesResponse(
	struct soap *soap,
	const std::vector<tt__NetworkHost *> & DPAddress)
{	_tds__GetDPAddressesResponse *_p = soap_new__tds__GetDPAddressesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetDPAddressesResponse::DPAddress = DPAddress;
	}
	return _p;
}

#ifndef soap_write__tds__GetDPAddressesResponse
#define soap_write__tds__GetDPAddressesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetDPAddressesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDPAddressesResponse * SOAP_FMAC4 soap_get__tds__GetDPAddressesResponse(struct soap*, _tds__GetDPAddressesResponse *, const char*, const char*);

#ifndef soap_read__tds__GetDPAddressesResponse
#define soap_read__tds__GetDPAddressesResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetDPAddressesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetDPAddresses
#define SOAP_TYPE__tds__GetDPAddresses (187)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDPAddresses(struct soap*, const char*, int, const _tds__GetDPAddresses *, const char*);
SOAP_FMAC3 _tds__GetDPAddresses * SOAP_FMAC4 soap_in__tds__GetDPAddresses(struct soap*, const char*, _tds__GetDPAddresses *, const char*);
SOAP_FMAC1 _tds__GetDPAddresses * SOAP_FMAC2 soap_instantiate__tds__GetDPAddresses(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDPAddresses * soap_new__tds__GetDPAddresses(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDPAddresses(soap, n, NULL, NULL, NULL); }

inline _tds__GetDPAddresses * soap_new_req__tds__GetDPAddresses(
	struct soap *soap)
{	_tds__GetDPAddresses *_p = soap_new__tds__GetDPAddresses(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetDPAddresses * soap_new_set__tds__GetDPAddresses(
	struct soap *soap)
{	_tds__GetDPAddresses *_p = soap_new__tds__GetDPAddresses(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetDPAddresses
#define soap_write__tds__GetDPAddresses(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetDPAddresses", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDPAddresses * SOAP_FMAC4 soap_get__tds__GetDPAddresses(struct soap*, _tds__GetDPAddresses *, const char*, const char*);

#ifndef soap_read__tds__GetDPAddresses
#define soap_read__tds__GetDPAddresses(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetDPAddresses(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetRemoteDiscoveryModeResponse
#define SOAP_TYPE__tds__SetRemoteDiscoveryModeResponse (186)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetRemoteDiscoveryModeResponse(struct soap*, const char*, int, const _tds__SetRemoteDiscoveryModeResponse *, const char*);
SOAP_FMAC3 _tds__SetRemoteDiscoveryModeResponse * SOAP_FMAC4 soap_in__tds__SetRemoteDiscoveryModeResponse(struct soap*, const char*, _tds__SetRemoteDiscoveryModeResponse *, const char*);
SOAP_FMAC1 _tds__SetRemoteDiscoveryModeResponse * SOAP_FMAC2 soap_instantiate__tds__SetRemoteDiscoveryModeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetRemoteDiscoveryModeResponse * soap_new__tds__SetRemoteDiscoveryModeResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetRemoteDiscoveryModeResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetRemoteDiscoveryModeResponse * soap_new_req__tds__SetRemoteDiscoveryModeResponse(
	struct soap *soap)
{	_tds__SetRemoteDiscoveryModeResponse *_p = soap_new__tds__SetRemoteDiscoveryModeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SetRemoteDiscoveryModeResponse * soap_new_set__tds__SetRemoteDiscoveryModeResponse(
	struct soap *soap)
{	_tds__SetRemoteDiscoveryModeResponse *_p = soap_new__tds__SetRemoteDiscoveryModeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__SetRemoteDiscoveryModeResponse
#define soap_write__tds__SetRemoteDiscoveryModeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetRemoteDiscoveryModeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetRemoteDiscoveryModeResponse * SOAP_FMAC4 soap_get__tds__SetRemoteDiscoveryModeResponse(struct soap*, _tds__SetRemoteDiscoveryModeResponse *, const char*, const char*);

#ifndef soap_read__tds__SetRemoteDiscoveryModeResponse
#define soap_read__tds__SetRemoteDiscoveryModeResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetRemoteDiscoveryModeResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetRemoteDiscoveryMode
#define SOAP_TYPE__tds__SetRemoteDiscoveryMode (185)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetRemoteDiscoveryMode(struct soap*, const char*, int, const _tds__SetRemoteDiscoveryMode *, const char*);
SOAP_FMAC3 _tds__SetRemoteDiscoveryMode * SOAP_FMAC4 soap_in__tds__SetRemoteDiscoveryMode(struct soap*, const char*, _tds__SetRemoteDiscoveryMode *, const char*);
SOAP_FMAC1 _tds__SetRemoteDiscoveryMode * SOAP_FMAC2 soap_instantiate__tds__SetRemoteDiscoveryMode(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetRemoteDiscoveryMode * soap_new__tds__SetRemoteDiscoveryMode(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetRemoteDiscoveryMode(soap, n, NULL, NULL, NULL); }

inline _tds__SetRemoteDiscoveryMode * soap_new_req__tds__SetRemoteDiscoveryMode(
	struct soap *soap,
	enum tt__DiscoveryMode RemoteDiscoveryMode)
{	_tds__SetRemoteDiscoveryMode *_p = soap_new__tds__SetRemoteDiscoveryMode(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetRemoteDiscoveryMode::RemoteDiscoveryMode = RemoteDiscoveryMode;
	}
	return _p;
}

inline _tds__SetRemoteDiscoveryMode * soap_new_set__tds__SetRemoteDiscoveryMode(
	struct soap *soap,
	enum tt__DiscoveryMode RemoteDiscoveryMode)
{	_tds__SetRemoteDiscoveryMode *_p = soap_new__tds__SetRemoteDiscoveryMode(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetRemoteDiscoveryMode::RemoteDiscoveryMode = RemoteDiscoveryMode;
	}
	return _p;
}

#ifndef soap_write__tds__SetRemoteDiscoveryMode
#define soap_write__tds__SetRemoteDiscoveryMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetRemoteDiscoveryMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetRemoteDiscoveryMode * SOAP_FMAC4 soap_get__tds__SetRemoteDiscoveryMode(struct soap*, _tds__SetRemoteDiscoveryMode *, const char*, const char*);

#ifndef soap_read__tds__SetRemoteDiscoveryMode
#define soap_read__tds__SetRemoteDiscoveryMode(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetRemoteDiscoveryMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetRemoteDiscoveryModeResponse
#define SOAP_TYPE__tds__GetRemoteDiscoveryModeResponse (184)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetRemoteDiscoveryModeResponse(struct soap*, const char*, int, const _tds__GetRemoteDiscoveryModeResponse *, const char*);
SOAP_FMAC3 _tds__GetRemoteDiscoveryModeResponse * SOAP_FMAC4 soap_in__tds__GetRemoteDiscoveryModeResponse(struct soap*, const char*, _tds__GetRemoteDiscoveryModeResponse *, const char*);
SOAP_FMAC1 _tds__GetRemoteDiscoveryModeResponse * SOAP_FMAC2 soap_instantiate__tds__GetRemoteDiscoveryModeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetRemoteDiscoveryModeResponse * soap_new__tds__GetRemoteDiscoveryModeResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetRemoteDiscoveryModeResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetRemoteDiscoveryModeResponse * soap_new_req__tds__GetRemoteDiscoveryModeResponse(
	struct soap *soap,
	enum tt__DiscoveryMode RemoteDiscoveryMode)
{	_tds__GetRemoteDiscoveryModeResponse *_p = soap_new__tds__GetRemoteDiscoveryModeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetRemoteDiscoveryModeResponse::RemoteDiscoveryMode = RemoteDiscoveryMode;
	}
	return _p;
}

inline _tds__GetRemoteDiscoveryModeResponse * soap_new_set__tds__GetRemoteDiscoveryModeResponse(
	struct soap *soap,
	enum tt__DiscoveryMode RemoteDiscoveryMode)
{	_tds__GetRemoteDiscoveryModeResponse *_p = soap_new__tds__GetRemoteDiscoveryModeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetRemoteDiscoveryModeResponse::RemoteDiscoveryMode = RemoteDiscoveryMode;
	}
	return _p;
}

#ifndef soap_write__tds__GetRemoteDiscoveryModeResponse
#define soap_write__tds__GetRemoteDiscoveryModeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetRemoteDiscoveryModeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetRemoteDiscoveryModeResponse * SOAP_FMAC4 soap_get__tds__GetRemoteDiscoveryModeResponse(struct soap*, _tds__GetRemoteDiscoveryModeResponse *, const char*, const char*);

#ifndef soap_read__tds__GetRemoteDiscoveryModeResponse
#define soap_read__tds__GetRemoteDiscoveryModeResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetRemoteDiscoveryModeResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetRemoteDiscoveryMode
#define SOAP_TYPE__tds__GetRemoteDiscoveryMode (183)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetRemoteDiscoveryMode(struct soap*, const char*, int, const _tds__GetRemoteDiscoveryMode *, const char*);
SOAP_FMAC3 _tds__GetRemoteDiscoveryMode * SOAP_FMAC4 soap_in__tds__GetRemoteDiscoveryMode(struct soap*, const char*, _tds__GetRemoteDiscoveryMode *, const char*);
SOAP_FMAC1 _tds__GetRemoteDiscoveryMode * SOAP_FMAC2 soap_instantiate__tds__GetRemoteDiscoveryMode(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetRemoteDiscoveryMode * soap_new__tds__GetRemoteDiscoveryMode(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetRemoteDiscoveryMode(soap, n, NULL, NULL, NULL); }

inline _tds__GetRemoteDiscoveryMode * soap_new_req__tds__GetRemoteDiscoveryMode(
	struct soap *soap)
{	_tds__GetRemoteDiscoveryMode *_p = soap_new__tds__GetRemoteDiscoveryMode(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetRemoteDiscoveryMode * soap_new_set__tds__GetRemoteDiscoveryMode(
	struct soap *soap)
{	_tds__GetRemoteDiscoveryMode *_p = soap_new__tds__GetRemoteDiscoveryMode(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetRemoteDiscoveryMode
#define soap_write__tds__GetRemoteDiscoveryMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetRemoteDiscoveryMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetRemoteDiscoveryMode * SOAP_FMAC4 soap_get__tds__GetRemoteDiscoveryMode(struct soap*, _tds__GetRemoteDiscoveryMode *, const char*, const char*);

#ifndef soap_read__tds__GetRemoteDiscoveryMode
#define soap_read__tds__GetRemoteDiscoveryMode(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetRemoteDiscoveryMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetDiscoveryModeResponse
#define SOAP_TYPE__tds__SetDiscoveryModeResponse (182)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetDiscoveryModeResponse(struct soap*, const char*, int, const _tds__SetDiscoveryModeResponse *, const char*);
SOAP_FMAC3 _tds__SetDiscoveryModeResponse * SOAP_FMAC4 soap_in__tds__SetDiscoveryModeResponse(struct soap*, const char*, _tds__SetDiscoveryModeResponse *, const char*);
SOAP_FMAC1 _tds__SetDiscoveryModeResponse * SOAP_FMAC2 soap_instantiate__tds__SetDiscoveryModeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetDiscoveryModeResponse * soap_new__tds__SetDiscoveryModeResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetDiscoveryModeResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetDiscoveryModeResponse * soap_new_req__tds__SetDiscoveryModeResponse(
	struct soap *soap)
{	_tds__SetDiscoveryModeResponse *_p = soap_new__tds__SetDiscoveryModeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SetDiscoveryModeResponse * soap_new_set__tds__SetDiscoveryModeResponse(
	struct soap *soap)
{	_tds__SetDiscoveryModeResponse *_p = soap_new__tds__SetDiscoveryModeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__SetDiscoveryModeResponse
#define soap_write__tds__SetDiscoveryModeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetDiscoveryModeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDiscoveryModeResponse * SOAP_FMAC4 soap_get__tds__SetDiscoveryModeResponse(struct soap*, _tds__SetDiscoveryModeResponse *, const char*, const char*);

#ifndef soap_read__tds__SetDiscoveryModeResponse
#define soap_read__tds__SetDiscoveryModeResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetDiscoveryModeResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetDiscoveryMode
#define SOAP_TYPE__tds__SetDiscoveryMode (181)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetDiscoveryMode(struct soap*, const char*, int, const _tds__SetDiscoveryMode *, const char*);
SOAP_FMAC3 _tds__SetDiscoveryMode * SOAP_FMAC4 soap_in__tds__SetDiscoveryMode(struct soap*, const char*, _tds__SetDiscoveryMode *, const char*);
SOAP_FMAC1 _tds__SetDiscoveryMode * SOAP_FMAC2 soap_instantiate__tds__SetDiscoveryMode(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetDiscoveryMode * soap_new__tds__SetDiscoveryMode(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetDiscoveryMode(soap, n, NULL, NULL, NULL); }

inline _tds__SetDiscoveryMode * soap_new_req__tds__SetDiscoveryMode(
	struct soap *soap,
	enum tt__DiscoveryMode DiscoveryMode)
{	_tds__SetDiscoveryMode *_p = soap_new__tds__SetDiscoveryMode(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetDiscoveryMode::DiscoveryMode = DiscoveryMode;
	}
	return _p;
}

inline _tds__SetDiscoveryMode * soap_new_set__tds__SetDiscoveryMode(
	struct soap *soap,
	enum tt__DiscoveryMode DiscoveryMode)
{	_tds__SetDiscoveryMode *_p = soap_new__tds__SetDiscoveryMode(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetDiscoveryMode::DiscoveryMode = DiscoveryMode;
	}
	return _p;
}

#ifndef soap_write__tds__SetDiscoveryMode
#define soap_write__tds__SetDiscoveryMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetDiscoveryMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDiscoveryMode * SOAP_FMAC4 soap_get__tds__SetDiscoveryMode(struct soap*, _tds__SetDiscoveryMode *, const char*, const char*);

#ifndef soap_read__tds__SetDiscoveryMode
#define soap_read__tds__SetDiscoveryMode(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetDiscoveryMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetDiscoveryModeResponse
#define SOAP_TYPE__tds__GetDiscoveryModeResponse (180)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDiscoveryModeResponse(struct soap*, const char*, int, const _tds__GetDiscoveryModeResponse *, const char*);
SOAP_FMAC3 _tds__GetDiscoveryModeResponse * SOAP_FMAC4 soap_in__tds__GetDiscoveryModeResponse(struct soap*, const char*, _tds__GetDiscoveryModeResponse *, const char*);
SOAP_FMAC1 _tds__GetDiscoveryModeResponse * SOAP_FMAC2 soap_instantiate__tds__GetDiscoveryModeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDiscoveryModeResponse * soap_new__tds__GetDiscoveryModeResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDiscoveryModeResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetDiscoveryModeResponse * soap_new_req__tds__GetDiscoveryModeResponse(
	struct soap *soap,
	enum tt__DiscoveryMode DiscoveryMode)
{	_tds__GetDiscoveryModeResponse *_p = soap_new__tds__GetDiscoveryModeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetDiscoveryModeResponse::DiscoveryMode = DiscoveryMode;
	}
	return _p;
}

inline _tds__GetDiscoveryModeResponse * soap_new_set__tds__GetDiscoveryModeResponse(
	struct soap *soap,
	enum tt__DiscoveryMode DiscoveryMode)
{	_tds__GetDiscoveryModeResponse *_p = soap_new__tds__GetDiscoveryModeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetDiscoveryModeResponse::DiscoveryMode = DiscoveryMode;
	}
	return _p;
}

#ifndef soap_write__tds__GetDiscoveryModeResponse
#define soap_write__tds__GetDiscoveryModeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetDiscoveryModeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDiscoveryModeResponse * SOAP_FMAC4 soap_get__tds__GetDiscoveryModeResponse(struct soap*, _tds__GetDiscoveryModeResponse *, const char*, const char*);

#ifndef soap_read__tds__GetDiscoveryModeResponse
#define soap_read__tds__GetDiscoveryModeResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetDiscoveryModeResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetDiscoveryMode
#define SOAP_TYPE__tds__GetDiscoveryMode (179)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDiscoveryMode(struct soap*, const char*, int, const _tds__GetDiscoveryMode *, const char*);
SOAP_FMAC3 _tds__GetDiscoveryMode * SOAP_FMAC4 soap_in__tds__GetDiscoveryMode(struct soap*, const char*, _tds__GetDiscoveryMode *, const char*);
SOAP_FMAC1 _tds__GetDiscoveryMode * SOAP_FMAC2 soap_instantiate__tds__GetDiscoveryMode(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDiscoveryMode * soap_new__tds__GetDiscoveryMode(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDiscoveryMode(soap, n, NULL, NULL, NULL); }

inline _tds__GetDiscoveryMode * soap_new_req__tds__GetDiscoveryMode(
	struct soap *soap)
{	_tds__GetDiscoveryMode *_p = soap_new__tds__GetDiscoveryMode(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetDiscoveryMode * soap_new_set__tds__GetDiscoveryMode(
	struct soap *soap)
{	_tds__GetDiscoveryMode *_p = soap_new__tds__GetDiscoveryMode(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetDiscoveryMode
#define soap_write__tds__GetDiscoveryMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetDiscoveryMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDiscoveryMode * SOAP_FMAC4 soap_get__tds__GetDiscoveryMode(struct soap*, _tds__GetDiscoveryMode *, const char*, const char*);

#ifndef soap_read__tds__GetDiscoveryMode
#define soap_read__tds__GetDiscoveryMode(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetDiscoveryMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__RemoveScopesResponse
#define SOAP_TYPE__tds__RemoveScopesResponse (178)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__RemoveScopesResponse(struct soap*, const char*, int, const _tds__RemoveScopesResponse *, const char*);
SOAP_FMAC3 _tds__RemoveScopesResponse * SOAP_FMAC4 soap_in__tds__RemoveScopesResponse(struct soap*, const char*, _tds__RemoveScopesResponse *, const char*);
SOAP_FMAC1 _tds__RemoveScopesResponse * SOAP_FMAC2 soap_instantiate__tds__RemoveScopesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__RemoveScopesResponse * soap_new__tds__RemoveScopesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__RemoveScopesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__RemoveScopesResponse * soap_new_req__tds__RemoveScopesResponse(
	struct soap *soap)
{	_tds__RemoveScopesResponse *_p = soap_new__tds__RemoveScopesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__RemoveScopesResponse * soap_new_set__tds__RemoveScopesResponse(
	struct soap *soap,
	const std::vector<std::string> & ScopeItem)
{	_tds__RemoveScopesResponse *_p = soap_new__tds__RemoveScopesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__RemoveScopesResponse::ScopeItem = ScopeItem;
	}
	return _p;
}

#ifndef soap_write__tds__RemoveScopesResponse
#define soap_write__tds__RemoveScopesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:RemoveScopesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__RemoveScopesResponse * SOAP_FMAC4 soap_get__tds__RemoveScopesResponse(struct soap*, _tds__RemoveScopesResponse *, const char*, const char*);

#ifndef soap_read__tds__RemoveScopesResponse
#define soap_read__tds__RemoveScopesResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__RemoveScopesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__RemoveScopes
#define SOAP_TYPE__tds__RemoveScopes (177)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__RemoveScopes(struct soap*, const char*, int, const _tds__RemoveScopes *, const char*);
SOAP_FMAC3 _tds__RemoveScopes * SOAP_FMAC4 soap_in__tds__RemoveScopes(struct soap*, const char*, _tds__RemoveScopes *, const char*);
SOAP_FMAC1 _tds__RemoveScopes * SOAP_FMAC2 soap_instantiate__tds__RemoveScopes(struct soap*, int, const char*, const char*, size_t*);

inline _tds__RemoveScopes * soap_new__tds__RemoveScopes(struct soap *soap, int n = -1) { return soap_instantiate__tds__RemoveScopes(soap, n, NULL, NULL, NULL); }

inline _tds__RemoveScopes * soap_new_req__tds__RemoveScopes(
	struct soap *soap,
	const std::vector<std::string> & ScopeItem)
{	_tds__RemoveScopes *_p = soap_new__tds__RemoveScopes(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__RemoveScopes::ScopeItem = ScopeItem;
	}
	return _p;
}

inline _tds__RemoveScopes * soap_new_set__tds__RemoveScopes(
	struct soap *soap,
	const std::vector<std::string> & ScopeItem)
{	_tds__RemoveScopes *_p = soap_new__tds__RemoveScopes(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__RemoveScopes::ScopeItem = ScopeItem;
	}
	return _p;
}

#ifndef soap_write__tds__RemoveScopes
#define soap_write__tds__RemoveScopes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:RemoveScopes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__RemoveScopes * SOAP_FMAC4 soap_get__tds__RemoveScopes(struct soap*, _tds__RemoveScopes *, const char*, const char*);

#ifndef soap_read__tds__RemoveScopes
#define soap_read__tds__RemoveScopes(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__RemoveScopes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__AddScopesResponse
#define SOAP_TYPE__tds__AddScopesResponse (176)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__AddScopesResponse(struct soap*, const char*, int, const _tds__AddScopesResponse *, const char*);
SOAP_FMAC3 _tds__AddScopesResponse * SOAP_FMAC4 soap_in__tds__AddScopesResponse(struct soap*, const char*, _tds__AddScopesResponse *, const char*);
SOAP_FMAC1 _tds__AddScopesResponse * SOAP_FMAC2 soap_instantiate__tds__AddScopesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__AddScopesResponse * soap_new__tds__AddScopesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__AddScopesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__AddScopesResponse * soap_new_req__tds__AddScopesResponse(
	struct soap *soap)
{	_tds__AddScopesResponse *_p = soap_new__tds__AddScopesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__AddScopesResponse * soap_new_set__tds__AddScopesResponse(
	struct soap *soap)
{	_tds__AddScopesResponse *_p = soap_new__tds__AddScopesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__AddScopesResponse
#define soap_write__tds__AddScopesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:AddScopesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__AddScopesResponse * SOAP_FMAC4 soap_get__tds__AddScopesResponse(struct soap*, _tds__AddScopesResponse *, const char*, const char*);

#ifndef soap_read__tds__AddScopesResponse
#define soap_read__tds__AddScopesResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__AddScopesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__AddScopes
#define SOAP_TYPE__tds__AddScopes (175)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__AddScopes(struct soap*, const char*, int, const _tds__AddScopes *, const char*);
SOAP_FMAC3 _tds__AddScopes * SOAP_FMAC4 soap_in__tds__AddScopes(struct soap*, const char*, _tds__AddScopes *, const char*);
SOAP_FMAC1 _tds__AddScopes * SOAP_FMAC2 soap_instantiate__tds__AddScopes(struct soap*, int, const char*, const char*, size_t*);

inline _tds__AddScopes * soap_new__tds__AddScopes(struct soap *soap, int n = -1) { return soap_instantiate__tds__AddScopes(soap, n, NULL, NULL, NULL); }

inline _tds__AddScopes * soap_new_req__tds__AddScopes(
	struct soap *soap,
	const std::vector<std::string> & ScopeItem)
{	_tds__AddScopes *_p = soap_new__tds__AddScopes(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__AddScopes::ScopeItem = ScopeItem;
	}
	return _p;
}

inline _tds__AddScopes * soap_new_set__tds__AddScopes(
	struct soap *soap,
	const std::vector<std::string> & ScopeItem)
{	_tds__AddScopes *_p = soap_new__tds__AddScopes(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__AddScopes::ScopeItem = ScopeItem;
	}
	return _p;
}

#ifndef soap_write__tds__AddScopes
#define soap_write__tds__AddScopes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:AddScopes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__AddScopes * SOAP_FMAC4 soap_get__tds__AddScopes(struct soap*, _tds__AddScopes *, const char*, const char*);

#ifndef soap_read__tds__AddScopes
#define soap_read__tds__AddScopes(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__AddScopes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetScopesResponse
#define SOAP_TYPE__tds__SetScopesResponse (174)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetScopesResponse(struct soap*, const char*, int, const _tds__SetScopesResponse *, const char*);
SOAP_FMAC3 _tds__SetScopesResponse * SOAP_FMAC4 soap_in__tds__SetScopesResponse(struct soap*, const char*, _tds__SetScopesResponse *, const char*);
SOAP_FMAC1 _tds__SetScopesResponse * SOAP_FMAC2 soap_instantiate__tds__SetScopesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetScopesResponse * soap_new__tds__SetScopesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetScopesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetScopesResponse * soap_new_req__tds__SetScopesResponse(
	struct soap *soap)
{	_tds__SetScopesResponse *_p = soap_new__tds__SetScopesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SetScopesResponse * soap_new_set__tds__SetScopesResponse(
	struct soap *soap)
{	_tds__SetScopesResponse *_p = soap_new__tds__SetScopesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__SetScopesResponse
#define soap_write__tds__SetScopesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetScopesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetScopesResponse * SOAP_FMAC4 soap_get__tds__SetScopesResponse(struct soap*, _tds__SetScopesResponse *, const char*, const char*);

#ifndef soap_read__tds__SetScopesResponse
#define soap_read__tds__SetScopesResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetScopesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetScopes
#define SOAP_TYPE__tds__SetScopes (173)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetScopes(struct soap*, const char*, int, const _tds__SetScopes *, const char*);
SOAP_FMAC3 _tds__SetScopes * SOAP_FMAC4 soap_in__tds__SetScopes(struct soap*, const char*, _tds__SetScopes *, const char*);
SOAP_FMAC1 _tds__SetScopes * SOAP_FMAC2 soap_instantiate__tds__SetScopes(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetScopes * soap_new__tds__SetScopes(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetScopes(soap, n, NULL, NULL, NULL); }

inline _tds__SetScopes * soap_new_req__tds__SetScopes(
	struct soap *soap,
	const std::vector<std::string> & Scopes)
{	_tds__SetScopes *_p = soap_new__tds__SetScopes(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetScopes::Scopes = Scopes;
	}
	return _p;
}

inline _tds__SetScopes * soap_new_set__tds__SetScopes(
	struct soap *soap,
	const std::vector<std::string> & Scopes)
{	_tds__SetScopes *_p = soap_new__tds__SetScopes(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetScopes::Scopes = Scopes;
	}
	return _p;
}

#ifndef soap_write__tds__SetScopes
#define soap_write__tds__SetScopes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetScopes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetScopes * SOAP_FMAC4 soap_get__tds__SetScopes(struct soap*, _tds__SetScopes *, const char*, const char*);

#ifndef soap_read__tds__SetScopes
#define soap_read__tds__SetScopes(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetScopes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetScopesResponse
#define SOAP_TYPE__tds__GetScopesResponse (172)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetScopesResponse(struct soap*, const char*, int, const _tds__GetScopesResponse *, const char*);
SOAP_FMAC3 _tds__GetScopesResponse * SOAP_FMAC4 soap_in__tds__GetScopesResponse(struct soap*, const char*, _tds__GetScopesResponse *, const char*);
SOAP_FMAC1 _tds__GetScopesResponse * SOAP_FMAC2 soap_instantiate__tds__GetScopesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetScopesResponse * soap_new__tds__GetScopesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetScopesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetScopesResponse * soap_new_req__tds__GetScopesResponse(
	struct soap *soap,
	const std::vector<tt__Scope *> & Scopes)
{	_tds__GetScopesResponse *_p = soap_new__tds__GetScopesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetScopesResponse::Scopes = Scopes;
	}
	return _p;
}

inline _tds__GetScopesResponse * soap_new_set__tds__GetScopesResponse(
	struct soap *soap,
	const std::vector<tt__Scope *> & Scopes)
{	_tds__GetScopesResponse *_p = soap_new__tds__GetScopesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetScopesResponse::Scopes = Scopes;
	}
	return _p;
}

#ifndef soap_write__tds__GetScopesResponse
#define soap_write__tds__GetScopesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetScopesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetScopesResponse * SOAP_FMAC4 soap_get__tds__GetScopesResponse(struct soap*, _tds__GetScopesResponse *, const char*, const char*);

#ifndef soap_read__tds__GetScopesResponse
#define soap_read__tds__GetScopesResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetScopesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetScopes
#define SOAP_TYPE__tds__GetScopes (171)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetScopes(struct soap*, const char*, int, const _tds__GetScopes *, const char*);
SOAP_FMAC3 _tds__GetScopes * SOAP_FMAC4 soap_in__tds__GetScopes(struct soap*, const char*, _tds__GetScopes *, const char*);
SOAP_FMAC1 _tds__GetScopes * SOAP_FMAC2 soap_instantiate__tds__GetScopes(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetScopes * soap_new__tds__GetScopes(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetScopes(soap, n, NULL, NULL, NULL); }

inline _tds__GetScopes * soap_new_req__tds__GetScopes(
	struct soap *soap)
{	_tds__GetScopes *_p = soap_new__tds__GetScopes(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetScopes * soap_new_set__tds__GetScopes(
	struct soap *soap)
{	_tds__GetScopes *_p = soap_new__tds__GetScopes(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetScopes
#define soap_write__tds__GetScopes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetScopes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetScopes * SOAP_FMAC4 soap_get__tds__GetScopes(struct soap*, _tds__GetScopes *, const char*, const char*);

#ifndef soap_read__tds__GetScopes
#define soap_read__tds__GetScopes(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetScopes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetSystemLogResponse
#define SOAP_TYPE__tds__GetSystemLogResponse (170)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetSystemLogResponse(struct soap*, const char*, int, const _tds__GetSystemLogResponse *, const char*);
SOAP_FMAC3 _tds__GetSystemLogResponse * SOAP_FMAC4 soap_in__tds__GetSystemLogResponse(struct soap*, const char*, _tds__GetSystemLogResponse *, const char*);
SOAP_FMAC1 _tds__GetSystemLogResponse * SOAP_FMAC2 soap_instantiate__tds__GetSystemLogResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetSystemLogResponse * soap_new__tds__GetSystemLogResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetSystemLogResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetSystemLogResponse * soap_new_req__tds__GetSystemLogResponse(
	struct soap *soap,
	tt__SystemLog *SystemLog)
{	_tds__GetSystemLogResponse *_p = soap_new__tds__GetSystemLogResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetSystemLogResponse::SystemLog = SystemLog;
	}
	return _p;
}

inline _tds__GetSystemLogResponse * soap_new_set__tds__GetSystemLogResponse(
	struct soap *soap,
	tt__SystemLog *SystemLog)
{	_tds__GetSystemLogResponse *_p = soap_new__tds__GetSystemLogResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetSystemLogResponse::SystemLog = SystemLog;
	}
	return _p;
}

#ifndef soap_write__tds__GetSystemLogResponse
#define soap_write__tds__GetSystemLogResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetSystemLogResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemLogResponse * SOAP_FMAC4 soap_get__tds__GetSystemLogResponse(struct soap*, _tds__GetSystemLogResponse *, const char*, const char*);

#ifndef soap_read__tds__GetSystemLogResponse
#define soap_read__tds__GetSystemLogResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetSystemLogResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetSystemLog
#define SOAP_TYPE__tds__GetSystemLog (169)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetSystemLog(struct soap*, const char*, int, const _tds__GetSystemLog *, const char*);
SOAP_FMAC3 _tds__GetSystemLog * SOAP_FMAC4 soap_in__tds__GetSystemLog(struct soap*, const char*, _tds__GetSystemLog *, const char*);
SOAP_FMAC1 _tds__GetSystemLog * SOAP_FMAC2 soap_instantiate__tds__GetSystemLog(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetSystemLog * soap_new__tds__GetSystemLog(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetSystemLog(soap, n, NULL, NULL, NULL); }

inline _tds__GetSystemLog * soap_new_req__tds__GetSystemLog(
	struct soap *soap,
	enum tt__SystemLogType LogType)
{	_tds__GetSystemLog *_p = soap_new__tds__GetSystemLog(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetSystemLog::LogType = LogType;
	}
	return _p;
}

inline _tds__GetSystemLog * soap_new_set__tds__GetSystemLog(
	struct soap *soap,
	enum tt__SystemLogType LogType)
{	_tds__GetSystemLog *_p = soap_new__tds__GetSystemLog(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetSystemLog::LogType = LogType;
	}
	return _p;
}

#ifndef soap_write__tds__GetSystemLog
#define soap_write__tds__GetSystemLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetSystemLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemLog * SOAP_FMAC4 soap_get__tds__GetSystemLog(struct soap*, _tds__GetSystemLog *, const char*, const char*);

#ifndef soap_read__tds__GetSystemLog
#define soap_read__tds__GetSystemLog(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetSystemLog(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetSystemSupportInformationResponse
#define SOAP_TYPE__tds__GetSystemSupportInformationResponse (168)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetSystemSupportInformationResponse(struct soap*, const char*, int, const _tds__GetSystemSupportInformationResponse *, const char*);
SOAP_FMAC3 _tds__GetSystemSupportInformationResponse * SOAP_FMAC4 soap_in__tds__GetSystemSupportInformationResponse(struct soap*, const char*, _tds__GetSystemSupportInformationResponse *, const char*);
SOAP_FMAC1 _tds__GetSystemSupportInformationResponse * SOAP_FMAC2 soap_instantiate__tds__GetSystemSupportInformationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetSystemSupportInformationResponse * soap_new__tds__GetSystemSupportInformationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetSystemSupportInformationResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetSystemSupportInformationResponse * soap_new_req__tds__GetSystemSupportInformationResponse(
	struct soap *soap,
	tt__SupportInformation *SupportInformation)
{	_tds__GetSystemSupportInformationResponse *_p = soap_new__tds__GetSystemSupportInformationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetSystemSupportInformationResponse::SupportInformation = SupportInformation;
	}
	return _p;
}

inline _tds__GetSystemSupportInformationResponse * soap_new_set__tds__GetSystemSupportInformationResponse(
	struct soap *soap,
	tt__SupportInformation *SupportInformation)
{	_tds__GetSystemSupportInformationResponse *_p = soap_new__tds__GetSystemSupportInformationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetSystemSupportInformationResponse::SupportInformation = SupportInformation;
	}
	return _p;
}

#ifndef soap_write__tds__GetSystemSupportInformationResponse
#define soap_write__tds__GetSystemSupportInformationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetSystemSupportInformationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemSupportInformationResponse * SOAP_FMAC4 soap_get__tds__GetSystemSupportInformationResponse(struct soap*, _tds__GetSystemSupportInformationResponse *, const char*, const char*);

#ifndef soap_read__tds__GetSystemSupportInformationResponse
#define soap_read__tds__GetSystemSupportInformationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetSystemSupportInformationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetSystemSupportInformation
#define SOAP_TYPE__tds__GetSystemSupportInformation (167)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetSystemSupportInformation(struct soap*, const char*, int, const _tds__GetSystemSupportInformation *, const char*);
SOAP_FMAC3 _tds__GetSystemSupportInformation * SOAP_FMAC4 soap_in__tds__GetSystemSupportInformation(struct soap*, const char*, _tds__GetSystemSupportInformation *, const char*);
SOAP_FMAC1 _tds__GetSystemSupportInformation * SOAP_FMAC2 soap_instantiate__tds__GetSystemSupportInformation(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetSystemSupportInformation * soap_new__tds__GetSystemSupportInformation(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetSystemSupportInformation(soap, n, NULL, NULL, NULL); }

inline _tds__GetSystemSupportInformation * soap_new_req__tds__GetSystemSupportInformation(
	struct soap *soap)
{	_tds__GetSystemSupportInformation *_p = soap_new__tds__GetSystemSupportInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetSystemSupportInformation * soap_new_set__tds__GetSystemSupportInformation(
	struct soap *soap)
{	_tds__GetSystemSupportInformation *_p = soap_new__tds__GetSystemSupportInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetSystemSupportInformation
#define soap_write__tds__GetSystemSupportInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetSystemSupportInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemSupportInformation * SOAP_FMAC4 soap_get__tds__GetSystemSupportInformation(struct soap*, _tds__GetSystemSupportInformation *, const char*, const char*);

#ifndef soap_read__tds__GetSystemSupportInformation
#define soap_read__tds__GetSystemSupportInformation(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetSystemSupportInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetSystemBackupResponse
#define SOAP_TYPE__tds__GetSystemBackupResponse (166)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetSystemBackupResponse(struct soap*, const char*, int, const _tds__GetSystemBackupResponse *, const char*);
SOAP_FMAC3 _tds__GetSystemBackupResponse * SOAP_FMAC4 soap_in__tds__GetSystemBackupResponse(struct soap*, const char*, _tds__GetSystemBackupResponse *, const char*);
SOAP_FMAC1 _tds__GetSystemBackupResponse * SOAP_FMAC2 soap_instantiate__tds__GetSystemBackupResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetSystemBackupResponse * soap_new__tds__GetSystemBackupResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetSystemBackupResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetSystemBackupResponse * soap_new_req__tds__GetSystemBackupResponse(
	struct soap *soap,
	const std::vector<tt__BackupFile *> & BackupFiles)
{	_tds__GetSystemBackupResponse *_p = soap_new__tds__GetSystemBackupResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetSystemBackupResponse::BackupFiles = BackupFiles;
	}
	return _p;
}

inline _tds__GetSystemBackupResponse * soap_new_set__tds__GetSystemBackupResponse(
	struct soap *soap,
	const std::vector<tt__BackupFile *> & BackupFiles)
{	_tds__GetSystemBackupResponse *_p = soap_new__tds__GetSystemBackupResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetSystemBackupResponse::BackupFiles = BackupFiles;
	}
	return _p;
}

#ifndef soap_write__tds__GetSystemBackupResponse
#define soap_write__tds__GetSystemBackupResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetSystemBackupResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemBackupResponse * SOAP_FMAC4 soap_get__tds__GetSystemBackupResponse(struct soap*, _tds__GetSystemBackupResponse *, const char*, const char*);

#ifndef soap_read__tds__GetSystemBackupResponse
#define soap_read__tds__GetSystemBackupResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetSystemBackupResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetSystemBackup
#define SOAP_TYPE__tds__GetSystemBackup (165)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetSystemBackup(struct soap*, const char*, int, const _tds__GetSystemBackup *, const char*);
SOAP_FMAC3 _tds__GetSystemBackup * SOAP_FMAC4 soap_in__tds__GetSystemBackup(struct soap*, const char*, _tds__GetSystemBackup *, const char*);
SOAP_FMAC1 _tds__GetSystemBackup * SOAP_FMAC2 soap_instantiate__tds__GetSystemBackup(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetSystemBackup * soap_new__tds__GetSystemBackup(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetSystemBackup(soap, n, NULL, NULL, NULL); }

inline _tds__GetSystemBackup * soap_new_req__tds__GetSystemBackup(
	struct soap *soap)
{	_tds__GetSystemBackup *_p = soap_new__tds__GetSystemBackup(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetSystemBackup * soap_new_set__tds__GetSystemBackup(
	struct soap *soap)
{	_tds__GetSystemBackup *_p = soap_new__tds__GetSystemBackup(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetSystemBackup
#define soap_write__tds__GetSystemBackup(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetSystemBackup", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemBackup * SOAP_FMAC4 soap_get__tds__GetSystemBackup(struct soap*, _tds__GetSystemBackup *, const char*, const char*);

#ifndef soap_read__tds__GetSystemBackup
#define soap_read__tds__GetSystemBackup(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetSystemBackup(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__RestoreSystemResponse
#define SOAP_TYPE__tds__RestoreSystemResponse (164)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__RestoreSystemResponse(struct soap*, const char*, int, const _tds__RestoreSystemResponse *, const char*);
SOAP_FMAC3 _tds__RestoreSystemResponse * SOAP_FMAC4 soap_in__tds__RestoreSystemResponse(struct soap*, const char*, _tds__RestoreSystemResponse *, const char*);
SOAP_FMAC1 _tds__RestoreSystemResponse * SOAP_FMAC2 soap_instantiate__tds__RestoreSystemResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__RestoreSystemResponse * soap_new__tds__RestoreSystemResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__RestoreSystemResponse(soap, n, NULL, NULL, NULL); }

inline _tds__RestoreSystemResponse * soap_new_req__tds__RestoreSystemResponse(
	struct soap *soap)
{	_tds__RestoreSystemResponse *_p = soap_new__tds__RestoreSystemResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__RestoreSystemResponse * soap_new_set__tds__RestoreSystemResponse(
	struct soap *soap)
{	_tds__RestoreSystemResponse *_p = soap_new__tds__RestoreSystemResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__RestoreSystemResponse
#define soap_write__tds__RestoreSystemResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:RestoreSystemResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__RestoreSystemResponse * SOAP_FMAC4 soap_get__tds__RestoreSystemResponse(struct soap*, _tds__RestoreSystemResponse *, const char*, const char*);

#ifndef soap_read__tds__RestoreSystemResponse
#define soap_read__tds__RestoreSystemResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__RestoreSystemResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__RestoreSystem
#define SOAP_TYPE__tds__RestoreSystem (163)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__RestoreSystem(struct soap*, const char*, int, const _tds__RestoreSystem *, const char*);
SOAP_FMAC3 _tds__RestoreSystem * SOAP_FMAC4 soap_in__tds__RestoreSystem(struct soap*, const char*, _tds__RestoreSystem *, const char*);
SOAP_FMAC1 _tds__RestoreSystem * SOAP_FMAC2 soap_instantiate__tds__RestoreSystem(struct soap*, int, const char*, const char*, size_t*);

inline _tds__RestoreSystem * soap_new__tds__RestoreSystem(struct soap *soap, int n = -1) { return soap_instantiate__tds__RestoreSystem(soap, n, NULL, NULL, NULL); }

inline _tds__RestoreSystem * soap_new_req__tds__RestoreSystem(
	struct soap *soap,
	const std::vector<tt__BackupFile *> & BackupFiles)
{	_tds__RestoreSystem *_p = soap_new__tds__RestoreSystem(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__RestoreSystem::BackupFiles = BackupFiles;
	}
	return _p;
}

inline _tds__RestoreSystem * soap_new_set__tds__RestoreSystem(
	struct soap *soap,
	const std::vector<tt__BackupFile *> & BackupFiles)
{	_tds__RestoreSystem *_p = soap_new__tds__RestoreSystem(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__RestoreSystem::BackupFiles = BackupFiles;
	}
	return _p;
}

#ifndef soap_write__tds__RestoreSystem
#define soap_write__tds__RestoreSystem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:RestoreSystem", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__RestoreSystem * SOAP_FMAC4 soap_get__tds__RestoreSystem(struct soap*, _tds__RestoreSystem *, const char*, const char*);

#ifndef soap_read__tds__RestoreSystem
#define soap_read__tds__RestoreSystem(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__RestoreSystem(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SystemRebootResponse
#define SOAP_TYPE__tds__SystemRebootResponse (162)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SystemRebootResponse(struct soap*, const char*, int, const _tds__SystemRebootResponse *, const char*);
SOAP_FMAC3 _tds__SystemRebootResponse * SOAP_FMAC4 soap_in__tds__SystemRebootResponse(struct soap*, const char*, _tds__SystemRebootResponse *, const char*);
SOAP_FMAC1 _tds__SystemRebootResponse * SOAP_FMAC2 soap_instantiate__tds__SystemRebootResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SystemRebootResponse * soap_new__tds__SystemRebootResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SystemRebootResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SystemRebootResponse * soap_new_req__tds__SystemRebootResponse(
	struct soap *soap,
	const std::string& Message)
{	_tds__SystemRebootResponse *_p = soap_new__tds__SystemRebootResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SystemRebootResponse::Message = Message;
	}
	return _p;
}

inline _tds__SystemRebootResponse * soap_new_set__tds__SystemRebootResponse(
	struct soap *soap,
	const std::string& Message)
{	_tds__SystemRebootResponse *_p = soap_new__tds__SystemRebootResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SystemRebootResponse::Message = Message;
	}
	return _p;
}

#ifndef soap_write__tds__SystemRebootResponse
#define soap_write__tds__SystemRebootResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SystemRebootResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SystemRebootResponse * SOAP_FMAC4 soap_get__tds__SystemRebootResponse(struct soap*, _tds__SystemRebootResponse *, const char*, const char*);

#ifndef soap_read__tds__SystemRebootResponse
#define soap_read__tds__SystemRebootResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SystemRebootResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SystemReboot
#define SOAP_TYPE__tds__SystemReboot (161)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SystemReboot(struct soap*, const char*, int, const _tds__SystemReboot *, const char*);
SOAP_FMAC3 _tds__SystemReboot * SOAP_FMAC4 soap_in__tds__SystemReboot(struct soap*, const char*, _tds__SystemReboot *, const char*);
SOAP_FMAC1 _tds__SystemReboot * SOAP_FMAC2 soap_instantiate__tds__SystemReboot(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SystemReboot * soap_new__tds__SystemReboot(struct soap *soap, int n = -1) { return soap_instantiate__tds__SystemReboot(soap, n, NULL, NULL, NULL); }

inline _tds__SystemReboot * soap_new_req__tds__SystemReboot(
	struct soap *soap)
{	_tds__SystemReboot *_p = soap_new__tds__SystemReboot(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SystemReboot * soap_new_set__tds__SystemReboot(
	struct soap *soap)
{	_tds__SystemReboot *_p = soap_new__tds__SystemReboot(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__SystemReboot
#define soap_write__tds__SystemReboot(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SystemReboot", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SystemReboot * SOAP_FMAC4 soap_get__tds__SystemReboot(struct soap*, _tds__SystemReboot *, const char*, const char*);

#ifndef soap_read__tds__SystemReboot
#define soap_read__tds__SystemReboot(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SystemReboot(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__UpgradeSystemFirmwareResponse
#define SOAP_TYPE__tds__UpgradeSystemFirmwareResponse (160)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__UpgradeSystemFirmwareResponse(struct soap*, const char*, int, const _tds__UpgradeSystemFirmwareResponse *, const char*);
SOAP_FMAC3 _tds__UpgradeSystemFirmwareResponse * SOAP_FMAC4 soap_in__tds__UpgradeSystemFirmwareResponse(struct soap*, const char*, _tds__UpgradeSystemFirmwareResponse *, const char*);
SOAP_FMAC1 _tds__UpgradeSystemFirmwareResponse * SOAP_FMAC2 soap_instantiate__tds__UpgradeSystemFirmwareResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__UpgradeSystemFirmwareResponse * soap_new__tds__UpgradeSystemFirmwareResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__UpgradeSystemFirmwareResponse(soap, n, NULL, NULL, NULL); }

inline _tds__UpgradeSystemFirmwareResponse * soap_new_req__tds__UpgradeSystemFirmwareResponse(
	struct soap *soap)
{	_tds__UpgradeSystemFirmwareResponse *_p = soap_new__tds__UpgradeSystemFirmwareResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__UpgradeSystemFirmwareResponse * soap_new_set__tds__UpgradeSystemFirmwareResponse(
	struct soap *soap,
	std::string *Message)
{	_tds__UpgradeSystemFirmwareResponse *_p = soap_new__tds__UpgradeSystemFirmwareResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__UpgradeSystemFirmwareResponse::Message = Message;
	}
	return _p;
}

#ifndef soap_write__tds__UpgradeSystemFirmwareResponse
#define soap_write__tds__UpgradeSystemFirmwareResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:UpgradeSystemFirmwareResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__UpgradeSystemFirmwareResponse * SOAP_FMAC4 soap_get__tds__UpgradeSystemFirmwareResponse(struct soap*, _tds__UpgradeSystemFirmwareResponse *, const char*, const char*);

#ifndef soap_read__tds__UpgradeSystemFirmwareResponse
#define soap_read__tds__UpgradeSystemFirmwareResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__UpgradeSystemFirmwareResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__UpgradeSystemFirmware
#define SOAP_TYPE__tds__UpgradeSystemFirmware (159)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__UpgradeSystemFirmware(struct soap*, const char*, int, const _tds__UpgradeSystemFirmware *, const char*);
SOAP_FMAC3 _tds__UpgradeSystemFirmware * SOAP_FMAC4 soap_in__tds__UpgradeSystemFirmware(struct soap*, const char*, _tds__UpgradeSystemFirmware *, const char*);
SOAP_FMAC1 _tds__UpgradeSystemFirmware * SOAP_FMAC2 soap_instantiate__tds__UpgradeSystemFirmware(struct soap*, int, const char*, const char*, size_t*);

inline _tds__UpgradeSystemFirmware * soap_new__tds__UpgradeSystemFirmware(struct soap *soap, int n = -1) { return soap_instantiate__tds__UpgradeSystemFirmware(soap, n, NULL, NULL, NULL); }

inline _tds__UpgradeSystemFirmware * soap_new_req__tds__UpgradeSystemFirmware(
	struct soap *soap,
	tt__AttachmentData *Firmware)
{	_tds__UpgradeSystemFirmware *_p = soap_new__tds__UpgradeSystemFirmware(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__UpgradeSystemFirmware::Firmware = Firmware;
	}
	return _p;
}

inline _tds__UpgradeSystemFirmware * soap_new_set__tds__UpgradeSystemFirmware(
	struct soap *soap,
	tt__AttachmentData *Firmware)
{	_tds__UpgradeSystemFirmware *_p = soap_new__tds__UpgradeSystemFirmware(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__UpgradeSystemFirmware::Firmware = Firmware;
	}
	return _p;
}

#ifndef soap_write__tds__UpgradeSystemFirmware
#define soap_write__tds__UpgradeSystemFirmware(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:UpgradeSystemFirmware", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__UpgradeSystemFirmware * SOAP_FMAC4 soap_get__tds__UpgradeSystemFirmware(struct soap*, _tds__UpgradeSystemFirmware *, const char*, const char*);

#ifndef soap_read__tds__UpgradeSystemFirmware
#define soap_read__tds__UpgradeSystemFirmware(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__UpgradeSystemFirmware(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetSystemFactoryDefaultResponse
#define SOAP_TYPE__tds__SetSystemFactoryDefaultResponse (158)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetSystemFactoryDefaultResponse(struct soap*, const char*, int, const _tds__SetSystemFactoryDefaultResponse *, const char*);
SOAP_FMAC3 _tds__SetSystemFactoryDefaultResponse * SOAP_FMAC4 soap_in__tds__SetSystemFactoryDefaultResponse(struct soap*, const char*, _tds__SetSystemFactoryDefaultResponse *, const char*);
SOAP_FMAC1 _tds__SetSystemFactoryDefaultResponse * SOAP_FMAC2 soap_instantiate__tds__SetSystemFactoryDefaultResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetSystemFactoryDefaultResponse * soap_new__tds__SetSystemFactoryDefaultResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetSystemFactoryDefaultResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetSystemFactoryDefaultResponse * soap_new_req__tds__SetSystemFactoryDefaultResponse(
	struct soap *soap)
{	_tds__SetSystemFactoryDefaultResponse *_p = soap_new__tds__SetSystemFactoryDefaultResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SetSystemFactoryDefaultResponse * soap_new_set__tds__SetSystemFactoryDefaultResponse(
	struct soap *soap)
{	_tds__SetSystemFactoryDefaultResponse *_p = soap_new__tds__SetSystemFactoryDefaultResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__SetSystemFactoryDefaultResponse
#define soap_write__tds__SetSystemFactoryDefaultResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetSystemFactoryDefaultResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetSystemFactoryDefaultResponse * SOAP_FMAC4 soap_get__tds__SetSystemFactoryDefaultResponse(struct soap*, _tds__SetSystemFactoryDefaultResponse *, const char*, const char*);

#ifndef soap_read__tds__SetSystemFactoryDefaultResponse
#define soap_read__tds__SetSystemFactoryDefaultResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetSystemFactoryDefaultResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetSystemFactoryDefault
#define SOAP_TYPE__tds__SetSystemFactoryDefault (157)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetSystemFactoryDefault(struct soap*, const char*, int, const _tds__SetSystemFactoryDefault *, const char*);
SOAP_FMAC3 _tds__SetSystemFactoryDefault * SOAP_FMAC4 soap_in__tds__SetSystemFactoryDefault(struct soap*, const char*, _tds__SetSystemFactoryDefault *, const char*);
SOAP_FMAC1 _tds__SetSystemFactoryDefault * SOAP_FMAC2 soap_instantiate__tds__SetSystemFactoryDefault(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetSystemFactoryDefault * soap_new__tds__SetSystemFactoryDefault(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetSystemFactoryDefault(soap, n, NULL, NULL, NULL); }

inline _tds__SetSystemFactoryDefault * soap_new_req__tds__SetSystemFactoryDefault(
	struct soap *soap,
	enum tt__FactoryDefaultType FactoryDefault)
{	_tds__SetSystemFactoryDefault *_p = soap_new__tds__SetSystemFactoryDefault(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetSystemFactoryDefault::FactoryDefault = FactoryDefault;
	}
	return _p;
}

inline _tds__SetSystemFactoryDefault * soap_new_set__tds__SetSystemFactoryDefault(
	struct soap *soap,
	enum tt__FactoryDefaultType FactoryDefault)
{	_tds__SetSystemFactoryDefault *_p = soap_new__tds__SetSystemFactoryDefault(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetSystemFactoryDefault::FactoryDefault = FactoryDefault;
	}
	return _p;
}

#ifndef soap_write__tds__SetSystemFactoryDefault
#define soap_write__tds__SetSystemFactoryDefault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetSystemFactoryDefault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetSystemFactoryDefault * SOAP_FMAC4 soap_get__tds__SetSystemFactoryDefault(struct soap*, _tds__SetSystemFactoryDefault *, const char*, const char*);

#ifndef soap_read__tds__SetSystemFactoryDefault
#define soap_read__tds__SetSystemFactoryDefault(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetSystemFactoryDefault(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetSystemDateAndTimeResponse
#define SOAP_TYPE__tds__GetSystemDateAndTimeResponse (156)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetSystemDateAndTimeResponse(struct soap*, const char*, int, const _tds__GetSystemDateAndTimeResponse *, const char*);
SOAP_FMAC3 _tds__GetSystemDateAndTimeResponse * SOAP_FMAC4 soap_in__tds__GetSystemDateAndTimeResponse(struct soap*, const char*, _tds__GetSystemDateAndTimeResponse *, const char*);
SOAP_FMAC1 _tds__GetSystemDateAndTimeResponse * SOAP_FMAC2 soap_instantiate__tds__GetSystemDateAndTimeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetSystemDateAndTimeResponse * soap_new__tds__GetSystemDateAndTimeResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetSystemDateAndTimeResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetSystemDateAndTimeResponse * soap_new_req__tds__GetSystemDateAndTimeResponse(
	struct soap *soap,
	tt__SystemDateTime *SystemDateAndTime)
{	_tds__GetSystemDateAndTimeResponse *_p = soap_new__tds__GetSystemDateAndTimeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetSystemDateAndTimeResponse::SystemDateAndTime = SystemDateAndTime;
	}
	return _p;
}

inline _tds__GetSystemDateAndTimeResponse * soap_new_set__tds__GetSystemDateAndTimeResponse(
	struct soap *soap,
	tt__SystemDateTime *SystemDateAndTime)
{	_tds__GetSystemDateAndTimeResponse *_p = soap_new__tds__GetSystemDateAndTimeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetSystemDateAndTimeResponse::SystemDateAndTime = SystemDateAndTime;
	}
	return _p;
}

#ifndef soap_write__tds__GetSystemDateAndTimeResponse
#define soap_write__tds__GetSystemDateAndTimeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetSystemDateAndTimeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemDateAndTimeResponse * SOAP_FMAC4 soap_get__tds__GetSystemDateAndTimeResponse(struct soap*, _tds__GetSystemDateAndTimeResponse *, const char*, const char*);

#ifndef soap_read__tds__GetSystemDateAndTimeResponse
#define soap_read__tds__GetSystemDateAndTimeResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetSystemDateAndTimeResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetSystemDateAndTime
#define SOAP_TYPE__tds__GetSystemDateAndTime (155)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetSystemDateAndTime(struct soap*, const char*, int, const _tds__GetSystemDateAndTime *, const char*);
SOAP_FMAC3 _tds__GetSystemDateAndTime * SOAP_FMAC4 soap_in__tds__GetSystemDateAndTime(struct soap*, const char*, _tds__GetSystemDateAndTime *, const char*);
SOAP_FMAC1 _tds__GetSystemDateAndTime * SOAP_FMAC2 soap_instantiate__tds__GetSystemDateAndTime(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetSystemDateAndTime * soap_new__tds__GetSystemDateAndTime(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetSystemDateAndTime(soap, n, NULL, NULL, NULL); }

inline _tds__GetSystemDateAndTime * soap_new_req__tds__GetSystemDateAndTime(
	struct soap *soap)
{	_tds__GetSystemDateAndTime *_p = soap_new__tds__GetSystemDateAndTime(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetSystemDateAndTime * soap_new_set__tds__GetSystemDateAndTime(
	struct soap *soap)
{	_tds__GetSystemDateAndTime *_p = soap_new__tds__GetSystemDateAndTime(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetSystemDateAndTime
#define soap_write__tds__GetSystemDateAndTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetSystemDateAndTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemDateAndTime * SOAP_FMAC4 soap_get__tds__GetSystemDateAndTime(struct soap*, _tds__GetSystemDateAndTime *, const char*, const char*);

#ifndef soap_read__tds__GetSystemDateAndTime
#define soap_read__tds__GetSystemDateAndTime(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetSystemDateAndTime(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetSystemDateAndTimeResponse
#define SOAP_TYPE__tds__SetSystemDateAndTimeResponse (154)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetSystemDateAndTimeResponse(struct soap*, const char*, int, const _tds__SetSystemDateAndTimeResponse *, const char*);
SOAP_FMAC3 _tds__SetSystemDateAndTimeResponse * SOAP_FMAC4 soap_in__tds__SetSystemDateAndTimeResponse(struct soap*, const char*, _tds__SetSystemDateAndTimeResponse *, const char*);
SOAP_FMAC1 _tds__SetSystemDateAndTimeResponse * SOAP_FMAC2 soap_instantiate__tds__SetSystemDateAndTimeResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetSystemDateAndTimeResponse * soap_new__tds__SetSystemDateAndTimeResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetSystemDateAndTimeResponse(soap, n, NULL, NULL, NULL); }

inline _tds__SetSystemDateAndTimeResponse * soap_new_req__tds__SetSystemDateAndTimeResponse(
	struct soap *soap)
{	_tds__SetSystemDateAndTimeResponse *_p = soap_new__tds__SetSystemDateAndTimeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__SetSystemDateAndTimeResponse * soap_new_set__tds__SetSystemDateAndTimeResponse(
	struct soap *soap)
{	_tds__SetSystemDateAndTimeResponse *_p = soap_new__tds__SetSystemDateAndTimeResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__SetSystemDateAndTimeResponse
#define soap_write__tds__SetSystemDateAndTimeResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetSystemDateAndTimeResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetSystemDateAndTimeResponse * SOAP_FMAC4 soap_get__tds__SetSystemDateAndTimeResponse(struct soap*, _tds__SetSystemDateAndTimeResponse *, const char*, const char*);

#ifndef soap_read__tds__SetSystemDateAndTimeResponse
#define soap_read__tds__SetSystemDateAndTimeResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetSystemDateAndTimeResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__SetSystemDateAndTime
#define SOAP_TYPE__tds__SetSystemDateAndTime (153)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__SetSystemDateAndTime(struct soap*, const char*, int, const _tds__SetSystemDateAndTime *, const char*);
SOAP_FMAC3 _tds__SetSystemDateAndTime * SOAP_FMAC4 soap_in__tds__SetSystemDateAndTime(struct soap*, const char*, _tds__SetSystemDateAndTime *, const char*);
SOAP_FMAC1 _tds__SetSystemDateAndTime * SOAP_FMAC2 soap_instantiate__tds__SetSystemDateAndTime(struct soap*, int, const char*, const char*, size_t*);

inline _tds__SetSystemDateAndTime * soap_new__tds__SetSystemDateAndTime(struct soap *soap, int n = -1) { return soap_instantiate__tds__SetSystemDateAndTime(soap, n, NULL, NULL, NULL); }

inline _tds__SetSystemDateAndTime * soap_new_req__tds__SetSystemDateAndTime(
	struct soap *soap,
	enum tt__SetDateTimeType DateTimeType,
	bool DaylightSavings)
{	_tds__SetSystemDateAndTime *_p = soap_new__tds__SetSystemDateAndTime(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetSystemDateAndTime::DateTimeType = DateTimeType;
		_p->_tds__SetSystemDateAndTime::DaylightSavings = DaylightSavings;
	}
	return _p;
}

inline _tds__SetSystemDateAndTime * soap_new_set__tds__SetSystemDateAndTime(
	struct soap *soap,
	enum tt__SetDateTimeType DateTimeType,
	bool DaylightSavings,
	tt__TimeZone *TimeZone,
	tt__DateTime *UTCDateTime)
{	_tds__SetSystemDateAndTime *_p = soap_new__tds__SetSystemDateAndTime(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__SetSystemDateAndTime::DateTimeType = DateTimeType;
		_p->_tds__SetSystemDateAndTime::DaylightSavings = DaylightSavings;
		_p->_tds__SetSystemDateAndTime::TimeZone = TimeZone;
		_p->_tds__SetSystemDateAndTime::UTCDateTime = UTCDateTime;
	}
	return _p;
}

#ifndef soap_write__tds__SetSystemDateAndTime
#define soap_write__tds__SetSystemDateAndTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SetSystemDateAndTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetSystemDateAndTime * SOAP_FMAC4 soap_get__tds__SetSystemDateAndTime(struct soap*, _tds__SetSystemDateAndTime *, const char*, const char*);

#ifndef soap_read__tds__SetSystemDateAndTime
#define soap_read__tds__SetSystemDateAndTime(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__SetSystemDateAndTime(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetDeviceInformationResponse
#define SOAP_TYPE__tds__GetDeviceInformationResponse (152)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDeviceInformationResponse(struct soap*, const char*, int, const _tds__GetDeviceInformationResponse *, const char*);
SOAP_FMAC3 _tds__GetDeviceInformationResponse * SOAP_FMAC4 soap_in__tds__GetDeviceInformationResponse(struct soap*, const char*, _tds__GetDeviceInformationResponse *, const char*);
SOAP_FMAC1 _tds__GetDeviceInformationResponse * SOAP_FMAC2 soap_instantiate__tds__GetDeviceInformationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDeviceInformationResponse * soap_new__tds__GetDeviceInformationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDeviceInformationResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetDeviceInformationResponse * soap_new_req__tds__GetDeviceInformationResponse(
	struct soap *soap,
	const std::string& Manufacturer,
	const std::string& Model,
	const std::string& FirmwareVersion,
	const std::string& SerialNumber,
	const std::string& HardwareId)
{	_tds__GetDeviceInformationResponse *_p = soap_new__tds__GetDeviceInformationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetDeviceInformationResponse::Manufacturer = Manufacturer;
		_p->_tds__GetDeviceInformationResponse::Model = Model;
		_p->_tds__GetDeviceInformationResponse::FirmwareVersion = FirmwareVersion;
		_p->_tds__GetDeviceInformationResponse::SerialNumber = SerialNumber;
		_p->_tds__GetDeviceInformationResponse::HardwareId = HardwareId;
	}
	return _p;
}

inline _tds__GetDeviceInformationResponse * soap_new_set__tds__GetDeviceInformationResponse(
	struct soap *soap,
	const std::string& Manufacturer,
	const std::string& Model,
	const std::string& FirmwareVersion,
	const std::string& SerialNumber,
	const std::string& HardwareId)
{	_tds__GetDeviceInformationResponse *_p = soap_new__tds__GetDeviceInformationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetDeviceInformationResponse::Manufacturer = Manufacturer;
		_p->_tds__GetDeviceInformationResponse::Model = Model;
		_p->_tds__GetDeviceInformationResponse::FirmwareVersion = FirmwareVersion;
		_p->_tds__GetDeviceInformationResponse::SerialNumber = SerialNumber;
		_p->_tds__GetDeviceInformationResponse::HardwareId = HardwareId;
	}
	return _p;
}

#ifndef soap_write__tds__GetDeviceInformationResponse
#define soap_write__tds__GetDeviceInformationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetDeviceInformationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDeviceInformationResponse * SOAP_FMAC4 soap_get__tds__GetDeviceInformationResponse(struct soap*, _tds__GetDeviceInformationResponse *, const char*, const char*);

#ifndef soap_read__tds__GetDeviceInformationResponse
#define soap_read__tds__GetDeviceInformationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetDeviceInformationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetDeviceInformation
#define SOAP_TYPE__tds__GetDeviceInformation (151)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetDeviceInformation(struct soap*, const char*, int, const _tds__GetDeviceInformation *, const char*);
SOAP_FMAC3 _tds__GetDeviceInformation * SOAP_FMAC4 soap_in__tds__GetDeviceInformation(struct soap*, const char*, _tds__GetDeviceInformation *, const char*);
SOAP_FMAC1 _tds__GetDeviceInformation * SOAP_FMAC2 soap_instantiate__tds__GetDeviceInformation(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetDeviceInformation * soap_new__tds__GetDeviceInformation(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetDeviceInformation(soap, n, NULL, NULL, NULL); }

inline _tds__GetDeviceInformation * soap_new_req__tds__GetDeviceInformation(
	struct soap *soap)
{	_tds__GetDeviceInformation *_p = soap_new__tds__GetDeviceInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetDeviceInformation * soap_new_set__tds__GetDeviceInformation(
	struct soap *soap)
{	_tds__GetDeviceInformation *_p = soap_new__tds__GetDeviceInformation(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetDeviceInformation
#define soap_write__tds__GetDeviceInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetDeviceInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDeviceInformation * SOAP_FMAC4 soap_get__tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation *, const char*, const char*);

#ifndef soap_read__tds__GetDeviceInformation
#define soap_read__tds__GetDeviceInformation(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetDeviceInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetServiceCapabilitiesResponse
#define SOAP_TYPE__tds__GetServiceCapabilitiesResponse (150)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetServiceCapabilitiesResponse(struct soap*, const char*, int, const _tds__GetServiceCapabilitiesResponse *, const char*);
SOAP_FMAC3 _tds__GetServiceCapabilitiesResponse * SOAP_FMAC4 soap_in__tds__GetServiceCapabilitiesResponse(struct soap*, const char*, _tds__GetServiceCapabilitiesResponse *, const char*);
SOAP_FMAC1 _tds__GetServiceCapabilitiesResponse * SOAP_FMAC2 soap_instantiate__tds__GetServiceCapabilitiesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetServiceCapabilitiesResponse * soap_new__tds__GetServiceCapabilitiesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetServiceCapabilitiesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetServiceCapabilitiesResponse * soap_new_req__tds__GetServiceCapabilitiesResponse(
	struct soap *soap,
	tds__DeviceServiceCapabilities *Capabilities)
{	_tds__GetServiceCapabilitiesResponse *_p = soap_new__tds__GetServiceCapabilitiesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetServiceCapabilitiesResponse::Capabilities = Capabilities;
	}
	return _p;
}

inline _tds__GetServiceCapabilitiesResponse * soap_new_set__tds__GetServiceCapabilitiesResponse(
	struct soap *soap,
	tds__DeviceServiceCapabilities *Capabilities)
{	_tds__GetServiceCapabilitiesResponse *_p = soap_new__tds__GetServiceCapabilitiesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetServiceCapabilitiesResponse::Capabilities = Capabilities;
	}
	return _p;
}

#ifndef soap_write__tds__GetServiceCapabilitiesResponse
#define soap_write__tds__GetServiceCapabilitiesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetServiceCapabilitiesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetServiceCapabilitiesResponse * SOAP_FMAC4 soap_get__tds__GetServiceCapabilitiesResponse(struct soap*, _tds__GetServiceCapabilitiesResponse *, const char*, const char*);

#ifndef soap_read__tds__GetServiceCapabilitiesResponse
#define soap_read__tds__GetServiceCapabilitiesResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetServiceCapabilitiesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetServiceCapabilities
#define SOAP_TYPE__tds__GetServiceCapabilities (149)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetServiceCapabilities(struct soap*, const char*, int, const _tds__GetServiceCapabilities *, const char*);
SOAP_FMAC3 _tds__GetServiceCapabilities * SOAP_FMAC4 soap_in__tds__GetServiceCapabilities(struct soap*, const char*, _tds__GetServiceCapabilities *, const char*);
SOAP_FMAC1 _tds__GetServiceCapabilities * SOAP_FMAC2 soap_instantiate__tds__GetServiceCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetServiceCapabilities * soap_new__tds__GetServiceCapabilities(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetServiceCapabilities(soap, n, NULL, NULL, NULL); }

inline _tds__GetServiceCapabilities * soap_new_req__tds__GetServiceCapabilities(
	struct soap *soap)
{	_tds__GetServiceCapabilities *_p = soap_new__tds__GetServiceCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tds__GetServiceCapabilities * soap_new_set__tds__GetServiceCapabilities(
	struct soap *soap)
{	_tds__GetServiceCapabilities *_p = soap_new__tds__GetServiceCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tds__GetServiceCapabilities
#define soap_write__tds__GetServiceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetServiceCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetServiceCapabilities * SOAP_FMAC4 soap_get__tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities *, const char*, const char*);

#ifndef soap_read__tds__GetServiceCapabilities
#define soap_read__tds__GetServiceCapabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetServiceCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetServicesResponse
#define SOAP_TYPE__tds__GetServicesResponse (148)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetServicesResponse(struct soap*, const char*, int, const _tds__GetServicesResponse *, const char*);
SOAP_FMAC3 _tds__GetServicesResponse * SOAP_FMAC4 soap_in__tds__GetServicesResponse(struct soap*, const char*, _tds__GetServicesResponse *, const char*);
SOAP_FMAC1 _tds__GetServicesResponse * SOAP_FMAC2 soap_instantiate__tds__GetServicesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetServicesResponse * soap_new__tds__GetServicesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetServicesResponse(soap, n, NULL, NULL, NULL); }

inline _tds__GetServicesResponse * soap_new_req__tds__GetServicesResponse(
	struct soap *soap,
	const std::vector<tds__Service *> & Service)
{	_tds__GetServicesResponse *_p = soap_new__tds__GetServicesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetServicesResponse::Service = Service;
	}
	return _p;
}

inline _tds__GetServicesResponse * soap_new_set__tds__GetServicesResponse(
	struct soap *soap,
	const std::vector<tds__Service *> & Service)
{	_tds__GetServicesResponse *_p = soap_new__tds__GetServicesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetServicesResponse::Service = Service;
	}
	return _p;
}

#ifndef soap_write__tds__GetServicesResponse
#define soap_write__tds__GetServicesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetServicesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetServicesResponse * SOAP_FMAC4 soap_get__tds__GetServicesResponse(struct soap*, _tds__GetServicesResponse *, const char*, const char*);

#ifndef soap_read__tds__GetServicesResponse
#define soap_read__tds__GetServicesResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetServicesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tds__GetServices
#define SOAP_TYPE__tds__GetServices (147)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tds__GetServices(struct soap*, const char*, int, const _tds__GetServices *, const char*);
SOAP_FMAC3 _tds__GetServices * SOAP_FMAC4 soap_in__tds__GetServices(struct soap*, const char*, _tds__GetServices *, const char*);
SOAP_FMAC1 _tds__GetServices * SOAP_FMAC2 soap_instantiate__tds__GetServices(struct soap*, int, const char*, const char*, size_t*);

inline _tds__GetServices * soap_new__tds__GetServices(struct soap *soap, int n = -1) { return soap_instantiate__tds__GetServices(soap, n, NULL, NULL, NULL); }

inline _tds__GetServices * soap_new_req__tds__GetServices(
	struct soap *soap,
	bool IncludeCapability)
{	_tds__GetServices *_p = soap_new__tds__GetServices(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetServices::IncludeCapability = IncludeCapability;
	}
	return _p;
}

inline _tds__GetServices * soap_new_set__tds__GetServices(
	struct soap *soap,
	bool IncludeCapability)
{	_tds__GetServices *_p = soap_new__tds__GetServices(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tds__GetServices::IncludeCapability = IncludeCapability;
	}
	return _p;
}

#ifndef soap_write__tds__GetServices
#define soap_write__tds__GetServices(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:GetServices", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetServices * SOAP_FMAC4 soap_get__tds__GetServices(struct soap*, _tds__GetServices *, const char*, const char*);

#ifndef soap_read__tds__GetServices
#define soap_read__tds__GetServices(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tds__GetServices(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tds__StorageConfiguration
#define SOAP_TYPE_tds__StorageConfiguration (146)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tds__StorageConfiguration(struct soap*, const char*, int, const tds__StorageConfiguration *, const char*);
SOAP_FMAC3 tds__StorageConfiguration * SOAP_FMAC4 soap_in_tds__StorageConfiguration(struct soap*, const char*, tds__StorageConfiguration *, const char*);
SOAP_FMAC1 tds__StorageConfiguration * SOAP_FMAC2 soap_instantiate_tds__StorageConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tds__StorageConfiguration * soap_new_tds__StorageConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tds__StorageConfiguration(soap, n, NULL, NULL, NULL); }

inline tds__StorageConfiguration * soap_new_req_tds__StorageConfiguration(
	struct soap *soap,
	tds__StorageConfigurationData *Data,
	const std::string& token1)
{	tds__StorageConfiguration *_p = soap_new_tds__StorageConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tds__StorageConfiguration::Data = Data;
		_p->tt__DeviceEntity::token = token1;
	}
	return _p;
}

inline tds__StorageConfiguration * soap_new_set_tds__StorageConfiguration(
	struct soap *soap,
	tds__StorageConfigurationData *Data,
	const std::string& token1)
{	tds__StorageConfiguration *_p = soap_new_tds__StorageConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tds__StorageConfiguration::Data = Data;
		_p->tt__DeviceEntity::token = token1;
	}
	return _p;
}

#ifndef soap_write_tds__StorageConfiguration
#define soap_write_tds__StorageConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:StorageConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__StorageConfiguration * SOAP_FMAC4 soap_get_tds__StorageConfiguration(struct soap*, tds__StorageConfiguration *, const char*, const char*);

#ifndef soap_read_tds__StorageConfiguration
#define soap_read_tds__StorageConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tds__StorageConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tds__StorageConfigurationData
#define SOAP_TYPE_tds__StorageConfigurationData (145)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tds__StorageConfigurationData(struct soap*, const char*, int, const tds__StorageConfigurationData *, const char*);
SOAP_FMAC3 tds__StorageConfigurationData * SOAP_FMAC4 soap_in_tds__StorageConfigurationData(struct soap*, const char*, tds__StorageConfigurationData *, const char*);
SOAP_FMAC1 tds__StorageConfigurationData * SOAP_FMAC2 soap_instantiate_tds__StorageConfigurationData(struct soap*, int, const char*, const char*, size_t*);

inline tds__StorageConfigurationData * soap_new_tds__StorageConfigurationData(struct soap *soap, int n = -1) { return soap_instantiate_tds__StorageConfigurationData(soap, n, NULL, NULL, NULL); }

inline tds__StorageConfigurationData * soap_new_req_tds__StorageConfigurationData(
	struct soap *soap,
	const std::string& type)
{	tds__StorageConfigurationData *_p = soap_new_tds__StorageConfigurationData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tds__StorageConfigurationData::type = type;
	}
	return _p;
}

inline tds__StorageConfigurationData * soap_new_set_tds__StorageConfigurationData(
	struct soap *soap,
	std::string *LocalPath,
	std::string *StorageUri,
	tds__UserCredential *User,
	_tds__StorageConfigurationData_Extension *Extension,
	const std::string& type)
{	tds__StorageConfigurationData *_p = soap_new_tds__StorageConfigurationData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tds__StorageConfigurationData::LocalPath = LocalPath;
		_p->tds__StorageConfigurationData::StorageUri = StorageUri;
		_p->tds__StorageConfigurationData::User = User;
		_p->tds__StorageConfigurationData::Extension = Extension;
		_p->tds__StorageConfigurationData::type = type;
	}
	return _p;
}

#ifndef soap_write_tds__StorageConfigurationData
#define soap_write_tds__StorageConfigurationData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:StorageConfigurationData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__StorageConfigurationData * SOAP_FMAC4 soap_get_tds__StorageConfigurationData(struct soap*, tds__StorageConfigurationData *, const char*, const char*);

#ifndef soap_read_tds__StorageConfigurationData
#define soap_read_tds__StorageConfigurationData(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tds__StorageConfigurationData(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tds__UserCredential
#define SOAP_TYPE_tds__UserCredential (144)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tds__UserCredential(struct soap*, const char*, int, const tds__UserCredential *, const char*);
SOAP_FMAC3 tds__UserCredential * SOAP_FMAC4 soap_in_tds__UserCredential(struct soap*, const char*, tds__UserCredential *, const char*);
SOAP_FMAC1 tds__UserCredential * SOAP_FMAC2 soap_instantiate_tds__UserCredential(struct soap*, int, const char*, const char*, size_t*);

inline tds__UserCredential * soap_new_tds__UserCredential(struct soap *soap, int n = -1) { return soap_instantiate_tds__UserCredential(soap, n, NULL, NULL, NULL); }

inline tds__UserCredential * soap_new_req_tds__UserCredential(
	struct soap *soap,
	const std::string& UserName)
{	tds__UserCredential *_p = soap_new_tds__UserCredential(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tds__UserCredential::UserName = UserName;
	}
	return _p;
}

inline tds__UserCredential * soap_new_set_tds__UserCredential(
	struct soap *soap,
	const std::string& UserName,
	std::string *Password,
	_tds__UserCredential_Extension *Extension)
{	tds__UserCredential *_p = soap_new_tds__UserCredential(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tds__UserCredential::UserName = UserName;
		_p->tds__UserCredential::Password = Password;
		_p->tds__UserCredential::Extension = Extension;
	}
	return _p;
}

#ifndef soap_write_tds__UserCredential
#define soap_write_tds__UserCredential(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:UserCredential", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__UserCredential * SOAP_FMAC4 soap_get_tds__UserCredential(struct soap*, tds__UserCredential *, const char*, const char*);

#ifndef soap_read_tds__UserCredential
#define soap_read_tds__UserCredential(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tds__UserCredential(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tds__MiscCapabilities
#define SOAP_TYPE_tds__MiscCapabilities (143)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tds__MiscCapabilities(struct soap*, const char*, int, const tds__MiscCapabilities *, const char*);
SOAP_FMAC3 tds__MiscCapabilities * SOAP_FMAC4 soap_in_tds__MiscCapabilities(struct soap*, const char*, tds__MiscCapabilities *, const char*);
SOAP_FMAC1 tds__MiscCapabilities * SOAP_FMAC2 soap_instantiate_tds__MiscCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tds__MiscCapabilities * soap_new_tds__MiscCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tds__MiscCapabilities(soap, n, NULL, NULL, NULL); }

inline tds__MiscCapabilities * soap_new_req_tds__MiscCapabilities(
	struct soap *soap)
{	tds__MiscCapabilities *_p = soap_new_tds__MiscCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tds__MiscCapabilities * soap_new_set_tds__MiscCapabilities(
	struct soap *soap,
	std::string *AuxiliaryCommands)
{	tds__MiscCapabilities *_p = soap_new_tds__MiscCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tds__MiscCapabilities::AuxiliaryCommands = AuxiliaryCommands;
	}
	return _p;
}

#ifndef soap_write_tds__MiscCapabilities
#define soap_write_tds__MiscCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:MiscCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__MiscCapabilities * SOAP_FMAC4 soap_get_tds__MiscCapabilities(struct soap*, tds__MiscCapabilities *, const char*, const char*);

#ifndef soap_read_tds__MiscCapabilities
#define soap_read_tds__MiscCapabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tds__MiscCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tds__SystemCapabilities
#define SOAP_TYPE_tds__SystemCapabilities (142)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tds__SystemCapabilities(struct soap*, const char*, int, const tds__SystemCapabilities *, const char*);
SOAP_FMAC3 tds__SystemCapabilities * SOAP_FMAC4 soap_in_tds__SystemCapabilities(struct soap*, const char*, tds__SystemCapabilities *, const char*);
SOAP_FMAC1 tds__SystemCapabilities * SOAP_FMAC2 soap_instantiate_tds__SystemCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tds__SystemCapabilities * soap_new_tds__SystemCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tds__SystemCapabilities(soap, n, NULL, NULL, NULL); }

inline tds__SystemCapabilities * soap_new_req_tds__SystemCapabilities(
	struct soap *soap)
{	tds__SystemCapabilities *_p = soap_new_tds__SystemCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tds__SystemCapabilities * soap_new_set_tds__SystemCapabilities(
	struct soap *soap,
	bool *DiscoveryResolve,
	bool *DiscoveryBye,
	bool *RemoteDiscovery,
	bool *SystemBackup,
	bool *SystemLogging,
	bool *FirmwareUpgrade,
	bool *HttpFirmwareUpgrade,
	bool *HttpSystemBackup,
	bool *HttpSystemLogging,
	bool *HttpSupportInformation,
	bool *StorageConfiguration,
	int *MaxStorageConfigurations,
	int *GeoLocationEntries,
	std::string *AutoGeo,
	std::string *StorageTypesSupported)
{	tds__SystemCapabilities *_p = soap_new_tds__SystemCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tds__SystemCapabilities::DiscoveryResolve = DiscoveryResolve;
		_p->tds__SystemCapabilities::DiscoveryBye = DiscoveryBye;
		_p->tds__SystemCapabilities::RemoteDiscovery = RemoteDiscovery;
		_p->tds__SystemCapabilities::SystemBackup = SystemBackup;
		_p->tds__SystemCapabilities::SystemLogging = SystemLogging;
		_p->tds__SystemCapabilities::FirmwareUpgrade = FirmwareUpgrade;
		_p->tds__SystemCapabilities::HttpFirmwareUpgrade = HttpFirmwareUpgrade;
		_p->tds__SystemCapabilities::HttpSystemBackup = HttpSystemBackup;
		_p->tds__SystemCapabilities::HttpSystemLogging = HttpSystemLogging;
		_p->tds__SystemCapabilities::HttpSupportInformation = HttpSupportInformation;
		_p->tds__SystemCapabilities::StorageConfiguration = StorageConfiguration;
		_p->tds__SystemCapabilities::MaxStorageConfigurations = MaxStorageConfigurations;
		_p->tds__SystemCapabilities::GeoLocationEntries = GeoLocationEntries;
		_p->tds__SystemCapabilities::AutoGeo = AutoGeo;
		_p->tds__SystemCapabilities::StorageTypesSupported = StorageTypesSupported;
	}
	return _p;
}

#ifndef soap_write_tds__SystemCapabilities
#define soap_write_tds__SystemCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SystemCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__SystemCapabilities * SOAP_FMAC4 soap_get_tds__SystemCapabilities(struct soap*, tds__SystemCapabilities *, const char*, const char*);

#ifndef soap_read_tds__SystemCapabilities
#define soap_read_tds__SystemCapabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tds__SystemCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tds__SecurityCapabilities
#define SOAP_TYPE_tds__SecurityCapabilities (141)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tds__SecurityCapabilities(struct soap*, const char*, int, const tds__SecurityCapabilities *, const char*);
SOAP_FMAC3 tds__SecurityCapabilities * SOAP_FMAC4 soap_in_tds__SecurityCapabilities(struct soap*, const char*, tds__SecurityCapabilities *, const char*);
SOAP_FMAC1 tds__SecurityCapabilities * SOAP_FMAC2 soap_instantiate_tds__SecurityCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tds__SecurityCapabilities * soap_new_tds__SecurityCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tds__SecurityCapabilities(soap, n, NULL, NULL, NULL); }

inline tds__SecurityCapabilities * soap_new_req_tds__SecurityCapabilities(
	struct soap *soap)
{	tds__SecurityCapabilities *_p = soap_new_tds__SecurityCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tds__SecurityCapabilities * soap_new_set_tds__SecurityCapabilities(
	struct soap *soap,
	bool *TLS1_x002e0,
	bool *TLS1_x002e1,
	bool *TLS1_x002e2,
	bool *OnboardKeyGeneration,
	bool *AccessPolicyConfig,
	bool *DefaultAccessPolicy,
	bool *Dot1X,
	bool *RemoteUserHandling,
	bool *X_x002e509Token,
	bool *SAMLToken,
	bool *KerberosToken,
	bool *UsernameToken,
	bool *HttpDigest,
	bool *RELToken,
	std::string *SupportedEAPMethods,
	int *MaxUsers,
	int *MaxUserNameLength,
	int *MaxPasswordLength)
{	tds__SecurityCapabilities *_p = soap_new_tds__SecurityCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tds__SecurityCapabilities::TLS1_x002e0 = TLS1_x002e0;
		_p->tds__SecurityCapabilities::TLS1_x002e1 = TLS1_x002e1;
		_p->tds__SecurityCapabilities::TLS1_x002e2 = TLS1_x002e2;
		_p->tds__SecurityCapabilities::OnboardKeyGeneration = OnboardKeyGeneration;
		_p->tds__SecurityCapabilities::AccessPolicyConfig = AccessPolicyConfig;
		_p->tds__SecurityCapabilities::DefaultAccessPolicy = DefaultAccessPolicy;
		_p->tds__SecurityCapabilities::Dot1X = Dot1X;
		_p->tds__SecurityCapabilities::RemoteUserHandling = RemoteUserHandling;
		_p->tds__SecurityCapabilities::X_x002e509Token = X_x002e509Token;
		_p->tds__SecurityCapabilities::SAMLToken = SAMLToken;
		_p->tds__SecurityCapabilities::KerberosToken = KerberosToken;
		_p->tds__SecurityCapabilities::UsernameToken = UsernameToken;
		_p->tds__SecurityCapabilities::HttpDigest = HttpDigest;
		_p->tds__SecurityCapabilities::RELToken = RELToken;
		_p->tds__SecurityCapabilities::SupportedEAPMethods = SupportedEAPMethods;
		_p->tds__SecurityCapabilities::MaxUsers = MaxUsers;
		_p->tds__SecurityCapabilities::MaxUserNameLength = MaxUserNameLength;
		_p->tds__SecurityCapabilities::MaxPasswordLength = MaxPasswordLength;
	}
	return _p;
}

#ifndef soap_write_tds__SecurityCapabilities
#define soap_write_tds__SecurityCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:SecurityCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__SecurityCapabilities * SOAP_FMAC4 soap_get_tds__SecurityCapabilities(struct soap*, tds__SecurityCapabilities *, const char*, const char*);

#ifndef soap_read_tds__SecurityCapabilities
#define soap_read_tds__SecurityCapabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tds__SecurityCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tds__NetworkCapabilities
#define SOAP_TYPE_tds__NetworkCapabilities (140)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tds__NetworkCapabilities(struct soap*, const char*, int, const tds__NetworkCapabilities *, const char*);
SOAP_FMAC3 tds__NetworkCapabilities * SOAP_FMAC4 soap_in_tds__NetworkCapabilities(struct soap*, const char*, tds__NetworkCapabilities *, const char*);
SOAP_FMAC1 tds__NetworkCapabilities * SOAP_FMAC2 soap_instantiate_tds__NetworkCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tds__NetworkCapabilities * soap_new_tds__NetworkCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tds__NetworkCapabilities(soap, n, NULL, NULL, NULL); }

inline tds__NetworkCapabilities * soap_new_req_tds__NetworkCapabilities(
	struct soap *soap)
{	tds__NetworkCapabilities *_p = soap_new_tds__NetworkCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tds__NetworkCapabilities * soap_new_set_tds__NetworkCapabilities(
	struct soap *soap,
	bool *IPFilter,
	bool *ZeroConfiguration,
	bool *IPVersion6,
	bool *DynDNS,
	bool *Dot11Configuration,
	int *Dot1XConfigurations,
	bool *HostnameFromDHCP,
	int *NTP,
	bool *DHCPv6)
{	tds__NetworkCapabilities *_p = soap_new_tds__NetworkCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tds__NetworkCapabilities::IPFilter = IPFilter;
		_p->tds__NetworkCapabilities::ZeroConfiguration = ZeroConfiguration;
		_p->tds__NetworkCapabilities::IPVersion6 = IPVersion6;
		_p->tds__NetworkCapabilities::DynDNS = DynDNS;
		_p->tds__NetworkCapabilities::Dot11Configuration = Dot11Configuration;
		_p->tds__NetworkCapabilities::Dot1XConfigurations = Dot1XConfigurations;
		_p->tds__NetworkCapabilities::HostnameFromDHCP = HostnameFromDHCP;
		_p->tds__NetworkCapabilities::NTP = NTP;
		_p->tds__NetworkCapabilities::DHCPv6 = DHCPv6;
	}
	return _p;
}

#ifndef soap_write_tds__NetworkCapabilities
#define soap_write_tds__NetworkCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:NetworkCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__NetworkCapabilities * SOAP_FMAC4 soap_get_tds__NetworkCapabilities(struct soap*, tds__NetworkCapabilities *, const char*, const char*);

#ifndef soap_read_tds__NetworkCapabilities
#define soap_read_tds__NetworkCapabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tds__NetworkCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tds__DeviceServiceCapabilities
#define SOAP_TYPE_tds__DeviceServiceCapabilities (139)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tds__DeviceServiceCapabilities(struct soap*, const char*, int, const tds__DeviceServiceCapabilities *, const char*);
SOAP_FMAC3 tds__DeviceServiceCapabilities * SOAP_FMAC4 soap_in_tds__DeviceServiceCapabilities(struct soap*, const char*, tds__DeviceServiceCapabilities *, const char*);
SOAP_FMAC1 tds__DeviceServiceCapabilities * SOAP_FMAC2 soap_instantiate_tds__DeviceServiceCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline tds__DeviceServiceCapabilities * soap_new_tds__DeviceServiceCapabilities(struct soap *soap, int n = -1) { return soap_instantiate_tds__DeviceServiceCapabilities(soap, n, NULL, NULL, NULL); }

inline tds__DeviceServiceCapabilities * soap_new_req_tds__DeviceServiceCapabilities(
	struct soap *soap,
	tds__NetworkCapabilities *Network,
	tds__SecurityCapabilities *Security,
	tds__SystemCapabilities *System)
{	tds__DeviceServiceCapabilities *_p = soap_new_tds__DeviceServiceCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tds__DeviceServiceCapabilities::Network = Network;
		_p->tds__DeviceServiceCapabilities::Security = Security;
		_p->tds__DeviceServiceCapabilities::System = System;
	}
	return _p;
}

inline tds__DeviceServiceCapabilities * soap_new_set_tds__DeviceServiceCapabilities(
	struct soap *soap,
	tds__NetworkCapabilities *Network,
	tds__SecurityCapabilities *Security,
	tds__SystemCapabilities *System,
	tds__MiscCapabilities *Misc)
{	tds__DeviceServiceCapabilities *_p = soap_new_tds__DeviceServiceCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tds__DeviceServiceCapabilities::Network = Network;
		_p->tds__DeviceServiceCapabilities::Security = Security;
		_p->tds__DeviceServiceCapabilities::System = System;
		_p->tds__DeviceServiceCapabilities::Misc = Misc;
	}
	return _p;
}

#ifndef soap_write_tds__DeviceServiceCapabilities
#define soap_write_tds__DeviceServiceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:DeviceServiceCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__DeviceServiceCapabilities * SOAP_FMAC4 soap_get_tds__DeviceServiceCapabilities(struct soap*, tds__DeviceServiceCapabilities *, const char*, const char*);

#ifndef soap_read_tds__DeviceServiceCapabilities
#define soap_read_tds__DeviceServiceCapabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tds__DeviceServiceCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tds__Service
#define SOAP_TYPE_tds__Service (138)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tds__Service(struct soap*, const char*, int, const tds__Service *, const char*);
SOAP_FMAC3 tds__Service * SOAP_FMAC4 soap_in_tds__Service(struct soap*, const char*, tds__Service *, const char*);
SOAP_FMAC1 tds__Service * SOAP_FMAC2 soap_instantiate_tds__Service(struct soap*, int, const char*, const char*, size_t*);

inline tds__Service * soap_new_tds__Service(struct soap *soap, int n = -1) { return soap_instantiate_tds__Service(soap, n, NULL, NULL, NULL); }

inline tds__Service * soap_new_req_tds__Service(
	struct soap *soap,
	const std::string& Namespace,
	const std::string& XAddr,
	tt__OnvifVersion *Version)
{	tds__Service *_p = soap_new_tds__Service(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tds__Service::Namespace = Namespace;
		_p->tds__Service::XAddr = XAddr;
		_p->tds__Service::Version = Version;
	}
	return _p;
}

inline tds__Service * soap_new_set_tds__Service(
	struct soap *soap,
	const std::string& Namespace,
	const std::string& XAddr,
	_tds__Service_Capabilities *Capabilities,
	tt__OnvifVersion *Version)
{	tds__Service *_p = soap_new_tds__Service(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tds__Service::Namespace = Namespace;
		_p->tds__Service::XAddr = XAddr;
		_p->tds__Service::Capabilities = Capabilities;
		_p->tds__Service::Version = Version;
	}
	return _p;
}

#ifndef soap_write_tds__Service
#define soap_write_tds__Service(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tds:Service", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__Service * SOAP_FMAC4 soap_get_tds__Service(struct soap*, tds__Service *, const char*, const char*);

#ifndef soap_read_tds__Service
#define soap_read_tds__Service(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tds__Service(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__SendReceiveSerialCommandResponse
#define SOAP_TYPE__tmd__SendReceiveSerialCommandResponse (137)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__SendReceiveSerialCommandResponse(struct soap*, const char*, int, const _tmd__SendReceiveSerialCommandResponse *, const char*);
SOAP_FMAC3 _tmd__SendReceiveSerialCommandResponse * SOAP_FMAC4 soap_in__tmd__SendReceiveSerialCommandResponse(struct soap*, const char*, _tmd__SendReceiveSerialCommandResponse *, const char*);
SOAP_FMAC1 _tmd__SendReceiveSerialCommandResponse * SOAP_FMAC2 soap_instantiate__tmd__SendReceiveSerialCommandResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__SendReceiveSerialCommandResponse * soap_new__tmd__SendReceiveSerialCommandResponse(struct soap *soap, int n = -1) { return soap_instantiate__tmd__SendReceiveSerialCommandResponse(soap, n, NULL, NULL, NULL); }

inline _tmd__SendReceiveSerialCommandResponse * soap_new_req__tmd__SendReceiveSerialCommandResponse(
	struct soap *soap)
{	_tmd__SendReceiveSerialCommandResponse *_p = soap_new__tmd__SendReceiveSerialCommandResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tmd__SendReceiveSerialCommandResponse * soap_new_set__tmd__SendReceiveSerialCommandResponse(
	struct soap *soap,
	tmd__SerialData *SerialData)
{	_tmd__SendReceiveSerialCommandResponse *_p = soap_new__tmd__SendReceiveSerialCommandResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__SendReceiveSerialCommandResponse::SerialData = SerialData;
	}
	return _p;
}

#ifndef soap_write__tmd__SendReceiveSerialCommandResponse
#define soap_write__tmd__SendReceiveSerialCommandResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:SendReceiveSerialCommandResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__SendReceiveSerialCommandResponse * SOAP_FMAC4 soap_get__tmd__SendReceiveSerialCommandResponse(struct soap*, _tmd__SendReceiveSerialCommandResponse *, const char*, const char*);

#ifndef soap_read__tmd__SendReceiveSerialCommandResponse
#define soap_read__tmd__SendReceiveSerialCommandResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__SendReceiveSerialCommandResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__SendReceiveSerialCommand
#define SOAP_TYPE__tmd__SendReceiveSerialCommand (136)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__SendReceiveSerialCommand(struct soap*, const char*, int, const _tmd__SendReceiveSerialCommand *, const char*);
SOAP_FMAC3 _tmd__SendReceiveSerialCommand * SOAP_FMAC4 soap_in__tmd__SendReceiveSerialCommand(struct soap*, const char*, _tmd__SendReceiveSerialCommand *, const char*);
SOAP_FMAC1 _tmd__SendReceiveSerialCommand * SOAP_FMAC2 soap_instantiate__tmd__SendReceiveSerialCommand(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__SendReceiveSerialCommand * soap_new__tmd__SendReceiveSerialCommand(struct soap *soap, int n = -1) { return soap_instantiate__tmd__SendReceiveSerialCommand(soap, n, NULL, NULL, NULL); }

inline _tmd__SendReceiveSerialCommand * soap_new_req__tmd__SendReceiveSerialCommand(
	struct soap *soap)
{	_tmd__SendReceiveSerialCommand *_p = soap_new__tmd__SendReceiveSerialCommand(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tmd__SendReceiveSerialCommand * soap_new_set__tmd__SendReceiveSerialCommand(
	struct soap *soap,
	std::string *Token,
	tmd__SerialData *SerialData,
	LONG64 *TimeOut,
	std::string *DataLength,
	std::string *Delimiter)
{	_tmd__SendReceiveSerialCommand *_p = soap_new__tmd__SendReceiveSerialCommand(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__SendReceiveSerialCommand::Token = Token;
		_p->_tmd__SendReceiveSerialCommand::SerialData = SerialData;
		_p->_tmd__SendReceiveSerialCommand::TimeOut = TimeOut;
		_p->_tmd__SendReceiveSerialCommand::DataLength = DataLength;
		_p->_tmd__SendReceiveSerialCommand::Delimiter = Delimiter;
	}
	return _p;
}

#ifndef soap_write__tmd__SendReceiveSerialCommand
#define soap_write__tmd__SendReceiveSerialCommand(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:SendReceiveSerialCommand", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__SendReceiveSerialCommand * SOAP_FMAC4 soap_get__tmd__SendReceiveSerialCommand(struct soap*, _tmd__SendReceiveSerialCommand *, const char*, const char*);

#ifndef soap_read__tmd__SendReceiveSerialCommand
#define soap_read__tmd__SendReceiveSerialCommand(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__SendReceiveSerialCommand(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetSerialPortConfigurationOptionsResponse
#define SOAP_TYPE__tmd__GetSerialPortConfigurationOptionsResponse (135)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetSerialPortConfigurationOptionsResponse(struct soap*, const char*, int, const _tmd__GetSerialPortConfigurationOptionsResponse *, const char*);
SOAP_FMAC3 _tmd__GetSerialPortConfigurationOptionsResponse * SOAP_FMAC4 soap_in__tmd__GetSerialPortConfigurationOptionsResponse(struct soap*, const char*, _tmd__GetSerialPortConfigurationOptionsResponse *, const char*);
SOAP_FMAC1 _tmd__GetSerialPortConfigurationOptionsResponse * SOAP_FMAC2 soap_instantiate__tmd__GetSerialPortConfigurationOptionsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetSerialPortConfigurationOptionsResponse * soap_new__tmd__GetSerialPortConfigurationOptionsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetSerialPortConfigurationOptionsResponse(soap, n, NULL, NULL, NULL); }

inline _tmd__GetSerialPortConfigurationOptionsResponse * soap_new_req__tmd__GetSerialPortConfigurationOptionsResponse(
	struct soap *soap,
	tmd__SerialPortConfigurationOptions *SerialPortOptions)
{	_tmd__GetSerialPortConfigurationOptionsResponse *_p = soap_new__tmd__GetSerialPortConfigurationOptionsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetSerialPortConfigurationOptionsResponse::SerialPortOptions = SerialPortOptions;
	}
	return _p;
}

inline _tmd__GetSerialPortConfigurationOptionsResponse * soap_new_set__tmd__GetSerialPortConfigurationOptionsResponse(
	struct soap *soap,
	tmd__SerialPortConfigurationOptions *SerialPortOptions)
{	_tmd__GetSerialPortConfigurationOptionsResponse *_p = soap_new__tmd__GetSerialPortConfigurationOptionsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetSerialPortConfigurationOptionsResponse::SerialPortOptions = SerialPortOptions;
	}
	return _p;
}

#ifndef soap_write__tmd__GetSerialPortConfigurationOptionsResponse
#define soap_write__tmd__GetSerialPortConfigurationOptionsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetSerialPortConfigurationOptionsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetSerialPortConfigurationOptionsResponse * SOAP_FMAC4 soap_get__tmd__GetSerialPortConfigurationOptionsResponse(struct soap*, _tmd__GetSerialPortConfigurationOptionsResponse *, const char*, const char*);

#ifndef soap_read__tmd__GetSerialPortConfigurationOptionsResponse
#define soap_read__tmd__GetSerialPortConfigurationOptionsResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetSerialPortConfigurationOptionsResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetSerialPortConfigurationOptions
#define SOAP_TYPE__tmd__GetSerialPortConfigurationOptions (134)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetSerialPortConfigurationOptions(struct soap*, const char*, int, const _tmd__GetSerialPortConfigurationOptions *, const char*);
SOAP_FMAC3 _tmd__GetSerialPortConfigurationOptions * SOAP_FMAC4 soap_in__tmd__GetSerialPortConfigurationOptions(struct soap*, const char*, _tmd__GetSerialPortConfigurationOptions *, const char*);
SOAP_FMAC1 _tmd__GetSerialPortConfigurationOptions * SOAP_FMAC2 soap_instantiate__tmd__GetSerialPortConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetSerialPortConfigurationOptions * soap_new__tmd__GetSerialPortConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetSerialPortConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline _tmd__GetSerialPortConfigurationOptions * soap_new_req__tmd__GetSerialPortConfigurationOptions(
	struct soap *soap,
	const std::string& SerialPortToken)
{	_tmd__GetSerialPortConfigurationOptions *_p = soap_new__tmd__GetSerialPortConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetSerialPortConfigurationOptions::SerialPortToken = SerialPortToken;
	}
	return _p;
}

inline _tmd__GetSerialPortConfigurationOptions * soap_new_set__tmd__GetSerialPortConfigurationOptions(
	struct soap *soap,
	const std::string& SerialPortToken)
{	_tmd__GetSerialPortConfigurationOptions *_p = soap_new__tmd__GetSerialPortConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetSerialPortConfigurationOptions::SerialPortToken = SerialPortToken;
	}
	return _p;
}

#ifndef soap_write__tmd__GetSerialPortConfigurationOptions
#define soap_write__tmd__GetSerialPortConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetSerialPortConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetSerialPortConfigurationOptions * SOAP_FMAC4 soap_get__tmd__GetSerialPortConfigurationOptions(struct soap*, _tmd__GetSerialPortConfigurationOptions *, const char*, const char*);

#ifndef soap_read__tmd__GetSerialPortConfigurationOptions
#define soap_read__tmd__GetSerialPortConfigurationOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetSerialPortConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__SetSerialPortConfigurationResponse
#define SOAP_TYPE__tmd__SetSerialPortConfigurationResponse (133)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__SetSerialPortConfigurationResponse(struct soap*, const char*, int, const _tmd__SetSerialPortConfigurationResponse *, const char*);
SOAP_FMAC3 _tmd__SetSerialPortConfigurationResponse * SOAP_FMAC4 soap_in__tmd__SetSerialPortConfigurationResponse(struct soap*, const char*, _tmd__SetSerialPortConfigurationResponse *, const char*);
SOAP_FMAC1 _tmd__SetSerialPortConfigurationResponse * SOAP_FMAC2 soap_instantiate__tmd__SetSerialPortConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__SetSerialPortConfigurationResponse * soap_new__tmd__SetSerialPortConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tmd__SetSerialPortConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tmd__SetSerialPortConfigurationResponse * soap_new_req__tmd__SetSerialPortConfigurationResponse(
	struct soap *soap)
{	_tmd__SetSerialPortConfigurationResponse *_p = soap_new__tmd__SetSerialPortConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tmd__SetSerialPortConfigurationResponse * soap_new_set__tmd__SetSerialPortConfigurationResponse(
	struct soap *soap)
{	_tmd__SetSerialPortConfigurationResponse *_p = soap_new__tmd__SetSerialPortConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tmd__SetSerialPortConfigurationResponse
#define soap_write__tmd__SetSerialPortConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:SetSerialPortConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__SetSerialPortConfigurationResponse * SOAP_FMAC4 soap_get__tmd__SetSerialPortConfigurationResponse(struct soap*, _tmd__SetSerialPortConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tmd__SetSerialPortConfigurationResponse
#define soap_read__tmd__SetSerialPortConfigurationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__SetSerialPortConfigurationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__SetSerialPortConfiguration
#define SOAP_TYPE__tmd__SetSerialPortConfiguration (132)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__SetSerialPortConfiguration(struct soap*, const char*, int, const _tmd__SetSerialPortConfiguration *, const char*);
SOAP_FMAC3 _tmd__SetSerialPortConfiguration * SOAP_FMAC4 soap_in__tmd__SetSerialPortConfiguration(struct soap*, const char*, _tmd__SetSerialPortConfiguration *, const char*);
SOAP_FMAC1 _tmd__SetSerialPortConfiguration * SOAP_FMAC2 soap_instantiate__tmd__SetSerialPortConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__SetSerialPortConfiguration * soap_new__tmd__SetSerialPortConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tmd__SetSerialPortConfiguration(soap, n, NULL, NULL, NULL); }

inline _tmd__SetSerialPortConfiguration * soap_new_req__tmd__SetSerialPortConfiguration(
	struct soap *soap,
	tmd__SerialPortConfiguration *SerialPortConfiguration,
	bool ForcePersistance)
{	_tmd__SetSerialPortConfiguration *_p = soap_new__tmd__SetSerialPortConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__SetSerialPortConfiguration::SerialPortConfiguration = SerialPortConfiguration;
		_p->_tmd__SetSerialPortConfiguration::ForcePersistance = ForcePersistance;
	}
	return _p;
}

inline _tmd__SetSerialPortConfiguration * soap_new_set__tmd__SetSerialPortConfiguration(
	struct soap *soap,
	tmd__SerialPortConfiguration *SerialPortConfiguration,
	bool ForcePersistance)
{	_tmd__SetSerialPortConfiguration *_p = soap_new__tmd__SetSerialPortConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__SetSerialPortConfiguration::SerialPortConfiguration = SerialPortConfiguration;
		_p->_tmd__SetSerialPortConfiguration::ForcePersistance = ForcePersistance;
	}
	return _p;
}

#ifndef soap_write__tmd__SetSerialPortConfiguration
#define soap_write__tmd__SetSerialPortConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:SetSerialPortConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__SetSerialPortConfiguration * SOAP_FMAC4 soap_get__tmd__SetSerialPortConfiguration(struct soap*, _tmd__SetSerialPortConfiguration *, const char*, const char*);

#ifndef soap_read__tmd__SetSerialPortConfiguration
#define soap_read__tmd__SetSerialPortConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__SetSerialPortConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetSerialPortConfigurationResponse
#define SOAP_TYPE__tmd__GetSerialPortConfigurationResponse (131)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetSerialPortConfigurationResponse(struct soap*, const char*, int, const _tmd__GetSerialPortConfigurationResponse *, const char*);
SOAP_FMAC3 _tmd__GetSerialPortConfigurationResponse * SOAP_FMAC4 soap_in__tmd__GetSerialPortConfigurationResponse(struct soap*, const char*, _tmd__GetSerialPortConfigurationResponse *, const char*);
SOAP_FMAC1 _tmd__GetSerialPortConfigurationResponse * SOAP_FMAC2 soap_instantiate__tmd__GetSerialPortConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetSerialPortConfigurationResponse * soap_new__tmd__GetSerialPortConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetSerialPortConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tmd__GetSerialPortConfigurationResponse * soap_new_req__tmd__GetSerialPortConfigurationResponse(
	struct soap *soap,
	tmd__SerialPortConfiguration *SerialPortConfiguration)
{	_tmd__GetSerialPortConfigurationResponse *_p = soap_new__tmd__GetSerialPortConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetSerialPortConfigurationResponse::SerialPortConfiguration = SerialPortConfiguration;
	}
	return _p;
}

inline _tmd__GetSerialPortConfigurationResponse * soap_new_set__tmd__GetSerialPortConfigurationResponse(
	struct soap *soap,
	tmd__SerialPortConfiguration *SerialPortConfiguration)
{	_tmd__GetSerialPortConfigurationResponse *_p = soap_new__tmd__GetSerialPortConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetSerialPortConfigurationResponse::SerialPortConfiguration = SerialPortConfiguration;
	}
	return _p;
}

#ifndef soap_write__tmd__GetSerialPortConfigurationResponse
#define soap_write__tmd__GetSerialPortConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetSerialPortConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetSerialPortConfigurationResponse * SOAP_FMAC4 soap_get__tmd__GetSerialPortConfigurationResponse(struct soap*, _tmd__GetSerialPortConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tmd__GetSerialPortConfigurationResponse
#define soap_read__tmd__GetSerialPortConfigurationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetSerialPortConfigurationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetSerialPortConfiguration
#define SOAP_TYPE__tmd__GetSerialPortConfiguration (130)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetSerialPortConfiguration(struct soap*, const char*, int, const _tmd__GetSerialPortConfiguration *, const char*);
SOAP_FMAC3 _tmd__GetSerialPortConfiguration * SOAP_FMAC4 soap_in__tmd__GetSerialPortConfiguration(struct soap*, const char*, _tmd__GetSerialPortConfiguration *, const char*);
SOAP_FMAC1 _tmd__GetSerialPortConfiguration * SOAP_FMAC2 soap_instantiate__tmd__GetSerialPortConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetSerialPortConfiguration * soap_new__tmd__GetSerialPortConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetSerialPortConfiguration(soap, n, NULL, NULL, NULL); }

inline _tmd__GetSerialPortConfiguration * soap_new_req__tmd__GetSerialPortConfiguration(
	struct soap *soap,
	const std::string& SerialPortToken)
{	_tmd__GetSerialPortConfiguration *_p = soap_new__tmd__GetSerialPortConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetSerialPortConfiguration::SerialPortToken = SerialPortToken;
	}
	return _p;
}

inline _tmd__GetSerialPortConfiguration * soap_new_set__tmd__GetSerialPortConfiguration(
	struct soap *soap,
	const std::string& SerialPortToken)
{	_tmd__GetSerialPortConfiguration *_p = soap_new__tmd__GetSerialPortConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetSerialPortConfiguration::SerialPortToken = SerialPortToken;
	}
	return _p;
}

#ifndef soap_write__tmd__GetSerialPortConfiguration
#define soap_write__tmd__GetSerialPortConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetSerialPortConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetSerialPortConfiguration * SOAP_FMAC4 soap_get__tmd__GetSerialPortConfiguration(struct soap*, _tmd__GetSerialPortConfiguration *, const char*, const char*);

#ifndef soap_read__tmd__GetSerialPortConfiguration
#define soap_read__tmd__GetSerialPortConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetSerialPortConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetSerialPortsResponse
#define SOAP_TYPE__tmd__GetSerialPortsResponse (129)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetSerialPortsResponse(struct soap*, const char*, int, const _tmd__GetSerialPortsResponse *, const char*);
SOAP_FMAC3 _tmd__GetSerialPortsResponse * SOAP_FMAC4 soap_in__tmd__GetSerialPortsResponse(struct soap*, const char*, _tmd__GetSerialPortsResponse *, const char*);
SOAP_FMAC1 _tmd__GetSerialPortsResponse * SOAP_FMAC2 soap_instantiate__tmd__GetSerialPortsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetSerialPortsResponse * soap_new__tmd__GetSerialPortsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetSerialPortsResponse(soap, n, NULL, NULL, NULL); }

inline _tmd__GetSerialPortsResponse * soap_new_req__tmd__GetSerialPortsResponse(
	struct soap *soap)
{	_tmd__GetSerialPortsResponse *_p = soap_new__tmd__GetSerialPortsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tmd__GetSerialPortsResponse * soap_new_set__tmd__GetSerialPortsResponse(
	struct soap *soap,
	const std::vector<tmd__SerialPort *> & SerialPort)
{	_tmd__GetSerialPortsResponse *_p = soap_new__tmd__GetSerialPortsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetSerialPortsResponse::SerialPort = SerialPort;
	}
	return _p;
}

#ifndef soap_write__tmd__GetSerialPortsResponse
#define soap_write__tmd__GetSerialPortsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetSerialPortsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetSerialPortsResponse * SOAP_FMAC4 soap_get__tmd__GetSerialPortsResponse(struct soap*, _tmd__GetSerialPortsResponse *, const char*, const char*);

#ifndef soap_read__tmd__GetSerialPortsResponse
#define soap_read__tmd__GetSerialPortsResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetSerialPortsResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetSerialPorts
#define SOAP_TYPE__tmd__GetSerialPorts (128)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetSerialPorts(struct soap*, const char*, int, const _tmd__GetSerialPorts *, const char*);
SOAP_FMAC3 _tmd__GetSerialPorts * SOAP_FMAC4 soap_in__tmd__GetSerialPorts(struct soap*, const char*, _tmd__GetSerialPorts *, const char*);
SOAP_FMAC1 _tmd__GetSerialPorts * SOAP_FMAC2 soap_instantiate__tmd__GetSerialPorts(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetSerialPorts * soap_new__tmd__GetSerialPorts(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetSerialPorts(soap, n, NULL, NULL, NULL); }

inline _tmd__GetSerialPorts * soap_new_req__tmd__GetSerialPorts(
	struct soap *soap)
{	_tmd__GetSerialPorts *_p = soap_new__tmd__GetSerialPorts(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tmd__GetSerialPorts * soap_new_set__tmd__GetSerialPorts(
	struct soap *soap)
{	_tmd__GetSerialPorts *_p = soap_new__tmd__GetSerialPorts(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tmd__GetSerialPorts
#define soap_write__tmd__GetSerialPorts(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetSerialPorts", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetSerialPorts * SOAP_FMAC4 soap_get__tmd__GetSerialPorts(struct soap*, _tmd__GetSerialPorts *, const char*, const char*);

#ifndef soap_read__tmd__GetSerialPorts
#define soap_read__tmd__GetSerialPorts(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetSerialPorts(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__SetDigitalInputConfigurationsResponse
#define SOAP_TYPE__tmd__SetDigitalInputConfigurationsResponse (127)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__SetDigitalInputConfigurationsResponse(struct soap*, const char*, int, const _tmd__SetDigitalInputConfigurationsResponse *, const char*);
SOAP_FMAC3 _tmd__SetDigitalInputConfigurationsResponse * SOAP_FMAC4 soap_in__tmd__SetDigitalInputConfigurationsResponse(struct soap*, const char*, _tmd__SetDigitalInputConfigurationsResponse *, const char*);
SOAP_FMAC1 _tmd__SetDigitalInputConfigurationsResponse * SOAP_FMAC2 soap_instantiate__tmd__SetDigitalInputConfigurationsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__SetDigitalInputConfigurationsResponse * soap_new__tmd__SetDigitalInputConfigurationsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tmd__SetDigitalInputConfigurationsResponse(soap, n, NULL, NULL, NULL); }

inline _tmd__SetDigitalInputConfigurationsResponse * soap_new_req__tmd__SetDigitalInputConfigurationsResponse(
	struct soap *soap)
{	_tmd__SetDigitalInputConfigurationsResponse *_p = soap_new__tmd__SetDigitalInputConfigurationsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tmd__SetDigitalInputConfigurationsResponse * soap_new_set__tmd__SetDigitalInputConfigurationsResponse(
	struct soap *soap)
{	_tmd__SetDigitalInputConfigurationsResponse *_p = soap_new__tmd__SetDigitalInputConfigurationsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tmd__SetDigitalInputConfigurationsResponse
#define soap_write__tmd__SetDigitalInputConfigurationsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:SetDigitalInputConfigurationsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__SetDigitalInputConfigurationsResponse * SOAP_FMAC4 soap_get__tmd__SetDigitalInputConfigurationsResponse(struct soap*, _tmd__SetDigitalInputConfigurationsResponse *, const char*, const char*);

#ifndef soap_read__tmd__SetDigitalInputConfigurationsResponse
#define soap_read__tmd__SetDigitalInputConfigurationsResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__SetDigitalInputConfigurationsResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__SetDigitalInputConfigurations
#define SOAP_TYPE__tmd__SetDigitalInputConfigurations (126)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__SetDigitalInputConfigurations(struct soap*, const char*, int, const _tmd__SetDigitalInputConfigurations *, const char*);
SOAP_FMAC3 _tmd__SetDigitalInputConfigurations * SOAP_FMAC4 soap_in__tmd__SetDigitalInputConfigurations(struct soap*, const char*, _tmd__SetDigitalInputConfigurations *, const char*);
SOAP_FMAC1 _tmd__SetDigitalInputConfigurations * SOAP_FMAC2 soap_instantiate__tmd__SetDigitalInputConfigurations(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__SetDigitalInputConfigurations * soap_new__tmd__SetDigitalInputConfigurations(struct soap *soap, int n = -1) { return soap_instantiate__tmd__SetDigitalInputConfigurations(soap, n, NULL, NULL, NULL); }

inline _tmd__SetDigitalInputConfigurations * soap_new_req__tmd__SetDigitalInputConfigurations(
	struct soap *soap,
	const std::vector<tt__DigitalInput *> & DigitalInputs)
{	_tmd__SetDigitalInputConfigurations *_p = soap_new__tmd__SetDigitalInputConfigurations(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__SetDigitalInputConfigurations::DigitalInputs = DigitalInputs;
	}
	return _p;
}

inline _tmd__SetDigitalInputConfigurations * soap_new_set__tmd__SetDigitalInputConfigurations(
	struct soap *soap,
	const std::vector<tt__DigitalInput *> & DigitalInputs)
{	_tmd__SetDigitalInputConfigurations *_p = soap_new__tmd__SetDigitalInputConfigurations(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__SetDigitalInputConfigurations::DigitalInputs = DigitalInputs;
	}
	return _p;
}

#ifndef soap_write__tmd__SetDigitalInputConfigurations
#define soap_write__tmd__SetDigitalInputConfigurations(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:SetDigitalInputConfigurations", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__SetDigitalInputConfigurations * SOAP_FMAC4 soap_get__tmd__SetDigitalInputConfigurations(struct soap*, _tmd__SetDigitalInputConfigurations *, const char*, const char*);

#ifndef soap_read__tmd__SetDigitalInputConfigurations
#define soap_read__tmd__SetDigitalInputConfigurations(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__SetDigitalInputConfigurations(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetDigitalInputConfigurationOptionsResponse
#define SOAP_TYPE__tmd__GetDigitalInputConfigurationOptionsResponse (125)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetDigitalInputConfigurationOptionsResponse(struct soap*, const char*, int, const _tmd__GetDigitalInputConfigurationOptionsResponse *, const char*);
SOAP_FMAC3 _tmd__GetDigitalInputConfigurationOptionsResponse * SOAP_FMAC4 soap_in__tmd__GetDigitalInputConfigurationOptionsResponse(struct soap*, const char*, _tmd__GetDigitalInputConfigurationOptionsResponse *, const char*);
SOAP_FMAC1 _tmd__GetDigitalInputConfigurationOptionsResponse * SOAP_FMAC2 soap_instantiate__tmd__GetDigitalInputConfigurationOptionsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetDigitalInputConfigurationOptionsResponse * soap_new__tmd__GetDigitalInputConfigurationOptionsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetDigitalInputConfigurationOptionsResponse(soap, n, NULL, NULL, NULL); }

inline _tmd__GetDigitalInputConfigurationOptionsResponse * soap_new_req__tmd__GetDigitalInputConfigurationOptionsResponse(
	struct soap *soap,
	tmd__DigitalInputConfigurationOptions *DigitalInputOptions)
{	_tmd__GetDigitalInputConfigurationOptionsResponse *_p = soap_new__tmd__GetDigitalInputConfigurationOptionsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetDigitalInputConfigurationOptionsResponse::DigitalInputOptions = DigitalInputOptions;
	}
	return _p;
}

inline _tmd__GetDigitalInputConfigurationOptionsResponse * soap_new_set__tmd__GetDigitalInputConfigurationOptionsResponse(
	struct soap *soap,
	tmd__DigitalInputConfigurationOptions *DigitalInputOptions)
{	_tmd__GetDigitalInputConfigurationOptionsResponse *_p = soap_new__tmd__GetDigitalInputConfigurationOptionsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetDigitalInputConfigurationOptionsResponse::DigitalInputOptions = DigitalInputOptions;
	}
	return _p;
}

#ifndef soap_write__tmd__GetDigitalInputConfigurationOptionsResponse
#define soap_write__tmd__GetDigitalInputConfigurationOptionsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetDigitalInputConfigurationOptionsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetDigitalInputConfigurationOptionsResponse * SOAP_FMAC4 soap_get__tmd__GetDigitalInputConfigurationOptionsResponse(struct soap*, _tmd__GetDigitalInputConfigurationOptionsResponse *, const char*, const char*);

#ifndef soap_read__tmd__GetDigitalInputConfigurationOptionsResponse
#define soap_read__tmd__GetDigitalInputConfigurationOptionsResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetDigitalInputConfigurationOptionsResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetDigitalInputConfigurationOptions
#define SOAP_TYPE__tmd__GetDigitalInputConfigurationOptions (124)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetDigitalInputConfigurationOptions(struct soap*, const char*, int, const _tmd__GetDigitalInputConfigurationOptions *, const char*);
SOAP_FMAC3 _tmd__GetDigitalInputConfigurationOptions * SOAP_FMAC4 soap_in__tmd__GetDigitalInputConfigurationOptions(struct soap*, const char*, _tmd__GetDigitalInputConfigurationOptions *, const char*);
SOAP_FMAC1 _tmd__GetDigitalInputConfigurationOptions * SOAP_FMAC2 soap_instantiate__tmd__GetDigitalInputConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetDigitalInputConfigurationOptions * soap_new__tmd__GetDigitalInputConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetDigitalInputConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline _tmd__GetDigitalInputConfigurationOptions * soap_new_req__tmd__GetDigitalInputConfigurationOptions(
	struct soap *soap)
{	_tmd__GetDigitalInputConfigurationOptions *_p = soap_new__tmd__GetDigitalInputConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tmd__GetDigitalInputConfigurationOptions * soap_new_set__tmd__GetDigitalInputConfigurationOptions(
	struct soap *soap,
	std::string *Token)
{	_tmd__GetDigitalInputConfigurationOptions *_p = soap_new__tmd__GetDigitalInputConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetDigitalInputConfigurationOptions::Token = Token;
	}
	return _p;
}

#ifndef soap_write__tmd__GetDigitalInputConfigurationOptions
#define soap_write__tmd__GetDigitalInputConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetDigitalInputConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetDigitalInputConfigurationOptions * SOAP_FMAC4 soap_get__tmd__GetDigitalInputConfigurationOptions(struct soap*, _tmd__GetDigitalInputConfigurationOptions *, const char*, const char*);

#ifndef soap_read__tmd__GetDigitalInputConfigurationOptions
#define soap_read__tmd__GetDigitalInputConfigurationOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetDigitalInputConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetDigitalInputsResponse
#define SOAP_TYPE__tmd__GetDigitalInputsResponse (123)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetDigitalInputsResponse(struct soap*, const char*, int, const _tmd__GetDigitalInputsResponse *, const char*);
SOAP_FMAC3 _tmd__GetDigitalInputsResponse * SOAP_FMAC4 soap_in__tmd__GetDigitalInputsResponse(struct soap*, const char*, _tmd__GetDigitalInputsResponse *, const char*);
SOAP_FMAC1 _tmd__GetDigitalInputsResponse * SOAP_FMAC2 soap_instantiate__tmd__GetDigitalInputsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetDigitalInputsResponse * soap_new__tmd__GetDigitalInputsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetDigitalInputsResponse(soap, n, NULL, NULL, NULL); }

inline _tmd__GetDigitalInputsResponse * soap_new_req__tmd__GetDigitalInputsResponse(
	struct soap *soap)
{	_tmd__GetDigitalInputsResponse *_p = soap_new__tmd__GetDigitalInputsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tmd__GetDigitalInputsResponse * soap_new_set__tmd__GetDigitalInputsResponse(
	struct soap *soap,
	const std::vector<tt__DigitalInput *> & DigitalInputs)
{	_tmd__GetDigitalInputsResponse *_p = soap_new__tmd__GetDigitalInputsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetDigitalInputsResponse::DigitalInputs = DigitalInputs;
	}
	return _p;
}

#ifndef soap_write__tmd__GetDigitalInputsResponse
#define soap_write__tmd__GetDigitalInputsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetDigitalInputsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetDigitalInputsResponse * SOAP_FMAC4 soap_get__tmd__GetDigitalInputsResponse(struct soap*, _tmd__GetDigitalInputsResponse *, const char*, const char*);

#ifndef soap_read__tmd__GetDigitalInputsResponse
#define soap_read__tmd__GetDigitalInputsResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetDigitalInputsResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetDigitalInputs
#define SOAP_TYPE__tmd__GetDigitalInputs (122)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetDigitalInputs(struct soap*, const char*, int, const _tmd__GetDigitalInputs *, const char*);
SOAP_FMAC3 _tmd__GetDigitalInputs * SOAP_FMAC4 soap_in__tmd__GetDigitalInputs(struct soap*, const char*, _tmd__GetDigitalInputs *, const char*);
SOAP_FMAC1 _tmd__GetDigitalInputs * SOAP_FMAC2 soap_instantiate__tmd__GetDigitalInputs(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetDigitalInputs * soap_new__tmd__GetDigitalInputs(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetDigitalInputs(soap, n, NULL, NULL, NULL); }

inline _tmd__GetDigitalInputs * soap_new_req__tmd__GetDigitalInputs(
	struct soap *soap)
{	_tmd__GetDigitalInputs *_p = soap_new__tmd__GetDigitalInputs(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tmd__GetDigitalInputs * soap_new_set__tmd__GetDigitalInputs(
	struct soap *soap)
{	_tmd__GetDigitalInputs *_p = soap_new__tmd__GetDigitalInputs(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tmd__GetDigitalInputs
#define soap_write__tmd__GetDigitalInputs(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetDigitalInputs", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetDigitalInputs * SOAP_FMAC4 soap_get__tmd__GetDigitalInputs(struct soap*, _tmd__GetDigitalInputs *, const char*, const char*);

#ifndef soap_read__tmd__GetDigitalInputs
#define soap_read__tmd__GetDigitalInputs(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetDigitalInputs(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__SetRelayOutputSettingsResponse
#define SOAP_TYPE__tmd__SetRelayOutputSettingsResponse (121)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__SetRelayOutputSettingsResponse(struct soap*, const char*, int, const _tmd__SetRelayOutputSettingsResponse *, const char*);
SOAP_FMAC3 _tmd__SetRelayOutputSettingsResponse * SOAP_FMAC4 soap_in__tmd__SetRelayOutputSettingsResponse(struct soap*, const char*, _tmd__SetRelayOutputSettingsResponse *, const char*);
SOAP_FMAC1 _tmd__SetRelayOutputSettingsResponse * SOAP_FMAC2 soap_instantiate__tmd__SetRelayOutputSettingsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__SetRelayOutputSettingsResponse * soap_new__tmd__SetRelayOutputSettingsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tmd__SetRelayOutputSettingsResponse(soap, n, NULL, NULL, NULL); }

inline _tmd__SetRelayOutputSettingsResponse * soap_new_req__tmd__SetRelayOutputSettingsResponse(
	struct soap *soap)
{	_tmd__SetRelayOutputSettingsResponse *_p = soap_new__tmd__SetRelayOutputSettingsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tmd__SetRelayOutputSettingsResponse * soap_new_set__tmd__SetRelayOutputSettingsResponse(
	struct soap *soap)
{	_tmd__SetRelayOutputSettingsResponse *_p = soap_new__tmd__SetRelayOutputSettingsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tmd__SetRelayOutputSettingsResponse
#define soap_write__tmd__SetRelayOutputSettingsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:SetRelayOutputSettingsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__SetRelayOutputSettingsResponse * SOAP_FMAC4 soap_get__tmd__SetRelayOutputSettingsResponse(struct soap*, _tmd__SetRelayOutputSettingsResponse *, const char*, const char*);

#ifndef soap_read__tmd__SetRelayOutputSettingsResponse
#define soap_read__tmd__SetRelayOutputSettingsResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__SetRelayOutputSettingsResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__SetRelayOutputSettings
#define SOAP_TYPE__tmd__SetRelayOutputSettings (120)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__SetRelayOutputSettings(struct soap*, const char*, int, const _tmd__SetRelayOutputSettings *, const char*);
SOAP_FMAC3 _tmd__SetRelayOutputSettings * SOAP_FMAC4 soap_in__tmd__SetRelayOutputSettings(struct soap*, const char*, _tmd__SetRelayOutputSettings *, const char*);
SOAP_FMAC1 _tmd__SetRelayOutputSettings * SOAP_FMAC2 soap_instantiate__tmd__SetRelayOutputSettings(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__SetRelayOutputSettings * soap_new__tmd__SetRelayOutputSettings(struct soap *soap, int n = -1) { return soap_instantiate__tmd__SetRelayOutputSettings(soap, n, NULL, NULL, NULL); }

inline _tmd__SetRelayOutputSettings * soap_new_req__tmd__SetRelayOutputSettings(
	struct soap *soap,
	tt__RelayOutput *RelayOutput)
{	_tmd__SetRelayOutputSettings *_p = soap_new__tmd__SetRelayOutputSettings(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__SetRelayOutputSettings::RelayOutput = RelayOutput;
	}
	return _p;
}

inline _tmd__SetRelayOutputSettings * soap_new_set__tmd__SetRelayOutputSettings(
	struct soap *soap,
	tt__RelayOutput *RelayOutput)
{	_tmd__SetRelayOutputSettings *_p = soap_new__tmd__SetRelayOutputSettings(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__SetRelayOutputSettings::RelayOutput = RelayOutput;
	}
	return _p;
}

#ifndef soap_write__tmd__SetRelayOutputSettings
#define soap_write__tmd__SetRelayOutputSettings(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:SetRelayOutputSettings", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__SetRelayOutputSettings * SOAP_FMAC4 soap_get__tmd__SetRelayOutputSettings(struct soap*, _tmd__SetRelayOutputSettings *, const char*, const char*);

#ifndef soap_read__tmd__SetRelayOutputSettings
#define soap_read__tmd__SetRelayOutputSettings(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__SetRelayOutputSettings(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetAudioOutputConfigurationOptionsResponse
#define SOAP_TYPE__tmd__GetAudioOutputConfigurationOptionsResponse (119)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetAudioOutputConfigurationOptionsResponse(struct soap*, const char*, int, const _tmd__GetAudioOutputConfigurationOptionsResponse *, const char*);
SOAP_FMAC3 _tmd__GetAudioOutputConfigurationOptionsResponse * SOAP_FMAC4 soap_in__tmd__GetAudioOutputConfigurationOptionsResponse(struct soap*, const char*, _tmd__GetAudioOutputConfigurationOptionsResponse *, const char*);
SOAP_FMAC1 _tmd__GetAudioOutputConfigurationOptionsResponse * SOAP_FMAC2 soap_instantiate__tmd__GetAudioOutputConfigurationOptionsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetAudioOutputConfigurationOptionsResponse * soap_new__tmd__GetAudioOutputConfigurationOptionsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetAudioOutputConfigurationOptionsResponse(soap, n, NULL, NULL, NULL); }

inline _tmd__GetAudioOutputConfigurationOptionsResponse * soap_new_req__tmd__GetAudioOutputConfigurationOptionsResponse(
	struct soap *soap,
	tt__AudioOutputConfigurationOptions *AudioOutputOptions)
{	_tmd__GetAudioOutputConfigurationOptionsResponse *_p = soap_new__tmd__GetAudioOutputConfigurationOptionsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetAudioOutputConfigurationOptionsResponse::AudioOutputOptions = AudioOutputOptions;
	}
	return _p;
}

inline _tmd__GetAudioOutputConfigurationOptionsResponse * soap_new_set__tmd__GetAudioOutputConfigurationOptionsResponse(
	struct soap *soap,
	tt__AudioOutputConfigurationOptions *AudioOutputOptions)
{	_tmd__GetAudioOutputConfigurationOptionsResponse *_p = soap_new__tmd__GetAudioOutputConfigurationOptionsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetAudioOutputConfigurationOptionsResponse::AudioOutputOptions = AudioOutputOptions;
	}
	return _p;
}

#ifndef soap_write__tmd__GetAudioOutputConfigurationOptionsResponse
#define soap_write__tmd__GetAudioOutputConfigurationOptionsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetAudioOutputConfigurationOptionsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetAudioOutputConfigurationOptionsResponse * SOAP_FMAC4 soap_get__tmd__GetAudioOutputConfigurationOptionsResponse(struct soap*, _tmd__GetAudioOutputConfigurationOptionsResponse *, const char*, const char*);

#ifndef soap_read__tmd__GetAudioOutputConfigurationOptionsResponse
#define soap_read__tmd__GetAudioOutputConfigurationOptionsResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetAudioOutputConfigurationOptionsResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetAudioOutputConfigurationOptions
#define SOAP_TYPE__tmd__GetAudioOutputConfigurationOptions (118)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetAudioOutputConfigurationOptions(struct soap*, const char*, int, const _tmd__GetAudioOutputConfigurationOptions *, const char*);
SOAP_FMAC3 _tmd__GetAudioOutputConfigurationOptions * SOAP_FMAC4 soap_in__tmd__GetAudioOutputConfigurationOptions(struct soap*, const char*, _tmd__GetAudioOutputConfigurationOptions *, const char*);
SOAP_FMAC1 _tmd__GetAudioOutputConfigurationOptions * SOAP_FMAC2 soap_instantiate__tmd__GetAudioOutputConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetAudioOutputConfigurationOptions * soap_new__tmd__GetAudioOutputConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetAudioOutputConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline _tmd__GetAudioOutputConfigurationOptions * soap_new_req__tmd__GetAudioOutputConfigurationOptions(
	struct soap *soap,
	const std::string& AudioOutputToken)
{	_tmd__GetAudioOutputConfigurationOptions *_p = soap_new__tmd__GetAudioOutputConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetAudioOutputConfigurationOptions::AudioOutputToken = AudioOutputToken;
	}
	return _p;
}

inline _tmd__GetAudioOutputConfigurationOptions * soap_new_set__tmd__GetAudioOutputConfigurationOptions(
	struct soap *soap,
	const std::string& AudioOutputToken)
{	_tmd__GetAudioOutputConfigurationOptions *_p = soap_new__tmd__GetAudioOutputConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetAudioOutputConfigurationOptions::AudioOutputToken = AudioOutputToken;
	}
	return _p;
}

#ifndef soap_write__tmd__GetAudioOutputConfigurationOptions
#define soap_write__tmd__GetAudioOutputConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetAudioOutputConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetAudioOutputConfigurationOptions * SOAP_FMAC4 soap_get__tmd__GetAudioOutputConfigurationOptions(struct soap*, _tmd__GetAudioOutputConfigurationOptions *, const char*, const char*);

#ifndef soap_read__tmd__GetAudioOutputConfigurationOptions
#define soap_read__tmd__GetAudioOutputConfigurationOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetAudioOutputConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetAudioSourceConfigurationOptionsResponse
#define SOAP_TYPE__tmd__GetAudioSourceConfigurationOptionsResponse (117)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetAudioSourceConfigurationOptionsResponse(struct soap*, const char*, int, const _tmd__GetAudioSourceConfigurationOptionsResponse *, const char*);
SOAP_FMAC3 _tmd__GetAudioSourceConfigurationOptionsResponse * SOAP_FMAC4 soap_in__tmd__GetAudioSourceConfigurationOptionsResponse(struct soap*, const char*, _tmd__GetAudioSourceConfigurationOptionsResponse *, const char*);
SOAP_FMAC1 _tmd__GetAudioSourceConfigurationOptionsResponse * SOAP_FMAC2 soap_instantiate__tmd__GetAudioSourceConfigurationOptionsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetAudioSourceConfigurationOptionsResponse * soap_new__tmd__GetAudioSourceConfigurationOptionsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetAudioSourceConfigurationOptionsResponse(soap, n, NULL, NULL, NULL); }

inline _tmd__GetAudioSourceConfigurationOptionsResponse * soap_new_req__tmd__GetAudioSourceConfigurationOptionsResponse(
	struct soap *soap,
	tt__AudioSourceConfigurationOptions *AudioSourceOptions)
{	_tmd__GetAudioSourceConfigurationOptionsResponse *_p = soap_new__tmd__GetAudioSourceConfigurationOptionsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetAudioSourceConfigurationOptionsResponse::AudioSourceOptions = AudioSourceOptions;
	}
	return _p;
}

inline _tmd__GetAudioSourceConfigurationOptionsResponse * soap_new_set__tmd__GetAudioSourceConfigurationOptionsResponse(
	struct soap *soap,
	tt__AudioSourceConfigurationOptions *AudioSourceOptions)
{	_tmd__GetAudioSourceConfigurationOptionsResponse *_p = soap_new__tmd__GetAudioSourceConfigurationOptionsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetAudioSourceConfigurationOptionsResponse::AudioSourceOptions = AudioSourceOptions;
	}
	return _p;
}

#ifndef soap_write__tmd__GetAudioSourceConfigurationOptionsResponse
#define soap_write__tmd__GetAudioSourceConfigurationOptionsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetAudioSourceConfigurationOptionsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetAudioSourceConfigurationOptionsResponse * SOAP_FMAC4 soap_get__tmd__GetAudioSourceConfigurationOptionsResponse(struct soap*, _tmd__GetAudioSourceConfigurationOptionsResponse *, const char*, const char*);

#ifndef soap_read__tmd__GetAudioSourceConfigurationOptionsResponse
#define soap_read__tmd__GetAudioSourceConfigurationOptionsResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetAudioSourceConfigurationOptionsResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetAudioSourceConfigurationOptions
#define SOAP_TYPE__tmd__GetAudioSourceConfigurationOptions (116)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetAudioSourceConfigurationOptions(struct soap*, const char*, int, const _tmd__GetAudioSourceConfigurationOptions *, const char*);
SOAP_FMAC3 _tmd__GetAudioSourceConfigurationOptions * SOAP_FMAC4 soap_in__tmd__GetAudioSourceConfigurationOptions(struct soap*, const char*, _tmd__GetAudioSourceConfigurationOptions *, const char*);
SOAP_FMAC1 _tmd__GetAudioSourceConfigurationOptions * SOAP_FMAC2 soap_instantiate__tmd__GetAudioSourceConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetAudioSourceConfigurationOptions * soap_new__tmd__GetAudioSourceConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetAudioSourceConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline _tmd__GetAudioSourceConfigurationOptions * soap_new_req__tmd__GetAudioSourceConfigurationOptions(
	struct soap *soap,
	const std::string& AudioSourceToken)
{	_tmd__GetAudioSourceConfigurationOptions *_p = soap_new__tmd__GetAudioSourceConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetAudioSourceConfigurationOptions::AudioSourceToken = AudioSourceToken;
	}
	return _p;
}

inline _tmd__GetAudioSourceConfigurationOptions * soap_new_set__tmd__GetAudioSourceConfigurationOptions(
	struct soap *soap,
	const std::string& AudioSourceToken)
{	_tmd__GetAudioSourceConfigurationOptions *_p = soap_new__tmd__GetAudioSourceConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetAudioSourceConfigurationOptions::AudioSourceToken = AudioSourceToken;
	}
	return _p;
}

#ifndef soap_write__tmd__GetAudioSourceConfigurationOptions
#define soap_write__tmd__GetAudioSourceConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetAudioSourceConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetAudioSourceConfigurationOptions * SOAP_FMAC4 soap_get__tmd__GetAudioSourceConfigurationOptions(struct soap*, _tmd__GetAudioSourceConfigurationOptions *, const char*, const char*);

#ifndef soap_read__tmd__GetAudioSourceConfigurationOptions
#define soap_read__tmd__GetAudioSourceConfigurationOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetAudioSourceConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetVideoOutputConfigurationOptionsResponse
#define SOAP_TYPE__tmd__GetVideoOutputConfigurationOptionsResponse (115)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetVideoOutputConfigurationOptionsResponse(struct soap*, const char*, int, const _tmd__GetVideoOutputConfigurationOptionsResponse *, const char*);
SOAP_FMAC3 _tmd__GetVideoOutputConfigurationOptionsResponse * SOAP_FMAC4 soap_in__tmd__GetVideoOutputConfigurationOptionsResponse(struct soap*, const char*, _tmd__GetVideoOutputConfigurationOptionsResponse *, const char*);
SOAP_FMAC1 _tmd__GetVideoOutputConfigurationOptionsResponse * SOAP_FMAC2 soap_instantiate__tmd__GetVideoOutputConfigurationOptionsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetVideoOutputConfigurationOptionsResponse * soap_new__tmd__GetVideoOutputConfigurationOptionsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetVideoOutputConfigurationOptionsResponse(soap, n, NULL, NULL, NULL); }

inline _tmd__GetVideoOutputConfigurationOptionsResponse * soap_new_req__tmd__GetVideoOutputConfigurationOptionsResponse(
	struct soap *soap,
	tt__VideoOutputConfigurationOptions *VideoOutputConfigurationOptions)
{	_tmd__GetVideoOutputConfigurationOptionsResponse *_p = soap_new__tmd__GetVideoOutputConfigurationOptionsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetVideoOutputConfigurationOptionsResponse::VideoOutputConfigurationOptions = VideoOutputConfigurationOptions;
	}
	return _p;
}

inline _tmd__GetVideoOutputConfigurationOptionsResponse * soap_new_set__tmd__GetVideoOutputConfigurationOptionsResponse(
	struct soap *soap,
	tt__VideoOutputConfigurationOptions *VideoOutputConfigurationOptions)
{	_tmd__GetVideoOutputConfigurationOptionsResponse *_p = soap_new__tmd__GetVideoOutputConfigurationOptionsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetVideoOutputConfigurationOptionsResponse::VideoOutputConfigurationOptions = VideoOutputConfigurationOptions;
	}
	return _p;
}

#ifndef soap_write__tmd__GetVideoOutputConfigurationOptionsResponse
#define soap_write__tmd__GetVideoOutputConfigurationOptionsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetVideoOutputConfigurationOptionsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetVideoOutputConfigurationOptionsResponse * SOAP_FMAC4 soap_get__tmd__GetVideoOutputConfigurationOptionsResponse(struct soap*, _tmd__GetVideoOutputConfigurationOptionsResponse *, const char*, const char*);

#ifndef soap_read__tmd__GetVideoOutputConfigurationOptionsResponse
#define soap_read__tmd__GetVideoOutputConfigurationOptionsResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetVideoOutputConfigurationOptionsResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetVideoOutputConfigurationOptions
#define SOAP_TYPE__tmd__GetVideoOutputConfigurationOptions (114)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetVideoOutputConfigurationOptions(struct soap*, const char*, int, const _tmd__GetVideoOutputConfigurationOptions *, const char*);
SOAP_FMAC3 _tmd__GetVideoOutputConfigurationOptions * SOAP_FMAC4 soap_in__tmd__GetVideoOutputConfigurationOptions(struct soap*, const char*, _tmd__GetVideoOutputConfigurationOptions *, const char*);
SOAP_FMAC1 _tmd__GetVideoOutputConfigurationOptions * SOAP_FMAC2 soap_instantiate__tmd__GetVideoOutputConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetVideoOutputConfigurationOptions * soap_new__tmd__GetVideoOutputConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetVideoOutputConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline _tmd__GetVideoOutputConfigurationOptions * soap_new_req__tmd__GetVideoOutputConfigurationOptions(
	struct soap *soap,
	const std::string& VideoOutputToken)
{	_tmd__GetVideoOutputConfigurationOptions *_p = soap_new__tmd__GetVideoOutputConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetVideoOutputConfigurationOptions::VideoOutputToken = VideoOutputToken;
	}
	return _p;
}

inline _tmd__GetVideoOutputConfigurationOptions * soap_new_set__tmd__GetVideoOutputConfigurationOptions(
	struct soap *soap,
	const std::string& VideoOutputToken)
{	_tmd__GetVideoOutputConfigurationOptions *_p = soap_new__tmd__GetVideoOutputConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetVideoOutputConfigurationOptions::VideoOutputToken = VideoOutputToken;
	}
	return _p;
}

#ifndef soap_write__tmd__GetVideoOutputConfigurationOptions
#define soap_write__tmd__GetVideoOutputConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetVideoOutputConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetVideoOutputConfigurationOptions * SOAP_FMAC4 soap_get__tmd__GetVideoOutputConfigurationOptions(struct soap*, _tmd__GetVideoOutputConfigurationOptions *, const char*, const char*);

#ifndef soap_read__tmd__GetVideoOutputConfigurationOptions
#define soap_read__tmd__GetVideoOutputConfigurationOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetVideoOutputConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetVideoSourceConfigurationOptionsResponse
#define SOAP_TYPE__tmd__GetVideoSourceConfigurationOptionsResponse (113)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetVideoSourceConfigurationOptionsResponse(struct soap*, const char*, int, const _tmd__GetVideoSourceConfigurationOptionsResponse *, const char*);
SOAP_FMAC3 _tmd__GetVideoSourceConfigurationOptionsResponse * SOAP_FMAC4 soap_in__tmd__GetVideoSourceConfigurationOptionsResponse(struct soap*, const char*, _tmd__GetVideoSourceConfigurationOptionsResponse *, const char*);
SOAP_FMAC1 _tmd__GetVideoSourceConfigurationOptionsResponse * SOAP_FMAC2 soap_instantiate__tmd__GetVideoSourceConfigurationOptionsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetVideoSourceConfigurationOptionsResponse * soap_new__tmd__GetVideoSourceConfigurationOptionsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetVideoSourceConfigurationOptionsResponse(soap, n, NULL, NULL, NULL); }

inline _tmd__GetVideoSourceConfigurationOptionsResponse * soap_new_req__tmd__GetVideoSourceConfigurationOptionsResponse(
	struct soap *soap,
	tt__VideoSourceConfigurationOptions *VideoSourceConfigurationOptions)
{	_tmd__GetVideoSourceConfigurationOptionsResponse *_p = soap_new__tmd__GetVideoSourceConfigurationOptionsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetVideoSourceConfigurationOptionsResponse::VideoSourceConfigurationOptions = VideoSourceConfigurationOptions;
	}
	return _p;
}

inline _tmd__GetVideoSourceConfigurationOptionsResponse * soap_new_set__tmd__GetVideoSourceConfigurationOptionsResponse(
	struct soap *soap,
	tt__VideoSourceConfigurationOptions *VideoSourceConfigurationOptions)
{	_tmd__GetVideoSourceConfigurationOptionsResponse *_p = soap_new__tmd__GetVideoSourceConfigurationOptionsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetVideoSourceConfigurationOptionsResponse::VideoSourceConfigurationOptions = VideoSourceConfigurationOptions;
	}
	return _p;
}

#ifndef soap_write__tmd__GetVideoSourceConfigurationOptionsResponse
#define soap_write__tmd__GetVideoSourceConfigurationOptionsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetVideoSourceConfigurationOptionsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetVideoSourceConfigurationOptionsResponse * SOAP_FMAC4 soap_get__tmd__GetVideoSourceConfigurationOptionsResponse(struct soap*, _tmd__GetVideoSourceConfigurationOptionsResponse *, const char*, const char*);

#ifndef soap_read__tmd__GetVideoSourceConfigurationOptionsResponse
#define soap_read__tmd__GetVideoSourceConfigurationOptionsResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetVideoSourceConfigurationOptionsResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetVideoSourceConfigurationOptions
#define SOAP_TYPE__tmd__GetVideoSourceConfigurationOptions (112)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetVideoSourceConfigurationOptions(struct soap*, const char*, int, const _tmd__GetVideoSourceConfigurationOptions *, const char*);
SOAP_FMAC3 _tmd__GetVideoSourceConfigurationOptions * SOAP_FMAC4 soap_in__tmd__GetVideoSourceConfigurationOptions(struct soap*, const char*, _tmd__GetVideoSourceConfigurationOptions *, const char*);
SOAP_FMAC1 _tmd__GetVideoSourceConfigurationOptions * SOAP_FMAC2 soap_instantiate__tmd__GetVideoSourceConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetVideoSourceConfigurationOptions * soap_new__tmd__GetVideoSourceConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetVideoSourceConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline _tmd__GetVideoSourceConfigurationOptions * soap_new_req__tmd__GetVideoSourceConfigurationOptions(
	struct soap *soap,
	const std::string& VideoSourceToken)
{	_tmd__GetVideoSourceConfigurationOptions *_p = soap_new__tmd__GetVideoSourceConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetVideoSourceConfigurationOptions::VideoSourceToken = VideoSourceToken;
	}
	return _p;
}

inline _tmd__GetVideoSourceConfigurationOptions * soap_new_set__tmd__GetVideoSourceConfigurationOptions(
	struct soap *soap,
	const std::string& VideoSourceToken)
{	_tmd__GetVideoSourceConfigurationOptions *_p = soap_new__tmd__GetVideoSourceConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetVideoSourceConfigurationOptions::VideoSourceToken = VideoSourceToken;
	}
	return _p;
}

#ifndef soap_write__tmd__GetVideoSourceConfigurationOptions
#define soap_write__tmd__GetVideoSourceConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetVideoSourceConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetVideoSourceConfigurationOptions * SOAP_FMAC4 soap_get__tmd__GetVideoSourceConfigurationOptions(struct soap*, _tmd__GetVideoSourceConfigurationOptions *, const char*, const char*);

#ifndef soap_read__tmd__GetVideoSourceConfigurationOptions
#define soap_read__tmd__GetVideoSourceConfigurationOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetVideoSourceConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__SetVideoOutputConfigurationResponse
#define SOAP_TYPE__tmd__SetVideoOutputConfigurationResponse (111)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__SetVideoOutputConfigurationResponse(struct soap*, const char*, int, const _tmd__SetVideoOutputConfigurationResponse *, const char*);
SOAP_FMAC3 _tmd__SetVideoOutputConfigurationResponse * SOAP_FMAC4 soap_in__tmd__SetVideoOutputConfigurationResponse(struct soap*, const char*, _tmd__SetVideoOutputConfigurationResponse *, const char*);
SOAP_FMAC1 _tmd__SetVideoOutputConfigurationResponse * SOAP_FMAC2 soap_instantiate__tmd__SetVideoOutputConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__SetVideoOutputConfigurationResponse * soap_new__tmd__SetVideoOutputConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tmd__SetVideoOutputConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tmd__SetVideoOutputConfigurationResponse * soap_new_req__tmd__SetVideoOutputConfigurationResponse(
	struct soap *soap)
{	_tmd__SetVideoOutputConfigurationResponse *_p = soap_new__tmd__SetVideoOutputConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tmd__SetVideoOutputConfigurationResponse * soap_new_set__tmd__SetVideoOutputConfigurationResponse(
	struct soap *soap)
{	_tmd__SetVideoOutputConfigurationResponse *_p = soap_new__tmd__SetVideoOutputConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tmd__SetVideoOutputConfigurationResponse
#define soap_write__tmd__SetVideoOutputConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:SetVideoOutputConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__SetVideoOutputConfigurationResponse * SOAP_FMAC4 soap_get__tmd__SetVideoOutputConfigurationResponse(struct soap*, _tmd__SetVideoOutputConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tmd__SetVideoOutputConfigurationResponse
#define soap_read__tmd__SetVideoOutputConfigurationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__SetVideoOutputConfigurationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__SetVideoOutputConfiguration
#define SOAP_TYPE__tmd__SetVideoOutputConfiguration (110)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__SetVideoOutputConfiguration(struct soap*, const char*, int, const _tmd__SetVideoOutputConfiguration *, const char*);
SOAP_FMAC3 _tmd__SetVideoOutputConfiguration * SOAP_FMAC4 soap_in__tmd__SetVideoOutputConfiguration(struct soap*, const char*, _tmd__SetVideoOutputConfiguration *, const char*);
SOAP_FMAC1 _tmd__SetVideoOutputConfiguration * SOAP_FMAC2 soap_instantiate__tmd__SetVideoOutputConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__SetVideoOutputConfiguration * soap_new__tmd__SetVideoOutputConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tmd__SetVideoOutputConfiguration(soap, n, NULL, NULL, NULL); }

inline _tmd__SetVideoOutputConfiguration * soap_new_req__tmd__SetVideoOutputConfiguration(
	struct soap *soap,
	tt__VideoOutputConfiguration *Configuration,
	bool ForcePersistence)
{	_tmd__SetVideoOutputConfiguration *_p = soap_new__tmd__SetVideoOutputConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__SetVideoOutputConfiguration::Configuration = Configuration;
		_p->_tmd__SetVideoOutputConfiguration::ForcePersistence = ForcePersistence;
	}
	return _p;
}

inline _tmd__SetVideoOutputConfiguration * soap_new_set__tmd__SetVideoOutputConfiguration(
	struct soap *soap,
	tt__VideoOutputConfiguration *Configuration,
	bool ForcePersistence)
{	_tmd__SetVideoOutputConfiguration *_p = soap_new__tmd__SetVideoOutputConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__SetVideoOutputConfiguration::Configuration = Configuration;
		_p->_tmd__SetVideoOutputConfiguration::ForcePersistence = ForcePersistence;
	}
	return _p;
}

#ifndef soap_write__tmd__SetVideoOutputConfiguration
#define soap_write__tmd__SetVideoOutputConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:SetVideoOutputConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__SetVideoOutputConfiguration * SOAP_FMAC4 soap_get__tmd__SetVideoOutputConfiguration(struct soap*, _tmd__SetVideoOutputConfiguration *, const char*, const char*);

#ifndef soap_read__tmd__SetVideoOutputConfiguration
#define soap_read__tmd__SetVideoOutputConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__SetVideoOutputConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__SetVideoSourceConfigurationResponse
#define SOAP_TYPE__tmd__SetVideoSourceConfigurationResponse (109)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__SetVideoSourceConfigurationResponse(struct soap*, const char*, int, const _tmd__SetVideoSourceConfigurationResponse *, const char*);
SOAP_FMAC3 _tmd__SetVideoSourceConfigurationResponse * SOAP_FMAC4 soap_in__tmd__SetVideoSourceConfigurationResponse(struct soap*, const char*, _tmd__SetVideoSourceConfigurationResponse *, const char*);
SOAP_FMAC1 _tmd__SetVideoSourceConfigurationResponse * SOAP_FMAC2 soap_instantiate__tmd__SetVideoSourceConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__SetVideoSourceConfigurationResponse * soap_new__tmd__SetVideoSourceConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tmd__SetVideoSourceConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tmd__SetVideoSourceConfigurationResponse * soap_new_req__tmd__SetVideoSourceConfigurationResponse(
	struct soap *soap)
{	_tmd__SetVideoSourceConfigurationResponse *_p = soap_new__tmd__SetVideoSourceConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tmd__SetVideoSourceConfigurationResponse * soap_new_set__tmd__SetVideoSourceConfigurationResponse(
	struct soap *soap)
{	_tmd__SetVideoSourceConfigurationResponse *_p = soap_new__tmd__SetVideoSourceConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tmd__SetVideoSourceConfigurationResponse
#define soap_write__tmd__SetVideoSourceConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:SetVideoSourceConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__SetVideoSourceConfigurationResponse * SOAP_FMAC4 soap_get__tmd__SetVideoSourceConfigurationResponse(struct soap*, _tmd__SetVideoSourceConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tmd__SetVideoSourceConfigurationResponse
#define soap_read__tmd__SetVideoSourceConfigurationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__SetVideoSourceConfigurationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__SetVideoSourceConfiguration
#define SOAP_TYPE__tmd__SetVideoSourceConfiguration (108)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__SetVideoSourceConfiguration(struct soap*, const char*, int, const _tmd__SetVideoSourceConfiguration *, const char*);
SOAP_FMAC3 _tmd__SetVideoSourceConfiguration * SOAP_FMAC4 soap_in__tmd__SetVideoSourceConfiguration(struct soap*, const char*, _tmd__SetVideoSourceConfiguration *, const char*);
SOAP_FMAC1 _tmd__SetVideoSourceConfiguration * SOAP_FMAC2 soap_instantiate__tmd__SetVideoSourceConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__SetVideoSourceConfiguration * soap_new__tmd__SetVideoSourceConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tmd__SetVideoSourceConfiguration(soap, n, NULL, NULL, NULL); }

inline _tmd__SetVideoSourceConfiguration * soap_new_req__tmd__SetVideoSourceConfiguration(
	struct soap *soap,
	tt__VideoSourceConfiguration *Configuration,
	bool ForcePersistence)
{	_tmd__SetVideoSourceConfiguration *_p = soap_new__tmd__SetVideoSourceConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__SetVideoSourceConfiguration::Configuration = Configuration;
		_p->_tmd__SetVideoSourceConfiguration::ForcePersistence = ForcePersistence;
	}
	return _p;
}

inline _tmd__SetVideoSourceConfiguration * soap_new_set__tmd__SetVideoSourceConfiguration(
	struct soap *soap,
	tt__VideoSourceConfiguration *Configuration,
	bool ForcePersistence)
{	_tmd__SetVideoSourceConfiguration *_p = soap_new__tmd__SetVideoSourceConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__SetVideoSourceConfiguration::Configuration = Configuration;
		_p->_tmd__SetVideoSourceConfiguration::ForcePersistence = ForcePersistence;
	}
	return _p;
}

#ifndef soap_write__tmd__SetVideoSourceConfiguration
#define soap_write__tmd__SetVideoSourceConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:SetVideoSourceConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__SetVideoSourceConfiguration * SOAP_FMAC4 soap_get__tmd__SetVideoSourceConfiguration(struct soap*, _tmd__SetVideoSourceConfiguration *, const char*, const char*);

#ifndef soap_read__tmd__SetVideoSourceConfiguration
#define soap_read__tmd__SetVideoSourceConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__SetVideoSourceConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__SetAudioOutputConfigurationResponse
#define SOAP_TYPE__tmd__SetAudioOutputConfigurationResponse (107)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__SetAudioOutputConfigurationResponse(struct soap*, const char*, int, const _tmd__SetAudioOutputConfigurationResponse *, const char*);
SOAP_FMAC3 _tmd__SetAudioOutputConfigurationResponse * SOAP_FMAC4 soap_in__tmd__SetAudioOutputConfigurationResponse(struct soap*, const char*, _tmd__SetAudioOutputConfigurationResponse *, const char*);
SOAP_FMAC1 _tmd__SetAudioOutputConfigurationResponse * SOAP_FMAC2 soap_instantiate__tmd__SetAudioOutputConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__SetAudioOutputConfigurationResponse * soap_new__tmd__SetAudioOutputConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tmd__SetAudioOutputConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tmd__SetAudioOutputConfigurationResponse * soap_new_req__tmd__SetAudioOutputConfigurationResponse(
	struct soap *soap)
{	_tmd__SetAudioOutputConfigurationResponse *_p = soap_new__tmd__SetAudioOutputConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tmd__SetAudioOutputConfigurationResponse * soap_new_set__tmd__SetAudioOutputConfigurationResponse(
	struct soap *soap)
{	_tmd__SetAudioOutputConfigurationResponse *_p = soap_new__tmd__SetAudioOutputConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tmd__SetAudioOutputConfigurationResponse
#define soap_write__tmd__SetAudioOutputConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:SetAudioOutputConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__SetAudioOutputConfigurationResponse * SOAP_FMAC4 soap_get__tmd__SetAudioOutputConfigurationResponse(struct soap*, _tmd__SetAudioOutputConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tmd__SetAudioOutputConfigurationResponse
#define soap_read__tmd__SetAudioOutputConfigurationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__SetAudioOutputConfigurationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__SetAudioOutputConfiguration
#define SOAP_TYPE__tmd__SetAudioOutputConfiguration (106)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__SetAudioOutputConfiguration(struct soap*, const char*, int, const _tmd__SetAudioOutputConfiguration *, const char*);
SOAP_FMAC3 _tmd__SetAudioOutputConfiguration * SOAP_FMAC4 soap_in__tmd__SetAudioOutputConfiguration(struct soap*, const char*, _tmd__SetAudioOutputConfiguration *, const char*);
SOAP_FMAC1 _tmd__SetAudioOutputConfiguration * SOAP_FMAC2 soap_instantiate__tmd__SetAudioOutputConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__SetAudioOutputConfiguration * soap_new__tmd__SetAudioOutputConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tmd__SetAudioOutputConfiguration(soap, n, NULL, NULL, NULL); }

inline _tmd__SetAudioOutputConfiguration * soap_new_req__tmd__SetAudioOutputConfiguration(
	struct soap *soap,
	tt__AudioOutputConfiguration *Configuration,
	bool ForcePersistence)
{	_tmd__SetAudioOutputConfiguration *_p = soap_new__tmd__SetAudioOutputConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__SetAudioOutputConfiguration::Configuration = Configuration;
		_p->_tmd__SetAudioOutputConfiguration::ForcePersistence = ForcePersistence;
	}
	return _p;
}

inline _tmd__SetAudioOutputConfiguration * soap_new_set__tmd__SetAudioOutputConfiguration(
	struct soap *soap,
	tt__AudioOutputConfiguration *Configuration,
	bool ForcePersistence)
{	_tmd__SetAudioOutputConfiguration *_p = soap_new__tmd__SetAudioOutputConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__SetAudioOutputConfiguration::Configuration = Configuration;
		_p->_tmd__SetAudioOutputConfiguration::ForcePersistence = ForcePersistence;
	}
	return _p;
}

#ifndef soap_write__tmd__SetAudioOutputConfiguration
#define soap_write__tmd__SetAudioOutputConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:SetAudioOutputConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__SetAudioOutputConfiguration * SOAP_FMAC4 soap_get__tmd__SetAudioOutputConfiguration(struct soap*, _tmd__SetAudioOutputConfiguration *, const char*, const char*);

#ifndef soap_read__tmd__SetAudioOutputConfiguration
#define soap_read__tmd__SetAudioOutputConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__SetAudioOutputConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__SetAudioSourceConfigurationResponse
#define SOAP_TYPE__tmd__SetAudioSourceConfigurationResponse (105)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__SetAudioSourceConfigurationResponse(struct soap*, const char*, int, const _tmd__SetAudioSourceConfigurationResponse *, const char*);
SOAP_FMAC3 _tmd__SetAudioSourceConfigurationResponse * SOAP_FMAC4 soap_in__tmd__SetAudioSourceConfigurationResponse(struct soap*, const char*, _tmd__SetAudioSourceConfigurationResponse *, const char*);
SOAP_FMAC1 _tmd__SetAudioSourceConfigurationResponse * SOAP_FMAC2 soap_instantiate__tmd__SetAudioSourceConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__SetAudioSourceConfigurationResponse * soap_new__tmd__SetAudioSourceConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tmd__SetAudioSourceConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tmd__SetAudioSourceConfigurationResponse * soap_new_req__tmd__SetAudioSourceConfigurationResponse(
	struct soap *soap)
{	_tmd__SetAudioSourceConfigurationResponse *_p = soap_new__tmd__SetAudioSourceConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tmd__SetAudioSourceConfigurationResponse * soap_new_set__tmd__SetAudioSourceConfigurationResponse(
	struct soap *soap)
{	_tmd__SetAudioSourceConfigurationResponse *_p = soap_new__tmd__SetAudioSourceConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tmd__SetAudioSourceConfigurationResponse
#define soap_write__tmd__SetAudioSourceConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:SetAudioSourceConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__SetAudioSourceConfigurationResponse * SOAP_FMAC4 soap_get__tmd__SetAudioSourceConfigurationResponse(struct soap*, _tmd__SetAudioSourceConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tmd__SetAudioSourceConfigurationResponse
#define soap_read__tmd__SetAudioSourceConfigurationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__SetAudioSourceConfigurationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__SetAudioSourceConfiguration
#define SOAP_TYPE__tmd__SetAudioSourceConfiguration (104)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__SetAudioSourceConfiguration(struct soap*, const char*, int, const _tmd__SetAudioSourceConfiguration *, const char*);
SOAP_FMAC3 _tmd__SetAudioSourceConfiguration * SOAP_FMAC4 soap_in__tmd__SetAudioSourceConfiguration(struct soap*, const char*, _tmd__SetAudioSourceConfiguration *, const char*);
SOAP_FMAC1 _tmd__SetAudioSourceConfiguration * SOAP_FMAC2 soap_instantiate__tmd__SetAudioSourceConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__SetAudioSourceConfiguration * soap_new__tmd__SetAudioSourceConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tmd__SetAudioSourceConfiguration(soap, n, NULL, NULL, NULL); }

inline _tmd__SetAudioSourceConfiguration * soap_new_req__tmd__SetAudioSourceConfiguration(
	struct soap *soap,
	tt__AudioSourceConfiguration *Configuration,
	bool ForcePersistence)
{	_tmd__SetAudioSourceConfiguration *_p = soap_new__tmd__SetAudioSourceConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__SetAudioSourceConfiguration::Configuration = Configuration;
		_p->_tmd__SetAudioSourceConfiguration::ForcePersistence = ForcePersistence;
	}
	return _p;
}

inline _tmd__SetAudioSourceConfiguration * soap_new_set__tmd__SetAudioSourceConfiguration(
	struct soap *soap,
	tt__AudioSourceConfiguration *Configuration,
	bool ForcePersistence)
{	_tmd__SetAudioSourceConfiguration *_p = soap_new__tmd__SetAudioSourceConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__SetAudioSourceConfiguration::Configuration = Configuration;
		_p->_tmd__SetAudioSourceConfiguration::ForcePersistence = ForcePersistence;
	}
	return _p;
}

#ifndef soap_write__tmd__SetAudioSourceConfiguration
#define soap_write__tmd__SetAudioSourceConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:SetAudioSourceConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__SetAudioSourceConfiguration * SOAP_FMAC4 soap_get__tmd__SetAudioSourceConfiguration(struct soap*, _tmd__SetAudioSourceConfiguration *, const char*, const char*);

#ifndef soap_read__tmd__SetAudioSourceConfiguration
#define soap_read__tmd__SetAudioSourceConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__SetAudioSourceConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetVideoOutputConfigurationResponse
#define SOAP_TYPE__tmd__GetVideoOutputConfigurationResponse (103)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetVideoOutputConfigurationResponse(struct soap*, const char*, int, const _tmd__GetVideoOutputConfigurationResponse *, const char*);
SOAP_FMAC3 _tmd__GetVideoOutputConfigurationResponse * SOAP_FMAC4 soap_in__tmd__GetVideoOutputConfigurationResponse(struct soap*, const char*, _tmd__GetVideoOutputConfigurationResponse *, const char*);
SOAP_FMAC1 _tmd__GetVideoOutputConfigurationResponse * SOAP_FMAC2 soap_instantiate__tmd__GetVideoOutputConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetVideoOutputConfigurationResponse * soap_new__tmd__GetVideoOutputConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetVideoOutputConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tmd__GetVideoOutputConfigurationResponse * soap_new_req__tmd__GetVideoOutputConfigurationResponse(
	struct soap *soap,
	tt__VideoOutputConfiguration *VideoOutputConfiguration)
{	_tmd__GetVideoOutputConfigurationResponse *_p = soap_new__tmd__GetVideoOutputConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetVideoOutputConfigurationResponse::VideoOutputConfiguration = VideoOutputConfiguration;
	}
	return _p;
}

inline _tmd__GetVideoOutputConfigurationResponse * soap_new_set__tmd__GetVideoOutputConfigurationResponse(
	struct soap *soap,
	tt__VideoOutputConfiguration *VideoOutputConfiguration)
{	_tmd__GetVideoOutputConfigurationResponse *_p = soap_new__tmd__GetVideoOutputConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetVideoOutputConfigurationResponse::VideoOutputConfiguration = VideoOutputConfiguration;
	}
	return _p;
}

#ifndef soap_write__tmd__GetVideoOutputConfigurationResponse
#define soap_write__tmd__GetVideoOutputConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetVideoOutputConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetVideoOutputConfigurationResponse * SOAP_FMAC4 soap_get__tmd__GetVideoOutputConfigurationResponse(struct soap*, _tmd__GetVideoOutputConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tmd__GetVideoOutputConfigurationResponse
#define soap_read__tmd__GetVideoOutputConfigurationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetVideoOutputConfigurationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetVideoOutputConfiguration
#define SOAP_TYPE__tmd__GetVideoOutputConfiguration (102)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetVideoOutputConfiguration(struct soap*, const char*, int, const _tmd__GetVideoOutputConfiguration *, const char*);
SOAP_FMAC3 _tmd__GetVideoOutputConfiguration * SOAP_FMAC4 soap_in__tmd__GetVideoOutputConfiguration(struct soap*, const char*, _tmd__GetVideoOutputConfiguration *, const char*);
SOAP_FMAC1 _tmd__GetVideoOutputConfiguration * SOAP_FMAC2 soap_instantiate__tmd__GetVideoOutputConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetVideoOutputConfiguration * soap_new__tmd__GetVideoOutputConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetVideoOutputConfiguration(soap, n, NULL, NULL, NULL); }

inline _tmd__GetVideoOutputConfiguration * soap_new_req__tmd__GetVideoOutputConfiguration(
	struct soap *soap,
	const std::string& VideoOutputToken)
{	_tmd__GetVideoOutputConfiguration *_p = soap_new__tmd__GetVideoOutputConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetVideoOutputConfiguration::VideoOutputToken = VideoOutputToken;
	}
	return _p;
}

inline _tmd__GetVideoOutputConfiguration * soap_new_set__tmd__GetVideoOutputConfiguration(
	struct soap *soap,
	const std::string& VideoOutputToken)
{	_tmd__GetVideoOutputConfiguration *_p = soap_new__tmd__GetVideoOutputConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetVideoOutputConfiguration::VideoOutputToken = VideoOutputToken;
	}
	return _p;
}

#ifndef soap_write__tmd__GetVideoOutputConfiguration
#define soap_write__tmd__GetVideoOutputConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetVideoOutputConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetVideoOutputConfiguration * SOAP_FMAC4 soap_get__tmd__GetVideoOutputConfiguration(struct soap*, _tmd__GetVideoOutputConfiguration *, const char*, const char*);

#ifndef soap_read__tmd__GetVideoOutputConfiguration
#define soap_read__tmd__GetVideoOutputConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetVideoOutputConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetVideoSourceConfigurationResponse
#define SOAP_TYPE__tmd__GetVideoSourceConfigurationResponse (101)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetVideoSourceConfigurationResponse(struct soap*, const char*, int, const _tmd__GetVideoSourceConfigurationResponse *, const char*);
SOAP_FMAC3 _tmd__GetVideoSourceConfigurationResponse * SOAP_FMAC4 soap_in__tmd__GetVideoSourceConfigurationResponse(struct soap*, const char*, _tmd__GetVideoSourceConfigurationResponse *, const char*);
SOAP_FMAC1 _tmd__GetVideoSourceConfigurationResponse * SOAP_FMAC2 soap_instantiate__tmd__GetVideoSourceConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetVideoSourceConfigurationResponse * soap_new__tmd__GetVideoSourceConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetVideoSourceConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tmd__GetVideoSourceConfigurationResponse * soap_new_req__tmd__GetVideoSourceConfigurationResponse(
	struct soap *soap,
	tt__VideoSourceConfiguration *VideoSourceConfiguration)
{	_tmd__GetVideoSourceConfigurationResponse *_p = soap_new__tmd__GetVideoSourceConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetVideoSourceConfigurationResponse::VideoSourceConfiguration = VideoSourceConfiguration;
	}
	return _p;
}

inline _tmd__GetVideoSourceConfigurationResponse * soap_new_set__tmd__GetVideoSourceConfigurationResponse(
	struct soap *soap,
	tt__VideoSourceConfiguration *VideoSourceConfiguration)
{	_tmd__GetVideoSourceConfigurationResponse *_p = soap_new__tmd__GetVideoSourceConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetVideoSourceConfigurationResponse::VideoSourceConfiguration = VideoSourceConfiguration;
	}
	return _p;
}

#ifndef soap_write__tmd__GetVideoSourceConfigurationResponse
#define soap_write__tmd__GetVideoSourceConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetVideoSourceConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetVideoSourceConfigurationResponse * SOAP_FMAC4 soap_get__tmd__GetVideoSourceConfigurationResponse(struct soap*, _tmd__GetVideoSourceConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tmd__GetVideoSourceConfigurationResponse
#define soap_read__tmd__GetVideoSourceConfigurationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetVideoSourceConfigurationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetVideoSourceConfiguration
#define SOAP_TYPE__tmd__GetVideoSourceConfiguration (100)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetVideoSourceConfiguration(struct soap*, const char*, int, const _tmd__GetVideoSourceConfiguration *, const char*);
SOAP_FMAC3 _tmd__GetVideoSourceConfiguration * SOAP_FMAC4 soap_in__tmd__GetVideoSourceConfiguration(struct soap*, const char*, _tmd__GetVideoSourceConfiguration *, const char*);
SOAP_FMAC1 _tmd__GetVideoSourceConfiguration * SOAP_FMAC2 soap_instantiate__tmd__GetVideoSourceConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetVideoSourceConfiguration * soap_new__tmd__GetVideoSourceConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetVideoSourceConfiguration(soap, n, NULL, NULL, NULL); }

inline _tmd__GetVideoSourceConfiguration * soap_new_req__tmd__GetVideoSourceConfiguration(
	struct soap *soap,
	const std::string& VideoSourceToken)
{	_tmd__GetVideoSourceConfiguration *_p = soap_new__tmd__GetVideoSourceConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetVideoSourceConfiguration::VideoSourceToken = VideoSourceToken;
	}
	return _p;
}

inline _tmd__GetVideoSourceConfiguration * soap_new_set__tmd__GetVideoSourceConfiguration(
	struct soap *soap,
	const std::string& VideoSourceToken)
{	_tmd__GetVideoSourceConfiguration *_p = soap_new__tmd__GetVideoSourceConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetVideoSourceConfiguration::VideoSourceToken = VideoSourceToken;
	}
	return _p;
}

#ifndef soap_write__tmd__GetVideoSourceConfiguration
#define soap_write__tmd__GetVideoSourceConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetVideoSourceConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetVideoSourceConfiguration * SOAP_FMAC4 soap_get__tmd__GetVideoSourceConfiguration(struct soap*, _tmd__GetVideoSourceConfiguration *, const char*, const char*);

#ifndef soap_read__tmd__GetVideoSourceConfiguration
#define soap_read__tmd__GetVideoSourceConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetVideoSourceConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetAudioOutputConfigurationResponse
#define SOAP_TYPE__tmd__GetAudioOutputConfigurationResponse (99)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetAudioOutputConfigurationResponse(struct soap*, const char*, int, const _tmd__GetAudioOutputConfigurationResponse *, const char*);
SOAP_FMAC3 _tmd__GetAudioOutputConfigurationResponse * SOAP_FMAC4 soap_in__tmd__GetAudioOutputConfigurationResponse(struct soap*, const char*, _tmd__GetAudioOutputConfigurationResponse *, const char*);
SOAP_FMAC1 _tmd__GetAudioOutputConfigurationResponse * SOAP_FMAC2 soap_instantiate__tmd__GetAudioOutputConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetAudioOutputConfigurationResponse * soap_new__tmd__GetAudioOutputConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetAudioOutputConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tmd__GetAudioOutputConfigurationResponse * soap_new_req__tmd__GetAudioOutputConfigurationResponse(
	struct soap *soap,
	tt__AudioOutputConfiguration *AudioOutputConfiguration)
{	_tmd__GetAudioOutputConfigurationResponse *_p = soap_new__tmd__GetAudioOutputConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetAudioOutputConfigurationResponse::AudioOutputConfiguration = AudioOutputConfiguration;
	}
	return _p;
}

inline _tmd__GetAudioOutputConfigurationResponse * soap_new_set__tmd__GetAudioOutputConfigurationResponse(
	struct soap *soap,
	tt__AudioOutputConfiguration *AudioOutputConfiguration)
{	_tmd__GetAudioOutputConfigurationResponse *_p = soap_new__tmd__GetAudioOutputConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetAudioOutputConfigurationResponse::AudioOutputConfiguration = AudioOutputConfiguration;
	}
	return _p;
}

#ifndef soap_write__tmd__GetAudioOutputConfigurationResponse
#define soap_write__tmd__GetAudioOutputConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetAudioOutputConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetAudioOutputConfigurationResponse * SOAP_FMAC4 soap_get__tmd__GetAudioOutputConfigurationResponse(struct soap*, _tmd__GetAudioOutputConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tmd__GetAudioOutputConfigurationResponse
#define soap_read__tmd__GetAudioOutputConfigurationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetAudioOutputConfigurationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetAudioOutputConfiguration
#define SOAP_TYPE__tmd__GetAudioOutputConfiguration (98)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetAudioOutputConfiguration(struct soap*, const char*, int, const _tmd__GetAudioOutputConfiguration *, const char*);
SOAP_FMAC3 _tmd__GetAudioOutputConfiguration * SOAP_FMAC4 soap_in__tmd__GetAudioOutputConfiguration(struct soap*, const char*, _tmd__GetAudioOutputConfiguration *, const char*);
SOAP_FMAC1 _tmd__GetAudioOutputConfiguration * SOAP_FMAC2 soap_instantiate__tmd__GetAudioOutputConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetAudioOutputConfiguration * soap_new__tmd__GetAudioOutputConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetAudioOutputConfiguration(soap, n, NULL, NULL, NULL); }

inline _tmd__GetAudioOutputConfiguration * soap_new_req__tmd__GetAudioOutputConfiguration(
	struct soap *soap,
	const std::string& AudioOutputToken)
{	_tmd__GetAudioOutputConfiguration *_p = soap_new__tmd__GetAudioOutputConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetAudioOutputConfiguration::AudioOutputToken = AudioOutputToken;
	}
	return _p;
}

inline _tmd__GetAudioOutputConfiguration * soap_new_set__tmd__GetAudioOutputConfiguration(
	struct soap *soap,
	const std::string& AudioOutputToken)
{	_tmd__GetAudioOutputConfiguration *_p = soap_new__tmd__GetAudioOutputConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetAudioOutputConfiguration::AudioOutputToken = AudioOutputToken;
	}
	return _p;
}

#ifndef soap_write__tmd__GetAudioOutputConfiguration
#define soap_write__tmd__GetAudioOutputConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetAudioOutputConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetAudioOutputConfiguration * SOAP_FMAC4 soap_get__tmd__GetAudioOutputConfiguration(struct soap*, _tmd__GetAudioOutputConfiguration *, const char*, const char*);

#ifndef soap_read__tmd__GetAudioOutputConfiguration
#define soap_read__tmd__GetAudioOutputConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetAudioOutputConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetAudioSourceConfigurationResponse
#define SOAP_TYPE__tmd__GetAudioSourceConfigurationResponse (97)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetAudioSourceConfigurationResponse(struct soap*, const char*, int, const _tmd__GetAudioSourceConfigurationResponse *, const char*);
SOAP_FMAC3 _tmd__GetAudioSourceConfigurationResponse * SOAP_FMAC4 soap_in__tmd__GetAudioSourceConfigurationResponse(struct soap*, const char*, _tmd__GetAudioSourceConfigurationResponse *, const char*);
SOAP_FMAC1 _tmd__GetAudioSourceConfigurationResponse * SOAP_FMAC2 soap_instantiate__tmd__GetAudioSourceConfigurationResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetAudioSourceConfigurationResponse * soap_new__tmd__GetAudioSourceConfigurationResponse(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetAudioSourceConfigurationResponse(soap, n, NULL, NULL, NULL); }

inline _tmd__GetAudioSourceConfigurationResponse * soap_new_req__tmd__GetAudioSourceConfigurationResponse(
	struct soap *soap,
	tt__AudioSourceConfiguration *AudioSourceConfiguration)
{	_tmd__GetAudioSourceConfigurationResponse *_p = soap_new__tmd__GetAudioSourceConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetAudioSourceConfigurationResponse::AudioSourceConfiguration = AudioSourceConfiguration;
	}
	return _p;
}

inline _tmd__GetAudioSourceConfigurationResponse * soap_new_set__tmd__GetAudioSourceConfigurationResponse(
	struct soap *soap,
	tt__AudioSourceConfiguration *AudioSourceConfiguration)
{	_tmd__GetAudioSourceConfigurationResponse *_p = soap_new__tmd__GetAudioSourceConfigurationResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetAudioSourceConfigurationResponse::AudioSourceConfiguration = AudioSourceConfiguration;
	}
	return _p;
}

#ifndef soap_write__tmd__GetAudioSourceConfigurationResponse
#define soap_write__tmd__GetAudioSourceConfigurationResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetAudioSourceConfigurationResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetAudioSourceConfigurationResponse * SOAP_FMAC4 soap_get__tmd__GetAudioSourceConfigurationResponse(struct soap*, _tmd__GetAudioSourceConfigurationResponse *, const char*, const char*);

#ifndef soap_read__tmd__GetAudioSourceConfigurationResponse
#define soap_read__tmd__GetAudioSourceConfigurationResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetAudioSourceConfigurationResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetAudioSourceConfiguration
#define SOAP_TYPE__tmd__GetAudioSourceConfiguration (96)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetAudioSourceConfiguration(struct soap*, const char*, int, const _tmd__GetAudioSourceConfiguration *, const char*);
SOAP_FMAC3 _tmd__GetAudioSourceConfiguration * SOAP_FMAC4 soap_in__tmd__GetAudioSourceConfiguration(struct soap*, const char*, _tmd__GetAudioSourceConfiguration *, const char*);
SOAP_FMAC1 _tmd__GetAudioSourceConfiguration * SOAP_FMAC2 soap_instantiate__tmd__GetAudioSourceConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetAudioSourceConfiguration * soap_new__tmd__GetAudioSourceConfiguration(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetAudioSourceConfiguration(soap, n, NULL, NULL, NULL); }

inline _tmd__GetAudioSourceConfiguration * soap_new_req__tmd__GetAudioSourceConfiguration(
	struct soap *soap,
	const std::string& AudioSourceToken)
{	_tmd__GetAudioSourceConfiguration *_p = soap_new__tmd__GetAudioSourceConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetAudioSourceConfiguration::AudioSourceToken = AudioSourceToken;
	}
	return _p;
}

inline _tmd__GetAudioSourceConfiguration * soap_new_set__tmd__GetAudioSourceConfiguration(
	struct soap *soap,
	const std::string& AudioSourceToken)
{	_tmd__GetAudioSourceConfiguration *_p = soap_new__tmd__GetAudioSourceConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetAudioSourceConfiguration::AudioSourceToken = AudioSourceToken;
	}
	return _p;
}

#ifndef soap_write__tmd__GetAudioSourceConfiguration
#define soap_write__tmd__GetAudioSourceConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetAudioSourceConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetAudioSourceConfiguration * SOAP_FMAC4 soap_get__tmd__GetAudioSourceConfiguration(struct soap*, _tmd__GetAudioSourceConfiguration *, const char*, const char*);

#ifndef soap_read__tmd__GetAudioSourceConfiguration
#define soap_read__tmd__GetAudioSourceConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetAudioSourceConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetVideoOutputsResponse
#define SOAP_TYPE__tmd__GetVideoOutputsResponse (95)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetVideoOutputsResponse(struct soap*, const char*, int, const _tmd__GetVideoOutputsResponse *, const char*);
SOAP_FMAC3 _tmd__GetVideoOutputsResponse * SOAP_FMAC4 soap_in__tmd__GetVideoOutputsResponse(struct soap*, const char*, _tmd__GetVideoOutputsResponse *, const char*);
SOAP_FMAC1 _tmd__GetVideoOutputsResponse * SOAP_FMAC2 soap_instantiate__tmd__GetVideoOutputsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetVideoOutputsResponse * soap_new__tmd__GetVideoOutputsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetVideoOutputsResponse(soap, n, NULL, NULL, NULL); }

inline _tmd__GetVideoOutputsResponse * soap_new_req__tmd__GetVideoOutputsResponse(
	struct soap *soap)
{	_tmd__GetVideoOutputsResponse *_p = soap_new__tmd__GetVideoOutputsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tmd__GetVideoOutputsResponse * soap_new_set__tmd__GetVideoOutputsResponse(
	struct soap *soap,
	const std::vector<tt__VideoOutput *> & VideoOutputs)
{	_tmd__GetVideoOutputsResponse *_p = soap_new__tmd__GetVideoOutputsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetVideoOutputsResponse::VideoOutputs = VideoOutputs;
	}
	return _p;
}

#ifndef soap_write__tmd__GetVideoOutputsResponse
#define soap_write__tmd__GetVideoOutputsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetVideoOutputsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetVideoOutputsResponse * SOAP_FMAC4 soap_get__tmd__GetVideoOutputsResponse(struct soap*, _tmd__GetVideoOutputsResponse *, const char*, const char*);

#ifndef soap_read__tmd__GetVideoOutputsResponse
#define soap_read__tmd__GetVideoOutputsResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetVideoOutputsResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetVideoOutputs
#define SOAP_TYPE__tmd__GetVideoOutputs (94)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetVideoOutputs(struct soap*, const char*, int, const _tmd__GetVideoOutputs *, const char*);
SOAP_FMAC3 _tmd__GetVideoOutputs * SOAP_FMAC4 soap_in__tmd__GetVideoOutputs(struct soap*, const char*, _tmd__GetVideoOutputs *, const char*);
SOAP_FMAC1 _tmd__GetVideoOutputs * SOAP_FMAC2 soap_instantiate__tmd__GetVideoOutputs(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetVideoOutputs * soap_new__tmd__GetVideoOutputs(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetVideoOutputs(soap, n, NULL, NULL, NULL); }

inline _tmd__GetVideoOutputs * soap_new_req__tmd__GetVideoOutputs(
	struct soap *soap)
{	_tmd__GetVideoOutputs *_p = soap_new__tmd__GetVideoOutputs(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tmd__GetVideoOutputs * soap_new_set__tmd__GetVideoOutputs(
	struct soap *soap)
{	_tmd__GetVideoOutputs *_p = soap_new__tmd__GetVideoOutputs(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tmd__GetVideoOutputs
#define soap_write__tmd__GetVideoOutputs(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetVideoOutputs", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetVideoOutputs * SOAP_FMAC4 soap_get__tmd__GetVideoOutputs(struct soap*, _tmd__GetVideoOutputs *, const char*, const char*);

#ifndef soap_read__tmd__GetVideoOutputs
#define soap_read__tmd__GetVideoOutputs(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetVideoOutputs(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetRelayOutputOptionsResponse
#define SOAP_TYPE__tmd__GetRelayOutputOptionsResponse (93)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetRelayOutputOptionsResponse(struct soap*, const char*, int, const _tmd__GetRelayOutputOptionsResponse *, const char*);
SOAP_FMAC3 _tmd__GetRelayOutputOptionsResponse * SOAP_FMAC4 soap_in__tmd__GetRelayOutputOptionsResponse(struct soap*, const char*, _tmd__GetRelayOutputOptionsResponse *, const char*);
SOAP_FMAC1 _tmd__GetRelayOutputOptionsResponse * SOAP_FMAC2 soap_instantiate__tmd__GetRelayOutputOptionsResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetRelayOutputOptionsResponse * soap_new__tmd__GetRelayOutputOptionsResponse(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetRelayOutputOptionsResponse(soap, n, NULL, NULL, NULL); }

inline _tmd__GetRelayOutputOptionsResponse * soap_new_req__tmd__GetRelayOutputOptionsResponse(
	struct soap *soap)
{	_tmd__GetRelayOutputOptionsResponse *_p = soap_new__tmd__GetRelayOutputOptionsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tmd__GetRelayOutputOptionsResponse * soap_new_set__tmd__GetRelayOutputOptionsResponse(
	struct soap *soap,
	const std::vector<tmd__RelayOutputOptions *> & RelayOutputOptions)
{	_tmd__GetRelayOutputOptionsResponse *_p = soap_new__tmd__GetRelayOutputOptionsResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetRelayOutputOptionsResponse::RelayOutputOptions = RelayOutputOptions;
	}
	return _p;
}

#ifndef soap_write__tmd__GetRelayOutputOptionsResponse
#define soap_write__tmd__GetRelayOutputOptionsResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetRelayOutputOptionsResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetRelayOutputOptionsResponse * SOAP_FMAC4 soap_get__tmd__GetRelayOutputOptionsResponse(struct soap*, _tmd__GetRelayOutputOptionsResponse *, const char*, const char*);

#ifndef soap_read__tmd__GetRelayOutputOptionsResponse
#define soap_read__tmd__GetRelayOutputOptionsResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetRelayOutputOptionsResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetRelayOutputOptions
#define SOAP_TYPE__tmd__GetRelayOutputOptions (92)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetRelayOutputOptions(struct soap*, const char*, int, const _tmd__GetRelayOutputOptions *, const char*);
SOAP_FMAC3 _tmd__GetRelayOutputOptions * SOAP_FMAC4 soap_in__tmd__GetRelayOutputOptions(struct soap*, const char*, _tmd__GetRelayOutputOptions *, const char*);
SOAP_FMAC1 _tmd__GetRelayOutputOptions * SOAP_FMAC2 soap_instantiate__tmd__GetRelayOutputOptions(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetRelayOutputOptions * soap_new__tmd__GetRelayOutputOptions(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetRelayOutputOptions(soap, n, NULL, NULL, NULL); }

inline _tmd__GetRelayOutputOptions * soap_new_req__tmd__GetRelayOutputOptions(
	struct soap *soap)
{	_tmd__GetRelayOutputOptions *_p = soap_new__tmd__GetRelayOutputOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tmd__GetRelayOutputOptions * soap_new_set__tmd__GetRelayOutputOptions(
	struct soap *soap,
	std::string *RelayOutputToken)
{	_tmd__GetRelayOutputOptions *_p = soap_new__tmd__GetRelayOutputOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetRelayOutputOptions::RelayOutputToken = RelayOutputToken;
	}
	return _p;
}

#ifndef soap_write__tmd__GetRelayOutputOptions
#define soap_write__tmd__GetRelayOutputOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetRelayOutputOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetRelayOutputOptions * SOAP_FMAC4 soap_get__tmd__GetRelayOutputOptions(struct soap*, _tmd__GetRelayOutputOptions *, const char*, const char*);

#ifndef soap_read__tmd__GetRelayOutputOptions
#define soap_read__tmd__GetRelayOutputOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetRelayOutputOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetServiceCapabilitiesResponse
#define SOAP_TYPE__tmd__GetServiceCapabilitiesResponse (91)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetServiceCapabilitiesResponse(struct soap*, const char*, int, const _tmd__GetServiceCapabilitiesResponse *, const char*);
SOAP_FMAC3 _tmd__GetServiceCapabilitiesResponse * SOAP_FMAC4 soap_in__tmd__GetServiceCapabilitiesResponse(struct soap*, const char*, _tmd__GetServiceCapabilitiesResponse *, const char*);
SOAP_FMAC1 _tmd__GetServiceCapabilitiesResponse * SOAP_FMAC2 soap_instantiate__tmd__GetServiceCapabilitiesResponse(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetServiceCapabilitiesResponse * soap_new__tmd__GetServiceCapabilitiesResponse(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetServiceCapabilitiesResponse(soap, n, NULL, NULL, NULL); }

inline _tmd__GetServiceCapabilitiesResponse * soap_new_req__tmd__GetServiceCapabilitiesResponse(
	struct soap *soap,
	tmd__Capabilities *Capabilities)
{	_tmd__GetServiceCapabilitiesResponse *_p = soap_new__tmd__GetServiceCapabilitiesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetServiceCapabilitiesResponse::Capabilities = Capabilities;
	}
	return _p;
}

inline _tmd__GetServiceCapabilitiesResponse * soap_new_set__tmd__GetServiceCapabilitiesResponse(
	struct soap *soap,
	tmd__Capabilities *Capabilities)
{	_tmd__GetServiceCapabilitiesResponse *_p = soap_new__tmd__GetServiceCapabilitiesResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->_tmd__GetServiceCapabilitiesResponse::Capabilities = Capabilities;
	}
	return _p;
}

#ifndef soap_write__tmd__GetServiceCapabilitiesResponse
#define soap_write__tmd__GetServiceCapabilitiesResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetServiceCapabilitiesResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetServiceCapabilitiesResponse * SOAP_FMAC4 soap_get__tmd__GetServiceCapabilitiesResponse(struct soap*, _tmd__GetServiceCapabilitiesResponse *, const char*, const char*);

#ifndef soap_read__tmd__GetServiceCapabilitiesResponse
#define soap_read__tmd__GetServiceCapabilitiesResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetServiceCapabilitiesResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tmd__GetServiceCapabilities
#define SOAP_TYPE__tmd__GetServiceCapabilities (90)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__GetServiceCapabilities(struct soap*, const char*, int, const _tmd__GetServiceCapabilities *, const char*);
SOAP_FMAC3 _tmd__GetServiceCapabilities * SOAP_FMAC4 soap_in__tmd__GetServiceCapabilities(struct soap*, const char*, _tmd__GetServiceCapabilities *, const char*);
SOAP_FMAC1 _tmd__GetServiceCapabilities * SOAP_FMAC2 soap_instantiate__tmd__GetServiceCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline _tmd__GetServiceCapabilities * soap_new__tmd__GetServiceCapabilities(struct soap *soap, int n = -1) { return soap_instantiate__tmd__GetServiceCapabilities(soap, n, NULL, NULL, NULL); }

inline _tmd__GetServiceCapabilities * soap_new_req__tmd__GetServiceCapabilities(
	struct soap *soap)
{	_tmd__GetServiceCapabilities *_p = soap_new__tmd__GetServiceCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline _tmd__GetServiceCapabilities * soap_new_set__tmd__GetServiceCapabilities(
	struct soap *soap)
{	_tmd__GetServiceCapabilities *_p = soap_new__tmd__GetServiceCapabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write__tmd__GetServiceCapabilities
#define soap_write__tmd__GetServiceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetServiceCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetServiceCapabilities * SOAP_FMAC4 soap_get__tmd__GetServiceCapabilities(struct soap*, _tmd__GetServiceCapabilities *, const char*, const char*);

#ifndef soap_read__tmd__GetServiceCapabilities
#define soap_read__tmd__GetServiceCapabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get__tmd__GetServiceCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tmd__ParityBitList
#define SOAP_TYPE_tmd__ParityBitList (89)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tmd__ParityBitList(struct soap*, const char*, int, const tmd__ParityBitList *, const char*);
SOAP_FMAC3 tmd__ParityBitList * SOAP_FMAC4 soap_in_tmd__ParityBitList(struct soap*, const char*, tmd__ParityBitList *, const char*);
SOAP_FMAC1 tmd__ParityBitList * SOAP_FMAC2 soap_instantiate_tmd__ParityBitList(struct soap*, int, const char*, const char*, size_t*);

inline tmd__ParityBitList * soap_new_tmd__ParityBitList(struct soap *soap, int n = -1) { return soap_instantiate_tmd__ParityBitList(soap, n, NULL, NULL, NULL); }

inline tmd__ParityBitList * soap_new_req_tmd__ParityBitList(
	struct soap *soap)
{	tmd__ParityBitList *_p = soap_new_tmd__ParityBitList(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tmd__ParityBitList * soap_new_set_tmd__ParityBitList(
	struct soap *soap,
	const std::vector<enum tmd__ParityBit> & Items)
{	tmd__ParityBitList *_p = soap_new_tmd__ParityBitList(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tmd__ParityBitList::Items = Items;
	}
	return _p;
}

#ifndef soap_write_tmd__ParityBitList
#define soap_write_tmd__ParityBitList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:ParityBitList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tmd__ParityBitList * SOAP_FMAC4 soap_get_tmd__ParityBitList(struct soap*, tmd__ParityBitList *, const char*, const char*);

#ifndef soap_read_tmd__ParityBitList
#define soap_read_tmd__ParityBitList(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tmd__ParityBitList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tmd__SerialPortConfigurationOptions
#define SOAP_TYPE_tmd__SerialPortConfigurationOptions (88)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tmd__SerialPortConfigurationOptions(struct soap*, const char*, int, const tmd__SerialPortConfigurationOptions *, const char*);
SOAP_FMAC3 tmd__SerialPortConfigurationOptions * SOAP_FMAC4 soap_in_tmd__SerialPortConfigurationOptions(struct soap*, const char*, tmd__SerialPortConfigurationOptions *, const char*);
SOAP_FMAC1 tmd__SerialPortConfigurationOptions * SOAP_FMAC2 soap_instantiate_tmd__SerialPortConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tmd__SerialPortConfigurationOptions * soap_new_tmd__SerialPortConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tmd__SerialPortConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline tmd__SerialPortConfigurationOptions * soap_new_req_tmd__SerialPortConfigurationOptions(
	struct soap *soap,
	tt__IntList *BaudRateList,
	tmd__ParityBitList *ParityBitList,
	tt__IntList *CharacterLengthList,
	tt__FloatList *StopBitList,
	const std::string& token)
{	tmd__SerialPortConfigurationOptions *_p = soap_new_tmd__SerialPortConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tmd__SerialPortConfigurationOptions::BaudRateList = BaudRateList;
		_p->tmd__SerialPortConfigurationOptions::ParityBitList = ParityBitList;
		_p->tmd__SerialPortConfigurationOptions::CharacterLengthList = CharacterLengthList;
		_p->tmd__SerialPortConfigurationOptions::StopBitList = StopBitList;
		_p->tmd__SerialPortConfigurationOptions::token = token;
	}
	return _p;
}

inline tmd__SerialPortConfigurationOptions * soap_new_set_tmd__SerialPortConfigurationOptions(
	struct soap *soap,
	tt__IntList *BaudRateList,
	tmd__ParityBitList *ParityBitList,
	tt__IntList *CharacterLengthList,
	tt__FloatList *StopBitList,
	const std::string& token)
{	tmd__SerialPortConfigurationOptions *_p = soap_new_tmd__SerialPortConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tmd__SerialPortConfigurationOptions::BaudRateList = BaudRateList;
		_p->tmd__SerialPortConfigurationOptions::ParityBitList = ParityBitList;
		_p->tmd__SerialPortConfigurationOptions::CharacterLengthList = CharacterLengthList;
		_p->tmd__SerialPortConfigurationOptions::StopBitList = StopBitList;
		_p->tmd__SerialPortConfigurationOptions::token = token;
	}
	return _p;
}

#ifndef soap_write_tmd__SerialPortConfigurationOptions
#define soap_write_tmd__SerialPortConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:SerialPortConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tmd__SerialPortConfigurationOptions * SOAP_FMAC4 soap_get_tmd__SerialPortConfigurationOptions(struct soap*, tmd__SerialPortConfigurationOptions *, const char*, const char*);

#ifndef soap_read_tmd__SerialPortConfigurationOptions
#define soap_read_tmd__SerialPortConfigurationOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tmd__SerialPortConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tmd__SerialPortConfiguration
#define SOAP_TYPE_tmd__SerialPortConfiguration (87)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tmd__SerialPortConfiguration(struct soap*, const char*, int, const tmd__SerialPortConfiguration *, const char*);
SOAP_FMAC3 tmd__SerialPortConfiguration * SOAP_FMAC4 soap_in_tmd__SerialPortConfiguration(struct soap*, const char*, tmd__SerialPortConfiguration *, const char*);
SOAP_FMAC1 tmd__SerialPortConfiguration * SOAP_FMAC2 soap_instantiate_tmd__SerialPortConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline tmd__SerialPortConfiguration * soap_new_tmd__SerialPortConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_tmd__SerialPortConfiguration(soap, n, NULL, NULL, NULL); }

inline tmd__SerialPortConfiguration * soap_new_req_tmd__SerialPortConfiguration(
	struct soap *soap,
	int BaudRate,
	enum tmd__ParityBit ParityBit,
	int CharacterLength,
	float StopBit,
	const std::string& token,
	enum tmd__SerialPortType type)
{	tmd__SerialPortConfiguration *_p = soap_new_tmd__SerialPortConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tmd__SerialPortConfiguration::BaudRate = BaudRate;
		_p->tmd__SerialPortConfiguration::ParityBit = ParityBit;
		_p->tmd__SerialPortConfiguration::CharacterLength = CharacterLength;
		_p->tmd__SerialPortConfiguration::StopBit = StopBit;
		_p->tmd__SerialPortConfiguration::token = token;
		_p->tmd__SerialPortConfiguration::type = type;
	}
	return _p;
}

inline tmd__SerialPortConfiguration * soap_new_set_tmd__SerialPortConfiguration(
	struct soap *soap,
	int BaudRate,
	enum tmd__ParityBit ParityBit,
	int CharacterLength,
	float StopBit,
	const std::string& token,
	enum tmd__SerialPortType type)
{	tmd__SerialPortConfiguration *_p = soap_new_tmd__SerialPortConfiguration(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tmd__SerialPortConfiguration::BaudRate = BaudRate;
		_p->tmd__SerialPortConfiguration::ParityBit = ParityBit;
		_p->tmd__SerialPortConfiguration::CharacterLength = CharacterLength;
		_p->tmd__SerialPortConfiguration::StopBit = StopBit;
		_p->tmd__SerialPortConfiguration::token = token;
		_p->tmd__SerialPortConfiguration::type = type;
	}
	return _p;
}

#ifndef soap_write_tmd__SerialPortConfiguration
#define soap_write_tmd__SerialPortConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:SerialPortConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tmd__SerialPortConfiguration * SOAP_FMAC4 soap_get_tmd__SerialPortConfiguration(struct soap*, tmd__SerialPortConfiguration *, const char*, const char*);

#ifndef soap_read_tmd__SerialPortConfiguration
#define soap_read_tmd__SerialPortConfiguration(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tmd__SerialPortConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tmd__SerialPort
#define SOAP_TYPE_tmd__SerialPort (86)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tmd__SerialPort(struct soap*, const char*, int, const tmd__SerialPort *, const char*);
SOAP_FMAC3 tmd__SerialPort * SOAP_FMAC4 soap_in_tmd__SerialPort(struct soap*, const char*, tmd__SerialPort *, const char*);
SOAP_FMAC1 tmd__SerialPort * SOAP_FMAC2 soap_instantiate_tmd__SerialPort(struct soap*, int, const char*, const char*, size_t*);

inline tmd__SerialPort * soap_new_tmd__SerialPort(struct soap *soap, int n = -1) { return soap_instantiate_tmd__SerialPort(soap, n, NULL, NULL, NULL); }

inline tmd__SerialPort * soap_new_req_tmd__SerialPort(
	struct soap *soap,
	const std::string& token1)
{	tmd__SerialPort *_p = soap_new_tmd__SerialPort(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__DeviceEntity::token = token1;
	}
	return _p;
}

inline tmd__SerialPort * soap_new_set_tmd__SerialPort(
	struct soap *soap,
	const std::string& token1)
{	tmd__SerialPort *_p = soap_new_tmd__SerialPort(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tt__DeviceEntity::token = token1;
	}
	return _p;
}

#ifndef soap_write_tmd__SerialPort
#define soap_write_tmd__SerialPort(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:SerialPort", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tmd__SerialPort * SOAP_FMAC4 soap_get_tmd__SerialPort(struct soap*, tmd__SerialPort *, const char*, const char*);

#ifndef soap_read_tmd__SerialPort
#define soap_read_tmd__SerialPort(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tmd__SerialPort(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tmd__SerialData
#define SOAP_TYPE_tmd__SerialData (85)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tmd__SerialData(struct soap*, const char*, int, const tmd__SerialData *, const char*);
SOAP_FMAC3 tmd__SerialData * SOAP_FMAC4 soap_in_tmd__SerialData(struct soap*, const char*, tmd__SerialData *, const char*);
SOAP_FMAC1 tmd__SerialData * SOAP_FMAC2 soap_instantiate_tmd__SerialData(struct soap*, int, const char*, const char*, size_t*);

inline tmd__SerialData * soap_new_tmd__SerialData(struct soap *soap, int n = -1) { return soap_instantiate_tmd__SerialData(soap, n, NULL, NULL, NULL); }

inline tmd__SerialData * soap_new_req_tmd__SerialData(
	struct soap *soap,
	int __union_SerialData,
	const union _tmd__union_SerialData& union_SerialData)
{	tmd__SerialData *_p = soap_new_tmd__SerialData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tmd__SerialData::__union_SerialData = __union_SerialData;
		_p->tmd__SerialData::union_SerialData = union_SerialData;
	}
	return _p;
}

inline tmd__SerialData * soap_new_set_tmd__SerialData(
	struct soap *soap,
	int __union_SerialData,
	const union _tmd__union_SerialData& union_SerialData)
{	tmd__SerialData *_p = soap_new_tmd__SerialData(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tmd__SerialData::__union_SerialData = __union_SerialData;
		_p->tmd__SerialData::union_SerialData = union_SerialData;
	}
	return _p;
}

#ifndef soap_write_tmd__SerialData
#define soap_write_tmd__SerialData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:SerialData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tmd__SerialData * SOAP_FMAC4 soap_get_tmd__SerialData(struct soap*, tmd__SerialData *, const char*, const char*);

#ifndef soap_read_tmd__SerialData
#define soap_read_tmd__SerialData(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tmd__SerialData(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tmd__DigitalInputConfigurationOptions
#define SOAP_TYPE_tmd__DigitalInputConfigurationOptions (84)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tmd__DigitalInputConfigurationOptions(struct soap*, const char*, int, const tmd__DigitalInputConfigurationOptions *, const char*);
SOAP_FMAC3 tmd__DigitalInputConfigurationOptions * SOAP_FMAC4 soap_in_tmd__DigitalInputConfigurationOptions(struct soap*, const char*, tmd__DigitalInputConfigurationOptions *, const char*);
SOAP_FMAC1 tmd__DigitalInputConfigurationOptions * SOAP_FMAC2 soap_instantiate_tmd__DigitalInputConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline tmd__DigitalInputConfigurationOptions * soap_new_tmd__DigitalInputConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate_tmd__DigitalInputConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline tmd__DigitalInputConfigurationOptions * soap_new_req_tmd__DigitalInputConfigurationOptions(
	struct soap *soap,
	const std::vector<enum tt__DigitalIdleState> & IdleState)
{	tmd__DigitalInputConfigurationOptions *_p = soap_new_tmd__DigitalInputConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tmd__DigitalInputConfigurationOptions::IdleState = IdleState;
	}
	return _p;
}

inline tmd__DigitalInputConfigurationOptions * soap_new_set_tmd__DigitalInputConfigurationOptions(
	struct soap *soap,
	const std::vector<enum tt__DigitalIdleState> & IdleState)
{	tmd__DigitalInputConfigurationOptions *_p = soap_new_tmd__DigitalInputConfigurationOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tmd__DigitalInputConfigurationOptions::IdleState = IdleState;
	}
	return _p;
}

#ifndef soap_write_tmd__DigitalInputConfigurationOptions
#define soap_write_tmd__DigitalInputConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:DigitalInputConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tmd__DigitalInputConfigurationOptions * SOAP_FMAC4 soap_get_tmd__DigitalInputConfigurationOptions(struct soap*, tmd__DigitalInputConfigurationOptions *, const char*, const char*);

#ifndef soap_read_tmd__DigitalInputConfigurationOptions
#define soap_read_tmd__DigitalInputConfigurationOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tmd__DigitalInputConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tmd__GetResponse
#define SOAP_TYPE_tmd__GetResponse (83)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tmd__GetResponse(struct soap*, const char*, int, const tmd__GetResponse *, const char*);
SOAP_FMAC3 tmd__GetResponse * SOAP_FMAC4 soap_in_tmd__GetResponse(struct soap*, const char*, tmd__GetResponse *, const char*);
SOAP_FMAC1 tmd__GetResponse * SOAP_FMAC2 soap_instantiate_tmd__GetResponse(struct soap*, int, const char*, const char*, size_t*);

inline tmd__GetResponse * soap_new_tmd__GetResponse(struct soap *soap, int n = -1) { return soap_instantiate_tmd__GetResponse(soap, n, NULL, NULL, NULL); }

inline tmd__GetResponse * soap_new_req_tmd__GetResponse(
	struct soap *soap)
{	tmd__GetResponse *_p = soap_new_tmd__GetResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tmd__GetResponse * soap_new_set_tmd__GetResponse(
	struct soap *soap,
	const std::vector<std::string> & Token)
{	tmd__GetResponse *_p = soap_new_tmd__GetResponse(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tmd__GetResponse::Token = Token;
	}
	return _p;
}

#ifndef soap_write_tmd__GetResponse
#define soap_write_tmd__GetResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:GetResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tmd__GetResponse * SOAP_FMAC4 soap_get_tmd__GetResponse(struct soap*, tmd__GetResponse *, const char*, const char*);

#ifndef soap_read_tmd__GetResponse
#define soap_read_tmd__GetResponse(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tmd__GetResponse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tmd__Get
#define SOAP_TYPE_tmd__Get (82)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tmd__Get(struct soap*, const char*, int, const tmd__Get *, const char*);
SOAP_FMAC3 tmd__Get * SOAP_FMAC4 soap_in_tmd__Get(struct soap*, const char*, tmd__Get *, const char*);
SOAP_FMAC1 tmd__Get * SOAP_FMAC2 soap_instantiate_tmd__Get(struct soap*, int, const char*, const char*, size_t*);

inline tmd__Get * soap_new_tmd__Get(struct soap *soap, int n = -1) { return soap_instantiate_tmd__Get(soap, n, NULL, NULL, NULL); }

inline tmd__Get * soap_new_req_tmd__Get(
	struct soap *soap)
{	tmd__Get *_p = soap_new_tmd__Get(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tmd__Get * soap_new_set_tmd__Get(
	struct soap *soap)
{	tmd__Get *_p = soap_new_tmd__Get(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tmd__Get
#define soap_write_tmd__Get(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:Get", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tmd__Get * SOAP_FMAC4 soap_get_tmd__Get(struct soap*, tmd__Get *, const char*, const char*);

#ifndef soap_read_tmd__Get
#define soap_read_tmd__Get(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tmd__Get(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tmd__RelayOutputOptionsExtension
#define SOAP_TYPE_tmd__RelayOutputOptionsExtension (81)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tmd__RelayOutputOptionsExtension(struct soap*, const char*, int, const tmd__RelayOutputOptionsExtension *, const char*);
SOAP_FMAC3 tmd__RelayOutputOptionsExtension * SOAP_FMAC4 soap_in_tmd__RelayOutputOptionsExtension(struct soap*, const char*, tmd__RelayOutputOptionsExtension *, const char*);
SOAP_FMAC1 tmd__RelayOutputOptionsExtension * SOAP_FMAC2 soap_instantiate_tmd__RelayOutputOptionsExtension(struct soap*, int, const char*, const char*, size_t*);

inline tmd__RelayOutputOptionsExtension * soap_new_tmd__RelayOutputOptionsExtension(struct soap *soap, int n = -1) { return soap_instantiate_tmd__RelayOutputOptionsExtension(soap, n, NULL, NULL, NULL); }

inline tmd__RelayOutputOptionsExtension * soap_new_req_tmd__RelayOutputOptionsExtension(
	struct soap *soap)
{	tmd__RelayOutputOptionsExtension *_p = soap_new_tmd__RelayOutputOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tmd__RelayOutputOptionsExtension * soap_new_set_tmd__RelayOutputOptionsExtension(
	struct soap *soap)
{	tmd__RelayOutputOptionsExtension *_p = soap_new_tmd__RelayOutputOptionsExtension(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

#ifndef soap_write_tmd__RelayOutputOptionsExtension
#define soap_write_tmd__RelayOutputOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:RelayOutputOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tmd__RelayOutputOptionsExtension * SOAP_FMAC4 soap_get_tmd__RelayOutputOptionsExtension(struct soap*, tmd__RelayOutputOptionsExtension *, const char*, const char*);

#ifndef soap_read_tmd__RelayOutputOptionsExtension
#define soap_read_tmd__RelayOutputOptionsExtension(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tmd__RelayOutputOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tmd__RelayOutputOptions
#define SOAP_TYPE_tmd__RelayOutputOptions (80)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tmd__RelayOutputOptions(struct soap*, const char*, int, const tmd__RelayOutputOptions *, const char*);
SOAP_FMAC3 tmd__RelayOutputOptions * SOAP_FMAC4 soap_in_tmd__RelayOutputOptions(struct soap*, const char*, tmd__RelayOutputOptions *, const char*);
SOAP_FMAC1 tmd__RelayOutputOptions * SOAP_FMAC2 soap_instantiate_tmd__RelayOutputOptions(struct soap*, int, const char*, const char*, size_t*);

inline tmd__RelayOutputOptions * soap_new_tmd__RelayOutputOptions(struct soap *soap, int n = -1) { return soap_instantiate_tmd__RelayOutputOptions(soap, n, NULL, NULL, NULL); }

inline tmd__RelayOutputOptions * soap_new_req_tmd__RelayOutputOptions(
	struct soap *soap,
	const std::vector<enum tt__RelayMode> & Mode,
	const std::string& token)
{	tmd__RelayOutputOptions *_p = soap_new_tmd__RelayOutputOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tmd__RelayOutputOptions::Mode = Mode;
		_p->tmd__RelayOutputOptions::token = token;
	}
	return _p;
}

inline tmd__RelayOutputOptions * soap_new_set_tmd__RelayOutputOptions(
	struct soap *soap,
	const std::vector<enum tt__RelayMode> & Mode,
	std::string *DelayTimes,
	bool *Discrete,
	tmd__RelayOutputOptionsExtension *Extension,
	const std::string& token)
{	tmd__RelayOutputOptions *_p = soap_new_tmd__RelayOutputOptions(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tmd__RelayOutputOptions::Mode = Mode;
		_p->tmd__RelayOutputOptions::DelayTimes = DelayTimes;
		_p->tmd__RelayOutputOptions::Discrete = Discrete;
		_p->tmd__RelayOutputOptions::Extension = Extension;
		_p->tmd__RelayOutputOptions::token = token;
	}
	return _p;
}

#ifndef soap_write_tmd__RelayOutputOptions
#define soap_write_tmd__RelayOutputOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:RelayOutputOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tmd__RelayOutputOptions * SOAP_FMAC4 soap_get_tmd__RelayOutputOptions(struct soap*, tmd__RelayOutputOptions *, const char*, const char*);

#ifndef soap_read_tmd__RelayOutputOptions
#define soap_read_tmd__RelayOutputOptions(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tmd__RelayOutputOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_tmd__Capabilities
#define SOAP_TYPE_tmd__Capabilities (79)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_tmd__Capabilities(struct soap*, const char*, int, const tmd__Capabilities *, const char*);
SOAP_FMAC3 tmd__Capabilities * SOAP_FMAC4 soap_in_tmd__Capabilities(struct soap*, const char*, tmd__Capabilities *, const char*);
SOAP_FMAC1 tmd__Capabilities * SOAP_FMAC2 soap_instantiate_tmd__Capabilities(struct soap*, int, const char*, const char*, size_t*);

inline tmd__Capabilities * soap_new_tmd__Capabilities(struct soap *soap, int n = -1) { return soap_instantiate_tmd__Capabilities(soap, n, NULL, NULL, NULL); }

inline tmd__Capabilities * soap_new_req_tmd__Capabilities(
	struct soap *soap)
{	tmd__Capabilities *_p = soap_new_tmd__Capabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline tmd__Capabilities * soap_new_set_tmd__Capabilities(
	struct soap *soap,
	int VideoSources,
	int VideoOutputs,
	int AudioSources,
	int AudioOutputs,
	int RelayOutputs,
	int SerialPorts,
	int DigitalInputs,
	bool DigitalInputOptions)
{	tmd__Capabilities *_p = soap_new_tmd__Capabilities(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->tmd__Capabilities::VideoSources = VideoSources;
		_p->tmd__Capabilities::VideoOutputs = VideoOutputs;
		_p->tmd__Capabilities::AudioSources = AudioSources;
		_p->tmd__Capabilities::AudioOutputs = AudioOutputs;
		_p->tmd__Capabilities::RelayOutputs = RelayOutputs;
		_p->tmd__Capabilities::SerialPorts = SerialPorts;
		_p->tmd__Capabilities::DigitalInputs = DigitalInputs;
		_p->tmd__Capabilities::DigitalInputOptions = DigitalInputOptions;
	}
	return _p;
}

#ifndef soap_write_tmd__Capabilities
#define soap_write_tmd__Capabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "tmd:Capabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tmd__Capabilities * SOAP_FMAC4 soap_get_tmd__Capabilities(struct soap*, tmd__Capabilities *, const char*, const char*);

#ifndef soap_read_tmd__Capabilities
#define soap_read_tmd__Capabilities(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_tmd__Capabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

/* _xml__lang is a typedef synonym for std__string */

#ifndef SOAP_TYPE__xml__lang
#define SOAP_TYPE__xml__lang (78)
#endif

#define soap_default__xml__lang(soap, a) soap_default_std__string(soap, a)


#define soap_serialize__xml__lang soap_serialize_std__string


#define soap__xml__lang2s soap_std__string2s


#define soap_out__xml__lang soap_out_std__string


#define soap_s2_xml__lang soap_s2std__string


#define soap_in__xml__lang soap_in_std__string


#define soap_instantiate__xml__lang soap_instantiate_std__string


#define soap_new__xml__lang soap_new_std__string


#define soap_put__xml__lang soap_put_std__string


#define soap_write__xml__lang soap_write_std__string


#define soap_get__xml__lang soap_get_std__string


#define soap_read__xml__lang soap_read_std__string


#ifndef SOAP_TYPE_xsd__token
#define SOAP_TYPE_xsd__token (77)
#endif

#define soap_default_xsd__token(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__token(struct soap*, const std::string *);

#define soap_xsd__token2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__token(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2xsd__token soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__token(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_xsd__token soap_instantiate_std__string


#define soap_new_xsd__token soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__token(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__token
#define soap_write_xsd__token(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__token(soap, data), 0) || soap_put_xsd__token(soap, data, "xsd:token", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__token(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__token
#define soap_read_xsd__token(soap, data) ( ((data) ? (soap_default_xsd__token(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__token(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__nonNegativeInteger
#define SOAP_TYPE_xsd__nonNegativeInteger (76)
#endif

#define soap_default_xsd__nonNegativeInteger(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__nonNegativeInteger(struct soap*, const std::string *);

#define soap_xsd__nonNegativeInteger2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__nonNegativeInteger(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2xsd__nonNegativeInteger soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__nonNegativeInteger(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_xsd__nonNegativeInteger soap_instantiate_std__string


#define soap_new_xsd__nonNegativeInteger soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__nonNegativeInteger(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__nonNegativeInteger
#define soap_write_xsd__nonNegativeInteger(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__nonNegativeInteger(soap, data), 0) || soap_put_xsd__nonNegativeInteger(soap, data, "xsd:nonNegativeInteger", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__nonNegativeInteger(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__nonNegativeInteger
#define soap_read_xsd__nonNegativeInteger(soap, data) ( ((data) ? (soap_default_xsd__nonNegativeInteger(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__nonNegativeInteger(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__integer
#define SOAP_TYPE_xsd__integer (75)
#endif

#define soap_default_xsd__integer(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__integer(struct soap*, const std::string *);

#define soap_xsd__integer2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__integer(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2xsd__integer soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__integer(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_xsd__integer soap_instantiate_std__string


#define soap_new_xsd__integer soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__integer(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__integer
#define soap_write_xsd__integer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__integer(soap, data), 0) || soap_put_xsd__integer(soap, data, "xsd:integer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__integer(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__integer
#define soap_read_xsd__integer(soap, data) ( ((data) ? (soap_default_xsd__integer(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__integer(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__anyURI
#define SOAP_TYPE_xsd__anyURI (74)
#endif

#define soap_default_xsd__anyURI(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__anyURI(struct soap*, const std::string *);

#define soap_xsd__anyURI2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__anyURI(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2xsd__anyURI soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__anyURI(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_xsd__anyURI soap_instantiate_std__string


#define soap_new_xsd__anyURI soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__anyURI(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__anyURI
#define soap_write_xsd__anyURI(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__anyURI(soap, data), 0) || soap_put_xsd__anyURI(soap, data, "xsd:anyURI", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__anyURI(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__anyURI
#define soap_read_xsd__anyURI(soap, data) ( ((data) ? (soap_default_xsd__anyURI(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__anyURI(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__anySimpleType
#define SOAP_TYPE_xsd__anySimpleType (73)
#endif

#define soap_default_xsd__anySimpleType(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__anySimpleType(struct soap*, const std::string *);

#define soap_xsd__anySimpleType2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__anySimpleType(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2xsd__anySimpleType soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__anySimpleType(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_xsd__anySimpleType soap_instantiate_std__string


#define soap_new_xsd__anySimpleType soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__anySimpleType(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__anySimpleType
#define soap_write_xsd__anySimpleType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__anySimpleType(soap, data), 0) || soap_put_xsd__anySimpleType(soap, data, "xsd:anySimpleType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__anySimpleType(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__anySimpleType
#define soap_read_xsd__anySimpleType(soap, data) ( ((data) ? (soap_default_xsd__anySimpleType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__anySimpleType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__NCName
#define SOAP_TYPE_xsd__NCName (72)
#endif

#define soap_default_xsd__NCName(soap, a) soap_default_std__string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__NCName(struct soap*, const std::string *);

#define soap_xsd__NCName2s soap_std__string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__NCName(struct soap*, const char*, int, const std::string*, const char*);

#define soap_s2xsd__NCName soap_s2std__string

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__NCName(struct soap*, const char*, std::string*, const char*);

#define soap_instantiate_xsd__NCName soap_instantiate_std__string


#define soap_new_xsd__NCName soap_new_std__string

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__NCName(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__NCName
#define soap_write_xsd__NCName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__NCName(soap, data), 0) || soap_put_xsd__NCName(soap, data, "xsd:NCName", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__NCName(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__NCName
#define soap_read_xsd__NCName(soap, data) ( ((data) ? (soap_default_xsd__NCName(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__NCName(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__hexBinary
#define SOAP_TYPE_xsd__hexBinary (71)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__hexBinary(struct soap*, const char*, int, const xsd__hexBinary *, const char*);
SOAP_FMAC3 xsd__hexBinary * SOAP_FMAC4 soap_in_xsd__hexBinary(struct soap*, const char*, xsd__hexBinary *, const char*);
SOAP_FMAC1 xsd__hexBinary * SOAP_FMAC2 soap_instantiate_xsd__hexBinary(struct soap*, int, const char*, const char*, size_t*);

inline xsd__hexBinary * soap_new_xsd__hexBinary(struct soap *soap, int n = -1) { return soap_instantiate_xsd__hexBinary(soap, n, NULL, NULL, NULL); }

inline xsd__hexBinary * soap_new_req_xsd__hexBinary(
	struct soap *soap)
{	xsd__hexBinary *_p = soap_new_xsd__hexBinary(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline xsd__hexBinary * soap_new_set_xsd__hexBinary(
	struct soap *soap,
	unsigned char *__ptr,
	int __size)
{	xsd__hexBinary *_p = soap_new_xsd__hexBinary(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->xsd__hexBinary::__ptr = __ptr;
		_p->xsd__hexBinary::__size = __size;
	}
	return _p;
}

#ifndef soap_write_xsd__hexBinary
#define soap_write_xsd__hexBinary(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xsd:hexBinary", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__hexBinary * SOAP_FMAC4 soap_get_xsd__hexBinary(struct soap*, xsd__hexBinary *, const char*, const char*);

#ifndef soap_read_xsd__hexBinary
#define soap_read_xsd__hexBinary(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__hexBinary(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (66)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__base64Binary(struct soap*, const char*, int, const xsd__base64Binary *, const char*);
SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_in_xsd__base64Binary(struct soap*, const char*, xsd__base64Binary *, const char*);
SOAP_FMAC1 xsd__base64Binary * SOAP_FMAC2 soap_instantiate_xsd__base64Binary(struct soap*, int, const char*, const char*, size_t*);

inline xsd__base64Binary * soap_new_xsd__base64Binary(struct soap *soap, int n = -1) { return soap_instantiate_xsd__base64Binary(soap, n, NULL, NULL, NULL); }

inline xsd__base64Binary * soap_new_req_xsd__base64Binary(
	struct soap *soap)
{	xsd__base64Binary *_p = soap_new_xsd__base64Binary(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline xsd__base64Binary * soap_new_set_xsd__base64Binary(
	struct soap *soap,
	unsigned char *__ptr,
	int __size,
	char *id,
	char *type,
	char *options)
{	xsd__base64Binary *_p = soap_new_xsd__base64Binary(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->xsd__base64Binary::__ptr = __ptr;
		_p->xsd__base64Binary::__size = __size;
		_p->xsd__base64Binary::id = id;
		_p->xsd__base64Binary::type = type;
		_p->xsd__base64Binary::options = options;
	}
	return _p;
}

#ifndef soap_write_xsd__base64Binary
#define soap_write_xsd__base64Binary(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xsd:base64Binary", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__base64Binary * SOAP_FMAC4 soap_get_xsd__base64Binary(struct soap*, xsd__base64Binary *, const char*, const char*);

#ifndef soap_read_xsd__base64Binary
#define soap_read_xsd__base64Binary(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__base64Binary(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__QName
#define SOAP_TYPE_xsd__QName (65)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xsd__QName(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xsd__QName(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__QName(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_xsd__QName(struct soap*, const char*, std::string*, const char*);
SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_xsd__QName(struct soap*, int, const char*, const char*, size_t*);

inline std::string * soap_new_xsd__QName(struct soap *soap, int n = -1) { return soap_instantiate_xsd__QName(soap, n, NULL, NULL, NULL); }

inline std::string * soap_new_req_xsd__QName(
	struct soap *soap)
{	std::string *_p = soap_new_xsd__QName(soap);
	if (_p)
	{	soap_default_xsd__QName(soap, _p);
	}
	return _p;
}

inline std::string * soap_new_set_xsd__QName(
	struct soap *soap)
{	std::string *_p = soap_new_xsd__QName(soap);
	if (_p)
	{	soap_default_xsd__QName(soap, _p);
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__QName(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_xsd__QName
#define soap_write_xsd__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_xsd__QName(soap, data), 0) || soap_put_xsd__QName(soap, data, "xsd:QName", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_xsd__QName(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_xsd__QName
#define soap_read_xsd__QName(soap, data) ( ((data) ? (soap_default_xsd__QName(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__QName(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (64)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);
SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);

inline std::string * soap_new_std__string(struct soap *soap, int n = -1) { return soap_instantiate_std__string(soap, n, NULL, NULL, NULL); }

inline std::string * soap_new_req_std__string(
	struct soap *soap)
{	std::string *_p = soap_new_std__string(soap);
	if (_p)
	{	soap_default_std__string(soap, _p);
	}
	return _p;
}

inline std::string * soap_new_set_std__string(
	struct soap *soap)
{	std::string *_p = soap_new_std__string(soap);
	if (_p)
	{	soap_default_std__string(soap, _p);
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_std__string(soap, data), 0) || soap_put_std__string(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data) ( ((data) ? (soap_default_std__string(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_std__string(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_xsd__anyType
#define SOAP_TYPE_xsd__anyType (60)
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__anyType(struct soap*, const char*, int, const xsd__anyType *, const char*);
SOAP_FMAC3 xsd__anyType * SOAP_FMAC4 soap_in_xsd__anyType(struct soap*, const char*, xsd__anyType *, const char*);
SOAP_FMAC1 xsd__anyType * SOAP_FMAC2 soap_instantiate_xsd__anyType(struct soap*, int, const char*, const char*, size_t*);

inline xsd__anyType * soap_new_xsd__anyType(struct soap *soap, int n = -1) { return soap_instantiate_xsd__anyType(soap, n, NULL, NULL, NULL); }

inline xsd__anyType * soap_new_req_xsd__anyType(
	struct soap *soap)
{	xsd__anyType *_p = soap_new_xsd__anyType(soap);
	if (_p)
	{	_p->soap_default(soap);
	}
	return _p;
}

inline xsd__anyType * soap_new_set_xsd__anyType(
	struct soap *soap,
	char *__item)
{	xsd__anyType *_p = soap_new_xsd__anyType(soap);
	if (_p)
	{	_p->soap_default(soap);
		_p->xsd__anyType::__item = __item;
	}
	return _p;
}

#ifndef soap_write_xsd__anyType
#define soap_write_xsd__anyType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xsd:anyType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__anyType * SOAP_FMAC4 soap_get_xsd__anyType(struct soap*, xsd__anyType *, const char*, const char*);

#ifndef soap_read_xsd__anyType
#define soap_read_xsd__anyType(soap, data) ( ((data) ? ((data)->soap_default(soap), 0) : 0) || soap_begin_recv(soap) || !soap_get_xsd__anyType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tmd__SendReceiveSerialCommand
#define SOAP_TYPE___tmd__SendReceiveSerialCommand (2088)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tmd__SendReceiveSerialCommand(struct soap*, struct __tmd__SendReceiveSerialCommand *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tmd__SendReceiveSerialCommand(struct soap*, const struct __tmd__SendReceiveSerialCommand *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tmd__SendReceiveSerialCommand(struct soap*, const char*, int, const struct __tmd__SendReceiveSerialCommand *, const char*);
SOAP_FMAC3 struct __tmd__SendReceiveSerialCommand * SOAP_FMAC4 soap_in___tmd__SendReceiveSerialCommand(struct soap*, const char*, struct __tmd__SendReceiveSerialCommand *, const char*);
SOAP_FMAC1 struct __tmd__SendReceiveSerialCommand * SOAP_FMAC2 soap_instantiate___tmd__SendReceiveSerialCommand(struct soap*, int, const char*, const char*, size_t*);

inline struct __tmd__SendReceiveSerialCommand * soap_new___tmd__SendReceiveSerialCommand(struct soap *soap, int n = -1) { return soap_instantiate___tmd__SendReceiveSerialCommand(soap, n, NULL, NULL, NULL); }

inline struct __tmd__SendReceiveSerialCommand * soap_new_req___tmd__SendReceiveSerialCommand(
	struct soap *soap)
{	struct __tmd__SendReceiveSerialCommand *_p = soap_new___tmd__SendReceiveSerialCommand(soap);
	if (_p)
	{	soap_default___tmd__SendReceiveSerialCommand(soap, _p);
	}
	return _p;
}

inline struct __tmd__SendReceiveSerialCommand * soap_new_set___tmd__SendReceiveSerialCommand(
	struct soap *soap,
	_tmd__SendReceiveSerialCommand *tmd__SendReceiveSerialCommand)
{	struct __tmd__SendReceiveSerialCommand *_p = soap_new___tmd__SendReceiveSerialCommand(soap);
	if (_p)
	{	soap_default___tmd__SendReceiveSerialCommand(soap, _p);
		_p->tmd__SendReceiveSerialCommand = tmd__SendReceiveSerialCommand;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tmd__SendReceiveSerialCommand(struct soap*, const struct __tmd__SendReceiveSerialCommand *, const char*, const char*);

#ifndef soap_write___tmd__SendReceiveSerialCommand
#define soap_write___tmd__SendReceiveSerialCommand(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tmd__SendReceiveSerialCommand(soap, data), 0) || soap_put___tmd__SendReceiveSerialCommand(soap, data, "-tmd:SendReceiveSerialCommand", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tmd__SendReceiveSerialCommand * SOAP_FMAC4 soap_get___tmd__SendReceiveSerialCommand(struct soap*, struct __tmd__SendReceiveSerialCommand *, const char*, const char*);

#ifndef soap_read___tmd__SendReceiveSerialCommand
#define soap_read___tmd__SendReceiveSerialCommand(soap, data) ( ((data) ? (soap_default___tmd__SendReceiveSerialCommand(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tmd__SendReceiveSerialCommand(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tmd__GetSerialPortConfigurationOptions
#define SOAP_TYPE___tmd__GetSerialPortConfigurationOptions (2084)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tmd__GetSerialPortConfigurationOptions(struct soap*, struct __tmd__GetSerialPortConfigurationOptions *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tmd__GetSerialPortConfigurationOptions(struct soap*, const struct __tmd__GetSerialPortConfigurationOptions *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tmd__GetSerialPortConfigurationOptions(struct soap*, const char*, int, const struct __tmd__GetSerialPortConfigurationOptions *, const char*);
SOAP_FMAC3 struct __tmd__GetSerialPortConfigurationOptions * SOAP_FMAC4 soap_in___tmd__GetSerialPortConfigurationOptions(struct soap*, const char*, struct __tmd__GetSerialPortConfigurationOptions *, const char*);
SOAP_FMAC1 struct __tmd__GetSerialPortConfigurationOptions * SOAP_FMAC2 soap_instantiate___tmd__GetSerialPortConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline struct __tmd__GetSerialPortConfigurationOptions * soap_new___tmd__GetSerialPortConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate___tmd__GetSerialPortConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline struct __tmd__GetSerialPortConfigurationOptions * soap_new_req___tmd__GetSerialPortConfigurationOptions(
	struct soap *soap)
{	struct __tmd__GetSerialPortConfigurationOptions *_p = soap_new___tmd__GetSerialPortConfigurationOptions(soap);
	if (_p)
	{	soap_default___tmd__GetSerialPortConfigurationOptions(soap, _p);
	}
	return _p;
}

inline struct __tmd__GetSerialPortConfigurationOptions * soap_new_set___tmd__GetSerialPortConfigurationOptions(
	struct soap *soap,
	_tmd__GetSerialPortConfigurationOptions *tmd__GetSerialPortConfigurationOptions)
{	struct __tmd__GetSerialPortConfigurationOptions *_p = soap_new___tmd__GetSerialPortConfigurationOptions(soap);
	if (_p)
	{	soap_default___tmd__GetSerialPortConfigurationOptions(soap, _p);
		_p->tmd__GetSerialPortConfigurationOptions = tmd__GetSerialPortConfigurationOptions;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tmd__GetSerialPortConfigurationOptions(struct soap*, const struct __tmd__GetSerialPortConfigurationOptions *, const char*, const char*);

#ifndef soap_write___tmd__GetSerialPortConfigurationOptions
#define soap_write___tmd__GetSerialPortConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tmd__GetSerialPortConfigurationOptions(soap, data), 0) || soap_put___tmd__GetSerialPortConfigurationOptions(soap, data, "-tmd:GetSerialPortConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tmd__GetSerialPortConfigurationOptions * SOAP_FMAC4 soap_get___tmd__GetSerialPortConfigurationOptions(struct soap*, struct __tmd__GetSerialPortConfigurationOptions *, const char*, const char*);

#ifndef soap_read___tmd__GetSerialPortConfigurationOptions
#define soap_read___tmd__GetSerialPortConfigurationOptions(soap, data) ( ((data) ? (soap_default___tmd__GetSerialPortConfigurationOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tmd__GetSerialPortConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tmd__SetSerialPortConfiguration
#define SOAP_TYPE___tmd__SetSerialPortConfiguration (2080)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tmd__SetSerialPortConfiguration(struct soap*, struct __tmd__SetSerialPortConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tmd__SetSerialPortConfiguration(struct soap*, const struct __tmd__SetSerialPortConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tmd__SetSerialPortConfiguration(struct soap*, const char*, int, const struct __tmd__SetSerialPortConfiguration *, const char*);
SOAP_FMAC3 struct __tmd__SetSerialPortConfiguration * SOAP_FMAC4 soap_in___tmd__SetSerialPortConfiguration(struct soap*, const char*, struct __tmd__SetSerialPortConfiguration *, const char*);
SOAP_FMAC1 struct __tmd__SetSerialPortConfiguration * SOAP_FMAC2 soap_instantiate___tmd__SetSerialPortConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tmd__SetSerialPortConfiguration * soap_new___tmd__SetSerialPortConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tmd__SetSerialPortConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tmd__SetSerialPortConfiguration * soap_new_req___tmd__SetSerialPortConfiguration(
	struct soap *soap)
{	struct __tmd__SetSerialPortConfiguration *_p = soap_new___tmd__SetSerialPortConfiguration(soap);
	if (_p)
	{	soap_default___tmd__SetSerialPortConfiguration(soap, _p);
	}
	return _p;
}

inline struct __tmd__SetSerialPortConfiguration * soap_new_set___tmd__SetSerialPortConfiguration(
	struct soap *soap,
	_tmd__SetSerialPortConfiguration *tmd__SetSerialPortConfiguration)
{	struct __tmd__SetSerialPortConfiguration *_p = soap_new___tmd__SetSerialPortConfiguration(soap);
	if (_p)
	{	soap_default___tmd__SetSerialPortConfiguration(soap, _p);
		_p->tmd__SetSerialPortConfiguration = tmd__SetSerialPortConfiguration;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tmd__SetSerialPortConfiguration(struct soap*, const struct __tmd__SetSerialPortConfiguration *, const char*, const char*);

#ifndef soap_write___tmd__SetSerialPortConfiguration
#define soap_write___tmd__SetSerialPortConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tmd__SetSerialPortConfiguration(soap, data), 0) || soap_put___tmd__SetSerialPortConfiguration(soap, data, "-tmd:SetSerialPortConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tmd__SetSerialPortConfiguration * SOAP_FMAC4 soap_get___tmd__SetSerialPortConfiguration(struct soap*, struct __tmd__SetSerialPortConfiguration *, const char*, const char*);

#ifndef soap_read___tmd__SetSerialPortConfiguration
#define soap_read___tmd__SetSerialPortConfiguration(soap, data) ( ((data) ? (soap_default___tmd__SetSerialPortConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tmd__SetSerialPortConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tmd__GetSerialPortConfiguration
#define SOAP_TYPE___tmd__GetSerialPortConfiguration (2076)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tmd__GetSerialPortConfiguration(struct soap*, struct __tmd__GetSerialPortConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tmd__GetSerialPortConfiguration(struct soap*, const struct __tmd__GetSerialPortConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tmd__GetSerialPortConfiguration(struct soap*, const char*, int, const struct __tmd__GetSerialPortConfiguration *, const char*);
SOAP_FMAC3 struct __tmd__GetSerialPortConfiguration * SOAP_FMAC4 soap_in___tmd__GetSerialPortConfiguration(struct soap*, const char*, struct __tmd__GetSerialPortConfiguration *, const char*);
SOAP_FMAC1 struct __tmd__GetSerialPortConfiguration * SOAP_FMAC2 soap_instantiate___tmd__GetSerialPortConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tmd__GetSerialPortConfiguration * soap_new___tmd__GetSerialPortConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tmd__GetSerialPortConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tmd__GetSerialPortConfiguration * soap_new_req___tmd__GetSerialPortConfiguration(
	struct soap *soap)
{	struct __tmd__GetSerialPortConfiguration *_p = soap_new___tmd__GetSerialPortConfiguration(soap);
	if (_p)
	{	soap_default___tmd__GetSerialPortConfiguration(soap, _p);
	}
	return _p;
}

inline struct __tmd__GetSerialPortConfiguration * soap_new_set___tmd__GetSerialPortConfiguration(
	struct soap *soap,
	_tmd__GetSerialPortConfiguration *tmd__GetSerialPortConfiguration)
{	struct __tmd__GetSerialPortConfiguration *_p = soap_new___tmd__GetSerialPortConfiguration(soap);
	if (_p)
	{	soap_default___tmd__GetSerialPortConfiguration(soap, _p);
		_p->tmd__GetSerialPortConfiguration = tmd__GetSerialPortConfiguration;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tmd__GetSerialPortConfiguration(struct soap*, const struct __tmd__GetSerialPortConfiguration *, const char*, const char*);

#ifndef soap_write___tmd__GetSerialPortConfiguration
#define soap_write___tmd__GetSerialPortConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tmd__GetSerialPortConfiguration(soap, data), 0) || soap_put___tmd__GetSerialPortConfiguration(soap, data, "-tmd:GetSerialPortConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tmd__GetSerialPortConfiguration * SOAP_FMAC4 soap_get___tmd__GetSerialPortConfiguration(struct soap*, struct __tmd__GetSerialPortConfiguration *, const char*, const char*);

#ifndef soap_read___tmd__GetSerialPortConfiguration
#define soap_read___tmd__GetSerialPortConfiguration(soap, data) ( ((data) ? (soap_default___tmd__GetSerialPortConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tmd__GetSerialPortConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tmd__GetSerialPorts
#define SOAP_TYPE___tmd__GetSerialPorts (2072)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tmd__GetSerialPorts(struct soap*, struct __tmd__GetSerialPorts *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tmd__GetSerialPorts(struct soap*, const struct __tmd__GetSerialPorts *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tmd__GetSerialPorts(struct soap*, const char*, int, const struct __tmd__GetSerialPorts *, const char*);
SOAP_FMAC3 struct __tmd__GetSerialPorts * SOAP_FMAC4 soap_in___tmd__GetSerialPorts(struct soap*, const char*, struct __tmd__GetSerialPorts *, const char*);
SOAP_FMAC1 struct __tmd__GetSerialPorts * SOAP_FMAC2 soap_instantiate___tmd__GetSerialPorts(struct soap*, int, const char*, const char*, size_t*);

inline struct __tmd__GetSerialPorts * soap_new___tmd__GetSerialPorts(struct soap *soap, int n = -1) { return soap_instantiate___tmd__GetSerialPorts(soap, n, NULL, NULL, NULL); }

inline struct __tmd__GetSerialPorts * soap_new_req___tmd__GetSerialPorts(
	struct soap *soap)
{	struct __tmd__GetSerialPorts *_p = soap_new___tmd__GetSerialPorts(soap);
	if (_p)
	{	soap_default___tmd__GetSerialPorts(soap, _p);
	}
	return _p;
}

inline struct __tmd__GetSerialPorts * soap_new_set___tmd__GetSerialPorts(
	struct soap *soap,
	_tmd__GetSerialPorts *tmd__GetSerialPorts)
{	struct __tmd__GetSerialPorts *_p = soap_new___tmd__GetSerialPorts(soap);
	if (_p)
	{	soap_default___tmd__GetSerialPorts(soap, _p);
		_p->tmd__GetSerialPorts = tmd__GetSerialPorts;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tmd__GetSerialPorts(struct soap*, const struct __tmd__GetSerialPorts *, const char*, const char*);

#ifndef soap_write___tmd__GetSerialPorts
#define soap_write___tmd__GetSerialPorts(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tmd__GetSerialPorts(soap, data), 0) || soap_put___tmd__GetSerialPorts(soap, data, "-tmd:GetSerialPorts", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tmd__GetSerialPorts * SOAP_FMAC4 soap_get___tmd__GetSerialPorts(struct soap*, struct __tmd__GetSerialPorts *, const char*, const char*);

#ifndef soap_read___tmd__GetSerialPorts
#define soap_read___tmd__GetSerialPorts(soap, data) ( ((data) ? (soap_default___tmd__GetSerialPorts(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tmd__GetSerialPorts(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tmd__SetDigitalInputConfigurations
#define SOAP_TYPE___tmd__SetDigitalInputConfigurations (2068)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tmd__SetDigitalInputConfigurations(struct soap*, struct __tmd__SetDigitalInputConfigurations *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tmd__SetDigitalInputConfigurations(struct soap*, const struct __tmd__SetDigitalInputConfigurations *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tmd__SetDigitalInputConfigurations(struct soap*, const char*, int, const struct __tmd__SetDigitalInputConfigurations *, const char*);
SOAP_FMAC3 struct __tmd__SetDigitalInputConfigurations * SOAP_FMAC4 soap_in___tmd__SetDigitalInputConfigurations(struct soap*, const char*, struct __tmd__SetDigitalInputConfigurations *, const char*);
SOAP_FMAC1 struct __tmd__SetDigitalInputConfigurations * SOAP_FMAC2 soap_instantiate___tmd__SetDigitalInputConfigurations(struct soap*, int, const char*, const char*, size_t*);

inline struct __tmd__SetDigitalInputConfigurations * soap_new___tmd__SetDigitalInputConfigurations(struct soap *soap, int n = -1) { return soap_instantiate___tmd__SetDigitalInputConfigurations(soap, n, NULL, NULL, NULL); }

inline struct __tmd__SetDigitalInputConfigurations * soap_new_req___tmd__SetDigitalInputConfigurations(
	struct soap *soap)
{	struct __tmd__SetDigitalInputConfigurations *_p = soap_new___tmd__SetDigitalInputConfigurations(soap);
	if (_p)
	{	soap_default___tmd__SetDigitalInputConfigurations(soap, _p);
	}
	return _p;
}

inline struct __tmd__SetDigitalInputConfigurations * soap_new_set___tmd__SetDigitalInputConfigurations(
	struct soap *soap,
	_tmd__SetDigitalInputConfigurations *tmd__SetDigitalInputConfigurations)
{	struct __tmd__SetDigitalInputConfigurations *_p = soap_new___tmd__SetDigitalInputConfigurations(soap);
	if (_p)
	{	soap_default___tmd__SetDigitalInputConfigurations(soap, _p);
		_p->tmd__SetDigitalInputConfigurations = tmd__SetDigitalInputConfigurations;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tmd__SetDigitalInputConfigurations(struct soap*, const struct __tmd__SetDigitalInputConfigurations *, const char*, const char*);

#ifndef soap_write___tmd__SetDigitalInputConfigurations
#define soap_write___tmd__SetDigitalInputConfigurations(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tmd__SetDigitalInputConfigurations(soap, data), 0) || soap_put___tmd__SetDigitalInputConfigurations(soap, data, "-tmd:SetDigitalInputConfigurations", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tmd__SetDigitalInputConfigurations * SOAP_FMAC4 soap_get___tmd__SetDigitalInputConfigurations(struct soap*, struct __tmd__SetDigitalInputConfigurations *, const char*, const char*);

#ifndef soap_read___tmd__SetDigitalInputConfigurations
#define soap_read___tmd__SetDigitalInputConfigurations(soap, data) ( ((data) ? (soap_default___tmd__SetDigitalInputConfigurations(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tmd__SetDigitalInputConfigurations(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tmd__GetDigitalInputConfigurationOptions
#define SOAP_TYPE___tmd__GetDigitalInputConfigurationOptions (2064)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tmd__GetDigitalInputConfigurationOptions(struct soap*, struct __tmd__GetDigitalInputConfigurationOptions *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tmd__GetDigitalInputConfigurationOptions(struct soap*, const struct __tmd__GetDigitalInputConfigurationOptions *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tmd__GetDigitalInputConfigurationOptions(struct soap*, const char*, int, const struct __tmd__GetDigitalInputConfigurationOptions *, const char*);
SOAP_FMAC3 struct __tmd__GetDigitalInputConfigurationOptions * SOAP_FMAC4 soap_in___tmd__GetDigitalInputConfigurationOptions(struct soap*, const char*, struct __tmd__GetDigitalInputConfigurationOptions *, const char*);
SOAP_FMAC1 struct __tmd__GetDigitalInputConfigurationOptions * SOAP_FMAC2 soap_instantiate___tmd__GetDigitalInputConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline struct __tmd__GetDigitalInputConfigurationOptions * soap_new___tmd__GetDigitalInputConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate___tmd__GetDigitalInputConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline struct __tmd__GetDigitalInputConfigurationOptions * soap_new_req___tmd__GetDigitalInputConfigurationOptions(
	struct soap *soap)
{	struct __tmd__GetDigitalInputConfigurationOptions *_p = soap_new___tmd__GetDigitalInputConfigurationOptions(soap);
	if (_p)
	{	soap_default___tmd__GetDigitalInputConfigurationOptions(soap, _p);
	}
	return _p;
}

inline struct __tmd__GetDigitalInputConfigurationOptions * soap_new_set___tmd__GetDigitalInputConfigurationOptions(
	struct soap *soap,
	_tmd__GetDigitalInputConfigurationOptions *tmd__GetDigitalInputConfigurationOptions)
{	struct __tmd__GetDigitalInputConfigurationOptions *_p = soap_new___tmd__GetDigitalInputConfigurationOptions(soap);
	if (_p)
	{	soap_default___tmd__GetDigitalInputConfigurationOptions(soap, _p);
		_p->tmd__GetDigitalInputConfigurationOptions = tmd__GetDigitalInputConfigurationOptions;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tmd__GetDigitalInputConfigurationOptions(struct soap*, const struct __tmd__GetDigitalInputConfigurationOptions *, const char*, const char*);

#ifndef soap_write___tmd__GetDigitalInputConfigurationOptions
#define soap_write___tmd__GetDigitalInputConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tmd__GetDigitalInputConfigurationOptions(soap, data), 0) || soap_put___tmd__GetDigitalInputConfigurationOptions(soap, data, "-tmd:GetDigitalInputConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tmd__GetDigitalInputConfigurationOptions * SOAP_FMAC4 soap_get___tmd__GetDigitalInputConfigurationOptions(struct soap*, struct __tmd__GetDigitalInputConfigurationOptions *, const char*, const char*);

#ifndef soap_read___tmd__GetDigitalInputConfigurationOptions
#define soap_read___tmd__GetDigitalInputConfigurationOptions(soap, data) ( ((data) ? (soap_default___tmd__GetDigitalInputConfigurationOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tmd__GetDigitalInputConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tmd__GetDigitalInputs
#define SOAP_TYPE___tmd__GetDigitalInputs (2060)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tmd__GetDigitalInputs(struct soap*, struct __tmd__GetDigitalInputs *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tmd__GetDigitalInputs(struct soap*, const struct __tmd__GetDigitalInputs *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tmd__GetDigitalInputs(struct soap*, const char*, int, const struct __tmd__GetDigitalInputs *, const char*);
SOAP_FMAC3 struct __tmd__GetDigitalInputs * SOAP_FMAC4 soap_in___tmd__GetDigitalInputs(struct soap*, const char*, struct __tmd__GetDigitalInputs *, const char*);
SOAP_FMAC1 struct __tmd__GetDigitalInputs * SOAP_FMAC2 soap_instantiate___tmd__GetDigitalInputs(struct soap*, int, const char*, const char*, size_t*);

inline struct __tmd__GetDigitalInputs * soap_new___tmd__GetDigitalInputs(struct soap *soap, int n = -1) { return soap_instantiate___tmd__GetDigitalInputs(soap, n, NULL, NULL, NULL); }

inline struct __tmd__GetDigitalInputs * soap_new_req___tmd__GetDigitalInputs(
	struct soap *soap)
{	struct __tmd__GetDigitalInputs *_p = soap_new___tmd__GetDigitalInputs(soap);
	if (_p)
	{	soap_default___tmd__GetDigitalInputs(soap, _p);
	}
	return _p;
}

inline struct __tmd__GetDigitalInputs * soap_new_set___tmd__GetDigitalInputs(
	struct soap *soap,
	_tmd__GetDigitalInputs *tmd__GetDigitalInputs)
{	struct __tmd__GetDigitalInputs *_p = soap_new___tmd__GetDigitalInputs(soap);
	if (_p)
	{	soap_default___tmd__GetDigitalInputs(soap, _p);
		_p->tmd__GetDigitalInputs = tmd__GetDigitalInputs;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tmd__GetDigitalInputs(struct soap*, const struct __tmd__GetDigitalInputs *, const char*, const char*);

#ifndef soap_write___tmd__GetDigitalInputs
#define soap_write___tmd__GetDigitalInputs(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tmd__GetDigitalInputs(soap, data), 0) || soap_put___tmd__GetDigitalInputs(soap, data, "-tmd:GetDigitalInputs", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tmd__GetDigitalInputs * SOAP_FMAC4 soap_get___tmd__GetDigitalInputs(struct soap*, struct __tmd__GetDigitalInputs *, const char*, const char*);

#ifndef soap_read___tmd__GetDigitalInputs
#define soap_read___tmd__GetDigitalInputs(soap, data) ( ((data) ? (soap_default___tmd__GetDigitalInputs(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tmd__GetDigitalInputs(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tmd__SetRelayOutputState
#define SOAP_TYPE___tmd__SetRelayOutputState (2056)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tmd__SetRelayOutputState(struct soap*, struct __tmd__SetRelayOutputState *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tmd__SetRelayOutputState(struct soap*, const struct __tmd__SetRelayOutputState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tmd__SetRelayOutputState(struct soap*, const char*, int, const struct __tmd__SetRelayOutputState *, const char*);
SOAP_FMAC3 struct __tmd__SetRelayOutputState * SOAP_FMAC4 soap_in___tmd__SetRelayOutputState(struct soap*, const char*, struct __tmd__SetRelayOutputState *, const char*);
SOAP_FMAC1 struct __tmd__SetRelayOutputState * SOAP_FMAC2 soap_instantiate___tmd__SetRelayOutputState(struct soap*, int, const char*, const char*, size_t*);

inline struct __tmd__SetRelayOutputState * soap_new___tmd__SetRelayOutputState(struct soap *soap, int n = -1) { return soap_instantiate___tmd__SetRelayOutputState(soap, n, NULL, NULL, NULL); }

inline struct __tmd__SetRelayOutputState * soap_new_req___tmd__SetRelayOutputState(
	struct soap *soap)
{	struct __tmd__SetRelayOutputState *_p = soap_new___tmd__SetRelayOutputState(soap);
	if (_p)
	{	soap_default___tmd__SetRelayOutputState(soap, _p);
	}
	return _p;
}

inline struct __tmd__SetRelayOutputState * soap_new_set___tmd__SetRelayOutputState(
	struct soap *soap,
	_tds__SetRelayOutputState *tds__SetRelayOutputState)
{	struct __tmd__SetRelayOutputState *_p = soap_new___tmd__SetRelayOutputState(soap);
	if (_p)
	{	soap_default___tmd__SetRelayOutputState(soap, _p);
		_p->tds__SetRelayOutputState = tds__SetRelayOutputState;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tmd__SetRelayOutputState(struct soap*, const struct __tmd__SetRelayOutputState *, const char*, const char*);

#ifndef soap_write___tmd__SetRelayOutputState
#define soap_write___tmd__SetRelayOutputState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tmd__SetRelayOutputState(soap, data), 0) || soap_put___tmd__SetRelayOutputState(soap, data, "-tmd:SetRelayOutputState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tmd__SetRelayOutputState * SOAP_FMAC4 soap_get___tmd__SetRelayOutputState(struct soap*, struct __tmd__SetRelayOutputState *, const char*, const char*);

#ifndef soap_read___tmd__SetRelayOutputState
#define soap_read___tmd__SetRelayOutputState(soap, data) ( ((data) ? (soap_default___tmd__SetRelayOutputState(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tmd__SetRelayOutputState(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tmd__SetRelayOutputSettings
#define SOAP_TYPE___tmd__SetRelayOutputSettings (2054)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tmd__SetRelayOutputSettings(struct soap*, struct __tmd__SetRelayOutputSettings *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tmd__SetRelayOutputSettings(struct soap*, const struct __tmd__SetRelayOutputSettings *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tmd__SetRelayOutputSettings(struct soap*, const char*, int, const struct __tmd__SetRelayOutputSettings *, const char*);
SOAP_FMAC3 struct __tmd__SetRelayOutputSettings * SOAP_FMAC4 soap_in___tmd__SetRelayOutputSettings(struct soap*, const char*, struct __tmd__SetRelayOutputSettings *, const char*);
SOAP_FMAC1 struct __tmd__SetRelayOutputSettings * SOAP_FMAC2 soap_instantiate___tmd__SetRelayOutputSettings(struct soap*, int, const char*, const char*, size_t*);

inline struct __tmd__SetRelayOutputSettings * soap_new___tmd__SetRelayOutputSettings(struct soap *soap, int n = -1) { return soap_instantiate___tmd__SetRelayOutputSettings(soap, n, NULL, NULL, NULL); }

inline struct __tmd__SetRelayOutputSettings * soap_new_req___tmd__SetRelayOutputSettings(
	struct soap *soap)
{	struct __tmd__SetRelayOutputSettings *_p = soap_new___tmd__SetRelayOutputSettings(soap);
	if (_p)
	{	soap_default___tmd__SetRelayOutputSettings(soap, _p);
	}
	return _p;
}

inline struct __tmd__SetRelayOutputSettings * soap_new_set___tmd__SetRelayOutputSettings(
	struct soap *soap,
	_tmd__SetRelayOutputSettings *tmd__SetRelayOutputSettings)
{	struct __tmd__SetRelayOutputSettings *_p = soap_new___tmd__SetRelayOutputSettings(soap);
	if (_p)
	{	soap_default___tmd__SetRelayOutputSettings(soap, _p);
		_p->tmd__SetRelayOutputSettings = tmd__SetRelayOutputSettings;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tmd__SetRelayOutputSettings(struct soap*, const struct __tmd__SetRelayOutputSettings *, const char*, const char*);

#ifndef soap_write___tmd__SetRelayOutputSettings
#define soap_write___tmd__SetRelayOutputSettings(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tmd__SetRelayOutputSettings(soap, data), 0) || soap_put___tmd__SetRelayOutputSettings(soap, data, "-tmd:SetRelayOutputSettings", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tmd__SetRelayOutputSettings * SOAP_FMAC4 soap_get___tmd__SetRelayOutputSettings(struct soap*, struct __tmd__SetRelayOutputSettings *, const char*, const char*);

#ifndef soap_read___tmd__SetRelayOutputSettings
#define soap_read___tmd__SetRelayOutputSettings(soap, data) ( ((data) ? (soap_default___tmd__SetRelayOutputSettings(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tmd__SetRelayOutputSettings(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tmd__GetRelayOutputs
#define SOAP_TYPE___tmd__GetRelayOutputs (2050)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tmd__GetRelayOutputs(struct soap*, struct __tmd__GetRelayOutputs *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tmd__GetRelayOutputs(struct soap*, const struct __tmd__GetRelayOutputs *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tmd__GetRelayOutputs(struct soap*, const char*, int, const struct __tmd__GetRelayOutputs *, const char*);
SOAP_FMAC3 struct __tmd__GetRelayOutputs * SOAP_FMAC4 soap_in___tmd__GetRelayOutputs(struct soap*, const char*, struct __tmd__GetRelayOutputs *, const char*);
SOAP_FMAC1 struct __tmd__GetRelayOutputs * SOAP_FMAC2 soap_instantiate___tmd__GetRelayOutputs(struct soap*, int, const char*, const char*, size_t*);

inline struct __tmd__GetRelayOutputs * soap_new___tmd__GetRelayOutputs(struct soap *soap, int n = -1) { return soap_instantiate___tmd__GetRelayOutputs(soap, n, NULL, NULL, NULL); }

inline struct __tmd__GetRelayOutputs * soap_new_req___tmd__GetRelayOutputs(
	struct soap *soap)
{	struct __tmd__GetRelayOutputs *_p = soap_new___tmd__GetRelayOutputs(soap);
	if (_p)
	{	soap_default___tmd__GetRelayOutputs(soap, _p);
	}
	return _p;
}

inline struct __tmd__GetRelayOutputs * soap_new_set___tmd__GetRelayOutputs(
	struct soap *soap,
	_tds__GetRelayOutputs *tds__GetRelayOutputs)
{	struct __tmd__GetRelayOutputs *_p = soap_new___tmd__GetRelayOutputs(soap);
	if (_p)
	{	soap_default___tmd__GetRelayOutputs(soap, _p);
		_p->tds__GetRelayOutputs = tds__GetRelayOutputs;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tmd__GetRelayOutputs(struct soap*, const struct __tmd__GetRelayOutputs *, const char*, const char*);

#ifndef soap_write___tmd__GetRelayOutputs
#define soap_write___tmd__GetRelayOutputs(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tmd__GetRelayOutputs(soap, data), 0) || soap_put___tmd__GetRelayOutputs(soap, data, "-tmd:GetRelayOutputs", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tmd__GetRelayOutputs * SOAP_FMAC4 soap_get___tmd__GetRelayOutputs(struct soap*, struct __tmd__GetRelayOutputs *, const char*, const char*);

#ifndef soap_read___tmd__GetRelayOutputs
#define soap_read___tmd__GetRelayOutputs(soap, data) ( ((data) ? (soap_default___tmd__GetRelayOutputs(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tmd__GetRelayOutputs(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tmd__GetAudioOutputConfigurationOptions
#define SOAP_TYPE___tmd__GetAudioOutputConfigurationOptions (2048)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tmd__GetAudioOutputConfigurationOptions(struct soap*, struct __tmd__GetAudioOutputConfigurationOptions *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tmd__GetAudioOutputConfigurationOptions(struct soap*, const struct __tmd__GetAudioOutputConfigurationOptions *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tmd__GetAudioOutputConfigurationOptions(struct soap*, const char*, int, const struct __tmd__GetAudioOutputConfigurationOptions *, const char*);
SOAP_FMAC3 struct __tmd__GetAudioOutputConfigurationOptions * SOAP_FMAC4 soap_in___tmd__GetAudioOutputConfigurationOptions(struct soap*, const char*, struct __tmd__GetAudioOutputConfigurationOptions *, const char*);
SOAP_FMAC1 struct __tmd__GetAudioOutputConfigurationOptions * SOAP_FMAC2 soap_instantiate___tmd__GetAudioOutputConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline struct __tmd__GetAudioOutputConfigurationOptions * soap_new___tmd__GetAudioOutputConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate___tmd__GetAudioOutputConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline struct __tmd__GetAudioOutputConfigurationOptions * soap_new_req___tmd__GetAudioOutputConfigurationOptions(
	struct soap *soap)
{	struct __tmd__GetAudioOutputConfigurationOptions *_p = soap_new___tmd__GetAudioOutputConfigurationOptions(soap);
	if (_p)
	{	soap_default___tmd__GetAudioOutputConfigurationOptions(soap, _p);
	}
	return _p;
}

inline struct __tmd__GetAudioOutputConfigurationOptions * soap_new_set___tmd__GetAudioOutputConfigurationOptions(
	struct soap *soap,
	_tmd__GetAudioOutputConfigurationOptions *tmd__GetAudioOutputConfigurationOptions)
{	struct __tmd__GetAudioOutputConfigurationOptions *_p = soap_new___tmd__GetAudioOutputConfigurationOptions(soap);
	if (_p)
	{	soap_default___tmd__GetAudioOutputConfigurationOptions(soap, _p);
		_p->tmd__GetAudioOutputConfigurationOptions = tmd__GetAudioOutputConfigurationOptions;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tmd__GetAudioOutputConfigurationOptions(struct soap*, const struct __tmd__GetAudioOutputConfigurationOptions *, const char*, const char*);

#ifndef soap_write___tmd__GetAudioOutputConfigurationOptions
#define soap_write___tmd__GetAudioOutputConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tmd__GetAudioOutputConfigurationOptions(soap, data), 0) || soap_put___tmd__GetAudioOutputConfigurationOptions(soap, data, "-tmd:GetAudioOutputConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tmd__GetAudioOutputConfigurationOptions * SOAP_FMAC4 soap_get___tmd__GetAudioOutputConfigurationOptions(struct soap*, struct __tmd__GetAudioOutputConfigurationOptions *, const char*, const char*);

#ifndef soap_read___tmd__GetAudioOutputConfigurationOptions
#define soap_read___tmd__GetAudioOutputConfigurationOptions(soap, data) ( ((data) ? (soap_default___tmd__GetAudioOutputConfigurationOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tmd__GetAudioOutputConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tmd__GetAudioSourceConfigurationOptions
#define SOAP_TYPE___tmd__GetAudioSourceConfigurationOptions (2044)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tmd__GetAudioSourceConfigurationOptions(struct soap*, struct __tmd__GetAudioSourceConfigurationOptions *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tmd__GetAudioSourceConfigurationOptions(struct soap*, const struct __tmd__GetAudioSourceConfigurationOptions *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tmd__GetAudioSourceConfigurationOptions(struct soap*, const char*, int, const struct __tmd__GetAudioSourceConfigurationOptions *, const char*);
SOAP_FMAC3 struct __tmd__GetAudioSourceConfigurationOptions * SOAP_FMAC4 soap_in___tmd__GetAudioSourceConfigurationOptions(struct soap*, const char*, struct __tmd__GetAudioSourceConfigurationOptions *, const char*);
SOAP_FMAC1 struct __tmd__GetAudioSourceConfigurationOptions * SOAP_FMAC2 soap_instantiate___tmd__GetAudioSourceConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline struct __tmd__GetAudioSourceConfigurationOptions * soap_new___tmd__GetAudioSourceConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate___tmd__GetAudioSourceConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline struct __tmd__GetAudioSourceConfigurationOptions * soap_new_req___tmd__GetAudioSourceConfigurationOptions(
	struct soap *soap)
{	struct __tmd__GetAudioSourceConfigurationOptions *_p = soap_new___tmd__GetAudioSourceConfigurationOptions(soap);
	if (_p)
	{	soap_default___tmd__GetAudioSourceConfigurationOptions(soap, _p);
	}
	return _p;
}

inline struct __tmd__GetAudioSourceConfigurationOptions * soap_new_set___tmd__GetAudioSourceConfigurationOptions(
	struct soap *soap,
	_tmd__GetAudioSourceConfigurationOptions *tmd__GetAudioSourceConfigurationOptions)
{	struct __tmd__GetAudioSourceConfigurationOptions *_p = soap_new___tmd__GetAudioSourceConfigurationOptions(soap);
	if (_p)
	{	soap_default___tmd__GetAudioSourceConfigurationOptions(soap, _p);
		_p->tmd__GetAudioSourceConfigurationOptions = tmd__GetAudioSourceConfigurationOptions;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tmd__GetAudioSourceConfigurationOptions(struct soap*, const struct __tmd__GetAudioSourceConfigurationOptions *, const char*, const char*);

#ifndef soap_write___tmd__GetAudioSourceConfigurationOptions
#define soap_write___tmd__GetAudioSourceConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tmd__GetAudioSourceConfigurationOptions(soap, data), 0) || soap_put___tmd__GetAudioSourceConfigurationOptions(soap, data, "-tmd:GetAudioSourceConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tmd__GetAudioSourceConfigurationOptions * SOAP_FMAC4 soap_get___tmd__GetAudioSourceConfigurationOptions(struct soap*, struct __tmd__GetAudioSourceConfigurationOptions *, const char*, const char*);

#ifndef soap_read___tmd__GetAudioSourceConfigurationOptions
#define soap_read___tmd__GetAudioSourceConfigurationOptions(soap, data) ( ((data) ? (soap_default___tmd__GetAudioSourceConfigurationOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tmd__GetAudioSourceConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tmd__GetVideoOutputConfigurationOptions
#define SOAP_TYPE___tmd__GetVideoOutputConfigurationOptions (2040)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tmd__GetVideoOutputConfigurationOptions(struct soap*, struct __tmd__GetVideoOutputConfigurationOptions *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tmd__GetVideoOutputConfigurationOptions(struct soap*, const struct __tmd__GetVideoOutputConfigurationOptions *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tmd__GetVideoOutputConfigurationOptions(struct soap*, const char*, int, const struct __tmd__GetVideoOutputConfigurationOptions *, const char*);
SOAP_FMAC3 struct __tmd__GetVideoOutputConfigurationOptions * SOAP_FMAC4 soap_in___tmd__GetVideoOutputConfigurationOptions(struct soap*, const char*, struct __tmd__GetVideoOutputConfigurationOptions *, const char*);
SOAP_FMAC1 struct __tmd__GetVideoOutputConfigurationOptions * SOAP_FMAC2 soap_instantiate___tmd__GetVideoOutputConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline struct __tmd__GetVideoOutputConfigurationOptions * soap_new___tmd__GetVideoOutputConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate___tmd__GetVideoOutputConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline struct __tmd__GetVideoOutputConfigurationOptions * soap_new_req___tmd__GetVideoOutputConfigurationOptions(
	struct soap *soap)
{	struct __tmd__GetVideoOutputConfigurationOptions *_p = soap_new___tmd__GetVideoOutputConfigurationOptions(soap);
	if (_p)
	{	soap_default___tmd__GetVideoOutputConfigurationOptions(soap, _p);
	}
	return _p;
}

inline struct __tmd__GetVideoOutputConfigurationOptions * soap_new_set___tmd__GetVideoOutputConfigurationOptions(
	struct soap *soap,
	_tmd__GetVideoOutputConfigurationOptions *tmd__GetVideoOutputConfigurationOptions)
{	struct __tmd__GetVideoOutputConfigurationOptions *_p = soap_new___tmd__GetVideoOutputConfigurationOptions(soap);
	if (_p)
	{	soap_default___tmd__GetVideoOutputConfigurationOptions(soap, _p);
		_p->tmd__GetVideoOutputConfigurationOptions = tmd__GetVideoOutputConfigurationOptions;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tmd__GetVideoOutputConfigurationOptions(struct soap*, const struct __tmd__GetVideoOutputConfigurationOptions *, const char*, const char*);

#ifndef soap_write___tmd__GetVideoOutputConfigurationOptions
#define soap_write___tmd__GetVideoOutputConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tmd__GetVideoOutputConfigurationOptions(soap, data), 0) || soap_put___tmd__GetVideoOutputConfigurationOptions(soap, data, "-tmd:GetVideoOutputConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tmd__GetVideoOutputConfigurationOptions * SOAP_FMAC4 soap_get___tmd__GetVideoOutputConfigurationOptions(struct soap*, struct __tmd__GetVideoOutputConfigurationOptions *, const char*, const char*);

#ifndef soap_read___tmd__GetVideoOutputConfigurationOptions
#define soap_read___tmd__GetVideoOutputConfigurationOptions(soap, data) ( ((data) ? (soap_default___tmd__GetVideoOutputConfigurationOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tmd__GetVideoOutputConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tmd__GetVideoSourceConfigurationOptions
#define SOAP_TYPE___tmd__GetVideoSourceConfigurationOptions (2036)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tmd__GetVideoSourceConfigurationOptions(struct soap*, struct __tmd__GetVideoSourceConfigurationOptions *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tmd__GetVideoSourceConfigurationOptions(struct soap*, const struct __tmd__GetVideoSourceConfigurationOptions *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tmd__GetVideoSourceConfigurationOptions(struct soap*, const char*, int, const struct __tmd__GetVideoSourceConfigurationOptions *, const char*);
SOAP_FMAC3 struct __tmd__GetVideoSourceConfigurationOptions * SOAP_FMAC4 soap_in___tmd__GetVideoSourceConfigurationOptions(struct soap*, const char*, struct __tmd__GetVideoSourceConfigurationOptions *, const char*);
SOAP_FMAC1 struct __tmd__GetVideoSourceConfigurationOptions * SOAP_FMAC2 soap_instantiate___tmd__GetVideoSourceConfigurationOptions(struct soap*, int, const char*, const char*, size_t*);

inline struct __tmd__GetVideoSourceConfigurationOptions * soap_new___tmd__GetVideoSourceConfigurationOptions(struct soap *soap, int n = -1) { return soap_instantiate___tmd__GetVideoSourceConfigurationOptions(soap, n, NULL, NULL, NULL); }

inline struct __tmd__GetVideoSourceConfigurationOptions * soap_new_req___tmd__GetVideoSourceConfigurationOptions(
	struct soap *soap)
{	struct __tmd__GetVideoSourceConfigurationOptions *_p = soap_new___tmd__GetVideoSourceConfigurationOptions(soap);
	if (_p)
	{	soap_default___tmd__GetVideoSourceConfigurationOptions(soap, _p);
	}
	return _p;
}

inline struct __tmd__GetVideoSourceConfigurationOptions * soap_new_set___tmd__GetVideoSourceConfigurationOptions(
	struct soap *soap,
	_tmd__GetVideoSourceConfigurationOptions *tmd__GetVideoSourceConfigurationOptions)
{	struct __tmd__GetVideoSourceConfigurationOptions *_p = soap_new___tmd__GetVideoSourceConfigurationOptions(soap);
	if (_p)
	{	soap_default___tmd__GetVideoSourceConfigurationOptions(soap, _p);
		_p->tmd__GetVideoSourceConfigurationOptions = tmd__GetVideoSourceConfigurationOptions;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tmd__GetVideoSourceConfigurationOptions(struct soap*, const struct __tmd__GetVideoSourceConfigurationOptions *, const char*, const char*);

#ifndef soap_write___tmd__GetVideoSourceConfigurationOptions
#define soap_write___tmd__GetVideoSourceConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tmd__GetVideoSourceConfigurationOptions(soap, data), 0) || soap_put___tmd__GetVideoSourceConfigurationOptions(soap, data, "-tmd:GetVideoSourceConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tmd__GetVideoSourceConfigurationOptions * SOAP_FMAC4 soap_get___tmd__GetVideoSourceConfigurationOptions(struct soap*, struct __tmd__GetVideoSourceConfigurationOptions *, const char*, const char*);

#ifndef soap_read___tmd__GetVideoSourceConfigurationOptions
#define soap_read___tmd__GetVideoSourceConfigurationOptions(soap, data) ( ((data) ? (soap_default___tmd__GetVideoSourceConfigurationOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tmd__GetVideoSourceConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tmd__SetAudioOutputConfiguration
#define SOAP_TYPE___tmd__SetAudioOutputConfiguration (2032)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tmd__SetAudioOutputConfiguration(struct soap*, struct __tmd__SetAudioOutputConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tmd__SetAudioOutputConfiguration(struct soap*, const struct __tmd__SetAudioOutputConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tmd__SetAudioOutputConfiguration(struct soap*, const char*, int, const struct __tmd__SetAudioOutputConfiguration *, const char*);
SOAP_FMAC3 struct __tmd__SetAudioOutputConfiguration * SOAP_FMAC4 soap_in___tmd__SetAudioOutputConfiguration(struct soap*, const char*, struct __tmd__SetAudioOutputConfiguration *, const char*);
SOAP_FMAC1 struct __tmd__SetAudioOutputConfiguration * SOAP_FMAC2 soap_instantiate___tmd__SetAudioOutputConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tmd__SetAudioOutputConfiguration * soap_new___tmd__SetAudioOutputConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tmd__SetAudioOutputConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tmd__SetAudioOutputConfiguration * soap_new_req___tmd__SetAudioOutputConfiguration(
	struct soap *soap)
{	struct __tmd__SetAudioOutputConfiguration *_p = soap_new___tmd__SetAudioOutputConfiguration(soap);
	if (_p)
	{	soap_default___tmd__SetAudioOutputConfiguration(soap, _p);
	}
	return _p;
}

inline struct __tmd__SetAudioOutputConfiguration * soap_new_set___tmd__SetAudioOutputConfiguration(
	struct soap *soap,
	_tmd__SetAudioOutputConfiguration *tmd__SetAudioOutputConfiguration)
{	struct __tmd__SetAudioOutputConfiguration *_p = soap_new___tmd__SetAudioOutputConfiguration(soap);
	if (_p)
	{	soap_default___tmd__SetAudioOutputConfiguration(soap, _p);
		_p->tmd__SetAudioOutputConfiguration = tmd__SetAudioOutputConfiguration;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tmd__SetAudioOutputConfiguration(struct soap*, const struct __tmd__SetAudioOutputConfiguration *, const char*, const char*);

#ifndef soap_write___tmd__SetAudioOutputConfiguration
#define soap_write___tmd__SetAudioOutputConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tmd__SetAudioOutputConfiguration(soap, data), 0) || soap_put___tmd__SetAudioOutputConfiguration(soap, data, "-tmd:SetAudioOutputConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tmd__SetAudioOutputConfiguration * SOAP_FMAC4 soap_get___tmd__SetAudioOutputConfiguration(struct soap*, struct __tmd__SetAudioOutputConfiguration *, const char*, const char*);

#ifndef soap_read___tmd__SetAudioOutputConfiguration
#define soap_read___tmd__SetAudioOutputConfiguration(soap, data) ( ((data) ? (soap_default___tmd__SetAudioOutputConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tmd__SetAudioOutputConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tmd__SetAudioSourceConfiguration
#define SOAP_TYPE___tmd__SetAudioSourceConfiguration (2028)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tmd__SetAudioSourceConfiguration(struct soap*, struct __tmd__SetAudioSourceConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tmd__SetAudioSourceConfiguration(struct soap*, const struct __tmd__SetAudioSourceConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tmd__SetAudioSourceConfiguration(struct soap*, const char*, int, const struct __tmd__SetAudioSourceConfiguration *, const char*);
SOAP_FMAC3 struct __tmd__SetAudioSourceConfiguration * SOAP_FMAC4 soap_in___tmd__SetAudioSourceConfiguration(struct soap*, const char*, struct __tmd__SetAudioSourceConfiguration *, const char*);
SOAP_FMAC1 struct __tmd__SetAudioSourceConfiguration * SOAP_FMAC2 soap_instantiate___tmd__SetAudioSourceConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tmd__SetAudioSourceConfiguration * soap_new___tmd__SetAudioSourceConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tmd__SetAudioSourceConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tmd__SetAudioSourceConfiguration * soap_new_req___tmd__SetAudioSourceConfiguration(
	struct soap *soap)
{	struct __tmd__SetAudioSourceConfiguration *_p = soap_new___tmd__SetAudioSourceConfiguration(soap);
	if (_p)
	{	soap_default___tmd__SetAudioSourceConfiguration(soap, _p);
	}
	return _p;
}

inline struct __tmd__SetAudioSourceConfiguration * soap_new_set___tmd__SetAudioSourceConfiguration(
	struct soap *soap,
	_tmd__SetAudioSourceConfiguration *tmd__SetAudioSourceConfiguration)
{	struct __tmd__SetAudioSourceConfiguration *_p = soap_new___tmd__SetAudioSourceConfiguration(soap);
	if (_p)
	{	soap_default___tmd__SetAudioSourceConfiguration(soap, _p);
		_p->tmd__SetAudioSourceConfiguration = tmd__SetAudioSourceConfiguration;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tmd__SetAudioSourceConfiguration(struct soap*, const struct __tmd__SetAudioSourceConfiguration *, const char*, const char*);

#ifndef soap_write___tmd__SetAudioSourceConfiguration
#define soap_write___tmd__SetAudioSourceConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tmd__SetAudioSourceConfiguration(soap, data), 0) || soap_put___tmd__SetAudioSourceConfiguration(soap, data, "-tmd:SetAudioSourceConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tmd__SetAudioSourceConfiguration * SOAP_FMAC4 soap_get___tmd__SetAudioSourceConfiguration(struct soap*, struct __tmd__SetAudioSourceConfiguration *, const char*, const char*);

#ifndef soap_read___tmd__SetAudioSourceConfiguration
#define soap_read___tmd__SetAudioSourceConfiguration(soap, data) ( ((data) ? (soap_default___tmd__SetAudioSourceConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tmd__SetAudioSourceConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tmd__SetVideoOutputConfiguration
#define SOAP_TYPE___tmd__SetVideoOutputConfiguration (2024)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tmd__SetVideoOutputConfiguration(struct soap*, struct __tmd__SetVideoOutputConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tmd__SetVideoOutputConfiguration(struct soap*, const struct __tmd__SetVideoOutputConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tmd__SetVideoOutputConfiguration(struct soap*, const char*, int, const struct __tmd__SetVideoOutputConfiguration *, const char*);
SOAP_FMAC3 struct __tmd__SetVideoOutputConfiguration * SOAP_FMAC4 soap_in___tmd__SetVideoOutputConfiguration(struct soap*, const char*, struct __tmd__SetVideoOutputConfiguration *, const char*);
SOAP_FMAC1 struct __tmd__SetVideoOutputConfiguration * SOAP_FMAC2 soap_instantiate___tmd__SetVideoOutputConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tmd__SetVideoOutputConfiguration * soap_new___tmd__SetVideoOutputConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tmd__SetVideoOutputConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tmd__SetVideoOutputConfiguration * soap_new_req___tmd__SetVideoOutputConfiguration(
	struct soap *soap)
{	struct __tmd__SetVideoOutputConfiguration *_p = soap_new___tmd__SetVideoOutputConfiguration(soap);
	if (_p)
	{	soap_default___tmd__SetVideoOutputConfiguration(soap, _p);
	}
	return _p;
}

inline struct __tmd__SetVideoOutputConfiguration * soap_new_set___tmd__SetVideoOutputConfiguration(
	struct soap *soap,
	_tmd__SetVideoOutputConfiguration *tmd__SetVideoOutputConfiguration)
{	struct __tmd__SetVideoOutputConfiguration *_p = soap_new___tmd__SetVideoOutputConfiguration(soap);
	if (_p)
	{	soap_default___tmd__SetVideoOutputConfiguration(soap, _p);
		_p->tmd__SetVideoOutputConfiguration = tmd__SetVideoOutputConfiguration;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tmd__SetVideoOutputConfiguration(struct soap*, const struct __tmd__SetVideoOutputConfiguration *, const char*, const char*);

#ifndef soap_write___tmd__SetVideoOutputConfiguration
#define soap_write___tmd__SetVideoOutputConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tmd__SetVideoOutputConfiguration(soap, data), 0) || soap_put___tmd__SetVideoOutputConfiguration(soap, data, "-tmd:SetVideoOutputConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tmd__SetVideoOutputConfiguration * SOAP_FMAC4 soap_get___tmd__SetVideoOutputConfiguration(struct soap*, struct __tmd__SetVideoOutputConfiguration *, const char*, const char*);

#ifndef soap_read___tmd__SetVideoOutputConfiguration
#define soap_read___tmd__SetVideoOutputConfiguration(soap, data) ( ((data) ? (soap_default___tmd__SetVideoOutputConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tmd__SetVideoOutputConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tmd__SetVideoSourceConfiguration
#define SOAP_TYPE___tmd__SetVideoSourceConfiguration (2020)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tmd__SetVideoSourceConfiguration(struct soap*, struct __tmd__SetVideoSourceConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tmd__SetVideoSourceConfiguration(struct soap*, const struct __tmd__SetVideoSourceConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tmd__SetVideoSourceConfiguration(struct soap*, const char*, int, const struct __tmd__SetVideoSourceConfiguration *, const char*);
SOAP_FMAC3 struct __tmd__SetVideoSourceConfiguration * SOAP_FMAC4 soap_in___tmd__SetVideoSourceConfiguration(struct soap*, const char*, struct __tmd__SetVideoSourceConfiguration *, const char*);
SOAP_FMAC1 struct __tmd__SetVideoSourceConfiguration * SOAP_FMAC2 soap_instantiate___tmd__SetVideoSourceConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tmd__SetVideoSourceConfiguration * soap_new___tmd__SetVideoSourceConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tmd__SetVideoSourceConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tmd__SetVideoSourceConfiguration * soap_new_req___tmd__SetVideoSourceConfiguration(
	struct soap *soap)
{	struct __tmd__SetVideoSourceConfiguration *_p = soap_new___tmd__SetVideoSourceConfiguration(soap);
	if (_p)
	{	soap_default___tmd__SetVideoSourceConfiguration(soap, _p);
	}
	return _p;
}

inline struct __tmd__SetVideoSourceConfiguration * soap_new_set___tmd__SetVideoSourceConfiguration(
	struct soap *soap,
	_tmd__SetVideoSourceConfiguration *tmd__SetVideoSourceConfiguration)
{	struct __tmd__SetVideoSourceConfiguration *_p = soap_new___tmd__SetVideoSourceConfiguration(soap);
	if (_p)
	{	soap_default___tmd__SetVideoSourceConfiguration(soap, _p);
		_p->tmd__SetVideoSourceConfiguration = tmd__SetVideoSourceConfiguration;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tmd__SetVideoSourceConfiguration(struct soap*, const struct __tmd__SetVideoSourceConfiguration *, const char*, const char*);

#ifndef soap_write___tmd__SetVideoSourceConfiguration
#define soap_write___tmd__SetVideoSourceConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tmd__SetVideoSourceConfiguration(soap, data), 0) || soap_put___tmd__SetVideoSourceConfiguration(soap, data, "-tmd:SetVideoSourceConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tmd__SetVideoSourceConfiguration * SOAP_FMAC4 soap_get___tmd__SetVideoSourceConfiguration(struct soap*, struct __tmd__SetVideoSourceConfiguration *, const char*, const char*);

#ifndef soap_read___tmd__SetVideoSourceConfiguration
#define soap_read___tmd__SetVideoSourceConfiguration(soap, data) ( ((data) ? (soap_default___tmd__SetVideoSourceConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tmd__SetVideoSourceConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tmd__GetAudioOutputConfiguration
#define SOAP_TYPE___tmd__GetAudioOutputConfiguration (2016)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tmd__GetAudioOutputConfiguration(struct soap*, struct __tmd__GetAudioOutputConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tmd__GetAudioOutputConfiguration(struct soap*, const struct __tmd__GetAudioOutputConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tmd__GetAudioOutputConfiguration(struct soap*, const char*, int, const struct __tmd__GetAudioOutputConfiguration *, const char*);
SOAP_FMAC3 struct __tmd__GetAudioOutputConfiguration * SOAP_FMAC4 soap_in___tmd__GetAudioOutputConfiguration(struct soap*, const char*, struct __tmd__GetAudioOutputConfiguration *, const char*);
SOAP_FMAC1 struct __tmd__GetAudioOutputConfiguration * SOAP_FMAC2 soap_instantiate___tmd__GetAudioOutputConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tmd__GetAudioOutputConfiguration * soap_new___tmd__GetAudioOutputConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tmd__GetAudioOutputConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tmd__GetAudioOutputConfiguration * soap_new_req___tmd__GetAudioOutputConfiguration(
	struct soap *soap)
{	struct __tmd__GetAudioOutputConfiguration *_p = soap_new___tmd__GetAudioOutputConfiguration(soap);
	if (_p)
	{	soap_default___tmd__GetAudioOutputConfiguration(soap, _p);
	}
	return _p;
}

inline struct __tmd__GetAudioOutputConfiguration * soap_new_set___tmd__GetAudioOutputConfiguration(
	struct soap *soap,
	_tmd__GetAudioOutputConfiguration *tmd__GetAudioOutputConfiguration)
{	struct __tmd__GetAudioOutputConfiguration *_p = soap_new___tmd__GetAudioOutputConfiguration(soap);
	if (_p)
	{	soap_default___tmd__GetAudioOutputConfiguration(soap, _p);
		_p->tmd__GetAudioOutputConfiguration = tmd__GetAudioOutputConfiguration;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tmd__GetAudioOutputConfiguration(struct soap*, const struct __tmd__GetAudioOutputConfiguration *, const char*, const char*);

#ifndef soap_write___tmd__GetAudioOutputConfiguration
#define soap_write___tmd__GetAudioOutputConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tmd__GetAudioOutputConfiguration(soap, data), 0) || soap_put___tmd__GetAudioOutputConfiguration(soap, data, "-tmd:GetAudioOutputConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tmd__GetAudioOutputConfiguration * SOAP_FMAC4 soap_get___tmd__GetAudioOutputConfiguration(struct soap*, struct __tmd__GetAudioOutputConfiguration *, const char*, const char*);

#ifndef soap_read___tmd__GetAudioOutputConfiguration
#define soap_read___tmd__GetAudioOutputConfiguration(soap, data) ( ((data) ? (soap_default___tmd__GetAudioOutputConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tmd__GetAudioOutputConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tmd__GetAudioSourceConfiguration
#define SOAP_TYPE___tmd__GetAudioSourceConfiguration (2012)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tmd__GetAudioSourceConfiguration(struct soap*, struct __tmd__GetAudioSourceConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tmd__GetAudioSourceConfiguration(struct soap*, const struct __tmd__GetAudioSourceConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tmd__GetAudioSourceConfiguration(struct soap*, const char*, int, const struct __tmd__GetAudioSourceConfiguration *, const char*);
SOAP_FMAC3 struct __tmd__GetAudioSourceConfiguration * SOAP_FMAC4 soap_in___tmd__GetAudioSourceConfiguration(struct soap*, const char*, struct __tmd__GetAudioSourceConfiguration *, const char*);
SOAP_FMAC1 struct __tmd__GetAudioSourceConfiguration * SOAP_FMAC2 soap_instantiate___tmd__GetAudioSourceConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tmd__GetAudioSourceConfiguration * soap_new___tmd__GetAudioSourceConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tmd__GetAudioSourceConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tmd__GetAudioSourceConfiguration * soap_new_req___tmd__GetAudioSourceConfiguration(
	struct soap *soap)
{	struct __tmd__GetAudioSourceConfiguration *_p = soap_new___tmd__GetAudioSourceConfiguration(soap);
	if (_p)
	{	soap_default___tmd__GetAudioSourceConfiguration(soap, _p);
	}
	return _p;
}

inline struct __tmd__GetAudioSourceConfiguration * soap_new_set___tmd__GetAudioSourceConfiguration(
	struct soap *soap,
	_tmd__GetAudioSourceConfiguration *tmd__GetAudioSourceConfiguration)
{	struct __tmd__GetAudioSourceConfiguration *_p = soap_new___tmd__GetAudioSourceConfiguration(soap);
	if (_p)
	{	soap_default___tmd__GetAudioSourceConfiguration(soap, _p);
		_p->tmd__GetAudioSourceConfiguration = tmd__GetAudioSourceConfiguration;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tmd__GetAudioSourceConfiguration(struct soap*, const struct __tmd__GetAudioSourceConfiguration *, const char*, const char*);

#ifndef soap_write___tmd__GetAudioSourceConfiguration
#define soap_write___tmd__GetAudioSourceConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tmd__GetAudioSourceConfiguration(soap, data), 0) || soap_put___tmd__GetAudioSourceConfiguration(soap, data, "-tmd:GetAudioSourceConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tmd__GetAudioSourceConfiguration * SOAP_FMAC4 soap_get___tmd__GetAudioSourceConfiguration(struct soap*, struct __tmd__GetAudioSourceConfiguration *, const char*, const char*);

#ifndef soap_read___tmd__GetAudioSourceConfiguration
#define soap_read___tmd__GetAudioSourceConfiguration(soap, data) ( ((data) ? (soap_default___tmd__GetAudioSourceConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tmd__GetAudioSourceConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tmd__GetVideoOutputConfiguration
#define SOAP_TYPE___tmd__GetVideoOutputConfiguration (2008)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tmd__GetVideoOutputConfiguration(struct soap*, struct __tmd__GetVideoOutputConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tmd__GetVideoOutputConfiguration(struct soap*, const struct __tmd__GetVideoOutputConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tmd__GetVideoOutputConfiguration(struct soap*, const char*, int, const struct __tmd__GetVideoOutputConfiguration *, const char*);
SOAP_FMAC3 struct __tmd__GetVideoOutputConfiguration * SOAP_FMAC4 soap_in___tmd__GetVideoOutputConfiguration(struct soap*, const char*, struct __tmd__GetVideoOutputConfiguration *, const char*);
SOAP_FMAC1 struct __tmd__GetVideoOutputConfiguration * SOAP_FMAC2 soap_instantiate___tmd__GetVideoOutputConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tmd__GetVideoOutputConfiguration * soap_new___tmd__GetVideoOutputConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tmd__GetVideoOutputConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tmd__GetVideoOutputConfiguration * soap_new_req___tmd__GetVideoOutputConfiguration(
	struct soap *soap)
{	struct __tmd__GetVideoOutputConfiguration *_p = soap_new___tmd__GetVideoOutputConfiguration(soap);
	if (_p)
	{	soap_default___tmd__GetVideoOutputConfiguration(soap, _p);
	}
	return _p;
}

inline struct __tmd__GetVideoOutputConfiguration * soap_new_set___tmd__GetVideoOutputConfiguration(
	struct soap *soap,
	_tmd__GetVideoOutputConfiguration *tmd__GetVideoOutputConfiguration)
{	struct __tmd__GetVideoOutputConfiguration *_p = soap_new___tmd__GetVideoOutputConfiguration(soap);
	if (_p)
	{	soap_default___tmd__GetVideoOutputConfiguration(soap, _p);
		_p->tmd__GetVideoOutputConfiguration = tmd__GetVideoOutputConfiguration;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tmd__GetVideoOutputConfiguration(struct soap*, const struct __tmd__GetVideoOutputConfiguration *, const char*, const char*);

#ifndef soap_write___tmd__GetVideoOutputConfiguration
#define soap_write___tmd__GetVideoOutputConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tmd__GetVideoOutputConfiguration(soap, data), 0) || soap_put___tmd__GetVideoOutputConfiguration(soap, data, "-tmd:GetVideoOutputConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tmd__GetVideoOutputConfiguration * SOAP_FMAC4 soap_get___tmd__GetVideoOutputConfiguration(struct soap*, struct __tmd__GetVideoOutputConfiguration *, const char*, const char*);

#ifndef soap_read___tmd__GetVideoOutputConfiguration
#define soap_read___tmd__GetVideoOutputConfiguration(soap, data) ( ((data) ? (soap_default___tmd__GetVideoOutputConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tmd__GetVideoOutputConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tmd__GetVideoSourceConfiguration
#define SOAP_TYPE___tmd__GetVideoSourceConfiguration (2004)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tmd__GetVideoSourceConfiguration(struct soap*, struct __tmd__GetVideoSourceConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tmd__GetVideoSourceConfiguration(struct soap*, const struct __tmd__GetVideoSourceConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tmd__GetVideoSourceConfiguration(struct soap*, const char*, int, const struct __tmd__GetVideoSourceConfiguration *, const char*);
SOAP_FMAC3 struct __tmd__GetVideoSourceConfiguration * SOAP_FMAC4 soap_in___tmd__GetVideoSourceConfiguration(struct soap*, const char*, struct __tmd__GetVideoSourceConfiguration *, const char*);
SOAP_FMAC1 struct __tmd__GetVideoSourceConfiguration * SOAP_FMAC2 soap_instantiate___tmd__GetVideoSourceConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tmd__GetVideoSourceConfiguration * soap_new___tmd__GetVideoSourceConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tmd__GetVideoSourceConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tmd__GetVideoSourceConfiguration * soap_new_req___tmd__GetVideoSourceConfiguration(
	struct soap *soap)
{	struct __tmd__GetVideoSourceConfiguration *_p = soap_new___tmd__GetVideoSourceConfiguration(soap);
	if (_p)
	{	soap_default___tmd__GetVideoSourceConfiguration(soap, _p);
	}
	return _p;
}

inline struct __tmd__GetVideoSourceConfiguration * soap_new_set___tmd__GetVideoSourceConfiguration(
	struct soap *soap,
	_tmd__GetVideoSourceConfiguration *tmd__GetVideoSourceConfiguration)
{	struct __tmd__GetVideoSourceConfiguration *_p = soap_new___tmd__GetVideoSourceConfiguration(soap);
	if (_p)
	{	soap_default___tmd__GetVideoSourceConfiguration(soap, _p);
		_p->tmd__GetVideoSourceConfiguration = tmd__GetVideoSourceConfiguration;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tmd__GetVideoSourceConfiguration(struct soap*, const struct __tmd__GetVideoSourceConfiguration *, const char*, const char*);

#ifndef soap_write___tmd__GetVideoSourceConfiguration
#define soap_write___tmd__GetVideoSourceConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tmd__GetVideoSourceConfiguration(soap, data), 0) || soap_put___tmd__GetVideoSourceConfiguration(soap, data, "-tmd:GetVideoSourceConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tmd__GetVideoSourceConfiguration * SOAP_FMAC4 soap_get___tmd__GetVideoSourceConfiguration(struct soap*, struct __tmd__GetVideoSourceConfiguration *, const char*, const char*);

#ifndef soap_read___tmd__GetVideoSourceConfiguration
#define soap_read___tmd__GetVideoSourceConfiguration(soap, data) ( ((data) ? (soap_default___tmd__GetVideoSourceConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tmd__GetVideoSourceConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tmd__GetVideoOutputs
#define SOAP_TYPE___tmd__GetVideoOutputs (2000)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tmd__GetVideoOutputs(struct soap*, struct __tmd__GetVideoOutputs *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tmd__GetVideoOutputs(struct soap*, const struct __tmd__GetVideoOutputs *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tmd__GetVideoOutputs(struct soap*, const char*, int, const struct __tmd__GetVideoOutputs *, const char*);
SOAP_FMAC3 struct __tmd__GetVideoOutputs * SOAP_FMAC4 soap_in___tmd__GetVideoOutputs(struct soap*, const char*, struct __tmd__GetVideoOutputs *, const char*);
SOAP_FMAC1 struct __tmd__GetVideoOutputs * SOAP_FMAC2 soap_instantiate___tmd__GetVideoOutputs(struct soap*, int, const char*, const char*, size_t*);

inline struct __tmd__GetVideoOutputs * soap_new___tmd__GetVideoOutputs(struct soap *soap, int n = -1) { return soap_instantiate___tmd__GetVideoOutputs(soap, n, NULL, NULL, NULL); }

inline struct __tmd__GetVideoOutputs * soap_new_req___tmd__GetVideoOutputs(
	struct soap *soap)
{	struct __tmd__GetVideoOutputs *_p = soap_new___tmd__GetVideoOutputs(soap);
	if (_p)
	{	soap_default___tmd__GetVideoOutputs(soap, _p);
	}
	return _p;
}

inline struct __tmd__GetVideoOutputs * soap_new_set___tmd__GetVideoOutputs(
	struct soap *soap,
	_tmd__GetVideoOutputs *tmd__GetVideoOutputs)
{	struct __tmd__GetVideoOutputs *_p = soap_new___tmd__GetVideoOutputs(soap);
	if (_p)
	{	soap_default___tmd__GetVideoOutputs(soap, _p);
		_p->tmd__GetVideoOutputs = tmd__GetVideoOutputs;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tmd__GetVideoOutputs(struct soap*, const struct __tmd__GetVideoOutputs *, const char*, const char*);

#ifndef soap_write___tmd__GetVideoOutputs
#define soap_write___tmd__GetVideoOutputs(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tmd__GetVideoOutputs(soap, data), 0) || soap_put___tmd__GetVideoOutputs(soap, data, "-tmd:GetVideoOutputs", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tmd__GetVideoOutputs * SOAP_FMAC4 soap_get___tmd__GetVideoOutputs(struct soap*, struct __tmd__GetVideoOutputs *, const char*, const char*);

#ifndef soap_read___tmd__GetVideoOutputs
#define soap_read___tmd__GetVideoOutputs(soap, data) ( ((data) ? (soap_default___tmd__GetVideoOutputs(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tmd__GetVideoOutputs(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tmd__GetVideoSources
#define SOAP_TYPE___tmd__GetVideoSources (1996)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tmd__GetVideoSources(struct soap*, struct __tmd__GetVideoSources *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tmd__GetVideoSources(struct soap*, const struct __tmd__GetVideoSources *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tmd__GetVideoSources(struct soap*, const char*, int, const struct __tmd__GetVideoSources *, const char*);
SOAP_FMAC3 struct __tmd__GetVideoSources * SOAP_FMAC4 soap_in___tmd__GetVideoSources(struct soap*, const char*, struct __tmd__GetVideoSources *, const char*);
SOAP_FMAC1 struct __tmd__GetVideoSources * SOAP_FMAC2 soap_instantiate___tmd__GetVideoSources(struct soap*, int, const char*, const char*, size_t*);

inline struct __tmd__GetVideoSources * soap_new___tmd__GetVideoSources(struct soap *soap, int n = -1) { return soap_instantiate___tmd__GetVideoSources(soap, n, NULL, NULL, NULL); }

inline struct __tmd__GetVideoSources * soap_new_req___tmd__GetVideoSources(
	struct soap *soap)
{	struct __tmd__GetVideoSources *_p = soap_new___tmd__GetVideoSources(soap);
	if (_p)
	{	soap_default___tmd__GetVideoSources(soap, _p);
	}
	return _p;
}

inline struct __tmd__GetVideoSources * soap_new_set___tmd__GetVideoSources(
	struct soap *soap,
	tmd__Get *tmd__GetVideoSources)
{	struct __tmd__GetVideoSources *_p = soap_new___tmd__GetVideoSources(soap);
	if (_p)
	{	soap_default___tmd__GetVideoSources(soap, _p);
		_p->tmd__GetVideoSources = tmd__GetVideoSources;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tmd__GetVideoSources(struct soap*, const struct __tmd__GetVideoSources *, const char*, const char*);

#ifndef soap_write___tmd__GetVideoSources
#define soap_write___tmd__GetVideoSources(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tmd__GetVideoSources(soap, data), 0) || soap_put___tmd__GetVideoSources(soap, data, "-tmd:GetVideoSources", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tmd__GetVideoSources * SOAP_FMAC4 soap_get___tmd__GetVideoSources(struct soap*, struct __tmd__GetVideoSources *, const char*, const char*);

#ifndef soap_read___tmd__GetVideoSources
#define soap_read___tmd__GetVideoSources(soap, data) ( ((data) ? (soap_default___tmd__GetVideoSources(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tmd__GetVideoSources(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tmd__GetAudioOutputs
#define SOAP_TYPE___tmd__GetAudioOutputs (1994)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tmd__GetAudioOutputs(struct soap*, struct __tmd__GetAudioOutputs *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tmd__GetAudioOutputs(struct soap*, const struct __tmd__GetAudioOutputs *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tmd__GetAudioOutputs(struct soap*, const char*, int, const struct __tmd__GetAudioOutputs *, const char*);
SOAP_FMAC3 struct __tmd__GetAudioOutputs * SOAP_FMAC4 soap_in___tmd__GetAudioOutputs(struct soap*, const char*, struct __tmd__GetAudioOutputs *, const char*);
SOAP_FMAC1 struct __tmd__GetAudioOutputs * SOAP_FMAC2 soap_instantiate___tmd__GetAudioOutputs(struct soap*, int, const char*, const char*, size_t*);

inline struct __tmd__GetAudioOutputs * soap_new___tmd__GetAudioOutputs(struct soap *soap, int n = -1) { return soap_instantiate___tmd__GetAudioOutputs(soap, n, NULL, NULL, NULL); }

inline struct __tmd__GetAudioOutputs * soap_new_req___tmd__GetAudioOutputs(
	struct soap *soap)
{	struct __tmd__GetAudioOutputs *_p = soap_new___tmd__GetAudioOutputs(soap);
	if (_p)
	{	soap_default___tmd__GetAudioOutputs(soap, _p);
	}
	return _p;
}

inline struct __tmd__GetAudioOutputs * soap_new_set___tmd__GetAudioOutputs(
	struct soap *soap,
	tmd__Get *tmd__GetAudioOutputs)
{	struct __tmd__GetAudioOutputs *_p = soap_new___tmd__GetAudioOutputs(soap);
	if (_p)
	{	soap_default___tmd__GetAudioOutputs(soap, _p);
		_p->tmd__GetAudioOutputs = tmd__GetAudioOutputs;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tmd__GetAudioOutputs(struct soap*, const struct __tmd__GetAudioOutputs *, const char*, const char*);

#ifndef soap_write___tmd__GetAudioOutputs
#define soap_write___tmd__GetAudioOutputs(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tmd__GetAudioOutputs(soap, data), 0) || soap_put___tmd__GetAudioOutputs(soap, data, "-tmd:GetAudioOutputs", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tmd__GetAudioOutputs * SOAP_FMAC4 soap_get___tmd__GetAudioOutputs(struct soap*, struct __tmd__GetAudioOutputs *, const char*, const char*);

#ifndef soap_read___tmd__GetAudioOutputs
#define soap_read___tmd__GetAudioOutputs(soap, data) ( ((data) ? (soap_default___tmd__GetAudioOutputs(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tmd__GetAudioOutputs(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tmd__GetAudioSources
#define SOAP_TYPE___tmd__GetAudioSources (1992)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tmd__GetAudioSources(struct soap*, struct __tmd__GetAudioSources *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tmd__GetAudioSources(struct soap*, const struct __tmd__GetAudioSources *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tmd__GetAudioSources(struct soap*, const char*, int, const struct __tmd__GetAudioSources *, const char*);
SOAP_FMAC3 struct __tmd__GetAudioSources * SOAP_FMAC4 soap_in___tmd__GetAudioSources(struct soap*, const char*, struct __tmd__GetAudioSources *, const char*);
SOAP_FMAC1 struct __tmd__GetAudioSources * SOAP_FMAC2 soap_instantiate___tmd__GetAudioSources(struct soap*, int, const char*, const char*, size_t*);

inline struct __tmd__GetAudioSources * soap_new___tmd__GetAudioSources(struct soap *soap, int n = -1) { return soap_instantiate___tmd__GetAudioSources(soap, n, NULL, NULL, NULL); }

inline struct __tmd__GetAudioSources * soap_new_req___tmd__GetAudioSources(
	struct soap *soap)
{	struct __tmd__GetAudioSources *_p = soap_new___tmd__GetAudioSources(soap);
	if (_p)
	{	soap_default___tmd__GetAudioSources(soap, _p);
	}
	return _p;
}

inline struct __tmd__GetAudioSources * soap_new_set___tmd__GetAudioSources(
	struct soap *soap,
	tmd__Get *tmd__GetAudioSources)
{	struct __tmd__GetAudioSources *_p = soap_new___tmd__GetAudioSources(soap);
	if (_p)
	{	soap_default___tmd__GetAudioSources(soap, _p);
		_p->tmd__GetAudioSources = tmd__GetAudioSources;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tmd__GetAudioSources(struct soap*, const struct __tmd__GetAudioSources *, const char*, const char*);

#ifndef soap_write___tmd__GetAudioSources
#define soap_write___tmd__GetAudioSources(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tmd__GetAudioSources(soap, data), 0) || soap_put___tmd__GetAudioSources(soap, data, "-tmd:GetAudioSources", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tmd__GetAudioSources * SOAP_FMAC4 soap_get___tmd__GetAudioSources(struct soap*, struct __tmd__GetAudioSources *, const char*, const char*);

#ifndef soap_read___tmd__GetAudioSources
#define soap_read___tmd__GetAudioSources(soap, data) ( ((data) ? (soap_default___tmd__GetAudioSources(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tmd__GetAudioSources(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tmd__GetRelayOutputOptions
#define SOAP_TYPE___tmd__GetRelayOutputOptions (1988)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tmd__GetRelayOutputOptions(struct soap*, struct __tmd__GetRelayOutputOptions *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tmd__GetRelayOutputOptions(struct soap*, const struct __tmd__GetRelayOutputOptions *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tmd__GetRelayOutputOptions(struct soap*, const char*, int, const struct __tmd__GetRelayOutputOptions *, const char*);
SOAP_FMAC3 struct __tmd__GetRelayOutputOptions * SOAP_FMAC4 soap_in___tmd__GetRelayOutputOptions(struct soap*, const char*, struct __tmd__GetRelayOutputOptions *, const char*);
SOAP_FMAC1 struct __tmd__GetRelayOutputOptions * SOAP_FMAC2 soap_instantiate___tmd__GetRelayOutputOptions(struct soap*, int, const char*, const char*, size_t*);

inline struct __tmd__GetRelayOutputOptions * soap_new___tmd__GetRelayOutputOptions(struct soap *soap, int n = -1) { return soap_instantiate___tmd__GetRelayOutputOptions(soap, n, NULL, NULL, NULL); }

inline struct __tmd__GetRelayOutputOptions * soap_new_req___tmd__GetRelayOutputOptions(
	struct soap *soap)
{	struct __tmd__GetRelayOutputOptions *_p = soap_new___tmd__GetRelayOutputOptions(soap);
	if (_p)
	{	soap_default___tmd__GetRelayOutputOptions(soap, _p);
	}
	return _p;
}

inline struct __tmd__GetRelayOutputOptions * soap_new_set___tmd__GetRelayOutputOptions(
	struct soap *soap,
	_tmd__GetRelayOutputOptions *tmd__GetRelayOutputOptions)
{	struct __tmd__GetRelayOutputOptions *_p = soap_new___tmd__GetRelayOutputOptions(soap);
	if (_p)
	{	soap_default___tmd__GetRelayOutputOptions(soap, _p);
		_p->tmd__GetRelayOutputOptions = tmd__GetRelayOutputOptions;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tmd__GetRelayOutputOptions(struct soap*, const struct __tmd__GetRelayOutputOptions *, const char*, const char*);

#ifndef soap_write___tmd__GetRelayOutputOptions
#define soap_write___tmd__GetRelayOutputOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tmd__GetRelayOutputOptions(soap, data), 0) || soap_put___tmd__GetRelayOutputOptions(soap, data, "-tmd:GetRelayOutputOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tmd__GetRelayOutputOptions * SOAP_FMAC4 soap_get___tmd__GetRelayOutputOptions(struct soap*, struct __tmd__GetRelayOutputOptions *, const char*, const char*);

#ifndef soap_read___tmd__GetRelayOutputOptions
#define soap_read___tmd__GetRelayOutputOptions(soap, data) ( ((data) ? (soap_default___tmd__GetRelayOutputOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tmd__GetRelayOutputOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tmd__GetServiceCapabilities
#define SOAP_TYPE___tmd__GetServiceCapabilities (1984)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tmd__GetServiceCapabilities(struct soap*, struct __tmd__GetServiceCapabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tmd__GetServiceCapabilities(struct soap*, const struct __tmd__GetServiceCapabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tmd__GetServiceCapabilities(struct soap*, const char*, int, const struct __tmd__GetServiceCapabilities *, const char*);
SOAP_FMAC3 struct __tmd__GetServiceCapabilities * SOAP_FMAC4 soap_in___tmd__GetServiceCapabilities(struct soap*, const char*, struct __tmd__GetServiceCapabilities *, const char*);
SOAP_FMAC1 struct __tmd__GetServiceCapabilities * SOAP_FMAC2 soap_instantiate___tmd__GetServiceCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline struct __tmd__GetServiceCapabilities * soap_new___tmd__GetServiceCapabilities(struct soap *soap, int n = -1) { return soap_instantiate___tmd__GetServiceCapabilities(soap, n, NULL, NULL, NULL); }

inline struct __tmd__GetServiceCapabilities * soap_new_req___tmd__GetServiceCapabilities(
	struct soap *soap)
{	struct __tmd__GetServiceCapabilities *_p = soap_new___tmd__GetServiceCapabilities(soap);
	if (_p)
	{	soap_default___tmd__GetServiceCapabilities(soap, _p);
	}
	return _p;
}

inline struct __tmd__GetServiceCapabilities * soap_new_set___tmd__GetServiceCapabilities(
	struct soap *soap,
	_tmd__GetServiceCapabilities *tmd__GetServiceCapabilities)
{	struct __tmd__GetServiceCapabilities *_p = soap_new___tmd__GetServiceCapabilities(soap);
	if (_p)
	{	soap_default___tmd__GetServiceCapabilities(soap, _p);
		_p->tmd__GetServiceCapabilities = tmd__GetServiceCapabilities;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tmd__GetServiceCapabilities(struct soap*, const struct __tmd__GetServiceCapabilities *, const char*, const char*);

#ifndef soap_write___tmd__GetServiceCapabilities
#define soap_write___tmd__GetServiceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tmd__GetServiceCapabilities(soap, data), 0) || soap_put___tmd__GetServiceCapabilities(soap, data, "-tmd:GetServiceCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tmd__GetServiceCapabilities * SOAP_FMAC4 soap_get___tmd__GetServiceCapabilities(struct soap*, struct __tmd__GetServiceCapabilities *, const char*, const char*);

#ifndef soap_read___tmd__GetServiceCapabilities
#define soap_read___tmd__GetServiceCapabilities(soap, data) ( ((data) ? (soap_default___tmd__GetServiceCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tmd__GetServiceCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tls__DeletePaneConfiguration
#define SOAP_TYPE___tls__DeletePaneConfiguration (1980)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tls__DeletePaneConfiguration(struct soap*, struct __tls__DeletePaneConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tls__DeletePaneConfiguration(struct soap*, const struct __tls__DeletePaneConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tls__DeletePaneConfiguration(struct soap*, const char*, int, const struct __tls__DeletePaneConfiguration *, const char*);
SOAP_FMAC3 struct __tls__DeletePaneConfiguration * SOAP_FMAC4 soap_in___tls__DeletePaneConfiguration(struct soap*, const char*, struct __tls__DeletePaneConfiguration *, const char*);
SOAP_FMAC1 struct __tls__DeletePaneConfiguration * SOAP_FMAC2 soap_instantiate___tls__DeletePaneConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tls__DeletePaneConfiguration * soap_new___tls__DeletePaneConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tls__DeletePaneConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tls__DeletePaneConfiguration * soap_new_req___tls__DeletePaneConfiguration(
	struct soap *soap)
{	struct __tls__DeletePaneConfiguration *_p = soap_new___tls__DeletePaneConfiguration(soap);
	if (_p)
	{	soap_default___tls__DeletePaneConfiguration(soap, _p);
	}
	return _p;
}

inline struct __tls__DeletePaneConfiguration * soap_new_set___tls__DeletePaneConfiguration(
	struct soap *soap,
	_tls__DeletePaneConfiguration *tls__DeletePaneConfiguration)
{	struct __tls__DeletePaneConfiguration *_p = soap_new___tls__DeletePaneConfiguration(soap);
	if (_p)
	{	soap_default___tls__DeletePaneConfiguration(soap, _p);
		_p->tls__DeletePaneConfiguration = tls__DeletePaneConfiguration;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tls__DeletePaneConfiguration(struct soap*, const struct __tls__DeletePaneConfiguration *, const char*, const char*);

#ifndef soap_write___tls__DeletePaneConfiguration
#define soap_write___tls__DeletePaneConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tls__DeletePaneConfiguration(soap, data), 0) || soap_put___tls__DeletePaneConfiguration(soap, data, "-tls:DeletePaneConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tls__DeletePaneConfiguration * SOAP_FMAC4 soap_get___tls__DeletePaneConfiguration(struct soap*, struct __tls__DeletePaneConfiguration *, const char*, const char*);

#ifndef soap_read___tls__DeletePaneConfiguration
#define soap_read___tls__DeletePaneConfiguration(soap, data) ( ((data) ? (soap_default___tls__DeletePaneConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tls__DeletePaneConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tls__CreatePaneConfiguration
#define SOAP_TYPE___tls__CreatePaneConfiguration (1976)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tls__CreatePaneConfiguration(struct soap*, struct __tls__CreatePaneConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tls__CreatePaneConfiguration(struct soap*, const struct __tls__CreatePaneConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tls__CreatePaneConfiguration(struct soap*, const char*, int, const struct __tls__CreatePaneConfiguration *, const char*);
SOAP_FMAC3 struct __tls__CreatePaneConfiguration * SOAP_FMAC4 soap_in___tls__CreatePaneConfiguration(struct soap*, const char*, struct __tls__CreatePaneConfiguration *, const char*);
SOAP_FMAC1 struct __tls__CreatePaneConfiguration * SOAP_FMAC2 soap_instantiate___tls__CreatePaneConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tls__CreatePaneConfiguration * soap_new___tls__CreatePaneConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tls__CreatePaneConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tls__CreatePaneConfiguration * soap_new_req___tls__CreatePaneConfiguration(
	struct soap *soap)
{	struct __tls__CreatePaneConfiguration *_p = soap_new___tls__CreatePaneConfiguration(soap);
	if (_p)
	{	soap_default___tls__CreatePaneConfiguration(soap, _p);
	}
	return _p;
}

inline struct __tls__CreatePaneConfiguration * soap_new_set___tls__CreatePaneConfiguration(
	struct soap *soap,
	_tls__CreatePaneConfiguration *tls__CreatePaneConfiguration)
{	struct __tls__CreatePaneConfiguration *_p = soap_new___tls__CreatePaneConfiguration(soap);
	if (_p)
	{	soap_default___tls__CreatePaneConfiguration(soap, _p);
		_p->tls__CreatePaneConfiguration = tls__CreatePaneConfiguration;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tls__CreatePaneConfiguration(struct soap*, const struct __tls__CreatePaneConfiguration *, const char*, const char*);

#ifndef soap_write___tls__CreatePaneConfiguration
#define soap_write___tls__CreatePaneConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tls__CreatePaneConfiguration(soap, data), 0) || soap_put___tls__CreatePaneConfiguration(soap, data, "-tls:CreatePaneConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tls__CreatePaneConfiguration * SOAP_FMAC4 soap_get___tls__CreatePaneConfiguration(struct soap*, struct __tls__CreatePaneConfiguration *, const char*, const char*);

#ifndef soap_read___tls__CreatePaneConfiguration
#define soap_read___tls__CreatePaneConfiguration(soap, data) ( ((data) ? (soap_default___tls__CreatePaneConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tls__CreatePaneConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tls__SetPaneConfiguration
#define SOAP_TYPE___tls__SetPaneConfiguration (1972)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tls__SetPaneConfiguration(struct soap*, struct __tls__SetPaneConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tls__SetPaneConfiguration(struct soap*, const struct __tls__SetPaneConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tls__SetPaneConfiguration(struct soap*, const char*, int, const struct __tls__SetPaneConfiguration *, const char*);
SOAP_FMAC3 struct __tls__SetPaneConfiguration * SOAP_FMAC4 soap_in___tls__SetPaneConfiguration(struct soap*, const char*, struct __tls__SetPaneConfiguration *, const char*);
SOAP_FMAC1 struct __tls__SetPaneConfiguration * SOAP_FMAC2 soap_instantiate___tls__SetPaneConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tls__SetPaneConfiguration * soap_new___tls__SetPaneConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tls__SetPaneConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tls__SetPaneConfiguration * soap_new_req___tls__SetPaneConfiguration(
	struct soap *soap)
{	struct __tls__SetPaneConfiguration *_p = soap_new___tls__SetPaneConfiguration(soap);
	if (_p)
	{	soap_default___tls__SetPaneConfiguration(soap, _p);
	}
	return _p;
}

inline struct __tls__SetPaneConfiguration * soap_new_set___tls__SetPaneConfiguration(
	struct soap *soap,
	_tls__SetPaneConfiguration *tls__SetPaneConfiguration)
{	struct __tls__SetPaneConfiguration *_p = soap_new___tls__SetPaneConfiguration(soap);
	if (_p)
	{	soap_default___tls__SetPaneConfiguration(soap, _p);
		_p->tls__SetPaneConfiguration = tls__SetPaneConfiguration;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tls__SetPaneConfiguration(struct soap*, const struct __tls__SetPaneConfiguration *, const char*, const char*);

#ifndef soap_write___tls__SetPaneConfiguration
#define soap_write___tls__SetPaneConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tls__SetPaneConfiguration(soap, data), 0) || soap_put___tls__SetPaneConfiguration(soap, data, "-tls:SetPaneConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tls__SetPaneConfiguration * SOAP_FMAC4 soap_get___tls__SetPaneConfiguration(struct soap*, struct __tls__SetPaneConfiguration *, const char*, const char*);

#ifndef soap_read___tls__SetPaneConfiguration
#define soap_read___tls__SetPaneConfiguration(soap, data) ( ((data) ? (soap_default___tls__SetPaneConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tls__SetPaneConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tls__SetPaneConfigurations
#define SOAP_TYPE___tls__SetPaneConfigurations (1968)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tls__SetPaneConfigurations(struct soap*, struct __tls__SetPaneConfigurations *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tls__SetPaneConfigurations(struct soap*, const struct __tls__SetPaneConfigurations *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tls__SetPaneConfigurations(struct soap*, const char*, int, const struct __tls__SetPaneConfigurations *, const char*);
SOAP_FMAC3 struct __tls__SetPaneConfigurations * SOAP_FMAC4 soap_in___tls__SetPaneConfigurations(struct soap*, const char*, struct __tls__SetPaneConfigurations *, const char*);
SOAP_FMAC1 struct __tls__SetPaneConfigurations * SOAP_FMAC2 soap_instantiate___tls__SetPaneConfigurations(struct soap*, int, const char*, const char*, size_t*);

inline struct __tls__SetPaneConfigurations * soap_new___tls__SetPaneConfigurations(struct soap *soap, int n = -1) { return soap_instantiate___tls__SetPaneConfigurations(soap, n, NULL, NULL, NULL); }

inline struct __tls__SetPaneConfigurations * soap_new_req___tls__SetPaneConfigurations(
	struct soap *soap)
{	struct __tls__SetPaneConfigurations *_p = soap_new___tls__SetPaneConfigurations(soap);
	if (_p)
	{	soap_default___tls__SetPaneConfigurations(soap, _p);
	}
	return _p;
}

inline struct __tls__SetPaneConfigurations * soap_new_set___tls__SetPaneConfigurations(
	struct soap *soap,
	_tls__SetPaneConfigurations *tls__SetPaneConfigurations)
{	struct __tls__SetPaneConfigurations *_p = soap_new___tls__SetPaneConfigurations(soap);
	if (_p)
	{	soap_default___tls__SetPaneConfigurations(soap, _p);
		_p->tls__SetPaneConfigurations = tls__SetPaneConfigurations;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tls__SetPaneConfigurations(struct soap*, const struct __tls__SetPaneConfigurations *, const char*, const char*);

#ifndef soap_write___tls__SetPaneConfigurations
#define soap_write___tls__SetPaneConfigurations(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tls__SetPaneConfigurations(soap, data), 0) || soap_put___tls__SetPaneConfigurations(soap, data, "-tls:SetPaneConfigurations", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tls__SetPaneConfigurations * SOAP_FMAC4 soap_get___tls__SetPaneConfigurations(struct soap*, struct __tls__SetPaneConfigurations *, const char*, const char*);

#ifndef soap_read___tls__SetPaneConfigurations
#define soap_read___tls__SetPaneConfigurations(soap, data) ( ((data) ? (soap_default___tls__SetPaneConfigurations(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tls__SetPaneConfigurations(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tls__GetPaneConfiguration
#define SOAP_TYPE___tls__GetPaneConfiguration (1964)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tls__GetPaneConfiguration(struct soap*, struct __tls__GetPaneConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tls__GetPaneConfiguration(struct soap*, const struct __tls__GetPaneConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tls__GetPaneConfiguration(struct soap*, const char*, int, const struct __tls__GetPaneConfiguration *, const char*);
SOAP_FMAC3 struct __tls__GetPaneConfiguration * SOAP_FMAC4 soap_in___tls__GetPaneConfiguration(struct soap*, const char*, struct __tls__GetPaneConfiguration *, const char*);
SOAP_FMAC1 struct __tls__GetPaneConfiguration * SOAP_FMAC2 soap_instantiate___tls__GetPaneConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tls__GetPaneConfiguration * soap_new___tls__GetPaneConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tls__GetPaneConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tls__GetPaneConfiguration * soap_new_req___tls__GetPaneConfiguration(
	struct soap *soap)
{	struct __tls__GetPaneConfiguration *_p = soap_new___tls__GetPaneConfiguration(soap);
	if (_p)
	{	soap_default___tls__GetPaneConfiguration(soap, _p);
	}
	return _p;
}

inline struct __tls__GetPaneConfiguration * soap_new_set___tls__GetPaneConfiguration(
	struct soap *soap,
	_tls__GetPaneConfiguration *tls__GetPaneConfiguration)
{	struct __tls__GetPaneConfiguration *_p = soap_new___tls__GetPaneConfiguration(soap);
	if (_p)
	{	soap_default___tls__GetPaneConfiguration(soap, _p);
		_p->tls__GetPaneConfiguration = tls__GetPaneConfiguration;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tls__GetPaneConfiguration(struct soap*, const struct __tls__GetPaneConfiguration *, const char*, const char*);

#ifndef soap_write___tls__GetPaneConfiguration
#define soap_write___tls__GetPaneConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tls__GetPaneConfiguration(soap, data), 0) || soap_put___tls__GetPaneConfiguration(soap, data, "-tls:GetPaneConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tls__GetPaneConfiguration * SOAP_FMAC4 soap_get___tls__GetPaneConfiguration(struct soap*, struct __tls__GetPaneConfiguration *, const char*, const char*);

#ifndef soap_read___tls__GetPaneConfiguration
#define soap_read___tls__GetPaneConfiguration(soap, data) ( ((data) ? (soap_default___tls__GetPaneConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tls__GetPaneConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tls__GetPaneConfigurations
#define SOAP_TYPE___tls__GetPaneConfigurations (1960)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tls__GetPaneConfigurations(struct soap*, struct __tls__GetPaneConfigurations *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tls__GetPaneConfigurations(struct soap*, const struct __tls__GetPaneConfigurations *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tls__GetPaneConfigurations(struct soap*, const char*, int, const struct __tls__GetPaneConfigurations *, const char*);
SOAP_FMAC3 struct __tls__GetPaneConfigurations * SOAP_FMAC4 soap_in___tls__GetPaneConfigurations(struct soap*, const char*, struct __tls__GetPaneConfigurations *, const char*);
SOAP_FMAC1 struct __tls__GetPaneConfigurations * SOAP_FMAC2 soap_instantiate___tls__GetPaneConfigurations(struct soap*, int, const char*, const char*, size_t*);

inline struct __tls__GetPaneConfigurations * soap_new___tls__GetPaneConfigurations(struct soap *soap, int n = -1) { return soap_instantiate___tls__GetPaneConfigurations(soap, n, NULL, NULL, NULL); }

inline struct __tls__GetPaneConfigurations * soap_new_req___tls__GetPaneConfigurations(
	struct soap *soap)
{	struct __tls__GetPaneConfigurations *_p = soap_new___tls__GetPaneConfigurations(soap);
	if (_p)
	{	soap_default___tls__GetPaneConfigurations(soap, _p);
	}
	return _p;
}

inline struct __tls__GetPaneConfigurations * soap_new_set___tls__GetPaneConfigurations(
	struct soap *soap,
	_tls__GetPaneConfigurations *tls__GetPaneConfigurations)
{	struct __tls__GetPaneConfigurations *_p = soap_new___tls__GetPaneConfigurations(soap);
	if (_p)
	{	soap_default___tls__GetPaneConfigurations(soap, _p);
		_p->tls__GetPaneConfigurations = tls__GetPaneConfigurations;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tls__GetPaneConfigurations(struct soap*, const struct __tls__GetPaneConfigurations *, const char*, const char*);

#ifndef soap_write___tls__GetPaneConfigurations
#define soap_write___tls__GetPaneConfigurations(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tls__GetPaneConfigurations(soap, data), 0) || soap_put___tls__GetPaneConfigurations(soap, data, "-tls:GetPaneConfigurations", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tls__GetPaneConfigurations * SOAP_FMAC4 soap_get___tls__GetPaneConfigurations(struct soap*, struct __tls__GetPaneConfigurations *, const char*, const char*);

#ifndef soap_read___tls__GetPaneConfigurations
#define soap_read___tls__GetPaneConfigurations(soap, data) ( ((data) ? (soap_default___tls__GetPaneConfigurations(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tls__GetPaneConfigurations(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tls__GetDisplayOptions
#define SOAP_TYPE___tls__GetDisplayOptions (1956)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tls__GetDisplayOptions(struct soap*, struct __tls__GetDisplayOptions *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tls__GetDisplayOptions(struct soap*, const struct __tls__GetDisplayOptions *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tls__GetDisplayOptions(struct soap*, const char*, int, const struct __tls__GetDisplayOptions *, const char*);
SOAP_FMAC3 struct __tls__GetDisplayOptions * SOAP_FMAC4 soap_in___tls__GetDisplayOptions(struct soap*, const char*, struct __tls__GetDisplayOptions *, const char*);
SOAP_FMAC1 struct __tls__GetDisplayOptions * SOAP_FMAC2 soap_instantiate___tls__GetDisplayOptions(struct soap*, int, const char*, const char*, size_t*);

inline struct __tls__GetDisplayOptions * soap_new___tls__GetDisplayOptions(struct soap *soap, int n = -1) { return soap_instantiate___tls__GetDisplayOptions(soap, n, NULL, NULL, NULL); }

inline struct __tls__GetDisplayOptions * soap_new_req___tls__GetDisplayOptions(
	struct soap *soap)
{	struct __tls__GetDisplayOptions *_p = soap_new___tls__GetDisplayOptions(soap);
	if (_p)
	{	soap_default___tls__GetDisplayOptions(soap, _p);
	}
	return _p;
}

inline struct __tls__GetDisplayOptions * soap_new_set___tls__GetDisplayOptions(
	struct soap *soap,
	_tls__GetDisplayOptions *tls__GetDisplayOptions)
{	struct __tls__GetDisplayOptions *_p = soap_new___tls__GetDisplayOptions(soap);
	if (_p)
	{	soap_default___tls__GetDisplayOptions(soap, _p);
		_p->tls__GetDisplayOptions = tls__GetDisplayOptions;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tls__GetDisplayOptions(struct soap*, const struct __tls__GetDisplayOptions *, const char*, const char*);

#ifndef soap_write___tls__GetDisplayOptions
#define soap_write___tls__GetDisplayOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tls__GetDisplayOptions(soap, data), 0) || soap_put___tls__GetDisplayOptions(soap, data, "-tls:GetDisplayOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tls__GetDisplayOptions * SOAP_FMAC4 soap_get___tls__GetDisplayOptions(struct soap*, struct __tls__GetDisplayOptions *, const char*, const char*);

#ifndef soap_read___tls__GetDisplayOptions
#define soap_read___tls__GetDisplayOptions(soap, data) ( ((data) ? (soap_default___tls__GetDisplayOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tls__GetDisplayOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tls__SetLayout
#define SOAP_TYPE___tls__SetLayout (1952)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tls__SetLayout(struct soap*, struct __tls__SetLayout *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tls__SetLayout(struct soap*, const struct __tls__SetLayout *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tls__SetLayout(struct soap*, const char*, int, const struct __tls__SetLayout *, const char*);
SOAP_FMAC3 struct __tls__SetLayout * SOAP_FMAC4 soap_in___tls__SetLayout(struct soap*, const char*, struct __tls__SetLayout *, const char*);
SOAP_FMAC1 struct __tls__SetLayout * SOAP_FMAC2 soap_instantiate___tls__SetLayout(struct soap*, int, const char*, const char*, size_t*);

inline struct __tls__SetLayout * soap_new___tls__SetLayout(struct soap *soap, int n = -1) { return soap_instantiate___tls__SetLayout(soap, n, NULL, NULL, NULL); }

inline struct __tls__SetLayout * soap_new_req___tls__SetLayout(
	struct soap *soap)
{	struct __tls__SetLayout *_p = soap_new___tls__SetLayout(soap);
	if (_p)
	{	soap_default___tls__SetLayout(soap, _p);
	}
	return _p;
}

inline struct __tls__SetLayout * soap_new_set___tls__SetLayout(
	struct soap *soap,
	_tls__SetLayout *tls__SetLayout)
{	struct __tls__SetLayout *_p = soap_new___tls__SetLayout(soap);
	if (_p)
	{	soap_default___tls__SetLayout(soap, _p);
		_p->tls__SetLayout = tls__SetLayout;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tls__SetLayout(struct soap*, const struct __tls__SetLayout *, const char*, const char*);

#ifndef soap_write___tls__SetLayout
#define soap_write___tls__SetLayout(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tls__SetLayout(soap, data), 0) || soap_put___tls__SetLayout(soap, data, "-tls:SetLayout", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tls__SetLayout * SOAP_FMAC4 soap_get___tls__SetLayout(struct soap*, struct __tls__SetLayout *, const char*, const char*);

#ifndef soap_read___tls__SetLayout
#define soap_read___tls__SetLayout(soap, data) ( ((data) ? (soap_default___tls__SetLayout(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tls__SetLayout(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tls__GetLayout
#define SOAP_TYPE___tls__GetLayout (1948)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tls__GetLayout(struct soap*, struct __tls__GetLayout *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tls__GetLayout(struct soap*, const struct __tls__GetLayout *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tls__GetLayout(struct soap*, const char*, int, const struct __tls__GetLayout *, const char*);
SOAP_FMAC3 struct __tls__GetLayout * SOAP_FMAC4 soap_in___tls__GetLayout(struct soap*, const char*, struct __tls__GetLayout *, const char*);
SOAP_FMAC1 struct __tls__GetLayout * SOAP_FMAC2 soap_instantiate___tls__GetLayout(struct soap*, int, const char*, const char*, size_t*);

inline struct __tls__GetLayout * soap_new___tls__GetLayout(struct soap *soap, int n = -1) { return soap_instantiate___tls__GetLayout(soap, n, NULL, NULL, NULL); }

inline struct __tls__GetLayout * soap_new_req___tls__GetLayout(
	struct soap *soap)
{	struct __tls__GetLayout *_p = soap_new___tls__GetLayout(soap);
	if (_p)
	{	soap_default___tls__GetLayout(soap, _p);
	}
	return _p;
}

inline struct __tls__GetLayout * soap_new_set___tls__GetLayout(
	struct soap *soap,
	_tls__GetLayout *tls__GetLayout)
{	struct __tls__GetLayout *_p = soap_new___tls__GetLayout(soap);
	if (_p)
	{	soap_default___tls__GetLayout(soap, _p);
		_p->tls__GetLayout = tls__GetLayout;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tls__GetLayout(struct soap*, const struct __tls__GetLayout *, const char*, const char*);

#ifndef soap_write___tls__GetLayout
#define soap_write___tls__GetLayout(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tls__GetLayout(soap, data), 0) || soap_put___tls__GetLayout(soap, data, "-tls:GetLayout", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tls__GetLayout * SOAP_FMAC4 soap_get___tls__GetLayout(struct soap*, struct __tls__GetLayout *, const char*, const char*);

#ifndef soap_read___tls__GetLayout
#define soap_read___tls__GetLayout(soap, data) ( ((data) ? (soap_default___tls__GetLayout(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tls__GetLayout(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tls__GetServiceCapabilities
#define SOAP_TYPE___tls__GetServiceCapabilities (1944)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tls__GetServiceCapabilities(struct soap*, struct __tls__GetServiceCapabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tls__GetServiceCapabilities(struct soap*, const struct __tls__GetServiceCapabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tls__GetServiceCapabilities(struct soap*, const char*, int, const struct __tls__GetServiceCapabilities *, const char*);
SOAP_FMAC3 struct __tls__GetServiceCapabilities * SOAP_FMAC4 soap_in___tls__GetServiceCapabilities(struct soap*, const char*, struct __tls__GetServiceCapabilities *, const char*);
SOAP_FMAC1 struct __tls__GetServiceCapabilities * SOAP_FMAC2 soap_instantiate___tls__GetServiceCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline struct __tls__GetServiceCapabilities * soap_new___tls__GetServiceCapabilities(struct soap *soap, int n = -1) { return soap_instantiate___tls__GetServiceCapabilities(soap, n, NULL, NULL, NULL); }

inline struct __tls__GetServiceCapabilities * soap_new_req___tls__GetServiceCapabilities(
	struct soap *soap)
{	struct __tls__GetServiceCapabilities *_p = soap_new___tls__GetServiceCapabilities(soap);
	if (_p)
	{	soap_default___tls__GetServiceCapabilities(soap, _p);
	}
	return _p;
}

inline struct __tls__GetServiceCapabilities * soap_new_set___tls__GetServiceCapabilities(
	struct soap *soap,
	_tls__GetServiceCapabilities *tls__GetServiceCapabilities)
{	struct __tls__GetServiceCapabilities *_p = soap_new___tls__GetServiceCapabilities(soap);
	if (_p)
	{	soap_default___tls__GetServiceCapabilities(soap, _p);
		_p->tls__GetServiceCapabilities = tls__GetServiceCapabilities;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tls__GetServiceCapabilities(struct soap*, const struct __tls__GetServiceCapabilities *, const char*, const char*);

#ifndef soap_write___tls__GetServiceCapabilities
#define soap_write___tls__GetServiceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tls__GetServiceCapabilities(soap, data), 0) || soap_put___tls__GetServiceCapabilities(soap, data, "-tls:GetServiceCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tls__GetServiceCapabilities * SOAP_FMAC4 soap_get___tls__GetServiceCapabilities(struct soap*, struct __tls__GetServiceCapabilities *, const char*, const char*);

#ifndef soap_read___tls__GetServiceCapabilities
#define soap_read___tls__GetServiceCapabilities(soap, data) ( ((data) ? (soap_default___tls__GetServiceCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tls__GetServiceCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__DeleteGeoLocation
#define SOAP_TYPE___tds__DeleteGeoLocation (1940)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__DeleteGeoLocation(struct soap*, struct __tds__DeleteGeoLocation *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__DeleteGeoLocation(struct soap*, const struct __tds__DeleteGeoLocation *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__DeleteGeoLocation(struct soap*, const char*, int, const struct __tds__DeleteGeoLocation *, const char*);
SOAP_FMAC3 struct __tds__DeleteGeoLocation * SOAP_FMAC4 soap_in___tds__DeleteGeoLocation(struct soap*, const char*, struct __tds__DeleteGeoLocation *, const char*);
SOAP_FMAC1 struct __tds__DeleteGeoLocation * SOAP_FMAC2 soap_instantiate___tds__DeleteGeoLocation(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__DeleteGeoLocation * soap_new___tds__DeleteGeoLocation(struct soap *soap, int n = -1) { return soap_instantiate___tds__DeleteGeoLocation(soap, n, NULL, NULL, NULL); }

inline struct __tds__DeleteGeoLocation * soap_new_req___tds__DeleteGeoLocation(
	struct soap *soap)
{	struct __tds__DeleteGeoLocation *_p = soap_new___tds__DeleteGeoLocation(soap);
	if (_p)
	{	soap_default___tds__DeleteGeoLocation(soap, _p);
	}
	return _p;
}

inline struct __tds__DeleteGeoLocation * soap_new_set___tds__DeleteGeoLocation(
	struct soap *soap,
	_tds__DeleteGeoLocation *tds__DeleteGeoLocation)
{	struct __tds__DeleteGeoLocation *_p = soap_new___tds__DeleteGeoLocation(soap);
	if (_p)
	{	soap_default___tds__DeleteGeoLocation(soap, _p);
		_p->tds__DeleteGeoLocation = tds__DeleteGeoLocation;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__DeleteGeoLocation(struct soap*, const struct __tds__DeleteGeoLocation *, const char*, const char*);

#ifndef soap_write___tds__DeleteGeoLocation
#define soap_write___tds__DeleteGeoLocation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__DeleteGeoLocation(soap, data), 0) || soap_put___tds__DeleteGeoLocation(soap, data, "-tds:DeleteGeoLocation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__DeleteGeoLocation * SOAP_FMAC4 soap_get___tds__DeleteGeoLocation(struct soap*, struct __tds__DeleteGeoLocation *, const char*, const char*);

#ifndef soap_read___tds__DeleteGeoLocation
#define soap_read___tds__DeleteGeoLocation(soap, data) ( ((data) ? (soap_default___tds__DeleteGeoLocation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__DeleteGeoLocation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__SetGeoLocation
#define SOAP_TYPE___tds__SetGeoLocation (1936)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetGeoLocation(struct soap*, struct __tds__SetGeoLocation *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetGeoLocation(struct soap*, const struct __tds__SetGeoLocation *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetGeoLocation(struct soap*, const char*, int, const struct __tds__SetGeoLocation *, const char*);
SOAP_FMAC3 struct __tds__SetGeoLocation * SOAP_FMAC4 soap_in___tds__SetGeoLocation(struct soap*, const char*, struct __tds__SetGeoLocation *, const char*);
SOAP_FMAC1 struct __tds__SetGeoLocation * SOAP_FMAC2 soap_instantiate___tds__SetGeoLocation(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetGeoLocation * soap_new___tds__SetGeoLocation(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetGeoLocation(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetGeoLocation * soap_new_req___tds__SetGeoLocation(
	struct soap *soap)
{	struct __tds__SetGeoLocation *_p = soap_new___tds__SetGeoLocation(soap);
	if (_p)
	{	soap_default___tds__SetGeoLocation(soap, _p);
	}
	return _p;
}

inline struct __tds__SetGeoLocation * soap_new_set___tds__SetGeoLocation(
	struct soap *soap,
	_tds__SetGeoLocation *tds__SetGeoLocation)
{	struct __tds__SetGeoLocation *_p = soap_new___tds__SetGeoLocation(soap);
	if (_p)
	{	soap_default___tds__SetGeoLocation(soap, _p);
		_p->tds__SetGeoLocation = tds__SetGeoLocation;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetGeoLocation(struct soap*, const struct __tds__SetGeoLocation *, const char*, const char*);

#ifndef soap_write___tds__SetGeoLocation
#define soap_write___tds__SetGeoLocation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetGeoLocation(soap, data), 0) || soap_put___tds__SetGeoLocation(soap, data, "-tds:SetGeoLocation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetGeoLocation * SOAP_FMAC4 soap_get___tds__SetGeoLocation(struct soap*, struct __tds__SetGeoLocation *, const char*, const char*);

#ifndef soap_read___tds__SetGeoLocation
#define soap_read___tds__SetGeoLocation(soap, data) ( ((data) ? (soap_default___tds__SetGeoLocation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__SetGeoLocation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetGeoLocation
#define SOAP_TYPE___tds__GetGeoLocation (1932)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetGeoLocation(struct soap*, struct __tds__GetGeoLocation *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetGeoLocation(struct soap*, const struct __tds__GetGeoLocation *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetGeoLocation(struct soap*, const char*, int, const struct __tds__GetGeoLocation *, const char*);
SOAP_FMAC3 struct __tds__GetGeoLocation * SOAP_FMAC4 soap_in___tds__GetGeoLocation(struct soap*, const char*, struct __tds__GetGeoLocation *, const char*);
SOAP_FMAC1 struct __tds__GetGeoLocation * SOAP_FMAC2 soap_instantiate___tds__GetGeoLocation(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetGeoLocation * soap_new___tds__GetGeoLocation(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetGeoLocation(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetGeoLocation * soap_new_req___tds__GetGeoLocation(
	struct soap *soap)
{	struct __tds__GetGeoLocation *_p = soap_new___tds__GetGeoLocation(soap);
	if (_p)
	{	soap_default___tds__GetGeoLocation(soap, _p);
	}
	return _p;
}

inline struct __tds__GetGeoLocation * soap_new_set___tds__GetGeoLocation(
	struct soap *soap,
	_tds__GetGeoLocation *tds__GetGeoLocation)
{	struct __tds__GetGeoLocation *_p = soap_new___tds__GetGeoLocation(soap);
	if (_p)
	{	soap_default___tds__GetGeoLocation(soap, _p);
		_p->tds__GetGeoLocation = tds__GetGeoLocation;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetGeoLocation(struct soap*, const struct __tds__GetGeoLocation *, const char*, const char*);

#ifndef soap_write___tds__GetGeoLocation
#define soap_write___tds__GetGeoLocation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetGeoLocation(soap, data), 0) || soap_put___tds__GetGeoLocation(soap, data, "-tds:GetGeoLocation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetGeoLocation * SOAP_FMAC4 soap_get___tds__GetGeoLocation(struct soap*, struct __tds__GetGeoLocation *, const char*, const char*);

#ifndef soap_read___tds__GetGeoLocation
#define soap_read___tds__GetGeoLocation(soap, data) ( ((data) ? (soap_default___tds__GetGeoLocation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetGeoLocation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__DeleteStorageConfiguration
#define SOAP_TYPE___tds__DeleteStorageConfiguration (1928)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__DeleteStorageConfiguration(struct soap*, struct __tds__DeleteStorageConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__DeleteStorageConfiguration(struct soap*, const struct __tds__DeleteStorageConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__DeleteStorageConfiguration(struct soap*, const char*, int, const struct __tds__DeleteStorageConfiguration *, const char*);
SOAP_FMAC3 struct __tds__DeleteStorageConfiguration * SOAP_FMAC4 soap_in___tds__DeleteStorageConfiguration(struct soap*, const char*, struct __tds__DeleteStorageConfiguration *, const char*);
SOAP_FMAC1 struct __tds__DeleteStorageConfiguration * SOAP_FMAC2 soap_instantiate___tds__DeleteStorageConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__DeleteStorageConfiguration * soap_new___tds__DeleteStorageConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tds__DeleteStorageConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tds__DeleteStorageConfiguration * soap_new_req___tds__DeleteStorageConfiguration(
	struct soap *soap)
{	struct __tds__DeleteStorageConfiguration *_p = soap_new___tds__DeleteStorageConfiguration(soap);
	if (_p)
	{	soap_default___tds__DeleteStorageConfiguration(soap, _p);
	}
	return _p;
}

inline struct __tds__DeleteStorageConfiguration * soap_new_set___tds__DeleteStorageConfiguration(
	struct soap *soap,
	_tds__DeleteStorageConfiguration *tds__DeleteStorageConfiguration)
{	struct __tds__DeleteStorageConfiguration *_p = soap_new___tds__DeleteStorageConfiguration(soap);
	if (_p)
	{	soap_default___tds__DeleteStorageConfiguration(soap, _p);
		_p->tds__DeleteStorageConfiguration = tds__DeleteStorageConfiguration;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__DeleteStorageConfiguration(struct soap*, const struct __tds__DeleteStorageConfiguration *, const char*, const char*);

#ifndef soap_write___tds__DeleteStorageConfiguration
#define soap_write___tds__DeleteStorageConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__DeleteStorageConfiguration(soap, data), 0) || soap_put___tds__DeleteStorageConfiguration(soap, data, "-tds:DeleteStorageConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__DeleteStorageConfiguration * SOAP_FMAC4 soap_get___tds__DeleteStorageConfiguration(struct soap*, struct __tds__DeleteStorageConfiguration *, const char*, const char*);

#ifndef soap_read___tds__DeleteStorageConfiguration
#define soap_read___tds__DeleteStorageConfiguration(soap, data) ( ((data) ? (soap_default___tds__DeleteStorageConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__DeleteStorageConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__SetStorageConfiguration
#define SOAP_TYPE___tds__SetStorageConfiguration (1924)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetStorageConfiguration(struct soap*, struct __tds__SetStorageConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetStorageConfiguration(struct soap*, const struct __tds__SetStorageConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetStorageConfiguration(struct soap*, const char*, int, const struct __tds__SetStorageConfiguration *, const char*);
SOAP_FMAC3 struct __tds__SetStorageConfiguration * SOAP_FMAC4 soap_in___tds__SetStorageConfiguration(struct soap*, const char*, struct __tds__SetStorageConfiguration *, const char*);
SOAP_FMAC1 struct __tds__SetStorageConfiguration * SOAP_FMAC2 soap_instantiate___tds__SetStorageConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetStorageConfiguration * soap_new___tds__SetStorageConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetStorageConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetStorageConfiguration * soap_new_req___tds__SetStorageConfiguration(
	struct soap *soap)
{	struct __tds__SetStorageConfiguration *_p = soap_new___tds__SetStorageConfiguration(soap);
	if (_p)
	{	soap_default___tds__SetStorageConfiguration(soap, _p);
	}
	return _p;
}

inline struct __tds__SetStorageConfiguration * soap_new_set___tds__SetStorageConfiguration(
	struct soap *soap,
	_tds__SetStorageConfiguration *tds__SetStorageConfiguration)
{	struct __tds__SetStorageConfiguration *_p = soap_new___tds__SetStorageConfiguration(soap);
	if (_p)
	{	soap_default___tds__SetStorageConfiguration(soap, _p);
		_p->tds__SetStorageConfiguration = tds__SetStorageConfiguration;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetStorageConfiguration(struct soap*, const struct __tds__SetStorageConfiguration *, const char*, const char*);

#ifndef soap_write___tds__SetStorageConfiguration
#define soap_write___tds__SetStorageConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetStorageConfiguration(soap, data), 0) || soap_put___tds__SetStorageConfiguration(soap, data, "-tds:SetStorageConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetStorageConfiguration * SOAP_FMAC4 soap_get___tds__SetStorageConfiguration(struct soap*, struct __tds__SetStorageConfiguration *, const char*, const char*);

#ifndef soap_read___tds__SetStorageConfiguration
#define soap_read___tds__SetStorageConfiguration(soap, data) ( ((data) ? (soap_default___tds__SetStorageConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__SetStorageConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetStorageConfiguration
#define SOAP_TYPE___tds__GetStorageConfiguration (1920)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetStorageConfiguration(struct soap*, struct __tds__GetStorageConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetStorageConfiguration(struct soap*, const struct __tds__GetStorageConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetStorageConfiguration(struct soap*, const char*, int, const struct __tds__GetStorageConfiguration *, const char*);
SOAP_FMAC3 struct __tds__GetStorageConfiguration * SOAP_FMAC4 soap_in___tds__GetStorageConfiguration(struct soap*, const char*, struct __tds__GetStorageConfiguration *, const char*);
SOAP_FMAC1 struct __tds__GetStorageConfiguration * SOAP_FMAC2 soap_instantiate___tds__GetStorageConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetStorageConfiguration * soap_new___tds__GetStorageConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetStorageConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetStorageConfiguration * soap_new_req___tds__GetStorageConfiguration(
	struct soap *soap)
{	struct __tds__GetStorageConfiguration *_p = soap_new___tds__GetStorageConfiguration(soap);
	if (_p)
	{	soap_default___tds__GetStorageConfiguration(soap, _p);
	}
	return _p;
}

inline struct __tds__GetStorageConfiguration * soap_new_set___tds__GetStorageConfiguration(
	struct soap *soap,
	_tds__GetStorageConfiguration *tds__GetStorageConfiguration)
{	struct __tds__GetStorageConfiguration *_p = soap_new___tds__GetStorageConfiguration(soap);
	if (_p)
	{	soap_default___tds__GetStorageConfiguration(soap, _p);
		_p->tds__GetStorageConfiguration = tds__GetStorageConfiguration;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetStorageConfiguration(struct soap*, const struct __tds__GetStorageConfiguration *, const char*, const char*);

#ifndef soap_write___tds__GetStorageConfiguration
#define soap_write___tds__GetStorageConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetStorageConfiguration(soap, data), 0) || soap_put___tds__GetStorageConfiguration(soap, data, "-tds:GetStorageConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetStorageConfiguration * SOAP_FMAC4 soap_get___tds__GetStorageConfiguration(struct soap*, struct __tds__GetStorageConfiguration *, const char*, const char*);

#ifndef soap_read___tds__GetStorageConfiguration
#define soap_read___tds__GetStorageConfiguration(soap, data) ( ((data) ? (soap_default___tds__GetStorageConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetStorageConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__CreateStorageConfiguration
#define SOAP_TYPE___tds__CreateStorageConfiguration (1916)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__CreateStorageConfiguration(struct soap*, struct __tds__CreateStorageConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__CreateStorageConfiguration(struct soap*, const struct __tds__CreateStorageConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__CreateStorageConfiguration(struct soap*, const char*, int, const struct __tds__CreateStorageConfiguration *, const char*);
SOAP_FMAC3 struct __tds__CreateStorageConfiguration * SOAP_FMAC4 soap_in___tds__CreateStorageConfiguration(struct soap*, const char*, struct __tds__CreateStorageConfiguration *, const char*);
SOAP_FMAC1 struct __tds__CreateStorageConfiguration * SOAP_FMAC2 soap_instantiate___tds__CreateStorageConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__CreateStorageConfiguration * soap_new___tds__CreateStorageConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tds__CreateStorageConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tds__CreateStorageConfiguration * soap_new_req___tds__CreateStorageConfiguration(
	struct soap *soap)
{	struct __tds__CreateStorageConfiguration *_p = soap_new___tds__CreateStorageConfiguration(soap);
	if (_p)
	{	soap_default___tds__CreateStorageConfiguration(soap, _p);
	}
	return _p;
}

inline struct __tds__CreateStorageConfiguration * soap_new_set___tds__CreateStorageConfiguration(
	struct soap *soap,
	_tds__CreateStorageConfiguration *tds__CreateStorageConfiguration)
{	struct __tds__CreateStorageConfiguration *_p = soap_new___tds__CreateStorageConfiguration(soap);
	if (_p)
	{	soap_default___tds__CreateStorageConfiguration(soap, _p);
		_p->tds__CreateStorageConfiguration = tds__CreateStorageConfiguration;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__CreateStorageConfiguration(struct soap*, const struct __tds__CreateStorageConfiguration *, const char*, const char*);

#ifndef soap_write___tds__CreateStorageConfiguration
#define soap_write___tds__CreateStorageConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__CreateStorageConfiguration(soap, data), 0) || soap_put___tds__CreateStorageConfiguration(soap, data, "-tds:CreateStorageConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__CreateStorageConfiguration * SOAP_FMAC4 soap_get___tds__CreateStorageConfiguration(struct soap*, struct __tds__CreateStorageConfiguration *, const char*, const char*);

#ifndef soap_read___tds__CreateStorageConfiguration
#define soap_read___tds__CreateStorageConfiguration(soap, data) ( ((data) ? (soap_default___tds__CreateStorageConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__CreateStorageConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetStorageConfigurations
#define SOAP_TYPE___tds__GetStorageConfigurations (1912)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetStorageConfigurations(struct soap*, struct __tds__GetStorageConfigurations *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetStorageConfigurations(struct soap*, const struct __tds__GetStorageConfigurations *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetStorageConfigurations(struct soap*, const char*, int, const struct __tds__GetStorageConfigurations *, const char*);
SOAP_FMAC3 struct __tds__GetStorageConfigurations * SOAP_FMAC4 soap_in___tds__GetStorageConfigurations(struct soap*, const char*, struct __tds__GetStorageConfigurations *, const char*);
SOAP_FMAC1 struct __tds__GetStorageConfigurations * SOAP_FMAC2 soap_instantiate___tds__GetStorageConfigurations(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetStorageConfigurations * soap_new___tds__GetStorageConfigurations(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetStorageConfigurations(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetStorageConfigurations * soap_new_req___tds__GetStorageConfigurations(
	struct soap *soap)
{	struct __tds__GetStorageConfigurations *_p = soap_new___tds__GetStorageConfigurations(soap);
	if (_p)
	{	soap_default___tds__GetStorageConfigurations(soap, _p);
	}
	return _p;
}

inline struct __tds__GetStorageConfigurations * soap_new_set___tds__GetStorageConfigurations(
	struct soap *soap,
	_tds__GetStorageConfigurations *tds__GetStorageConfigurations)
{	struct __tds__GetStorageConfigurations *_p = soap_new___tds__GetStorageConfigurations(soap);
	if (_p)
	{	soap_default___tds__GetStorageConfigurations(soap, _p);
		_p->tds__GetStorageConfigurations = tds__GetStorageConfigurations;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetStorageConfigurations(struct soap*, const struct __tds__GetStorageConfigurations *, const char*, const char*);

#ifndef soap_write___tds__GetStorageConfigurations
#define soap_write___tds__GetStorageConfigurations(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetStorageConfigurations(soap, data), 0) || soap_put___tds__GetStorageConfigurations(soap, data, "-tds:GetStorageConfigurations", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetStorageConfigurations * SOAP_FMAC4 soap_get___tds__GetStorageConfigurations(struct soap*, struct __tds__GetStorageConfigurations *, const char*, const char*);

#ifndef soap_read___tds__GetStorageConfigurations
#define soap_read___tds__GetStorageConfigurations(soap, data) ( ((data) ? (soap_default___tds__GetStorageConfigurations(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetStorageConfigurations(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__StartSystemRestore
#define SOAP_TYPE___tds__StartSystemRestore (1908)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__StartSystemRestore(struct soap*, struct __tds__StartSystemRestore *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__StartSystemRestore(struct soap*, const struct __tds__StartSystemRestore *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__StartSystemRestore(struct soap*, const char*, int, const struct __tds__StartSystemRestore *, const char*);
SOAP_FMAC3 struct __tds__StartSystemRestore * SOAP_FMAC4 soap_in___tds__StartSystemRestore(struct soap*, const char*, struct __tds__StartSystemRestore *, const char*);
SOAP_FMAC1 struct __tds__StartSystemRestore * SOAP_FMAC2 soap_instantiate___tds__StartSystemRestore(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__StartSystemRestore * soap_new___tds__StartSystemRestore(struct soap *soap, int n = -1) { return soap_instantiate___tds__StartSystemRestore(soap, n, NULL, NULL, NULL); }

inline struct __tds__StartSystemRestore * soap_new_req___tds__StartSystemRestore(
	struct soap *soap)
{	struct __tds__StartSystemRestore *_p = soap_new___tds__StartSystemRestore(soap);
	if (_p)
	{	soap_default___tds__StartSystemRestore(soap, _p);
	}
	return _p;
}

inline struct __tds__StartSystemRestore * soap_new_set___tds__StartSystemRestore(
	struct soap *soap,
	_tds__StartSystemRestore *tds__StartSystemRestore)
{	struct __tds__StartSystemRestore *_p = soap_new___tds__StartSystemRestore(soap);
	if (_p)
	{	soap_default___tds__StartSystemRestore(soap, _p);
		_p->tds__StartSystemRestore = tds__StartSystemRestore;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__StartSystemRestore(struct soap*, const struct __tds__StartSystemRestore *, const char*, const char*);

#ifndef soap_write___tds__StartSystemRestore
#define soap_write___tds__StartSystemRestore(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__StartSystemRestore(soap, data), 0) || soap_put___tds__StartSystemRestore(soap, data, "-tds:StartSystemRestore", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__StartSystemRestore * SOAP_FMAC4 soap_get___tds__StartSystemRestore(struct soap*, struct __tds__StartSystemRestore *, const char*, const char*);

#ifndef soap_read___tds__StartSystemRestore
#define soap_read___tds__StartSystemRestore(soap, data) ( ((data) ? (soap_default___tds__StartSystemRestore(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__StartSystemRestore(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__StartFirmwareUpgrade
#define SOAP_TYPE___tds__StartFirmwareUpgrade (1904)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__StartFirmwareUpgrade(struct soap*, struct __tds__StartFirmwareUpgrade *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__StartFirmwareUpgrade(struct soap*, const struct __tds__StartFirmwareUpgrade *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__StartFirmwareUpgrade(struct soap*, const char*, int, const struct __tds__StartFirmwareUpgrade *, const char*);
SOAP_FMAC3 struct __tds__StartFirmwareUpgrade * SOAP_FMAC4 soap_in___tds__StartFirmwareUpgrade(struct soap*, const char*, struct __tds__StartFirmwareUpgrade *, const char*);
SOAP_FMAC1 struct __tds__StartFirmwareUpgrade * SOAP_FMAC2 soap_instantiate___tds__StartFirmwareUpgrade(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__StartFirmwareUpgrade * soap_new___tds__StartFirmwareUpgrade(struct soap *soap, int n = -1) { return soap_instantiate___tds__StartFirmwareUpgrade(soap, n, NULL, NULL, NULL); }

inline struct __tds__StartFirmwareUpgrade * soap_new_req___tds__StartFirmwareUpgrade(
	struct soap *soap)
{	struct __tds__StartFirmwareUpgrade *_p = soap_new___tds__StartFirmwareUpgrade(soap);
	if (_p)
	{	soap_default___tds__StartFirmwareUpgrade(soap, _p);
	}
	return _p;
}

inline struct __tds__StartFirmwareUpgrade * soap_new_set___tds__StartFirmwareUpgrade(
	struct soap *soap,
	_tds__StartFirmwareUpgrade *tds__StartFirmwareUpgrade)
{	struct __tds__StartFirmwareUpgrade *_p = soap_new___tds__StartFirmwareUpgrade(soap);
	if (_p)
	{	soap_default___tds__StartFirmwareUpgrade(soap, _p);
		_p->tds__StartFirmwareUpgrade = tds__StartFirmwareUpgrade;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__StartFirmwareUpgrade(struct soap*, const struct __tds__StartFirmwareUpgrade *, const char*, const char*);

#ifndef soap_write___tds__StartFirmwareUpgrade
#define soap_write___tds__StartFirmwareUpgrade(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__StartFirmwareUpgrade(soap, data), 0) || soap_put___tds__StartFirmwareUpgrade(soap, data, "-tds:StartFirmwareUpgrade", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__StartFirmwareUpgrade * SOAP_FMAC4 soap_get___tds__StartFirmwareUpgrade(struct soap*, struct __tds__StartFirmwareUpgrade *, const char*, const char*);

#ifndef soap_read___tds__StartFirmwareUpgrade
#define soap_read___tds__StartFirmwareUpgrade(soap, data) ( ((data) ? (soap_default___tds__StartFirmwareUpgrade(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__StartFirmwareUpgrade(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetSystemUris
#define SOAP_TYPE___tds__GetSystemUris (1900)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetSystemUris(struct soap*, struct __tds__GetSystemUris *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetSystemUris(struct soap*, const struct __tds__GetSystemUris *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetSystemUris(struct soap*, const char*, int, const struct __tds__GetSystemUris *, const char*);
SOAP_FMAC3 struct __tds__GetSystemUris * SOAP_FMAC4 soap_in___tds__GetSystemUris(struct soap*, const char*, struct __tds__GetSystemUris *, const char*);
SOAP_FMAC1 struct __tds__GetSystemUris * SOAP_FMAC2 soap_instantiate___tds__GetSystemUris(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetSystemUris * soap_new___tds__GetSystemUris(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetSystemUris(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetSystemUris * soap_new_req___tds__GetSystemUris(
	struct soap *soap)
{	struct __tds__GetSystemUris *_p = soap_new___tds__GetSystemUris(soap);
	if (_p)
	{	soap_default___tds__GetSystemUris(soap, _p);
	}
	return _p;
}

inline struct __tds__GetSystemUris * soap_new_set___tds__GetSystemUris(
	struct soap *soap,
	_tds__GetSystemUris *tds__GetSystemUris)
{	struct __tds__GetSystemUris *_p = soap_new___tds__GetSystemUris(soap);
	if (_p)
	{	soap_default___tds__GetSystemUris(soap, _p);
		_p->tds__GetSystemUris = tds__GetSystemUris;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetSystemUris(struct soap*, const struct __tds__GetSystemUris *, const char*, const char*);

#ifndef soap_write___tds__GetSystemUris
#define soap_write___tds__GetSystemUris(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetSystemUris(soap, data), 0) || soap_put___tds__GetSystemUris(soap, data, "-tds:GetSystemUris", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetSystemUris * SOAP_FMAC4 soap_get___tds__GetSystemUris(struct soap*, struct __tds__GetSystemUris *, const char*, const char*);

#ifndef soap_read___tds__GetSystemUris
#define soap_read___tds__GetSystemUris(soap, data) ( ((data) ? (soap_default___tds__GetSystemUris(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetSystemUris(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__ScanAvailableDot11Networks
#define SOAP_TYPE___tds__ScanAvailableDot11Networks (1896)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__ScanAvailableDot11Networks(struct soap*, struct __tds__ScanAvailableDot11Networks *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__ScanAvailableDot11Networks(struct soap*, const struct __tds__ScanAvailableDot11Networks *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__ScanAvailableDot11Networks(struct soap*, const char*, int, const struct __tds__ScanAvailableDot11Networks *, const char*);
SOAP_FMAC3 struct __tds__ScanAvailableDot11Networks * SOAP_FMAC4 soap_in___tds__ScanAvailableDot11Networks(struct soap*, const char*, struct __tds__ScanAvailableDot11Networks *, const char*);
SOAP_FMAC1 struct __tds__ScanAvailableDot11Networks * SOAP_FMAC2 soap_instantiate___tds__ScanAvailableDot11Networks(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__ScanAvailableDot11Networks * soap_new___tds__ScanAvailableDot11Networks(struct soap *soap, int n = -1) { return soap_instantiate___tds__ScanAvailableDot11Networks(soap, n, NULL, NULL, NULL); }

inline struct __tds__ScanAvailableDot11Networks * soap_new_req___tds__ScanAvailableDot11Networks(
	struct soap *soap)
{	struct __tds__ScanAvailableDot11Networks *_p = soap_new___tds__ScanAvailableDot11Networks(soap);
	if (_p)
	{	soap_default___tds__ScanAvailableDot11Networks(soap, _p);
	}
	return _p;
}

inline struct __tds__ScanAvailableDot11Networks * soap_new_set___tds__ScanAvailableDot11Networks(
	struct soap *soap,
	_tds__ScanAvailableDot11Networks *tds__ScanAvailableDot11Networks)
{	struct __tds__ScanAvailableDot11Networks *_p = soap_new___tds__ScanAvailableDot11Networks(soap);
	if (_p)
	{	soap_default___tds__ScanAvailableDot11Networks(soap, _p);
		_p->tds__ScanAvailableDot11Networks = tds__ScanAvailableDot11Networks;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__ScanAvailableDot11Networks(struct soap*, const struct __tds__ScanAvailableDot11Networks *, const char*, const char*);

#ifndef soap_write___tds__ScanAvailableDot11Networks
#define soap_write___tds__ScanAvailableDot11Networks(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__ScanAvailableDot11Networks(soap, data), 0) || soap_put___tds__ScanAvailableDot11Networks(soap, data, "-tds:ScanAvailableDot11Networks", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__ScanAvailableDot11Networks * SOAP_FMAC4 soap_get___tds__ScanAvailableDot11Networks(struct soap*, struct __tds__ScanAvailableDot11Networks *, const char*, const char*);

#ifndef soap_read___tds__ScanAvailableDot11Networks
#define soap_read___tds__ScanAvailableDot11Networks(soap, data) ( ((data) ? (soap_default___tds__ScanAvailableDot11Networks(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__ScanAvailableDot11Networks(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetDot11Status
#define SOAP_TYPE___tds__GetDot11Status (1892)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetDot11Status(struct soap*, struct __tds__GetDot11Status *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetDot11Status(struct soap*, const struct __tds__GetDot11Status *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetDot11Status(struct soap*, const char*, int, const struct __tds__GetDot11Status *, const char*);
SOAP_FMAC3 struct __tds__GetDot11Status * SOAP_FMAC4 soap_in___tds__GetDot11Status(struct soap*, const char*, struct __tds__GetDot11Status *, const char*);
SOAP_FMAC1 struct __tds__GetDot11Status * SOAP_FMAC2 soap_instantiate___tds__GetDot11Status(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetDot11Status * soap_new___tds__GetDot11Status(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetDot11Status(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetDot11Status * soap_new_req___tds__GetDot11Status(
	struct soap *soap)
{	struct __tds__GetDot11Status *_p = soap_new___tds__GetDot11Status(soap);
	if (_p)
	{	soap_default___tds__GetDot11Status(soap, _p);
	}
	return _p;
}

inline struct __tds__GetDot11Status * soap_new_set___tds__GetDot11Status(
	struct soap *soap,
	_tds__GetDot11Status *tds__GetDot11Status)
{	struct __tds__GetDot11Status *_p = soap_new___tds__GetDot11Status(soap);
	if (_p)
	{	soap_default___tds__GetDot11Status(soap, _p);
		_p->tds__GetDot11Status = tds__GetDot11Status;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetDot11Status(struct soap*, const struct __tds__GetDot11Status *, const char*, const char*);

#ifndef soap_write___tds__GetDot11Status
#define soap_write___tds__GetDot11Status(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetDot11Status(soap, data), 0) || soap_put___tds__GetDot11Status(soap, data, "-tds:GetDot11Status", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetDot11Status * SOAP_FMAC4 soap_get___tds__GetDot11Status(struct soap*, struct __tds__GetDot11Status *, const char*, const char*);

#ifndef soap_read___tds__GetDot11Status
#define soap_read___tds__GetDot11Status(soap, data) ( ((data) ? (soap_default___tds__GetDot11Status(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetDot11Status(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetDot11Capabilities
#define SOAP_TYPE___tds__GetDot11Capabilities (1888)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetDot11Capabilities(struct soap*, struct __tds__GetDot11Capabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetDot11Capabilities(struct soap*, const struct __tds__GetDot11Capabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetDot11Capabilities(struct soap*, const char*, int, const struct __tds__GetDot11Capabilities *, const char*);
SOAP_FMAC3 struct __tds__GetDot11Capabilities * SOAP_FMAC4 soap_in___tds__GetDot11Capabilities(struct soap*, const char*, struct __tds__GetDot11Capabilities *, const char*);
SOAP_FMAC1 struct __tds__GetDot11Capabilities * SOAP_FMAC2 soap_instantiate___tds__GetDot11Capabilities(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetDot11Capabilities * soap_new___tds__GetDot11Capabilities(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetDot11Capabilities(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetDot11Capabilities * soap_new_req___tds__GetDot11Capabilities(
	struct soap *soap)
{	struct __tds__GetDot11Capabilities *_p = soap_new___tds__GetDot11Capabilities(soap);
	if (_p)
	{	soap_default___tds__GetDot11Capabilities(soap, _p);
	}
	return _p;
}

inline struct __tds__GetDot11Capabilities * soap_new_set___tds__GetDot11Capabilities(
	struct soap *soap,
	_tds__GetDot11Capabilities *tds__GetDot11Capabilities)
{	struct __tds__GetDot11Capabilities *_p = soap_new___tds__GetDot11Capabilities(soap);
	if (_p)
	{	soap_default___tds__GetDot11Capabilities(soap, _p);
		_p->tds__GetDot11Capabilities = tds__GetDot11Capabilities;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetDot11Capabilities(struct soap*, const struct __tds__GetDot11Capabilities *, const char*, const char*);

#ifndef soap_write___tds__GetDot11Capabilities
#define soap_write___tds__GetDot11Capabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetDot11Capabilities(soap, data), 0) || soap_put___tds__GetDot11Capabilities(soap, data, "-tds:GetDot11Capabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetDot11Capabilities * SOAP_FMAC4 soap_get___tds__GetDot11Capabilities(struct soap*, struct __tds__GetDot11Capabilities *, const char*, const char*);

#ifndef soap_read___tds__GetDot11Capabilities
#define soap_read___tds__GetDot11Capabilities(soap, data) ( ((data) ? (soap_default___tds__GetDot11Capabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetDot11Capabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__DeleteDot1XConfiguration
#define SOAP_TYPE___tds__DeleteDot1XConfiguration (1884)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__DeleteDot1XConfiguration(struct soap*, struct __tds__DeleteDot1XConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__DeleteDot1XConfiguration(struct soap*, const struct __tds__DeleteDot1XConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__DeleteDot1XConfiguration(struct soap*, const char*, int, const struct __tds__DeleteDot1XConfiguration *, const char*);
SOAP_FMAC3 struct __tds__DeleteDot1XConfiguration * SOAP_FMAC4 soap_in___tds__DeleteDot1XConfiguration(struct soap*, const char*, struct __tds__DeleteDot1XConfiguration *, const char*);
SOAP_FMAC1 struct __tds__DeleteDot1XConfiguration * SOAP_FMAC2 soap_instantiate___tds__DeleteDot1XConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__DeleteDot1XConfiguration * soap_new___tds__DeleteDot1XConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tds__DeleteDot1XConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tds__DeleteDot1XConfiguration * soap_new_req___tds__DeleteDot1XConfiguration(
	struct soap *soap)
{	struct __tds__DeleteDot1XConfiguration *_p = soap_new___tds__DeleteDot1XConfiguration(soap);
	if (_p)
	{	soap_default___tds__DeleteDot1XConfiguration(soap, _p);
	}
	return _p;
}

inline struct __tds__DeleteDot1XConfiguration * soap_new_set___tds__DeleteDot1XConfiguration(
	struct soap *soap,
	_tds__DeleteDot1XConfiguration *tds__DeleteDot1XConfiguration)
{	struct __tds__DeleteDot1XConfiguration *_p = soap_new___tds__DeleteDot1XConfiguration(soap);
	if (_p)
	{	soap_default___tds__DeleteDot1XConfiguration(soap, _p);
		_p->tds__DeleteDot1XConfiguration = tds__DeleteDot1XConfiguration;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__DeleteDot1XConfiguration(struct soap*, const struct __tds__DeleteDot1XConfiguration *, const char*, const char*);

#ifndef soap_write___tds__DeleteDot1XConfiguration
#define soap_write___tds__DeleteDot1XConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__DeleteDot1XConfiguration(soap, data), 0) || soap_put___tds__DeleteDot1XConfiguration(soap, data, "-tds:DeleteDot1XConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__DeleteDot1XConfiguration * SOAP_FMAC4 soap_get___tds__DeleteDot1XConfiguration(struct soap*, struct __tds__DeleteDot1XConfiguration *, const char*, const char*);

#ifndef soap_read___tds__DeleteDot1XConfiguration
#define soap_read___tds__DeleteDot1XConfiguration(soap, data) ( ((data) ? (soap_default___tds__DeleteDot1XConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__DeleteDot1XConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetDot1XConfigurations
#define SOAP_TYPE___tds__GetDot1XConfigurations (1880)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetDot1XConfigurations(struct soap*, struct __tds__GetDot1XConfigurations *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetDot1XConfigurations(struct soap*, const struct __tds__GetDot1XConfigurations *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetDot1XConfigurations(struct soap*, const char*, int, const struct __tds__GetDot1XConfigurations *, const char*);
SOAP_FMAC3 struct __tds__GetDot1XConfigurations * SOAP_FMAC4 soap_in___tds__GetDot1XConfigurations(struct soap*, const char*, struct __tds__GetDot1XConfigurations *, const char*);
SOAP_FMAC1 struct __tds__GetDot1XConfigurations * SOAP_FMAC2 soap_instantiate___tds__GetDot1XConfigurations(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetDot1XConfigurations * soap_new___tds__GetDot1XConfigurations(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetDot1XConfigurations(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetDot1XConfigurations * soap_new_req___tds__GetDot1XConfigurations(
	struct soap *soap)
{	struct __tds__GetDot1XConfigurations *_p = soap_new___tds__GetDot1XConfigurations(soap);
	if (_p)
	{	soap_default___tds__GetDot1XConfigurations(soap, _p);
	}
	return _p;
}

inline struct __tds__GetDot1XConfigurations * soap_new_set___tds__GetDot1XConfigurations(
	struct soap *soap,
	_tds__GetDot1XConfigurations *tds__GetDot1XConfigurations)
{	struct __tds__GetDot1XConfigurations *_p = soap_new___tds__GetDot1XConfigurations(soap);
	if (_p)
	{	soap_default___tds__GetDot1XConfigurations(soap, _p);
		_p->tds__GetDot1XConfigurations = tds__GetDot1XConfigurations;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetDot1XConfigurations(struct soap*, const struct __tds__GetDot1XConfigurations *, const char*, const char*);

#ifndef soap_write___tds__GetDot1XConfigurations
#define soap_write___tds__GetDot1XConfigurations(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetDot1XConfigurations(soap, data), 0) || soap_put___tds__GetDot1XConfigurations(soap, data, "-tds:GetDot1XConfigurations", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetDot1XConfigurations * SOAP_FMAC4 soap_get___tds__GetDot1XConfigurations(struct soap*, struct __tds__GetDot1XConfigurations *, const char*, const char*);

#ifndef soap_read___tds__GetDot1XConfigurations
#define soap_read___tds__GetDot1XConfigurations(soap, data) ( ((data) ? (soap_default___tds__GetDot1XConfigurations(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetDot1XConfigurations(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetDot1XConfiguration
#define SOAP_TYPE___tds__GetDot1XConfiguration (1876)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetDot1XConfiguration(struct soap*, struct __tds__GetDot1XConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetDot1XConfiguration(struct soap*, const struct __tds__GetDot1XConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetDot1XConfiguration(struct soap*, const char*, int, const struct __tds__GetDot1XConfiguration *, const char*);
SOAP_FMAC3 struct __tds__GetDot1XConfiguration * SOAP_FMAC4 soap_in___tds__GetDot1XConfiguration(struct soap*, const char*, struct __tds__GetDot1XConfiguration *, const char*);
SOAP_FMAC1 struct __tds__GetDot1XConfiguration * SOAP_FMAC2 soap_instantiate___tds__GetDot1XConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetDot1XConfiguration * soap_new___tds__GetDot1XConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetDot1XConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetDot1XConfiguration * soap_new_req___tds__GetDot1XConfiguration(
	struct soap *soap)
{	struct __tds__GetDot1XConfiguration *_p = soap_new___tds__GetDot1XConfiguration(soap);
	if (_p)
	{	soap_default___tds__GetDot1XConfiguration(soap, _p);
	}
	return _p;
}

inline struct __tds__GetDot1XConfiguration * soap_new_set___tds__GetDot1XConfiguration(
	struct soap *soap,
	_tds__GetDot1XConfiguration *tds__GetDot1XConfiguration)
{	struct __tds__GetDot1XConfiguration *_p = soap_new___tds__GetDot1XConfiguration(soap);
	if (_p)
	{	soap_default___tds__GetDot1XConfiguration(soap, _p);
		_p->tds__GetDot1XConfiguration = tds__GetDot1XConfiguration;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetDot1XConfiguration(struct soap*, const struct __tds__GetDot1XConfiguration *, const char*, const char*);

#ifndef soap_write___tds__GetDot1XConfiguration
#define soap_write___tds__GetDot1XConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetDot1XConfiguration(soap, data), 0) || soap_put___tds__GetDot1XConfiguration(soap, data, "-tds:GetDot1XConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetDot1XConfiguration * SOAP_FMAC4 soap_get___tds__GetDot1XConfiguration(struct soap*, struct __tds__GetDot1XConfiguration *, const char*, const char*);

#ifndef soap_read___tds__GetDot1XConfiguration
#define soap_read___tds__GetDot1XConfiguration(soap, data) ( ((data) ? (soap_default___tds__GetDot1XConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetDot1XConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__SetDot1XConfiguration
#define SOAP_TYPE___tds__SetDot1XConfiguration (1872)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetDot1XConfiguration(struct soap*, struct __tds__SetDot1XConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetDot1XConfiguration(struct soap*, const struct __tds__SetDot1XConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetDot1XConfiguration(struct soap*, const char*, int, const struct __tds__SetDot1XConfiguration *, const char*);
SOAP_FMAC3 struct __tds__SetDot1XConfiguration * SOAP_FMAC4 soap_in___tds__SetDot1XConfiguration(struct soap*, const char*, struct __tds__SetDot1XConfiguration *, const char*);
SOAP_FMAC1 struct __tds__SetDot1XConfiguration * SOAP_FMAC2 soap_instantiate___tds__SetDot1XConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetDot1XConfiguration * soap_new___tds__SetDot1XConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetDot1XConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetDot1XConfiguration * soap_new_req___tds__SetDot1XConfiguration(
	struct soap *soap)
{	struct __tds__SetDot1XConfiguration *_p = soap_new___tds__SetDot1XConfiguration(soap);
	if (_p)
	{	soap_default___tds__SetDot1XConfiguration(soap, _p);
	}
	return _p;
}

inline struct __tds__SetDot1XConfiguration * soap_new_set___tds__SetDot1XConfiguration(
	struct soap *soap,
	_tds__SetDot1XConfiguration *tds__SetDot1XConfiguration)
{	struct __tds__SetDot1XConfiguration *_p = soap_new___tds__SetDot1XConfiguration(soap);
	if (_p)
	{	soap_default___tds__SetDot1XConfiguration(soap, _p);
		_p->tds__SetDot1XConfiguration = tds__SetDot1XConfiguration;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetDot1XConfiguration(struct soap*, const struct __tds__SetDot1XConfiguration *, const char*, const char*);

#ifndef soap_write___tds__SetDot1XConfiguration
#define soap_write___tds__SetDot1XConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetDot1XConfiguration(soap, data), 0) || soap_put___tds__SetDot1XConfiguration(soap, data, "-tds:SetDot1XConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetDot1XConfiguration * SOAP_FMAC4 soap_get___tds__SetDot1XConfiguration(struct soap*, struct __tds__SetDot1XConfiguration *, const char*, const char*);

#ifndef soap_read___tds__SetDot1XConfiguration
#define soap_read___tds__SetDot1XConfiguration(soap, data) ( ((data) ? (soap_default___tds__SetDot1XConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__SetDot1XConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__CreateDot1XConfiguration
#define SOAP_TYPE___tds__CreateDot1XConfiguration (1868)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__CreateDot1XConfiguration(struct soap*, struct __tds__CreateDot1XConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__CreateDot1XConfiguration(struct soap*, const struct __tds__CreateDot1XConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__CreateDot1XConfiguration(struct soap*, const char*, int, const struct __tds__CreateDot1XConfiguration *, const char*);
SOAP_FMAC3 struct __tds__CreateDot1XConfiguration * SOAP_FMAC4 soap_in___tds__CreateDot1XConfiguration(struct soap*, const char*, struct __tds__CreateDot1XConfiguration *, const char*);
SOAP_FMAC1 struct __tds__CreateDot1XConfiguration * SOAP_FMAC2 soap_instantiate___tds__CreateDot1XConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__CreateDot1XConfiguration * soap_new___tds__CreateDot1XConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tds__CreateDot1XConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tds__CreateDot1XConfiguration * soap_new_req___tds__CreateDot1XConfiguration(
	struct soap *soap)
{	struct __tds__CreateDot1XConfiguration *_p = soap_new___tds__CreateDot1XConfiguration(soap);
	if (_p)
	{	soap_default___tds__CreateDot1XConfiguration(soap, _p);
	}
	return _p;
}

inline struct __tds__CreateDot1XConfiguration * soap_new_set___tds__CreateDot1XConfiguration(
	struct soap *soap,
	_tds__CreateDot1XConfiguration *tds__CreateDot1XConfiguration)
{	struct __tds__CreateDot1XConfiguration *_p = soap_new___tds__CreateDot1XConfiguration(soap);
	if (_p)
	{	soap_default___tds__CreateDot1XConfiguration(soap, _p);
		_p->tds__CreateDot1XConfiguration = tds__CreateDot1XConfiguration;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__CreateDot1XConfiguration(struct soap*, const struct __tds__CreateDot1XConfiguration *, const char*, const char*);

#ifndef soap_write___tds__CreateDot1XConfiguration
#define soap_write___tds__CreateDot1XConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__CreateDot1XConfiguration(soap, data), 0) || soap_put___tds__CreateDot1XConfiguration(soap, data, "-tds:CreateDot1XConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__CreateDot1XConfiguration * SOAP_FMAC4 soap_get___tds__CreateDot1XConfiguration(struct soap*, struct __tds__CreateDot1XConfiguration *, const char*, const char*);

#ifndef soap_read___tds__CreateDot1XConfiguration
#define soap_read___tds__CreateDot1XConfiguration(soap, data) ( ((data) ? (soap_default___tds__CreateDot1XConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__CreateDot1XConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__LoadCACertificates
#define SOAP_TYPE___tds__LoadCACertificates (1864)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__LoadCACertificates(struct soap*, struct __tds__LoadCACertificates *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__LoadCACertificates(struct soap*, const struct __tds__LoadCACertificates *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__LoadCACertificates(struct soap*, const char*, int, const struct __tds__LoadCACertificates *, const char*);
SOAP_FMAC3 struct __tds__LoadCACertificates * SOAP_FMAC4 soap_in___tds__LoadCACertificates(struct soap*, const char*, struct __tds__LoadCACertificates *, const char*);
SOAP_FMAC1 struct __tds__LoadCACertificates * SOAP_FMAC2 soap_instantiate___tds__LoadCACertificates(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__LoadCACertificates * soap_new___tds__LoadCACertificates(struct soap *soap, int n = -1) { return soap_instantiate___tds__LoadCACertificates(soap, n, NULL, NULL, NULL); }

inline struct __tds__LoadCACertificates * soap_new_req___tds__LoadCACertificates(
	struct soap *soap)
{	struct __tds__LoadCACertificates *_p = soap_new___tds__LoadCACertificates(soap);
	if (_p)
	{	soap_default___tds__LoadCACertificates(soap, _p);
	}
	return _p;
}

inline struct __tds__LoadCACertificates * soap_new_set___tds__LoadCACertificates(
	struct soap *soap,
	_tds__LoadCACertificates *tds__LoadCACertificates)
{	struct __tds__LoadCACertificates *_p = soap_new___tds__LoadCACertificates(soap);
	if (_p)
	{	soap_default___tds__LoadCACertificates(soap, _p);
		_p->tds__LoadCACertificates = tds__LoadCACertificates;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__LoadCACertificates(struct soap*, const struct __tds__LoadCACertificates *, const char*, const char*);

#ifndef soap_write___tds__LoadCACertificates
#define soap_write___tds__LoadCACertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__LoadCACertificates(soap, data), 0) || soap_put___tds__LoadCACertificates(soap, data, "-tds:LoadCACertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__LoadCACertificates * SOAP_FMAC4 soap_get___tds__LoadCACertificates(struct soap*, struct __tds__LoadCACertificates *, const char*, const char*);

#ifndef soap_read___tds__LoadCACertificates
#define soap_read___tds__LoadCACertificates(soap, data) ( ((data) ? (soap_default___tds__LoadCACertificates(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__LoadCACertificates(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetCertificateInformation
#define SOAP_TYPE___tds__GetCertificateInformation (1860)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetCertificateInformation(struct soap*, struct __tds__GetCertificateInformation *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetCertificateInformation(struct soap*, const struct __tds__GetCertificateInformation *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetCertificateInformation(struct soap*, const char*, int, const struct __tds__GetCertificateInformation *, const char*);
SOAP_FMAC3 struct __tds__GetCertificateInformation * SOAP_FMAC4 soap_in___tds__GetCertificateInformation(struct soap*, const char*, struct __tds__GetCertificateInformation *, const char*);
SOAP_FMAC1 struct __tds__GetCertificateInformation * SOAP_FMAC2 soap_instantiate___tds__GetCertificateInformation(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetCertificateInformation * soap_new___tds__GetCertificateInformation(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetCertificateInformation(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetCertificateInformation * soap_new_req___tds__GetCertificateInformation(
	struct soap *soap)
{	struct __tds__GetCertificateInformation *_p = soap_new___tds__GetCertificateInformation(soap);
	if (_p)
	{	soap_default___tds__GetCertificateInformation(soap, _p);
	}
	return _p;
}

inline struct __tds__GetCertificateInformation * soap_new_set___tds__GetCertificateInformation(
	struct soap *soap,
	_tds__GetCertificateInformation *tds__GetCertificateInformation)
{	struct __tds__GetCertificateInformation *_p = soap_new___tds__GetCertificateInformation(soap);
	if (_p)
	{	soap_default___tds__GetCertificateInformation(soap, _p);
		_p->tds__GetCertificateInformation = tds__GetCertificateInformation;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetCertificateInformation(struct soap*, const struct __tds__GetCertificateInformation *, const char*, const char*);

#ifndef soap_write___tds__GetCertificateInformation
#define soap_write___tds__GetCertificateInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetCertificateInformation(soap, data), 0) || soap_put___tds__GetCertificateInformation(soap, data, "-tds:GetCertificateInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetCertificateInformation * SOAP_FMAC4 soap_get___tds__GetCertificateInformation(struct soap*, struct __tds__GetCertificateInformation *, const char*, const char*);

#ifndef soap_read___tds__GetCertificateInformation
#define soap_read___tds__GetCertificateInformation(soap, data) ( ((data) ? (soap_default___tds__GetCertificateInformation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetCertificateInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__LoadCertificateWithPrivateKey
#define SOAP_TYPE___tds__LoadCertificateWithPrivateKey (1856)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__LoadCertificateWithPrivateKey(struct soap*, struct __tds__LoadCertificateWithPrivateKey *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__LoadCertificateWithPrivateKey(struct soap*, const struct __tds__LoadCertificateWithPrivateKey *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__LoadCertificateWithPrivateKey(struct soap*, const char*, int, const struct __tds__LoadCertificateWithPrivateKey *, const char*);
SOAP_FMAC3 struct __tds__LoadCertificateWithPrivateKey * SOAP_FMAC4 soap_in___tds__LoadCertificateWithPrivateKey(struct soap*, const char*, struct __tds__LoadCertificateWithPrivateKey *, const char*);
SOAP_FMAC1 struct __tds__LoadCertificateWithPrivateKey * SOAP_FMAC2 soap_instantiate___tds__LoadCertificateWithPrivateKey(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__LoadCertificateWithPrivateKey * soap_new___tds__LoadCertificateWithPrivateKey(struct soap *soap, int n = -1) { return soap_instantiate___tds__LoadCertificateWithPrivateKey(soap, n, NULL, NULL, NULL); }

inline struct __tds__LoadCertificateWithPrivateKey * soap_new_req___tds__LoadCertificateWithPrivateKey(
	struct soap *soap)
{	struct __tds__LoadCertificateWithPrivateKey *_p = soap_new___tds__LoadCertificateWithPrivateKey(soap);
	if (_p)
	{	soap_default___tds__LoadCertificateWithPrivateKey(soap, _p);
	}
	return _p;
}

inline struct __tds__LoadCertificateWithPrivateKey * soap_new_set___tds__LoadCertificateWithPrivateKey(
	struct soap *soap,
	_tds__LoadCertificateWithPrivateKey *tds__LoadCertificateWithPrivateKey)
{	struct __tds__LoadCertificateWithPrivateKey *_p = soap_new___tds__LoadCertificateWithPrivateKey(soap);
	if (_p)
	{	soap_default___tds__LoadCertificateWithPrivateKey(soap, _p);
		_p->tds__LoadCertificateWithPrivateKey = tds__LoadCertificateWithPrivateKey;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__LoadCertificateWithPrivateKey(struct soap*, const struct __tds__LoadCertificateWithPrivateKey *, const char*, const char*);

#ifndef soap_write___tds__LoadCertificateWithPrivateKey
#define soap_write___tds__LoadCertificateWithPrivateKey(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__LoadCertificateWithPrivateKey(soap, data), 0) || soap_put___tds__LoadCertificateWithPrivateKey(soap, data, "-tds:LoadCertificateWithPrivateKey", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__LoadCertificateWithPrivateKey * SOAP_FMAC4 soap_get___tds__LoadCertificateWithPrivateKey(struct soap*, struct __tds__LoadCertificateWithPrivateKey *, const char*, const char*);

#ifndef soap_read___tds__LoadCertificateWithPrivateKey
#define soap_read___tds__LoadCertificateWithPrivateKey(soap, data) ( ((data) ? (soap_default___tds__LoadCertificateWithPrivateKey(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__LoadCertificateWithPrivateKey(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetCACertificates
#define SOAP_TYPE___tds__GetCACertificates (1852)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetCACertificates(struct soap*, struct __tds__GetCACertificates *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetCACertificates(struct soap*, const struct __tds__GetCACertificates *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetCACertificates(struct soap*, const char*, int, const struct __tds__GetCACertificates *, const char*);
SOAP_FMAC3 struct __tds__GetCACertificates * SOAP_FMAC4 soap_in___tds__GetCACertificates(struct soap*, const char*, struct __tds__GetCACertificates *, const char*);
SOAP_FMAC1 struct __tds__GetCACertificates * SOAP_FMAC2 soap_instantiate___tds__GetCACertificates(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetCACertificates * soap_new___tds__GetCACertificates(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetCACertificates(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetCACertificates * soap_new_req___tds__GetCACertificates(
	struct soap *soap)
{	struct __tds__GetCACertificates *_p = soap_new___tds__GetCACertificates(soap);
	if (_p)
	{	soap_default___tds__GetCACertificates(soap, _p);
	}
	return _p;
}

inline struct __tds__GetCACertificates * soap_new_set___tds__GetCACertificates(
	struct soap *soap,
	_tds__GetCACertificates *tds__GetCACertificates)
{	struct __tds__GetCACertificates *_p = soap_new___tds__GetCACertificates(soap);
	if (_p)
	{	soap_default___tds__GetCACertificates(soap, _p);
		_p->tds__GetCACertificates = tds__GetCACertificates;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetCACertificates(struct soap*, const struct __tds__GetCACertificates *, const char*, const char*);

#ifndef soap_write___tds__GetCACertificates
#define soap_write___tds__GetCACertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetCACertificates(soap, data), 0) || soap_put___tds__GetCACertificates(soap, data, "-tds:GetCACertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetCACertificates * SOAP_FMAC4 soap_get___tds__GetCACertificates(struct soap*, struct __tds__GetCACertificates *, const char*, const char*);

#ifndef soap_read___tds__GetCACertificates
#define soap_read___tds__GetCACertificates(soap, data) ( ((data) ? (soap_default___tds__GetCACertificates(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetCACertificates(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__SendAuxiliaryCommand
#define SOAP_TYPE___tds__SendAuxiliaryCommand (1848)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SendAuxiliaryCommand(struct soap*, struct __tds__SendAuxiliaryCommand *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SendAuxiliaryCommand(struct soap*, const struct __tds__SendAuxiliaryCommand *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SendAuxiliaryCommand(struct soap*, const char*, int, const struct __tds__SendAuxiliaryCommand *, const char*);
SOAP_FMAC3 struct __tds__SendAuxiliaryCommand * SOAP_FMAC4 soap_in___tds__SendAuxiliaryCommand(struct soap*, const char*, struct __tds__SendAuxiliaryCommand *, const char*);
SOAP_FMAC1 struct __tds__SendAuxiliaryCommand * SOAP_FMAC2 soap_instantiate___tds__SendAuxiliaryCommand(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SendAuxiliaryCommand * soap_new___tds__SendAuxiliaryCommand(struct soap *soap, int n = -1) { return soap_instantiate___tds__SendAuxiliaryCommand(soap, n, NULL, NULL, NULL); }

inline struct __tds__SendAuxiliaryCommand * soap_new_req___tds__SendAuxiliaryCommand(
	struct soap *soap)
{	struct __tds__SendAuxiliaryCommand *_p = soap_new___tds__SendAuxiliaryCommand(soap);
	if (_p)
	{	soap_default___tds__SendAuxiliaryCommand(soap, _p);
	}
	return _p;
}

inline struct __tds__SendAuxiliaryCommand * soap_new_set___tds__SendAuxiliaryCommand(
	struct soap *soap,
	_tds__SendAuxiliaryCommand *tds__SendAuxiliaryCommand)
{	struct __tds__SendAuxiliaryCommand *_p = soap_new___tds__SendAuxiliaryCommand(soap);
	if (_p)
	{	soap_default___tds__SendAuxiliaryCommand(soap, _p);
		_p->tds__SendAuxiliaryCommand = tds__SendAuxiliaryCommand;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SendAuxiliaryCommand(struct soap*, const struct __tds__SendAuxiliaryCommand *, const char*, const char*);

#ifndef soap_write___tds__SendAuxiliaryCommand
#define soap_write___tds__SendAuxiliaryCommand(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SendAuxiliaryCommand(soap, data), 0) || soap_put___tds__SendAuxiliaryCommand(soap, data, "-tds:SendAuxiliaryCommand", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SendAuxiliaryCommand * SOAP_FMAC4 soap_get___tds__SendAuxiliaryCommand(struct soap*, struct __tds__SendAuxiliaryCommand *, const char*, const char*);

#ifndef soap_read___tds__SendAuxiliaryCommand
#define soap_read___tds__SendAuxiliaryCommand(soap, data) ( ((data) ? (soap_default___tds__SendAuxiliaryCommand(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__SendAuxiliaryCommand(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__SetRelayOutputState
#define SOAP_TYPE___tds__SetRelayOutputState (1844)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetRelayOutputState(struct soap*, struct __tds__SetRelayOutputState *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetRelayOutputState(struct soap*, const struct __tds__SetRelayOutputState *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetRelayOutputState(struct soap*, const char*, int, const struct __tds__SetRelayOutputState *, const char*);
SOAP_FMAC3 struct __tds__SetRelayOutputState * SOAP_FMAC4 soap_in___tds__SetRelayOutputState(struct soap*, const char*, struct __tds__SetRelayOutputState *, const char*);
SOAP_FMAC1 struct __tds__SetRelayOutputState * SOAP_FMAC2 soap_instantiate___tds__SetRelayOutputState(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetRelayOutputState * soap_new___tds__SetRelayOutputState(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetRelayOutputState(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetRelayOutputState * soap_new_req___tds__SetRelayOutputState(
	struct soap *soap)
{	struct __tds__SetRelayOutputState *_p = soap_new___tds__SetRelayOutputState(soap);
	if (_p)
	{	soap_default___tds__SetRelayOutputState(soap, _p);
	}
	return _p;
}

inline struct __tds__SetRelayOutputState * soap_new_set___tds__SetRelayOutputState(
	struct soap *soap,
	_tds__SetRelayOutputState *tds__SetRelayOutputState)
{	struct __tds__SetRelayOutputState *_p = soap_new___tds__SetRelayOutputState(soap);
	if (_p)
	{	soap_default___tds__SetRelayOutputState(soap, _p);
		_p->tds__SetRelayOutputState = tds__SetRelayOutputState;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetRelayOutputState(struct soap*, const struct __tds__SetRelayOutputState *, const char*, const char*);

#ifndef soap_write___tds__SetRelayOutputState
#define soap_write___tds__SetRelayOutputState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetRelayOutputState(soap, data), 0) || soap_put___tds__SetRelayOutputState(soap, data, "-tds:SetRelayOutputState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetRelayOutputState * SOAP_FMAC4 soap_get___tds__SetRelayOutputState(struct soap*, struct __tds__SetRelayOutputState *, const char*, const char*);

#ifndef soap_read___tds__SetRelayOutputState
#define soap_read___tds__SetRelayOutputState(soap, data) ( ((data) ? (soap_default___tds__SetRelayOutputState(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__SetRelayOutputState(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__SetRelayOutputSettings
#define SOAP_TYPE___tds__SetRelayOutputSettings (1840)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetRelayOutputSettings(struct soap*, struct __tds__SetRelayOutputSettings *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetRelayOutputSettings(struct soap*, const struct __tds__SetRelayOutputSettings *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetRelayOutputSettings(struct soap*, const char*, int, const struct __tds__SetRelayOutputSettings *, const char*);
SOAP_FMAC3 struct __tds__SetRelayOutputSettings * SOAP_FMAC4 soap_in___tds__SetRelayOutputSettings(struct soap*, const char*, struct __tds__SetRelayOutputSettings *, const char*);
SOAP_FMAC1 struct __tds__SetRelayOutputSettings * SOAP_FMAC2 soap_instantiate___tds__SetRelayOutputSettings(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetRelayOutputSettings * soap_new___tds__SetRelayOutputSettings(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetRelayOutputSettings(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetRelayOutputSettings * soap_new_req___tds__SetRelayOutputSettings(
	struct soap *soap)
{	struct __tds__SetRelayOutputSettings *_p = soap_new___tds__SetRelayOutputSettings(soap);
	if (_p)
	{	soap_default___tds__SetRelayOutputSettings(soap, _p);
	}
	return _p;
}

inline struct __tds__SetRelayOutputSettings * soap_new_set___tds__SetRelayOutputSettings(
	struct soap *soap,
	_tds__SetRelayOutputSettings *tds__SetRelayOutputSettings)
{	struct __tds__SetRelayOutputSettings *_p = soap_new___tds__SetRelayOutputSettings(soap);
	if (_p)
	{	soap_default___tds__SetRelayOutputSettings(soap, _p);
		_p->tds__SetRelayOutputSettings = tds__SetRelayOutputSettings;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetRelayOutputSettings(struct soap*, const struct __tds__SetRelayOutputSettings *, const char*, const char*);

#ifndef soap_write___tds__SetRelayOutputSettings
#define soap_write___tds__SetRelayOutputSettings(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetRelayOutputSettings(soap, data), 0) || soap_put___tds__SetRelayOutputSettings(soap, data, "-tds:SetRelayOutputSettings", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetRelayOutputSettings * SOAP_FMAC4 soap_get___tds__SetRelayOutputSettings(struct soap*, struct __tds__SetRelayOutputSettings *, const char*, const char*);

#ifndef soap_read___tds__SetRelayOutputSettings
#define soap_read___tds__SetRelayOutputSettings(soap, data) ( ((data) ? (soap_default___tds__SetRelayOutputSettings(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__SetRelayOutputSettings(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetRelayOutputs
#define SOAP_TYPE___tds__GetRelayOutputs (1836)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetRelayOutputs(struct soap*, struct __tds__GetRelayOutputs *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetRelayOutputs(struct soap*, const struct __tds__GetRelayOutputs *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetRelayOutputs(struct soap*, const char*, int, const struct __tds__GetRelayOutputs *, const char*);
SOAP_FMAC3 struct __tds__GetRelayOutputs * SOAP_FMAC4 soap_in___tds__GetRelayOutputs(struct soap*, const char*, struct __tds__GetRelayOutputs *, const char*);
SOAP_FMAC1 struct __tds__GetRelayOutputs * SOAP_FMAC2 soap_instantiate___tds__GetRelayOutputs(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetRelayOutputs * soap_new___tds__GetRelayOutputs(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetRelayOutputs(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetRelayOutputs * soap_new_req___tds__GetRelayOutputs(
	struct soap *soap)
{	struct __tds__GetRelayOutputs *_p = soap_new___tds__GetRelayOutputs(soap);
	if (_p)
	{	soap_default___tds__GetRelayOutputs(soap, _p);
	}
	return _p;
}

inline struct __tds__GetRelayOutputs * soap_new_set___tds__GetRelayOutputs(
	struct soap *soap,
	_tds__GetRelayOutputs *tds__GetRelayOutputs)
{	struct __tds__GetRelayOutputs *_p = soap_new___tds__GetRelayOutputs(soap);
	if (_p)
	{	soap_default___tds__GetRelayOutputs(soap, _p);
		_p->tds__GetRelayOutputs = tds__GetRelayOutputs;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetRelayOutputs(struct soap*, const struct __tds__GetRelayOutputs *, const char*, const char*);

#ifndef soap_write___tds__GetRelayOutputs
#define soap_write___tds__GetRelayOutputs(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetRelayOutputs(soap, data), 0) || soap_put___tds__GetRelayOutputs(soap, data, "-tds:GetRelayOutputs", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetRelayOutputs * SOAP_FMAC4 soap_get___tds__GetRelayOutputs(struct soap*, struct __tds__GetRelayOutputs *, const char*, const char*);

#ifndef soap_read___tds__GetRelayOutputs
#define soap_read___tds__GetRelayOutputs(soap, data) ( ((data) ? (soap_default___tds__GetRelayOutputs(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetRelayOutputs(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__SetClientCertificateMode
#define SOAP_TYPE___tds__SetClientCertificateMode (1832)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetClientCertificateMode(struct soap*, struct __tds__SetClientCertificateMode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetClientCertificateMode(struct soap*, const struct __tds__SetClientCertificateMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetClientCertificateMode(struct soap*, const char*, int, const struct __tds__SetClientCertificateMode *, const char*);
SOAP_FMAC3 struct __tds__SetClientCertificateMode * SOAP_FMAC4 soap_in___tds__SetClientCertificateMode(struct soap*, const char*, struct __tds__SetClientCertificateMode *, const char*);
SOAP_FMAC1 struct __tds__SetClientCertificateMode * SOAP_FMAC2 soap_instantiate___tds__SetClientCertificateMode(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetClientCertificateMode * soap_new___tds__SetClientCertificateMode(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetClientCertificateMode(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetClientCertificateMode * soap_new_req___tds__SetClientCertificateMode(
	struct soap *soap)
{	struct __tds__SetClientCertificateMode *_p = soap_new___tds__SetClientCertificateMode(soap);
	if (_p)
	{	soap_default___tds__SetClientCertificateMode(soap, _p);
	}
	return _p;
}

inline struct __tds__SetClientCertificateMode * soap_new_set___tds__SetClientCertificateMode(
	struct soap *soap,
	_tds__SetClientCertificateMode *tds__SetClientCertificateMode)
{	struct __tds__SetClientCertificateMode *_p = soap_new___tds__SetClientCertificateMode(soap);
	if (_p)
	{	soap_default___tds__SetClientCertificateMode(soap, _p);
		_p->tds__SetClientCertificateMode = tds__SetClientCertificateMode;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetClientCertificateMode(struct soap*, const struct __tds__SetClientCertificateMode *, const char*, const char*);

#ifndef soap_write___tds__SetClientCertificateMode
#define soap_write___tds__SetClientCertificateMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetClientCertificateMode(soap, data), 0) || soap_put___tds__SetClientCertificateMode(soap, data, "-tds:SetClientCertificateMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetClientCertificateMode * SOAP_FMAC4 soap_get___tds__SetClientCertificateMode(struct soap*, struct __tds__SetClientCertificateMode *, const char*, const char*);

#ifndef soap_read___tds__SetClientCertificateMode
#define soap_read___tds__SetClientCertificateMode(soap, data) ( ((data) ? (soap_default___tds__SetClientCertificateMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__SetClientCertificateMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetClientCertificateMode
#define SOAP_TYPE___tds__GetClientCertificateMode (1828)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetClientCertificateMode(struct soap*, struct __tds__GetClientCertificateMode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetClientCertificateMode(struct soap*, const struct __tds__GetClientCertificateMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetClientCertificateMode(struct soap*, const char*, int, const struct __tds__GetClientCertificateMode *, const char*);
SOAP_FMAC3 struct __tds__GetClientCertificateMode * SOAP_FMAC4 soap_in___tds__GetClientCertificateMode(struct soap*, const char*, struct __tds__GetClientCertificateMode *, const char*);
SOAP_FMAC1 struct __tds__GetClientCertificateMode * SOAP_FMAC2 soap_instantiate___tds__GetClientCertificateMode(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetClientCertificateMode * soap_new___tds__GetClientCertificateMode(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetClientCertificateMode(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetClientCertificateMode * soap_new_req___tds__GetClientCertificateMode(
	struct soap *soap)
{	struct __tds__GetClientCertificateMode *_p = soap_new___tds__GetClientCertificateMode(soap);
	if (_p)
	{	soap_default___tds__GetClientCertificateMode(soap, _p);
	}
	return _p;
}

inline struct __tds__GetClientCertificateMode * soap_new_set___tds__GetClientCertificateMode(
	struct soap *soap,
	_tds__GetClientCertificateMode *tds__GetClientCertificateMode)
{	struct __tds__GetClientCertificateMode *_p = soap_new___tds__GetClientCertificateMode(soap);
	if (_p)
	{	soap_default___tds__GetClientCertificateMode(soap, _p);
		_p->tds__GetClientCertificateMode = tds__GetClientCertificateMode;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetClientCertificateMode(struct soap*, const struct __tds__GetClientCertificateMode *, const char*, const char*);

#ifndef soap_write___tds__GetClientCertificateMode
#define soap_write___tds__GetClientCertificateMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetClientCertificateMode(soap, data), 0) || soap_put___tds__GetClientCertificateMode(soap, data, "-tds:GetClientCertificateMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetClientCertificateMode * SOAP_FMAC4 soap_get___tds__GetClientCertificateMode(struct soap*, struct __tds__GetClientCertificateMode *, const char*, const char*);

#ifndef soap_read___tds__GetClientCertificateMode
#define soap_read___tds__GetClientCertificateMode(soap, data) ( ((data) ? (soap_default___tds__GetClientCertificateMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetClientCertificateMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__LoadCertificates
#define SOAP_TYPE___tds__LoadCertificates (1824)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__LoadCertificates(struct soap*, struct __tds__LoadCertificates *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__LoadCertificates(struct soap*, const struct __tds__LoadCertificates *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__LoadCertificates(struct soap*, const char*, int, const struct __tds__LoadCertificates *, const char*);
SOAP_FMAC3 struct __tds__LoadCertificates * SOAP_FMAC4 soap_in___tds__LoadCertificates(struct soap*, const char*, struct __tds__LoadCertificates *, const char*);
SOAP_FMAC1 struct __tds__LoadCertificates * SOAP_FMAC2 soap_instantiate___tds__LoadCertificates(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__LoadCertificates * soap_new___tds__LoadCertificates(struct soap *soap, int n = -1) { return soap_instantiate___tds__LoadCertificates(soap, n, NULL, NULL, NULL); }

inline struct __tds__LoadCertificates * soap_new_req___tds__LoadCertificates(
	struct soap *soap)
{	struct __tds__LoadCertificates *_p = soap_new___tds__LoadCertificates(soap);
	if (_p)
	{	soap_default___tds__LoadCertificates(soap, _p);
	}
	return _p;
}

inline struct __tds__LoadCertificates * soap_new_set___tds__LoadCertificates(
	struct soap *soap,
	_tds__LoadCertificates *tds__LoadCertificates)
{	struct __tds__LoadCertificates *_p = soap_new___tds__LoadCertificates(soap);
	if (_p)
	{	soap_default___tds__LoadCertificates(soap, _p);
		_p->tds__LoadCertificates = tds__LoadCertificates;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__LoadCertificates(struct soap*, const struct __tds__LoadCertificates *, const char*, const char*);

#ifndef soap_write___tds__LoadCertificates
#define soap_write___tds__LoadCertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__LoadCertificates(soap, data), 0) || soap_put___tds__LoadCertificates(soap, data, "-tds:LoadCertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__LoadCertificates * SOAP_FMAC4 soap_get___tds__LoadCertificates(struct soap*, struct __tds__LoadCertificates *, const char*, const char*);

#ifndef soap_read___tds__LoadCertificates
#define soap_read___tds__LoadCertificates(soap, data) ( ((data) ? (soap_default___tds__LoadCertificates(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__LoadCertificates(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetPkcs10Request
#define SOAP_TYPE___tds__GetPkcs10Request (1820)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetPkcs10Request(struct soap*, struct __tds__GetPkcs10Request *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetPkcs10Request(struct soap*, const struct __tds__GetPkcs10Request *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetPkcs10Request(struct soap*, const char*, int, const struct __tds__GetPkcs10Request *, const char*);
SOAP_FMAC3 struct __tds__GetPkcs10Request * SOAP_FMAC4 soap_in___tds__GetPkcs10Request(struct soap*, const char*, struct __tds__GetPkcs10Request *, const char*);
SOAP_FMAC1 struct __tds__GetPkcs10Request * SOAP_FMAC2 soap_instantiate___tds__GetPkcs10Request(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetPkcs10Request * soap_new___tds__GetPkcs10Request(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetPkcs10Request(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetPkcs10Request * soap_new_req___tds__GetPkcs10Request(
	struct soap *soap)
{	struct __tds__GetPkcs10Request *_p = soap_new___tds__GetPkcs10Request(soap);
	if (_p)
	{	soap_default___tds__GetPkcs10Request(soap, _p);
	}
	return _p;
}

inline struct __tds__GetPkcs10Request * soap_new_set___tds__GetPkcs10Request(
	struct soap *soap,
	_tds__GetPkcs10Request *tds__GetPkcs10Request)
{	struct __tds__GetPkcs10Request *_p = soap_new___tds__GetPkcs10Request(soap);
	if (_p)
	{	soap_default___tds__GetPkcs10Request(soap, _p);
		_p->tds__GetPkcs10Request = tds__GetPkcs10Request;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetPkcs10Request(struct soap*, const struct __tds__GetPkcs10Request *, const char*, const char*);

#ifndef soap_write___tds__GetPkcs10Request
#define soap_write___tds__GetPkcs10Request(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetPkcs10Request(soap, data), 0) || soap_put___tds__GetPkcs10Request(soap, data, "-tds:GetPkcs10Request", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetPkcs10Request * SOAP_FMAC4 soap_get___tds__GetPkcs10Request(struct soap*, struct __tds__GetPkcs10Request *, const char*, const char*);

#ifndef soap_read___tds__GetPkcs10Request
#define soap_read___tds__GetPkcs10Request(soap, data) ( ((data) ? (soap_default___tds__GetPkcs10Request(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetPkcs10Request(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__DeleteCertificates
#define SOAP_TYPE___tds__DeleteCertificates (1816)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__DeleteCertificates(struct soap*, struct __tds__DeleteCertificates *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__DeleteCertificates(struct soap*, const struct __tds__DeleteCertificates *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__DeleteCertificates(struct soap*, const char*, int, const struct __tds__DeleteCertificates *, const char*);
SOAP_FMAC3 struct __tds__DeleteCertificates * SOAP_FMAC4 soap_in___tds__DeleteCertificates(struct soap*, const char*, struct __tds__DeleteCertificates *, const char*);
SOAP_FMAC1 struct __tds__DeleteCertificates * SOAP_FMAC2 soap_instantiate___tds__DeleteCertificates(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__DeleteCertificates * soap_new___tds__DeleteCertificates(struct soap *soap, int n = -1) { return soap_instantiate___tds__DeleteCertificates(soap, n, NULL, NULL, NULL); }

inline struct __tds__DeleteCertificates * soap_new_req___tds__DeleteCertificates(
	struct soap *soap)
{	struct __tds__DeleteCertificates *_p = soap_new___tds__DeleteCertificates(soap);
	if (_p)
	{	soap_default___tds__DeleteCertificates(soap, _p);
	}
	return _p;
}

inline struct __tds__DeleteCertificates * soap_new_set___tds__DeleteCertificates(
	struct soap *soap,
	_tds__DeleteCertificates *tds__DeleteCertificates)
{	struct __tds__DeleteCertificates *_p = soap_new___tds__DeleteCertificates(soap);
	if (_p)
	{	soap_default___tds__DeleteCertificates(soap, _p);
		_p->tds__DeleteCertificates = tds__DeleteCertificates;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__DeleteCertificates(struct soap*, const struct __tds__DeleteCertificates *, const char*, const char*);

#ifndef soap_write___tds__DeleteCertificates
#define soap_write___tds__DeleteCertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__DeleteCertificates(soap, data), 0) || soap_put___tds__DeleteCertificates(soap, data, "-tds:DeleteCertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__DeleteCertificates * SOAP_FMAC4 soap_get___tds__DeleteCertificates(struct soap*, struct __tds__DeleteCertificates *, const char*, const char*);

#ifndef soap_read___tds__DeleteCertificates
#define soap_read___tds__DeleteCertificates(soap, data) ( ((data) ? (soap_default___tds__DeleteCertificates(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__DeleteCertificates(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__SetCertificatesStatus
#define SOAP_TYPE___tds__SetCertificatesStatus (1812)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetCertificatesStatus(struct soap*, struct __tds__SetCertificatesStatus *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetCertificatesStatus(struct soap*, const struct __tds__SetCertificatesStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetCertificatesStatus(struct soap*, const char*, int, const struct __tds__SetCertificatesStatus *, const char*);
SOAP_FMAC3 struct __tds__SetCertificatesStatus * SOAP_FMAC4 soap_in___tds__SetCertificatesStatus(struct soap*, const char*, struct __tds__SetCertificatesStatus *, const char*);
SOAP_FMAC1 struct __tds__SetCertificatesStatus * SOAP_FMAC2 soap_instantiate___tds__SetCertificatesStatus(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetCertificatesStatus * soap_new___tds__SetCertificatesStatus(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetCertificatesStatus(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetCertificatesStatus * soap_new_req___tds__SetCertificatesStatus(
	struct soap *soap)
{	struct __tds__SetCertificatesStatus *_p = soap_new___tds__SetCertificatesStatus(soap);
	if (_p)
	{	soap_default___tds__SetCertificatesStatus(soap, _p);
	}
	return _p;
}

inline struct __tds__SetCertificatesStatus * soap_new_set___tds__SetCertificatesStatus(
	struct soap *soap,
	_tds__SetCertificatesStatus *tds__SetCertificatesStatus)
{	struct __tds__SetCertificatesStatus *_p = soap_new___tds__SetCertificatesStatus(soap);
	if (_p)
	{	soap_default___tds__SetCertificatesStatus(soap, _p);
		_p->tds__SetCertificatesStatus = tds__SetCertificatesStatus;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetCertificatesStatus(struct soap*, const struct __tds__SetCertificatesStatus *, const char*, const char*);

#ifndef soap_write___tds__SetCertificatesStatus
#define soap_write___tds__SetCertificatesStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetCertificatesStatus(soap, data), 0) || soap_put___tds__SetCertificatesStatus(soap, data, "-tds:SetCertificatesStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetCertificatesStatus * SOAP_FMAC4 soap_get___tds__SetCertificatesStatus(struct soap*, struct __tds__SetCertificatesStatus *, const char*, const char*);

#ifndef soap_read___tds__SetCertificatesStatus
#define soap_read___tds__SetCertificatesStatus(soap, data) ( ((data) ? (soap_default___tds__SetCertificatesStatus(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__SetCertificatesStatus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetCertificatesStatus
#define SOAP_TYPE___tds__GetCertificatesStatus (1808)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetCertificatesStatus(struct soap*, struct __tds__GetCertificatesStatus *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetCertificatesStatus(struct soap*, const struct __tds__GetCertificatesStatus *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetCertificatesStatus(struct soap*, const char*, int, const struct __tds__GetCertificatesStatus *, const char*);
SOAP_FMAC3 struct __tds__GetCertificatesStatus * SOAP_FMAC4 soap_in___tds__GetCertificatesStatus(struct soap*, const char*, struct __tds__GetCertificatesStatus *, const char*);
SOAP_FMAC1 struct __tds__GetCertificatesStatus * SOAP_FMAC2 soap_instantiate___tds__GetCertificatesStatus(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetCertificatesStatus * soap_new___tds__GetCertificatesStatus(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetCertificatesStatus(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetCertificatesStatus * soap_new_req___tds__GetCertificatesStatus(
	struct soap *soap)
{	struct __tds__GetCertificatesStatus *_p = soap_new___tds__GetCertificatesStatus(soap);
	if (_p)
	{	soap_default___tds__GetCertificatesStatus(soap, _p);
	}
	return _p;
}

inline struct __tds__GetCertificatesStatus * soap_new_set___tds__GetCertificatesStatus(
	struct soap *soap,
	_tds__GetCertificatesStatus *tds__GetCertificatesStatus)
{	struct __tds__GetCertificatesStatus *_p = soap_new___tds__GetCertificatesStatus(soap);
	if (_p)
	{	soap_default___tds__GetCertificatesStatus(soap, _p);
		_p->tds__GetCertificatesStatus = tds__GetCertificatesStatus;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetCertificatesStatus(struct soap*, const struct __tds__GetCertificatesStatus *, const char*, const char*);

#ifndef soap_write___tds__GetCertificatesStatus
#define soap_write___tds__GetCertificatesStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetCertificatesStatus(soap, data), 0) || soap_put___tds__GetCertificatesStatus(soap, data, "-tds:GetCertificatesStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetCertificatesStatus * SOAP_FMAC4 soap_get___tds__GetCertificatesStatus(struct soap*, struct __tds__GetCertificatesStatus *, const char*, const char*);

#ifndef soap_read___tds__GetCertificatesStatus
#define soap_read___tds__GetCertificatesStatus(soap, data) ( ((data) ? (soap_default___tds__GetCertificatesStatus(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetCertificatesStatus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetCertificates
#define SOAP_TYPE___tds__GetCertificates (1804)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetCertificates(struct soap*, struct __tds__GetCertificates *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetCertificates(struct soap*, const struct __tds__GetCertificates *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetCertificates(struct soap*, const char*, int, const struct __tds__GetCertificates *, const char*);
SOAP_FMAC3 struct __tds__GetCertificates * SOAP_FMAC4 soap_in___tds__GetCertificates(struct soap*, const char*, struct __tds__GetCertificates *, const char*);
SOAP_FMAC1 struct __tds__GetCertificates * SOAP_FMAC2 soap_instantiate___tds__GetCertificates(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetCertificates * soap_new___tds__GetCertificates(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetCertificates(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetCertificates * soap_new_req___tds__GetCertificates(
	struct soap *soap)
{	struct __tds__GetCertificates *_p = soap_new___tds__GetCertificates(soap);
	if (_p)
	{	soap_default___tds__GetCertificates(soap, _p);
	}
	return _p;
}

inline struct __tds__GetCertificates * soap_new_set___tds__GetCertificates(
	struct soap *soap,
	_tds__GetCertificates *tds__GetCertificates)
{	struct __tds__GetCertificates *_p = soap_new___tds__GetCertificates(soap);
	if (_p)
	{	soap_default___tds__GetCertificates(soap, _p);
		_p->tds__GetCertificates = tds__GetCertificates;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetCertificates(struct soap*, const struct __tds__GetCertificates *, const char*, const char*);

#ifndef soap_write___tds__GetCertificates
#define soap_write___tds__GetCertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetCertificates(soap, data), 0) || soap_put___tds__GetCertificates(soap, data, "-tds:GetCertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetCertificates * SOAP_FMAC4 soap_get___tds__GetCertificates(struct soap*, struct __tds__GetCertificates *, const char*, const char*);

#ifndef soap_read___tds__GetCertificates
#define soap_read___tds__GetCertificates(soap, data) ( ((data) ? (soap_default___tds__GetCertificates(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetCertificates(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__CreateCertificate
#define SOAP_TYPE___tds__CreateCertificate (1800)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__CreateCertificate(struct soap*, struct __tds__CreateCertificate *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__CreateCertificate(struct soap*, const struct __tds__CreateCertificate *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__CreateCertificate(struct soap*, const char*, int, const struct __tds__CreateCertificate *, const char*);
SOAP_FMAC3 struct __tds__CreateCertificate * SOAP_FMAC4 soap_in___tds__CreateCertificate(struct soap*, const char*, struct __tds__CreateCertificate *, const char*);
SOAP_FMAC1 struct __tds__CreateCertificate * SOAP_FMAC2 soap_instantiate___tds__CreateCertificate(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__CreateCertificate * soap_new___tds__CreateCertificate(struct soap *soap, int n = -1) { return soap_instantiate___tds__CreateCertificate(soap, n, NULL, NULL, NULL); }

inline struct __tds__CreateCertificate * soap_new_req___tds__CreateCertificate(
	struct soap *soap)
{	struct __tds__CreateCertificate *_p = soap_new___tds__CreateCertificate(soap);
	if (_p)
	{	soap_default___tds__CreateCertificate(soap, _p);
	}
	return _p;
}

inline struct __tds__CreateCertificate * soap_new_set___tds__CreateCertificate(
	struct soap *soap,
	_tds__CreateCertificate *tds__CreateCertificate)
{	struct __tds__CreateCertificate *_p = soap_new___tds__CreateCertificate(soap);
	if (_p)
	{	soap_default___tds__CreateCertificate(soap, _p);
		_p->tds__CreateCertificate = tds__CreateCertificate;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__CreateCertificate(struct soap*, const struct __tds__CreateCertificate *, const char*, const char*);

#ifndef soap_write___tds__CreateCertificate
#define soap_write___tds__CreateCertificate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__CreateCertificate(soap, data), 0) || soap_put___tds__CreateCertificate(soap, data, "-tds:CreateCertificate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__CreateCertificate * SOAP_FMAC4 soap_get___tds__CreateCertificate(struct soap*, struct __tds__CreateCertificate *, const char*, const char*);

#ifndef soap_read___tds__CreateCertificate
#define soap_read___tds__CreateCertificate(soap, data) ( ((data) ? (soap_default___tds__CreateCertificate(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__CreateCertificate(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__SetAccessPolicy
#define SOAP_TYPE___tds__SetAccessPolicy (1796)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetAccessPolicy(struct soap*, struct __tds__SetAccessPolicy *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetAccessPolicy(struct soap*, const struct __tds__SetAccessPolicy *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetAccessPolicy(struct soap*, const char*, int, const struct __tds__SetAccessPolicy *, const char*);
SOAP_FMAC3 struct __tds__SetAccessPolicy * SOAP_FMAC4 soap_in___tds__SetAccessPolicy(struct soap*, const char*, struct __tds__SetAccessPolicy *, const char*);
SOAP_FMAC1 struct __tds__SetAccessPolicy * SOAP_FMAC2 soap_instantiate___tds__SetAccessPolicy(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetAccessPolicy * soap_new___tds__SetAccessPolicy(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetAccessPolicy(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetAccessPolicy * soap_new_req___tds__SetAccessPolicy(
	struct soap *soap)
{	struct __tds__SetAccessPolicy *_p = soap_new___tds__SetAccessPolicy(soap);
	if (_p)
	{	soap_default___tds__SetAccessPolicy(soap, _p);
	}
	return _p;
}

inline struct __tds__SetAccessPolicy * soap_new_set___tds__SetAccessPolicy(
	struct soap *soap,
	_tds__SetAccessPolicy *tds__SetAccessPolicy)
{	struct __tds__SetAccessPolicy *_p = soap_new___tds__SetAccessPolicy(soap);
	if (_p)
	{	soap_default___tds__SetAccessPolicy(soap, _p);
		_p->tds__SetAccessPolicy = tds__SetAccessPolicy;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetAccessPolicy(struct soap*, const struct __tds__SetAccessPolicy *, const char*, const char*);

#ifndef soap_write___tds__SetAccessPolicy
#define soap_write___tds__SetAccessPolicy(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetAccessPolicy(soap, data), 0) || soap_put___tds__SetAccessPolicy(soap, data, "-tds:SetAccessPolicy", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetAccessPolicy * SOAP_FMAC4 soap_get___tds__SetAccessPolicy(struct soap*, struct __tds__SetAccessPolicy *, const char*, const char*);

#ifndef soap_read___tds__SetAccessPolicy
#define soap_read___tds__SetAccessPolicy(soap, data) ( ((data) ? (soap_default___tds__SetAccessPolicy(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__SetAccessPolicy(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetAccessPolicy
#define SOAP_TYPE___tds__GetAccessPolicy (1792)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetAccessPolicy(struct soap*, struct __tds__GetAccessPolicy *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetAccessPolicy(struct soap*, const struct __tds__GetAccessPolicy *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetAccessPolicy(struct soap*, const char*, int, const struct __tds__GetAccessPolicy *, const char*);
SOAP_FMAC3 struct __tds__GetAccessPolicy * SOAP_FMAC4 soap_in___tds__GetAccessPolicy(struct soap*, const char*, struct __tds__GetAccessPolicy *, const char*);
SOAP_FMAC1 struct __tds__GetAccessPolicy * SOAP_FMAC2 soap_instantiate___tds__GetAccessPolicy(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetAccessPolicy * soap_new___tds__GetAccessPolicy(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetAccessPolicy(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetAccessPolicy * soap_new_req___tds__GetAccessPolicy(
	struct soap *soap)
{	struct __tds__GetAccessPolicy *_p = soap_new___tds__GetAccessPolicy(soap);
	if (_p)
	{	soap_default___tds__GetAccessPolicy(soap, _p);
	}
	return _p;
}

inline struct __tds__GetAccessPolicy * soap_new_set___tds__GetAccessPolicy(
	struct soap *soap,
	_tds__GetAccessPolicy *tds__GetAccessPolicy)
{	struct __tds__GetAccessPolicy *_p = soap_new___tds__GetAccessPolicy(soap);
	if (_p)
	{	soap_default___tds__GetAccessPolicy(soap, _p);
		_p->tds__GetAccessPolicy = tds__GetAccessPolicy;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetAccessPolicy(struct soap*, const struct __tds__GetAccessPolicy *, const char*, const char*);

#ifndef soap_write___tds__GetAccessPolicy
#define soap_write___tds__GetAccessPolicy(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetAccessPolicy(soap, data), 0) || soap_put___tds__GetAccessPolicy(soap, data, "-tds:GetAccessPolicy", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetAccessPolicy * SOAP_FMAC4 soap_get___tds__GetAccessPolicy(struct soap*, struct __tds__GetAccessPolicy *, const char*, const char*);

#ifndef soap_read___tds__GetAccessPolicy
#define soap_read___tds__GetAccessPolicy(soap, data) ( ((data) ? (soap_default___tds__GetAccessPolicy(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetAccessPolicy(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__RemoveIPAddressFilter
#define SOAP_TYPE___tds__RemoveIPAddressFilter (1788)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__RemoveIPAddressFilter(struct soap*, struct __tds__RemoveIPAddressFilter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__RemoveIPAddressFilter(struct soap*, const struct __tds__RemoveIPAddressFilter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__RemoveIPAddressFilter(struct soap*, const char*, int, const struct __tds__RemoveIPAddressFilter *, const char*);
SOAP_FMAC3 struct __tds__RemoveIPAddressFilter * SOAP_FMAC4 soap_in___tds__RemoveIPAddressFilter(struct soap*, const char*, struct __tds__RemoveIPAddressFilter *, const char*);
SOAP_FMAC1 struct __tds__RemoveIPAddressFilter * SOAP_FMAC2 soap_instantiate___tds__RemoveIPAddressFilter(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__RemoveIPAddressFilter * soap_new___tds__RemoveIPAddressFilter(struct soap *soap, int n = -1) { return soap_instantiate___tds__RemoveIPAddressFilter(soap, n, NULL, NULL, NULL); }

inline struct __tds__RemoveIPAddressFilter * soap_new_req___tds__RemoveIPAddressFilter(
	struct soap *soap)
{	struct __tds__RemoveIPAddressFilter *_p = soap_new___tds__RemoveIPAddressFilter(soap);
	if (_p)
	{	soap_default___tds__RemoveIPAddressFilter(soap, _p);
	}
	return _p;
}

inline struct __tds__RemoveIPAddressFilter * soap_new_set___tds__RemoveIPAddressFilter(
	struct soap *soap,
	_tds__RemoveIPAddressFilter *tds__RemoveIPAddressFilter)
{	struct __tds__RemoveIPAddressFilter *_p = soap_new___tds__RemoveIPAddressFilter(soap);
	if (_p)
	{	soap_default___tds__RemoveIPAddressFilter(soap, _p);
		_p->tds__RemoveIPAddressFilter = tds__RemoveIPAddressFilter;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__RemoveIPAddressFilter(struct soap*, const struct __tds__RemoveIPAddressFilter *, const char*, const char*);

#ifndef soap_write___tds__RemoveIPAddressFilter
#define soap_write___tds__RemoveIPAddressFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__RemoveIPAddressFilter(soap, data), 0) || soap_put___tds__RemoveIPAddressFilter(soap, data, "-tds:RemoveIPAddressFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__RemoveIPAddressFilter * SOAP_FMAC4 soap_get___tds__RemoveIPAddressFilter(struct soap*, struct __tds__RemoveIPAddressFilter *, const char*, const char*);

#ifndef soap_read___tds__RemoveIPAddressFilter
#define soap_read___tds__RemoveIPAddressFilter(soap, data) ( ((data) ? (soap_default___tds__RemoveIPAddressFilter(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__RemoveIPAddressFilter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__AddIPAddressFilter
#define SOAP_TYPE___tds__AddIPAddressFilter (1784)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__AddIPAddressFilter(struct soap*, struct __tds__AddIPAddressFilter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__AddIPAddressFilter(struct soap*, const struct __tds__AddIPAddressFilter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__AddIPAddressFilter(struct soap*, const char*, int, const struct __tds__AddIPAddressFilter *, const char*);
SOAP_FMAC3 struct __tds__AddIPAddressFilter * SOAP_FMAC4 soap_in___tds__AddIPAddressFilter(struct soap*, const char*, struct __tds__AddIPAddressFilter *, const char*);
SOAP_FMAC1 struct __tds__AddIPAddressFilter * SOAP_FMAC2 soap_instantiate___tds__AddIPAddressFilter(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__AddIPAddressFilter * soap_new___tds__AddIPAddressFilter(struct soap *soap, int n = -1) { return soap_instantiate___tds__AddIPAddressFilter(soap, n, NULL, NULL, NULL); }

inline struct __tds__AddIPAddressFilter * soap_new_req___tds__AddIPAddressFilter(
	struct soap *soap)
{	struct __tds__AddIPAddressFilter *_p = soap_new___tds__AddIPAddressFilter(soap);
	if (_p)
	{	soap_default___tds__AddIPAddressFilter(soap, _p);
	}
	return _p;
}

inline struct __tds__AddIPAddressFilter * soap_new_set___tds__AddIPAddressFilter(
	struct soap *soap,
	_tds__AddIPAddressFilter *tds__AddIPAddressFilter)
{	struct __tds__AddIPAddressFilter *_p = soap_new___tds__AddIPAddressFilter(soap);
	if (_p)
	{	soap_default___tds__AddIPAddressFilter(soap, _p);
		_p->tds__AddIPAddressFilter = tds__AddIPAddressFilter;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__AddIPAddressFilter(struct soap*, const struct __tds__AddIPAddressFilter *, const char*, const char*);

#ifndef soap_write___tds__AddIPAddressFilter
#define soap_write___tds__AddIPAddressFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__AddIPAddressFilter(soap, data), 0) || soap_put___tds__AddIPAddressFilter(soap, data, "-tds:AddIPAddressFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__AddIPAddressFilter * SOAP_FMAC4 soap_get___tds__AddIPAddressFilter(struct soap*, struct __tds__AddIPAddressFilter *, const char*, const char*);

#ifndef soap_read___tds__AddIPAddressFilter
#define soap_read___tds__AddIPAddressFilter(soap, data) ( ((data) ? (soap_default___tds__AddIPAddressFilter(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__AddIPAddressFilter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__SetIPAddressFilter
#define SOAP_TYPE___tds__SetIPAddressFilter (1780)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetIPAddressFilter(struct soap*, struct __tds__SetIPAddressFilter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetIPAddressFilter(struct soap*, const struct __tds__SetIPAddressFilter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetIPAddressFilter(struct soap*, const char*, int, const struct __tds__SetIPAddressFilter *, const char*);
SOAP_FMAC3 struct __tds__SetIPAddressFilter * SOAP_FMAC4 soap_in___tds__SetIPAddressFilter(struct soap*, const char*, struct __tds__SetIPAddressFilter *, const char*);
SOAP_FMAC1 struct __tds__SetIPAddressFilter * SOAP_FMAC2 soap_instantiate___tds__SetIPAddressFilter(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetIPAddressFilter * soap_new___tds__SetIPAddressFilter(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetIPAddressFilter(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetIPAddressFilter * soap_new_req___tds__SetIPAddressFilter(
	struct soap *soap)
{	struct __tds__SetIPAddressFilter *_p = soap_new___tds__SetIPAddressFilter(soap);
	if (_p)
	{	soap_default___tds__SetIPAddressFilter(soap, _p);
	}
	return _p;
}

inline struct __tds__SetIPAddressFilter * soap_new_set___tds__SetIPAddressFilter(
	struct soap *soap,
	_tds__SetIPAddressFilter *tds__SetIPAddressFilter)
{	struct __tds__SetIPAddressFilter *_p = soap_new___tds__SetIPAddressFilter(soap);
	if (_p)
	{	soap_default___tds__SetIPAddressFilter(soap, _p);
		_p->tds__SetIPAddressFilter = tds__SetIPAddressFilter;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetIPAddressFilter(struct soap*, const struct __tds__SetIPAddressFilter *, const char*, const char*);

#ifndef soap_write___tds__SetIPAddressFilter
#define soap_write___tds__SetIPAddressFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetIPAddressFilter(soap, data), 0) || soap_put___tds__SetIPAddressFilter(soap, data, "-tds:SetIPAddressFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetIPAddressFilter * SOAP_FMAC4 soap_get___tds__SetIPAddressFilter(struct soap*, struct __tds__SetIPAddressFilter *, const char*, const char*);

#ifndef soap_read___tds__SetIPAddressFilter
#define soap_read___tds__SetIPAddressFilter(soap, data) ( ((data) ? (soap_default___tds__SetIPAddressFilter(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__SetIPAddressFilter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetIPAddressFilter
#define SOAP_TYPE___tds__GetIPAddressFilter (1776)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetIPAddressFilter(struct soap*, struct __tds__GetIPAddressFilter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetIPAddressFilter(struct soap*, const struct __tds__GetIPAddressFilter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetIPAddressFilter(struct soap*, const char*, int, const struct __tds__GetIPAddressFilter *, const char*);
SOAP_FMAC3 struct __tds__GetIPAddressFilter * SOAP_FMAC4 soap_in___tds__GetIPAddressFilter(struct soap*, const char*, struct __tds__GetIPAddressFilter *, const char*);
SOAP_FMAC1 struct __tds__GetIPAddressFilter * SOAP_FMAC2 soap_instantiate___tds__GetIPAddressFilter(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetIPAddressFilter * soap_new___tds__GetIPAddressFilter(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetIPAddressFilter(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetIPAddressFilter * soap_new_req___tds__GetIPAddressFilter(
	struct soap *soap)
{	struct __tds__GetIPAddressFilter *_p = soap_new___tds__GetIPAddressFilter(soap);
	if (_p)
	{	soap_default___tds__GetIPAddressFilter(soap, _p);
	}
	return _p;
}

inline struct __tds__GetIPAddressFilter * soap_new_set___tds__GetIPAddressFilter(
	struct soap *soap,
	_tds__GetIPAddressFilter *tds__GetIPAddressFilter)
{	struct __tds__GetIPAddressFilter *_p = soap_new___tds__GetIPAddressFilter(soap);
	if (_p)
	{	soap_default___tds__GetIPAddressFilter(soap, _p);
		_p->tds__GetIPAddressFilter = tds__GetIPAddressFilter;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetIPAddressFilter(struct soap*, const struct __tds__GetIPAddressFilter *, const char*, const char*);

#ifndef soap_write___tds__GetIPAddressFilter
#define soap_write___tds__GetIPAddressFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetIPAddressFilter(soap, data), 0) || soap_put___tds__GetIPAddressFilter(soap, data, "-tds:GetIPAddressFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetIPAddressFilter * SOAP_FMAC4 soap_get___tds__GetIPAddressFilter(struct soap*, struct __tds__GetIPAddressFilter *, const char*, const char*);

#ifndef soap_read___tds__GetIPAddressFilter
#define soap_read___tds__GetIPAddressFilter(soap, data) ( ((data) ? (soap_default___tds__GetIPAddressFilter(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetIPAddressFilter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__SetZeroConfiguration
#define SOAP_TYPE___tds__SetZeroConfiguration (1772)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetZeroConfiguration(struct soap*, struct __tds__SetZeroConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetZeroConfiguration(struct soap*, const struct __tds__SetZeroConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetZeroConfiguration(struct soap*, const char*, int, const struct __tds__SetZeroConfiguration *, const char*);
SOAP_FMAC3 struct __tds__SetZeroConfiguration * SOAP_FMAC4 soap_in___tds__SetZeroConfiguration(struct soap*, const char*, struct __tds__SetZeroConfiguration *, const char*);
SOAP_FMAC1 struct __tds__SetZeroConfiguration * SOAP_FMAC2 soap_instantiate___tds__SetZeroConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetZeroConfiguration * soap_new___tds__SetZeroConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetZeroConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetZeroConfiguration * soap_new_req___tds__SetZeroConfiguration(
	struct soap *soap)
{	struct __tds__SetZeroConfiguration *_p = soap_new___tds__SetZeroConfiguration(soap);
	if (_p)
	{	soap_default___tds__SetZeroConfiguration(soap, _p);
	}
	return _p;
}

inline struct __tds__SetZeroConfiguration * soap_new_set___tds__SetZeroConfiguration(
	struct soap *soap,
	_tds__SetZeroConfiguration *tds__SetZeroConfiguration)
{	struct __tds__SetZeroConfiguration *_p = soap_new___tds__SetZeroConfiguration(soap);
	if (_p)
	{	soap_default___tds__SetZeroConfiguration(soap, _p);
		_p->tds__SetZeroConfiguration = tds__SetZeroConfiguration;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetZeroConfiguration(struct soap*, const struct __tds__SetZeroConfiguration *, const char*, const char*);

#ifndef soap_write___tds__SetZeroConfiguration
#define soap_write___tds__SetZeroConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetZeroConfiguration(soap, data), 0) || soap_put___tds__SetZeroConfiguration(soap, data, "-tds:SetZeroConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetZeroConfiguration * SOAP_FMAC4 soap_get___tds__SetZeroConfiguration(struct soap*, struct __tds__SetZeroConfiguration *, const char*, const char*);

#ifndef soap_read___tds__SetZeroConfiguration
#define soap_read___tds__SetZeroConfiguration(soap, data) ( ((data) ? (soap_default___tds__SetZeroConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__SetZeroConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetZeroConfiguration
#define SOAP_TYPE___tds__GetZeroConfiguration (1768)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetZeroConfiguration(struct soap*, struct __tds__GetZeroConfiguration *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetZeroConfiguration(struct soap*, const struct __tds__GetZeroConfiguration *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetZeroConfiguration(struct soap*, const char*, int, const struct __tds__GetZeroConfiguration *, const char*);
SOAP_FMAC3 struct __tds__GetZeroConfiguration * SOAP_FMAC4 soap_in___tds__GetZeroConfiguration(struct soap*, const char*, struct __tds__GetZeroConfiguration *, const char*);
SOAP_FMAC1 struct __tds__GetZeroConfiguration * SOAP_FMAC2 soap_instantiate___tds__GetZeroConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetZeroConfiguration * soap_new___tds__GetZeroConfiguration(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetZeroConfiguration(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetZeroConfiguration * soap_new_req___tds__GetZeroConfiguration(
	struct soap *soap)
{	struct __tds__GetZeroConfiguration *_p = soap_new___tds__GetZeroConfiguration(soap);
	if (_p)
	{	soap_default___tds__GetZeroConfiguration(soap, _p);
	}
	return _p;
}

inline struct __tds__GetZeroConfiguration * soap_new_set___tds__GetZeroConfiguration(
	struct soap *soap,
	_tds__GetZeroConfiguration *tds__GetZeroConfiguration)
{	struct __tds__GetZeroConfiguration *_p = soap_new___tds__GetZeroConfiguration(soap);
	if (_p)
	{	soap_default___tds__GetZeroConfiguration(soap, _p);
		_p->tds__GetZeroConfiguration = tds__GetZeroConfiguration;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetZeroConfiguration(struct soap*, const struct __tds__GetZeroConfiguration *, const char*, const char*);

#ifndef soap_write___tds__GetZeroConfiguration
#define soap_write___tds__GetZeroConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetZeroConfiguration(soap, data), 0) || soap_put___tds__GetZeroConfiguration(soap, data, "-tds:GetZeroConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetZeroConfiguration * SOAP_FMAC4 soap_get___tds__GetZeroConfiguration(struct soap*, struct __tds__GetZeroConfiguration *, const char*, const char*);

#ifndef soap_read___tds__GetZeroConfiguration
#define soap_read___tds__GetZeroConfiguration(soap, data) ( ((data) ? (soap_default___tds__GetZeroConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetZeroConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__SetNetworkDefaultGateway
#define SOAP_TYPE___tds__SetNetworkDefaultGateway (1764)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetNetworkDefaultGateway(struct soap*, struct __tds__SetNetworkDefaultGateway *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetNetworkDefaultGateway(struct soap*, const struct __tds__SetNetworkDefaultGateway *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetNetworkDefaultGateway(struct soap*, const char*, int, const struct __tds__SetNetworkDefaultGateway *, const char*);
SOAP_FMAC3 struct __tds__SetNetworkDefaultGateway * SOAP_FMAC4 soap_in___tds__SetNetworkDefaultGateway(struct soap*, const char*, struct __tds__SetNetworkDefaultGateway *, const char*);
SOAP_FMAC1 struct __tds__SetNetworkDefaultGateway * SOAP_FMAC2 soap_instantiate___tds__SetNetworkDefaultGateway(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetNetworkDefaultGateway * soap_new___tds__SetNetworkDefaultGateway(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetNetworkDefaultGateway(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetNetworkDefaultGateway * soap_new_req___tds__SetNetworkDefaultGateway(
	struct soap *soap)
{	struct __tds__SetNetworkDefaultGateway *_p = soap_new___tds__SetNetworkDefaultGateway(soap);
	if (_p)
	{	soap_default___tds__SetNetworkDefaultGateway(soap, _p);
	}
	return _p;
}

inline struct __tds__SetNetworkDefaultGateway * soap_new_set___tds__SetNetworkDefaultGateway(
	struct soap *soap,
	_tds__SetNetworkDefaultGateway *tds__SetNetworkDefaultGateway)
{	struct __tds__SetNetworkDefaultGateway *_p = soap_new___tds__SetNetworkDefaultGateway(soap);
	if (_p)
	{	soap_default___tds__SetNetworkDefaultGateway(soap, _p);
		_p->tds__SetNetworkDefaultGateway = tds__SetNetworkDefaultGateway;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetNetworkDefaultGateway(struct soap*, const struct __tds__SetNetworkDefaultGateway *, const char*, const char*);

#ifndef soap_write___tds__SetNetworkDefaultGateway
#define soap_write___tds__SetNetworkDefaultGateway(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetNetworkDefaultGateway(soap, data), 0) || soap_put___tds__SetNetworkDefaultGateway(soap, data, "-tds:SetNetworkDefaultGateway", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetNetworkDefaultGateway * SOAP_FMAC4 soap_get___tds__SetNetworkDefaultGateway(struct soap*, struct __tds__SetNetworkDefaultGateway *, const char*, const char*);

#ifndef soap_read___tds__SetNetworkDefaultGateway
#define soap_read___tds__SetNetworkDefaultGateway(soap, data) ( ((data) ? (soap_default___tds__SetNetworkDefaultGateway(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__SetNetworkDefaultGateway(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetNetworkDefaultGateway
#define SOAP_TYPE___tds__GetNetworkDefaultGateway (1760)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetNetworkDefaultGateway(struct soap*, struct __tds__GetNetworkDefaultGateway *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetNetworkDefaultGateway(struct soap*, const struct __tds__GetNetworkDefaultGateway *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetNetworkDefaultGateway(struct soap*, const char*, int, const struct __tds__GetNetworkDefaultGateway *, const char*);
SOAP_FMAC3 struct __tds__GetNetworkDefaultGateway * SOAP_FMAC4 soap_in___tds__GetNetworkDefaultGateway(struct soap*, const char*, struct __tds__GetNetworkDefaultGateway *, const char*);
SOAP_FMAC1 struct __tds__GetNetworkDefaultGateway * SOAP_FMAC2 soap_instantiate___tds__GetNetworkDefaultGateway(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetNetworkDefaultGateway * soap_new___tds__GetNetworkDefaultGateway(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetNetworkDefaultGateway(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetNetworkDefaultGateway * soap_new_req___tds__GetNetworkDefaultGateway(
	struct soap *soap)
{	struct __tds__GetNetworkDefaultGateway *_p = soap_new___tds__GetNetworkDefaultGateway(soap);
	if (_p)
	{	soap_default___tds__GetNetworkDefaultGateway(soap, _p);
	}
	return _p;
}

inline struct __tds__GetNetworkDefaultGateway * soap_new_set___tds__GetNetworkDefaultGateway(
	struct soap *soap,
	_tds__GetNetworkDefaultGateway *tds__GetNetworkDefaultGateway)
{	struct __tds__GetNetworkDefaultGateway *_p = soap_new___tds__GetNetworkDefaultGateway(soap);
	if (_p)
	{	soap_default___tds__GetNetworkDefaultGateway(soap, _p);
		_p->tds__GetNetworkDefaultGateway = tds__GetNetworkDefaultGateway;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetNetworkDefaultGateway(struct soap*, const struct __tds__GetNetworkDefaultGateway *, const char*, const char*);

#ifndef soap_write___tds__GetNetworkDefaultGateway
#define soap_write___tds__GetNetworkDefaultGateway(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetNetworkDefaultGateway(soap, data), 0) || soap_put___tds__GetNetworkDefaultGateway(soap, data, "-tds:GetNetworkDefaultGateway", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetNetworkDefaultGateway * SOAP_FMAC4 soap_get___tds__GetNetworkDefaultGateway(struct soap*, struct __tds__GetNetworkDefaultGateway *, const char*, const char*);

#ifndef soap_read___tds__GetNetworkDefaultGateway
#define soap_read___tds__GetNetworkDefaultGateway(soap, data) ( ((data) ? (soap_default___tds__GetNetworkDefaultGateway(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetNetworkDefaultGateway(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__SetNetworkProtocols
#define SOAP_TYPE___tds__SetNetworkProtocols (1756)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetNetworkProtocols(struct soap*, struct __tds__SetNetworkProtocols *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetNetworkProtocols(struct soap*, const struct __tds__SetNetworkProtocols *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetNetworkProtocols(struct soap*, const char*, int, const struct __tds__SetNetworkProtocols *, const char*);
SOAP_FMAC3 struct __tds__SetNetworkProtocols * SOAP_FMAC4 soap_in___tds__SetNetworkProtocols(struct soap*, const char*, struct __tds__SetNetworkProtocols *, const char*);
SOAP_FMAC1 struct __tds__SetNetworkProtocols * SOAP_FMAC2 soap_instantiate___tds__SetNetworkProtocols(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetNetworkProtocols * soap_new___tds__SetNetworkProtocols(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetNetworkProtocols(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetNetworkProtocols * soap_new_req___tds__SetNetworkProtocols(
	struct soap *soap)
{	struct __tds__SetNetworkProtocols *_p = soap_new___tds__SetNetworkProtocols(soap);
	if (_p)
	{	soap_default___tds__SetNetworkProtocols(soap, _p);
	}
	return _p;
}

inline struct __tds__SetNetworkProtocols * soap_new_set___tds__SetNetworkProtocols(
	struct soap *soap,
	_tds__SetNetworkProtocols *tds__SetNetworkProtocols)
{	struct __tds__SetNetworkProtocols *_p = soap_new___tds__SetNetworkProtocols(soap);
	if (_p)
	{	soap_default___tds__SetNetworkProtocols(soap, _p);
		_p->tds__SetNetworkProtocols = tds__SetNetworkProtocols;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetNetworkProtocols(struct soap*, const struct __tds__SetNetworkProtocols *, const char*, const char*);

#ifndef soap_write___tds__SetNetworkProtocols
#define soap_write___tds__SetNetworkProtocols(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetNetworkProtocols(soap, data), 0) || soap_put___tds__SetNetworkProtocols(soap, data, "-tds:SetNetworkProtocols", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetNetworkProtocols * SOAP_FMAC4 soap_get___tds__SetNetworkProtocols(struct soap*, struct __tds__SetNetworkProtocols *, const char*, const char*);

#ifndef soap_read___tds__SetNetworkProtocols
#define soap_read___tds__SetNetworkProtocols(soap, data) ( ((data) ? (soap_default___tds__SetNetworkProtocols(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__SetNetworkProtocols(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetNetworkProtocols
#define SOAP_TYPE___tds__GetNetworkProtocols (1752)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetNetworkProtocols(struct soap*, struct __tds__GetNetworkProtocols *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetNetworkProtocols(struct soap*, const struct __tds__GetNetworkProtocols *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetNetworkProtocols(struct soap*, const char*, int, const struct __tds__GetNetworkProtocols *, const char*);
SOAP_FMAC3 struct __tds__GetNetworkProtocols * SOAP_FMAC4 soap_in___tds__GetNetworkProtocols(struct soap*, const char*, struct __tds__GetNetworkProtocols *, const char*);
SOAP_FMAC1 struct __tds__GetNetworkProtocols * SOAP_FMAC2 soap_instantiate___tds__GetNetworkProtocols(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetNetworkProtocols * soap_new___tds__GetNetworkProtocols(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetNetworkProtocols(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetNetworkProtocols * soap_new_req___tds__GetNetworkProtocols(
	struct soap *soap)
{	struct __tds__GetNetworkProtocols *_p = soap_new___tds__GetNetworkProtocols(soap);
	if (_p)
	{	soap_default___tds__GetNetworkProtocols(soap, _p);
	}
	return _p;
}

inline struct __tds__GetNetworkProtocols * soap_new_set___tds__GetNetworkProtocols(
	struct soap *soap,
	_tds__GetNetworkProtocols *tds__GetNetworkProtocols)
{	struct __tds__GetNetworkProtocols *_p = soap_new___tds__GetNetworkProtocols(soap);
	if (_p)
	{	soap_default___tds__GetNetworkProtocols(soap, _p);
		_p->tds__GetNetworkProtocols = tds__GetNetworkProtocols;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetNetworkProtocols(struct soap*, const struct __tds__GetNetworkProtocols *, const char*, const char*);

#ifndef soap_write___tds__GetNetworkProtocols
#define soap_write___tds__GetNetworkProtocols(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetNetworkProtocols(soap, data), 0) || soap_put___tds__GetNetworkProtocols(soap, data, "-tds:GetNetworkProtocols", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetNetworkProtocols * SOAP_FMAC4 soap_get___tds__GetNetworkProtocols(struct soap*, struct __tds__GetNetworkProtocols *, const char*, const char*);

#ifndef soap_read___tds__GetNetworkProtocols
#define soap_read___tds__GetNetworkProtocols(soap, data) ( ((data) ? (soap_default___tds__GetNetworkProtocols(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetNetworkProtocols(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__SetNetworkInterfaces
#define SOAP_TYPE___tds__SetNetworkInterfaces (1748)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetNetworkInterfaces(struct soap*, struct __tds__SetNetworkInterfaces *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetNetworkInterfaces(struct soap*, const struct __tds__SetNetworkInterfaces *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetNetworkInterfaces(struct soap*, const char*, int, const struct __tds__SetNetworkInterfaces *, const char*);
SOAP_FMAC3 struct __tds__SetNetworkInterfaces * SOAP_FMAC4 soap_in___tds__SetNetworkInterfaces(struct soap*, const char*, struct __tds__SetNetworkInterfaces *, const char*);
SOAP_FMAC1 struct __tds__SetNetworkInterfaces * SOAP_FMAC2 soap_instantiate___tds__SetNetworkInterfaces(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetNetworkInterfaces * soap_new___tds__SetNetworkInterfaces(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetNetworkInterfaces(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetNetworkInterfaces * soap_new_req___tds__SetNetworkInterfaces(
	struct soap *soap)
{	struct __tds__SetNetworkInterfaces *_p = soap_new___tds__SetNetworkInterfaces(soap);
	if (_p)
	{	soap_default___tds__SetNetworkInterfaces(soap, _p);
	}
	return _p;
}

inline struct __tds__SetNetworkInterfaces * soap_new_set___tds__SetNetworkInterfaces(
	struct soap *soap,
	_tds__SetNetworkInterfaces *tds__SetNetworkInterfaces)
{	struct __tds__SetNetworkInterfaces *_p = soap_new___tds__SetNetworkInterfaces(soap);
	if (_p)
	{	soap_default___tds__SetNetworkInterfaces(soap, _p);
		_p->tds__SetNetworkInterfaces = tds__SetNetworkInterfaces;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetNetworkInterfaces(struct soap*, const struct __tds__SetNetworkInterfaces *, const char*, const char*);

#ifndef soap_write___tds__SetNetworkInterfaces
#define soap_write___tds__SetNetworkInterfaces(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetNetworkInterfaces(soap, data), 0) || soap_put___tds__SetNetworkInterfaces(soap, data, "-tds:SetNetworkInterfaces", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetNetworkInterfaces * SOAP_FMAC4 soap_get___tds__SetNetworkInterfaces(struct soap*, struct __tds__SetNetworkInterfaces *, const char*, const char*);

#ifndef soap_read___tds__SetNetworkInterfaces
#define soap_read___tds__SetNetworkInterfaces(soap, data) ( ((data) ? (soap_default___tds__SetNetworkInterfaces(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__SetNetworkInterfaces(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetNetworkInterfaces
#define SOAP_TYPE___tds__GetNetworkInterfaces (1744)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetNetworkInterfaces(struct soap*, struct __tds__GetNetworkInterfaces *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetNetworkInterfaces(struct soap*, const struct __tds__GetNetworkInterfaces *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetNetworkInterfaces(struct soap*, const char*, int, const struct __tds__GetNetworkInterfaces *, const char*);
SOAP_FMAC3 struct __tds__GetNetworkInterfaces * SOAP_FMAC4 soap_in___tds__GetNetworkInterfaces(struct soap*, const char*, struct __tds__GetNetworkInterfaces *, const char*);
SOAP_FMAC1 struct __tds__GetNetworkInterfaces * SOAP_FMAC2 soap_instantiate___tds__GetNetworkInterfaces(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetNetworkInterfaces * soap_new___tds__GetNetworkInterfaces(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetNetworkInterfaces(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetNetworkInterfaces * soap_new_req___tds__GetNetworkInterfaces(
	struct soap *soap)
{	struct __tds__GetNetworkInterfaces *_p = soap_new___tds__GetNetworkInterfaces(soap);
	if (_p)
	{	soap_default___tds__GetNetworkInterfaces(soap, _p);
	}
	return _p;
}

inline struct __tds__GetNetworkInterfaces * soap_new_set___tds__GetNetworkInterfaces(
	struct soap *soap,
	_tds__GetNetworkInterfaces *tds__GetNetworkInterfaces)
{	struct __tds__GetNetworkInterfaces *_p = soap_new___tds__GetNetworkInterfaces(soap);
	if (_p)
	{	soap_default___tds__GetNetworkInterfaces(soap, _p);
		_p->tds__GetNetworkInterfaces = tds__GetNetworkInterfaces;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetNetworkInterfaces(struct soap*, const struct __tds__GetNetworkInterfaces *, const char*, const char*);

#ifndef soap_write___tds__GetNetworkInterfaces
#define soap_write___tds__GetNetworkInterfaces(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetNetworkInterfaces(soap, data), 0) || soap_put___tds__GetNetworkInterfaces(soap, data, "-tds:GetNetworkInterfaces", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetNetworkInterfaces * SOAP_FMAC4 soap_get___tds__GetNetworkInterfaces(struct soap*, struct __tds__GetNetworkInterfaces *, const char*, const char*);

#ifndef soap_read___tds__GetNetworkInterfaces
#define soap_read___tds__GetNetworkInterfaces(soap, data) ( ((data) ? (soap_default___tds__GetNetworkInterfaces(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetNetworkInterfaces(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__SetDynamicDNS
#define SOAP_TYPE___tds__SetDynamicDNS (1740)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetDynamicDNS(struct soap*, struct __tds__SetDynamicDNS *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetDynamicDNS(struct soap*, const struct __tds__SetDynamicDNS *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetDynamicDNS(struct soap*, const char*, int, const struct __tds__SetDynamicDNS *, const char*);
SOAP_FMAC3 struct __tds__SetDynamicDNS * SOAP_FMAC4 soap_in___tds__SetDynamicDNS(struct soap*, const char*, struct __tds__SetDynamicDNS *, const char*);
SOAP_FMAC1 struct __tds__SetDynamicDNS * SOAP_FMAC2 soap_instantiate___tds__SetDynamicDNS(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetDynamicDNS * soap_new___tds__SetDynamicDNS(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetDynamicDNS(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetDynamicDNS * soap_new_req___tds__SetDynamicDNS(
	struct soap *soap)
{	struct __tds__SetDynamicDNS *_p = soap_new___tds__SetDynamicDNS(soap);
	if (_p)
	{	soap_default___tds__SetDynamicDNS(soap, _p);
	}
	return _p;
}

inline struct __tds__SetDynamicDNS * soap_new_set___tds__SetDynamicDNS(
	struct soap *soap,
	_tds__SetDynamicDNS *tds__SetDynamicDNS)
{	struct __tds__SetDynamicDNS *_p = soap_new___tds__SetDynamicDNS(soap);
	if (_p)
	{	soap_default___tds__SetDynamicDNS(soap, _p);
		_p->tds__SetDynamicDNS = tds__SetDynamicDNS;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetDynamicDNS(struct soap*, const struct __tds__SetDynamicDNS *, const char*, const char*);

#ifndef soap_write___tds__SetDynamicDNS
#define soap_write___tds__SetDynamicDNS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetDynamicDNS(soap, data), 0) || soap_put___tds__SetDynamicDNS(soap, data, "-tds:SetDynamicDNS", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetDynamicDNS * SOAP_FMAC4 soap_get___tds__SetDynamicDNS(struct soap*, struct __tds__SetDynamicDNS *, const char*, const char*);

#ifndef soap_read___tds__SetDynamicDNS
#define soap_read___tds__SetDynamicDNS(soap, data) ( ((data) ? (soap_default___tds__SetDynamicDNS(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__SetDynamicDNS(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetDynamicDNS
#define SOAP_TYPE___tds__GetDynamicDNS (1736)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetDynamicDNS(struct soap*, struct __tds__GetDynamicDNS *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetDynamicDNS(struct soap*, const struct __tds__GetDynamicDNS *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetDynamicDNS(struct soap*, const char*, int, const struct __tds__GetDynamicDNS *, const char*);
SOAP_FMAC3 struct __tds__GetDynamicDNS * SOAP_FMAC4 soap_in___tds__GetDynamicDNS(struct soap*, const char*, struct __tds__GetDynamicDNS *, const char*);
SOAP_FMAC1 struct __tds__GetDynamicDNS * SOAP_FMAC2 soap_instantiate___tds__GetDynamicDNS(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetDynamicDNS * soap_new___tds__GetDynamicDNS(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetDynamicDNS(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetDynamicDNS * soap_new_req___tds__GetDynamicDNS(
	struct soap *soap)
{	struct __tds__GetDynamicDNS *_p = soap_new___tds__GetDynamicDNS(soap);
	if (_p)
	{	soap_default___tds__GetDynamicDNS(soap, _p);
	}
	return _p;
}

inline struct __tds__GetDynamicDNS * soap_new_set___tds__GetDynamicDNS(
	struct soap *soap,
	_tds__GetDynamicDNS *tds__GetDynamicDNS)
{	struct __tds__GetDynamicDNS *_p = soap_new___tds__GetDynamicDNS(soap);
	if (_p)
	{	soap_default___tds__GetDynamicDNS(soap, _p);
		_p->tds__GetDynamicDNS = tds__GetDynamicDNS;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetDynamicDNS(struct soap*, const struct __tds__GetDynamicDNS *, const char*, const char*);

#ifndef soap_write___tds__GetDynamicDNS
#define soap_write___tds__GetDynamicDNS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetDynamicDNS(soap, data), 0) || soap_put___tds__GetDynamicDNS(soap, data, "-tds:GetDynamicDNS", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetDynamicDNS * SOAP_FMAC4 soap_get___tds__GetDynamicDNS(struct soap*, struct __tds__GetDynamicDNS *, const char*, const char*);

#ifndef soap_read___tds__GetDynamicDNS
#define soap_read___tds__GetDynamicDNS(soap, data) ( ((data) ? (soap_default___tds__GetDynamicDNS(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetDynamicDNS(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__SetNTP
#define SOAP_TYPE___tds__SetNTP (1732)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetNTP(struct soap*, struct __tds__SetNTP *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetNTP(struct soap*, const struct __tds__SetNTP *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetNTP(struct soap*, const char*, int, const struct __tds__SetNTP *, const char*);
SOAP_FMAC3 struct __tds__SetNTP * SOAP_FMAC4 soap_in___tds__SetNTP(struct soap*, const char*, struct __tds__SetNTP *, const char*);
SOAP_FMAC1 struct __tds__SetNTP * SOAP_FMAC2 soap_instantiate___tds__SetNTP(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetNTP * soap_new___tds__SetNTP(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetNTP(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetNTP * soap_new_req___tds__SetNTP(
	struct soap *soap)
{	struct __tds__SetNTP *_p = soap_new___tds__SetNTP(soap);
	if (_p)
	{	soap_default___tds__SetNTP(soap, _p);
	}
	return _p;
}

inline struct __tds__SetNTP * soap_new_set___tds__SetNTP(
	struct soap *soap,
	_tds__SetNTP *tds__SetNTP)
{	struct __tds__SetNTP *_p = soap_new___tds__SetNTP(soap);
	if (_p)
	{	soap_default___tds__SetNTP(soap, _p);
		_p->tds__SetNTP = tds__SetNTP;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetNTP(struct soap*, const struct __tds__SetNTP *, const char*, const char*);

#ifndef soap_write___tds__SetNTP
#define soap_write___tds__SetNTP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetNTP(soap, data), 0) || soap_put___tds__SetNTP(soap, data, "-tds:SetNTP", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetNTP * SOAP_FMAC4 soap_get___tds__SetNTP(struct soap*, struct __tds__SetNTP *, const char*, const char*);

#ifndef soap_read___tds__SetNTP
#define soap_read___tds__SetNTP(soap, data) ( ((data) ? (soap_default___tds__SetNTP(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__SetNTP(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetNTP
#define SOAP_TYPE___tds__GetNTP (1728)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetNTP(struct soap*, struct __tds__GetNTP *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetNTP(struct soap*, const struct __tds__GetNTP *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetNTP(struct soap*, const char*, int, const struct __tds__GetNTP *, const char*);
SOAP_FMAC3 struct __tds__GetNTP * SOAP_FMAC4 soap_in___tds__GetNTP(struct soap*, const char*, struct __tds__GetNTP *, const char*);
SOAP_FMAC1 struct __tds__GetNTP * SOAP_FMAC2 soap_instantiate___tds__GetNTP(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetNTP * soap_new___tds__GetNTP(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetNTP(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetNTP * soap_new_req___tds__GetNTP(
	struct soap *soap)
{	struct __tds__GetNTP *_p = soap_new___tds__GetNTP(soap);
	if (_p)
	{	soap_default___tds__GetNTP(soap, _p);
	}
	return _p;
}

inline struct __tds__GetNTP * soap_new_set___tds__GetNTP(
	struct soap *soap,
	_tds__GetNTP *tds__GetNTP)
{	struct __tds__GetNTP *_p = soap_new___tds__GetNTP(soap);
	if (_p)
	{	soap_default___tds__GetNTP(soap, _p);
		_p->tds__GetNTP = tds__GetNTP;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetNTP(struct soap*, const struct __tds__GetNTP *, const char*, const char*);

#ifndef soap_write___tds__GetNTP
#define soap_write___tds__GetNTP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetNTP(soap, data), 0) || soap_put___tds__GetNTP(soap, data, "-tds:GetNTP", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetNTP * SOAP_FMAC4 soap_get___tds__GetNTP(struct soap*, struct __tds__GetNTP *, const char*, const char*);

#ifndef soap_read___tds__GetNTP
#define soap_read___tds__GetNTP(soap, data) ( ((data) ? (soap_default___tds__GetNTP(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetNTP(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__SetDNS
#define SOAP_TYPE___tds__SetDNS (1724)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetDNS(struct soap*, struct __tds__SetDNS *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetDNS(struct soap*, const struct __tds__SetDNS *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetDNS(struct soap*, const char*, int, const struct __tds__SetDNS *, const char*);
SOAP_FMAC3 struct __tds__SetDNS * SOAP_FMAC4 soap_in___tds__SetDNS(struct soap*, const char*, struct __tds__SetDNS *, const char*);
SOAP_FMAC1 struct __tds__SetDNS * SOAP_FMAC2 soap_instantiate___tds__SetDNS(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetDNS * soap_new___tds__SetDNS(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetDNS(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetDNS * soap_new_req___tds__SetDNS(
	struct soap *soap)
{	struct __tds__SetDNS *_p = soap_new___tds__SetDNS(soap);
	if (_p)
	{	soap_default___tds__SetDNS(soap, _p);
	}
	return _p;
}

inline struct __tds__SetDNS * soap_new_set___tds__SetDNS(
	struct soap *soap,
	_tds__SetDNS *tds__SetDNS)
{	struct __tds__SetDNS *_p = soap_new___tds__SetDNS(soap);
	if (_p)
	{	soap_default___tds__SetDNS(soap, _p);
		_p->tds__SetDNS = tds__SetDNS;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetDNS(struct soap*, const struct __tds__SetDNS *, const char*, const char*);

#ifndef soap_write___tds__SetDNS
#define soap_write___tds__SetDNS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetDNS(soap, data), 0) || soap_put___tds__SetDNS(soap, data, "-tds:SetDNS", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetDNS * SOAP_FMAC4 soap_get___tds__SetDNS(struct soap*, struct __tds__SetDNS *, const char*, const char*);

#ifndef soap_read___tds__SetDNS
#define soap_read___tds__SetDNS(soap, data) ( ((data) ? (soap_default___tds__SetDNS(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__SetDNS(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetDNS
#define SOAP_TYPE___tds__GetDNS (1720)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetDNS(struct soap*, struct __tds__GetDNS *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetDNS(struct soap*, const struct __tds__GetDNS *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetDNS(struct soap*, const char*, int, const struct __tds__GetDNS *, const char*);
SOAP_FMAC3 struct __tds__GetDNS * SOAP_FMAC4 soap_in___tds__GetDNS(struct soap*, const char*, struct __tds__GetDNS *, const char*);
SOAP_FMAC1 struct __tds__GetDNS * SOAP_FMAC2 soap_instantiate___tds__GetDNS(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetDNS * soap_new___tds__GetDNS(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetDNS(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetDNS * soap_new_req___tds__GetDNS(
	struct soap *soap)
{	struct __tds__GetDNS *_p = soap_new___tds__GetDNS(soap);
	if (_p)
	{	soap_default___tds__GetDNS(soap, _p);
	}
	return _p;
}

inline struct __tds__GetDNS * soap_new_set___tds__GetDNS(
	struct soap *soap,
	_tds__GetDNS *tds__GetDNS)
{	struct __tds__GetDNS *_p = soap_new___tds__GetDNS(soap);
	if (_p)
	{	soap_default___tds__GetDNS(soap, _p);
		_p->tds__GetDNS = tds__GetDNS;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetDNS(struct soap*, const struct __tds__GetDNS *, const char*, const char*);

#ifndef soap_write___tds__GetDNS
#define soap_write___tds__GetDNS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetDNS(soap, data), 0) || soap_put___tds__GetDNS(soap, data, "-tds:GetDNS", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetDNS * SOAP_FMAC4 soap_get___tds__GetDNS(struct soap*, struct __tds__GetDNS *, const char*, const char*);

#ifndef soap_read___tds__GetDNS
#define soap_read___tds__GetDNS(soap, data) ( ((data) ? (soap_default___tds__GetDNS(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetDNS(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__SetHostnameFromDHCP
#define SOAP_TYPE___tds__SetHostnameFromDHCP (1716)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetHostnameFromDHCP(struct soap*, struct __tds__SetHostnameFromDHCP *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetHostnameFromDHCP(struct soap*, const struct __tds__SetHostnameFromDHCP *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetHostnameFromDHCP(struct soap*, const char*, int, const struct __tds__SetHostnameFromDHCP *, const char*);
SOAP_FMAC3 struct __tds__SetHostnameFromDHCP * SOAP_FMAC4 soap_in___tds__SetHostnameFromDHCP(struct soap*, const char*, struct __tds__SetHostnameFromDHCP *, const char*);
SOAP_FMAC1 struct __tds__SetHostnameFromDHCP * SOAP_FMAC2 soap_instantiate___tds__SetHostnameFromDHCP(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetHostnameFromDHCP * soap_new___tds__SetHostnameFromDHCP(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetHostnameFromDHCP(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetHostnameFromDHCP * soap_new_req___tds__SetHostnameFromDHCP(
	struct soap *soap)
{	struct __tds__SetHostnameFromDHCP *_p = soap_new___tds__SetHostnameFromDHCP(soap);
	if (_p)
	{	soap_default___tds__SetHostnameFromDHCP(soap, _p);
	}
	return _p;
}

inline struct __tds__SetHostnameFromDHCP * soap_new_set___tds__SetHostnameFromDHCP(
	struct soap *soap,
	_tds__SetHostnameFromDHCP *tds__SetHostnameFromDHCP)
{	struct __tds__SetHostnameFromDHCP *_p = soap_new___tds__SetHostnameFromDHCP(soap);
	if (_p)
	{	soap_default___tds__SetHostnameFromDHCP(soap, _p);
		_p->tds__SetHostnameFromDHCP = tds__SetHostnameFromDHCP;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetHostnameFromDHCP(struct soap*, const struct __tds__SetHostnameFromDHCP *, const char*, const char*);

#ifndef soap_write___tds__SetHostnameFromDHCP
#define soap_write___tds__SetHostnameFromDHCP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetHostnameFromDHCP(soap, data), 0) || soap_put___tds__SetHostnameFromDHCP(soap, data, "-tds:SetHostnameFromDHCP", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetHostnameFromDHCP * SOAP_FMAC4 soap_get___tds__SetHostnameFromDHCP(struct soap*, struct __tds__SetHostnameFromDHCP *, const char*, const char*);

#ifndef soap_read___tds__SetHostnameFromDHCP
#define soap_read___tds__SetHostnameFromDHCP(soap, data) ( ((data) ? (soap_default___tds__SetHostnameFromDHCP(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__SetHostnameFromDHCP(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__SetHostname
#define SOAP_TYPE___tds__SetHostname (1712)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetHostname(struct soap*, struct __tds__SetHostname *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetHostname(struct soap*, const struct __tds__SetHostname *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetHostname(struct soap*, const char*, int, const struct __tds__SetHostname *, const char*);
SOAP_FMAC3 struct __tds__SetHostname * SOAP_FMAC4 soap_in___tds__SetHostname(struct soap*, const char*, struct __tds__SetHostname *, const char*);
SOAP_FMAC1 struct __tds__SetHostname * SOAP_FMAC2 soap_instantiate___tds__SetHostname(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetHostname * soap_new___tds__SetHostname(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetHostname(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetHostname * soap_new_req___tds__SetHostname(
	struct soap *soap)
{	struct __tds__SetHostname *_p = soap_new___tds__SetHostname(soap);
	if (_p)
	{	soap_default___tds__SetHostname(soap, _p);
	}
	return _p;
}

inline struct __tds__SetHostname * soap_new_set___tds__SetHostname(
	struct soap *soap,
	_tds__SetHostname *tds__SetHostname)
{	struct __tds__SetHostname *_p = soap_new___tds__SetHostname(soap);
	if (_p)
	{	soap_default___tds__SetHostname(soap, _p);
		_p->tds__SetHostname = tds__SetHostname;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetHostname(struct soap*, const struct __tds__SetHostname *, const char*, const char*);

#ifndef soap_write___tds__SetHostname
#define soap_write___tds__SetHostname(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetHostname(soap, data), 0) || soap_put___tds__SetHostname(soap, data, "-tds:SetHostname", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetHostname * SOAP_FMAC4 soap_get___tds__SetHostname(struct soap*, struct __tds__SetHostname *, const char*, const char*);

#ifndef soap_read___tds__SetHostname
#define soap_read___tds__SetHostname(soap, data) ( ((data) ? (soap_default___tds__SetHostname(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__SetHostname(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetHostname
#define SOAP_TYPE___tds__GetHostname (1708)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetHostname(struct soap*, struct __tds__GetHostname *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetHostname(struct soap*, const struct __tds__GetHostname *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetHostname(struct soap*, const char*, int, const struct __tds__GetHostname *, const char*);
SOAP_FMAC3 struct __tds__GetHostname * SOAP_FMAC4 soap_in___tds__GetHostname(struct soap*, const char*, struct __tds__GetHostname *, const char*);
SOAP_FMAC1 struct __tds__GetHostname * SOAP_FMAC2 soap_instantiate___tds__GetHostname(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetHostname * soap_new___tds__GetHostname(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetHostname(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetHostname * soap_new_req___tds__GetHostname(
	struct soap *soap)
{	struct __tds__GetHostname *_p = soap_new___tds__GetHostname(soap);
	if (_p)
	{	soap_default___tds__GetHostname(soap, _p);
	}
	return _p;
}

inline struct __tds__GetHostname * soap_new_set___tds__GetHostname(
	struct soap *soap,
	_tds__GetHostname *tds__GetHostname)
{	struct __tds__GetHostname *_p = soap_new___tds__GetHostname(soap);
	if (_p)
	{	soap_default___tds__GetHostname(soap, _p);
		_p->tds__GetHostname = tds__GetHostname;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetHostname(struct soap*, const struct __tds__GetHostname *, const char*, const char*);

#ifndef soap_write___tds__GetHostname
#define soap_write___tds__GetHostname(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetHostname(soap, data), 0) || soap_put___tds__GetHostname(soap, data, "-tds:GetHostname", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetHostname * SOAP_FMAC4 soap_get___tds__GetHostname(struct soap*, struct __tds__GetHostname *, const char*, const char*);

#ifndef soap_read___tds__GetHostname
#define soap_read___tds__GetHostname(soap, data) ( ((data) ? (soap_default___tds__GetHostname(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetHostname(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__SetDPAddresses
#define SOAP_TYPE___tds__SetDPAddresses (1704)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetDPAddresses(struct soap*, struct __tds__SetDPAddresses *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetDPAddresses(struct soap*, const struct __tds__SetDPAddresses *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetDPAddresses(struct soap*, const char*, int, const struct __tds__SetDPAddresses *, const char*);
SOAP_FMAC3 struct __tds__SetDPAddresses * SOAP_FMAC4 soap_in___tds__SetDPAddresses(struct soap*, const char*, struct __tds__SetDPAddresses *, const char*);
SOAP_FMAC1 struct __tds__SetDPAddresses * SOAP_FMAC2 soap_instantiate___tds__SetDPAddresses(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetDPAddresses * soap_new___tds__SetDPAddresses(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetDPAddresses(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetDPAddresses * soap_new_req___tds__SetDPAddresses(
	struct soap *soap)
{	struct __tds__SetDPAddresses *_p = soap_new___tds__SetDPAddresses(soap);
	if (_p)
	{	soap_default___tds__SetDPAddresses(soap, _p);
	}
	return _p;
}

inline struct __tds__SetDPAddresses * soap_new_set___tds__SetDPAddresses(
	struct soap *soap,
	_tds__SetDPAddresses *tds__SetDPAddresses)
{	struct __tds__SetDPAddresses *_p = soap_new___tds__SetDPAddresses(soap);
	if (_p)
	{	soap_default___tds__SetDPAddresses(soap, _p);
		_p->tds__SetDPAddresses = tds__SetDPAddresses;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetDPAddresses(struct soap*, const struct __tds__SetDPAddresses *, const char*, const char*);

#ifndef soap_write___tds__SetDPAddresses
#define soap_write___tds__SetDPAddresses(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetDPAddresses(soap, data), 0) || soap_put___tds__SetDPAddresses(soap, data, "-tds:SetDPAddresses", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetDPAddresses * SOAP_FMAC4 soap_get___tds__SetDPAddresses(struct soap*, struct __tds__SetDPAddresses *, const char*, const char*);

#ifndef soap_read___tds__SetDPAddresses
#define soap_read___tds__SetDPAddresses(soap, data) ( ((data) ? (soap_default___tds__SetDPAddresses(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__SetDPAddresses(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetCapabilities
#define SOAP_TYPE___tds__GetCapabilities (1700)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetCapabilities(struct soap*, struct __tds__GetCapabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetCapabilities(struct soap*, const struct __tds__GetCapabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetCapabilities(struct soap*, const char*, int, const struct __tds__GetCapabilities *, const char*);
SOAP_FMAC3 struct __tds__GetCapabilities * SOAP_FMAC4 soap_in___tds__GetCapabilities(struct soap*, const char*, struct __tds__GetCapabilities *, const char*);
SOAP_FMAC1 struct __tds__GetCapabilities * SOAP_FMAC2 soap_instantiate___tds__GetCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetCapabilities * soap_new___tds__GetCapabilities(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetCapabilities(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetCapabilities * soap_new_req___tds__GetCapabilities(
	struct soap *soap)
{	struct __tds__GetCapabilities *_p = soap_new___tds__GetCapabilities(soap);
	if (_p)
	{	soap_default___tds__GetCapabilities(soap, _p);
	}
	return _p;
}

inline struct __tds__GetCapabilities * soap_new_set___tds__GetCapabilities(
	struct soap *soap,
	_tds__GetCapabilities *tds__GetCapabilities)
{	struct __tds__GetCapabilities *_p = soap_new___tds__GetCapabilities(soap);
	if (_p)
	{	soap_default___tds__GetCapabilities(soap, _p);
		_p->tds__GetCapabilities = tds__GetCapabilities;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetCapabilities(struct soap*, const struct __tds__GetCapabilities *, const char*, const char*);

#ifndef soap_write___tds__GetCapabilities
#define soap_write___tds__GetCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetCapabilities(soap, data), 0) || soap_put___tds__GetCapabilities(soap, data, "-tds:GetCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetCapabilities * SOAP_FMAC4 soap_get___tds__GetCapabilities(struct soap*, struct __tds__GetCapabilities *, const char*, const char*);

#ifndef soap_read___tds__GetCapabilities
#define soap_read___tds__GetCapabilities(soap, data) ( ((data) ? (soap_default___tds__GetCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetWsdlUrl
#define SOAP_TYPE___tds__GetWsdlUrl (1696)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetWsdlUrl(struct soap*, struct __tds__GetWsdlUrl *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetWsdlUrl(struct soap*, const struct __tds__GetWsdlUrl *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetWsdlUrl(struct soap*, const char*, int, const struct __tds__GetWsdlUrl *, const char*);
SOAP_FMAC3 struct __tds__GetWsdlUrl * SOAP_FMAC4 soap_in___tds__GetWsdlUrl(struct soap*, const char*, struct __tds__GetWsdlUrl *, const char*);
SOAP_FMAC1 struct __tds__GetWsdlUrl * SOAP_FMAC2 soap_instantiate___tds__GetWsdlUrl(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetWsdlUrl * soap_new___tds__GetWsdlUrl(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetWsdlUrl(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetWsdlUrl * soap_new_req___tds__GetWsdlUrl(
	struct soap *soap)
{	struct __tds__GetWsdlUrl *_p = soap_new___tds__GetWsdlUrl(soap);
	if (_p)
	{	soap_default___tds__GetWsdlUrl(soap, _p);
	}
	return _p;
}

inline struct __tds__GetWsdlUrl * soap_new_set___tds__GetWsdlUrl(
	struct soap *soap,
	_tds__GetWsdlUrl *tds__GetWsdlUrl)
{	struct __tds__GetWsdlUrl *_p = soap_new___tds__GetWsdlUrl(soap);
	if (_p)
	{	soap_default___tds__GetWsdlUrl(soap, _p);
		_p->tds__GetWsdlUrl = tds__GetWsdlUrl;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetWsdlUrl(struct soap*, const struct __tds__GetWsdlUrl *, const char*, const char*);

#ifndef soap_write___tds__GetWsdlUrl
#define soap_write___tds__GetWsdlUrl(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetWsdlUrl(soap, data), 0) || soap_put___tds__GetWsdlUrl(soap, data, "-tds:GetWsdlUrl", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetWsdlUrl * SOAP_FMAC4 soap_get___tds__GetWsdlUrl(struct soap*, struct __tds__GetWsdlUrl *, const char*, const char*);

#ifndef soap_read___tds__GetWsdlUrl
#define soap_read___tds__GetWsdlUrl(soap, data) ( ((data) ? (soap_default___tds__GetWsdlUrl(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetWsdlUrl(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__SetUser
#define SOAP_TYPE___tds__SetUser (1692)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetUser(struct soap*, struct __tds__SetUser *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetUser(struct soap*, const struct __tds__SetUser *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetUser(struct soap*, const char*, int, const struct __tds__SetUser *, const char*);
SOAP_FMAC3 struct __tds__SetUser * SOAP_FMAC4 soap_in___tds__SetUser(struct soap*, const char*, struct __tds__SetUser *, const char*);
SOAP_FMAC1 struct __tds__SetUser * SOAP_FMAC2 soap_instantiate___tds__SetUser(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetUser * soap_new___tds__SetUser(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetUser(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetUser * soap_new_req___tds__SetUser(
	struct soap *soap)
{	struct __tds__SetUser *_p = soap_new___tds__SetUser(soap);
	if (_p)
	{	soap_default___tds__SetUser(soap, _p);
	}
	return _p;
}

inline struct __tds__SetUser * soap_new_set___tds__SetUser(
	struct soap *soap,
	_tds__SetUser *tds__SetUser)
{	struct __tds__SetUser *_p = soap_new___tds__SetUser(soap);
	if (_p)
	{	soap_default___tds__SetUser(soap, _p);
		_p->tds__SetUser = tds__SetUser;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetUser(struct soap*, const struct __tds__SetUser *, const char*, const char*);

#ifndef soap_write___tds__SetUser
#define soap_write___tds__SetUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetUser(soap, data), 0) || soap_put___tds__SetUser(soap, data, "-tds:SetUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetUser * SOAP_FMAC4 soap_get___tds__SetUser(struct soap*, struct __tds__SetUser *, const char*, const char*);

#ifndef soap_read___tds__SetUser
#define soap_read___tds__SetUser(soap, data) ( ((data) ? (soap_default___tds__SetUser(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__SetUser(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__DeleteUsers
#define SOAP_TYPE___tds__DeleteUsers (1688)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__DeleteUsers(struct soap*, struct __tds__DeleteUsers *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__DeleteUsers(struct soap*, const struct __tds__DeleteUsers *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__DeleteUsers(struct soap*, const char*, int, const struct __tds__DeleteUsers *, const char*);
SOAP_FMAC3 struct __tds__DeleteUsers * SOAP_FMAC4 soap_in___tds__DeleteUsers(struct soap*, const char*, struct __tds__DeleteUsers *, const char*);
SOAP_FMAC1 struct __tds__DeleteUsers * SOAP_FMAC2 soap_instantiate___tds__DeleteUsers(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__DeleteUsers * soap_new___tds__DeleteUsers(struct soap *soap, int n = -1) { return soap_instantiate___tds__DeleteUsers(soap, n, NULL, NULL, NULL); }

inline struct __tds__DeleteUsers * soap_new_req___tds__DeleteUsers(
	struct soap *soap)
{	struct __tds__DeleteUsers *_p = soap_new___tds__DeleteUsers(soap);
	if (_p)
	{	soap_default___tds__DeleteUsers(soap, _p);
	}
	return _p;
}

inline struct __tds__DeleteUsers * soap_new_set___tds__DeleteUsers(
	struct soap *soap,
	_tds__DeleteUsers *tds__DeleteUsers)
{	struct __tds__DeleteUsers *_p = soap_new___tds__DeleteUsers(soap);
	if (_p)
	{	soap_default___tds__DeleteUsers(soap, _p);
		_p->tds__DeleteUsers = tds__DeleteUsers;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__DeleteUsers(struct soap*, const struct __tds__DeleteUsers *, const char*, const char*);

#ifndef soap_write___tds__DeleteUsers
#define soap_write___tds__DeleteUsers(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__DeleteUsers(soap, data), 0) || soap_put___tds__DeleteUsers(soap, data, "-tds:DeleteUsers", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__DeleteUsers * SOAP_FMAC4 soap_get___tds__DeleteUsers(struct soap*, struct __tds__DeleteUsers *, const char*, const char*);

#ifndef soap_read___tds__DeleteUsers
#define soap_read___tds__DeleteUsers(soap, data) ( ((data) ? (soap_default___tds__DeleteUsers(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__DeleteUsers(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__CreateUsers
#define SOAP_TYPE___tds__CreateUsers (1684)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__CreateUsers(struct soap*, struct __tds__CreateUsers *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__CreateUsers(struct soap*, const struct __tds__CreateUsers *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__CreateUsers(struct soap*, const char*, int, const struct __tds__CreateUsers *, const char*);
SOAP_FMAC3 struct __tds__CreateUsers * SOAP_FMAC4 soap_in___tds__CreateUsers(struct soap*, const char*, struct __tds__CreateUsers *, const char*);
SOAP_FMAC1 struct __tds__CreateUsers * SOAP_FMAC2 soap_instantiate___tds__CreateUsers(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__CreateUsers * soap_new___tds__CreateUsers(struct soap *soap, int n = -1) { return soap_instantiate___tds__CreateUsers(soap, n, NULL, NULL, NULL); }

inline struct __tds__CreateUsers * soap_new_req___tds__CreateUsers(
	struct soap *soap)
{	struct __tds__CreateUsers *_p = soap_new___tds__CreateUsers(soap);
	if (_p)
	{	soap_default___tds__CreateUsers(soap, _p);
	}
	return _p;
}

inline struct __tds__CreateUsers * soap_new_set___tds__CreateUsers(
	struct soap *soap,
	_tds__CreateUsers *tds__CreateUsers)
{	struct __tds__CreateUsers *_p = soap_new___tds__CreateUsers(soap);
	if (_p)
	{	soap_default___tds__CreateUsers(soap, _p);
		_p->tds__CreateUsers = tds__CreateUsers;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__CreateUsers(struct soap*, const struct __tds__CreateUsers *, const char*, const char*);

#ifndef soap_write___tds__CreateUsers
#define soap_write___tds__CreateUsers(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__CreateUsers(soap, data), 0) || soap_put___tds__CreateUsers(soap, data, "-tds:CreateUsers", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__CreateUsers * SOAP_FMAC4 soap_get___tds__CreateUsers(struct soap*, struct __tds__CreateUsers *, const char*, const char*);

#ifndef soap_read___tds__CreateUsers
#define soap_read___tds__CreateUsers(soap, data) ( ((data) ? (soap_default___tds__CreateUsers(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__CreateUsers(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetUsers
#define SOAP_TYPE___tds__GetUsers (1680)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetUsers(struct soap*, struct __tds__GetUsers *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetUsers(struct soap*, const struct __tds__GetUsers *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetUsers(struct soap*, const char*, int, const struct __tds__GetUsers *, const char*);
SOAP_FMAC3 struct __tds__GetUsers * SOAP_FMAC4 soap_in___tds__GetUsers(struct soap*, const char*, struct __tds__GetUsers *, const char*);
SOAP_FMAC1 struct __tds__GetUsers * SOAP_FMAC2 soap_instantiate___tds__GetUsers(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetUsers * soap_new___tds__GetUsers(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetUsers(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetUsers * soap_new_req___tds__GetUsers(
	struct soap *soap)
{	struct __tds__GetUsers *_p = soap_new___tds__GetUsers(soap);
	if (_p)
	{	soap_default___tds__GetUsers(soap, _p);
	}
	return _p;
}

inline struct __tds__GetUsers * soap_new_set___tds__GetUsers(
	struct soap *soap,
	_tds__GetUsers *tds__GetUsers)
{	struct __tds__GetUsers *_p = soap_new___tds__GetUsers(soap);
	if (_p)
	{	soap_default___tds__GetUsers(soap, _p);
		_p->tds__GetUsers = tds__GetUsers;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetUsers(struct soap*, const struct __tds__GetUsers *, const char*, const char*);

#ifndef soap_write___tds__GetUsers
#define soap_write___tds__GetUsers(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetUsers(soap, data), 0) || soap_put___tds__GetUsers(soap, data, "-tds:GetUsers", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetUsers * SOAP_FMAC4 soap_get___tds__GetUsers(struct soap*, struct __tds__GetUsers *, const char*, const char*);

#ifndef soap_read___tds__GetUsers
#define soap_read___tds__GetUsers(soap, data) ( ((data) ? (soap_default___tds__GetUsers(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetUsers(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__SetRemoteUser
#define SOAP_TYPE___tds__SetRemoteUser (1676)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetRemoteUser(struct soap*, struct __tds__SetRemoteUser *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetRemoteUser(struct soap*, const struct __tds__SetRemoteUser *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetRemoteUser(struct soap*, const char*, int, const struct __tds__SetRemoteUser *, const char*);
SOAP_FMAC3 struct __tds__SetRemoteUser * SOAP_FMAC4 soap_in___tds__SetRemoteUser(struct soap*, const char*, struct __tds__SetRemoteUser *, const char*);
SOAP_FMAC1 struct __tds__SetRemoteUser * SOAP_FMAC2 soap_instantiate___tds__SetRemoteUser(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetRemoteUser * soap_new___tds__SetRemoteUser(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetRemoteUser(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetRemoteUser * soap_new_req___tds__SetRemoteUser(
	struct soap *soap)
{	struct __tds__SetRemoteUser *_p = soap_new___tds__SetRemoteUser(soap);
	if (_p)
	{	soap_default___tds__SetRemoteUser(soap, _p);
	}
	return _p;
}

inline struct __tds__SetRemoteUser * soap_new_set___tds__SetRemoteUser(
	struct soap *soap,
	_tds__SetRemoteUser *tds__SetRemoteUser)
{	struct __tds__SetRemoteUser *_p = soap_new___tds__SetRemoteUser(soap);
	if (_p)
	{	soap_default___tds__SetRemoteUser(soap, _p);
		_p->tds__SetRemoteUser = tds__SetRemoteUser;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetRemoteUser(struct soap*, const struct __tds__SetRemoteUser *, const char*, const char*);

#ifndef soap_write___tds__SetRemoteUser
#define soap_write___tds__SetRemoteUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetRemoteUser(soap, data), 0) || soap_put___tds__SetRemoteUser(soap, data, "-tds:SetRemoteUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetRemoteUser * SOAP_FMAC4 soap_get___tds__SetRemoteUser(struct soap*, struct __tds__SetRemoteUser *, const char*, const char*);

#ifndef soap_read___tds__SetRemoteUser
#define soap_read___tds__SetRemoteUser(soap, data) ( ((data) ? (soap_default___tds__SetRemoteUser(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__SetRemoteUser(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetRemoteUser
#define SOAP_TYPE___tds__GetRemoteUser (1672)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetRemoteUser(struct soap*, struct __tds__GetRemoteUser *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetRemoteUser(struct soap*, const struct __tds__GetRemoteUser *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetRemoteUser(struct soap*, const char*, int, const struct __tds__GetRemoteUser *, const char*);
SOAP_FMAC3 struct __tds__GetRemoteUser * SOAP_FMAC4 soap_in___tds__GetRemoteUser(struct soap*, const char*, struct __tds__GetRemoteUser *, const char*);
SOAP_FMAC1 struct __tds__GetRemoteUser * SOAP_FMAC2 soap_instantiate___tds__GetRemoteUser(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetRemoteUser * soap_new___tds__GetRemoteUser(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetRemoteUser(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetRemoteUser * soap_new_req___tds__GetRemoteUser(
	struct soap *soap)
{	struct __tds__GetRemoteUser *_p = soap_new___tds__GetRemoteUser(soap);
	if (_p)
	{	soap_default___tds__GetRemoteUser(soap, _p);
	}
	return _p;
}

inline struct __tds__GetRemoteUser * soap_new_set___tds__GetRemoteUser(
	struct soap *soap,
	_tds__GetRemoteUser *tds__GetRemoteUser)
{	struct __tds__GetRemoteUser *_p = soap_new___tds__GetRemoteUser(soap);
	if (_p)
	{	soap_default___tds__GetRemoteUser(soap, _p);
		_p->tds__GetRemoteUser = tds__GetRemoteUser;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetRemoteUser(struct soap*, const struct __tds__GetRemoteUser *, const char*, const char*);

#ifndef soap_write___tds__GetRemoteUser
#define soap_write___tds__GetRemoteUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetRemoteUser(soap, data), 0) || soap_put___tds__GetRemoteUser(soap, data, "-tds:GetRemoteUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetRemoteUser * SOAP_FMAC4 soap_get___tds__GetRemoteUser(struct soap*, struct __tds__GetRemoteUser *, const char*, const char*);

#ifndef soap_read___tds__GetRemoteUser
#define soap_read___tds__GetRemoteUser(soap, data) ( ((data) ? (soap_default___tds__GetRemoteUser(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetRemoteUser(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetEndpointReference
#define SOAP_TYPE___tds__GetEndpointReference (1668)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetEndpointReference(struct soap*, struct __tds__GetEndpointReference *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetEndpointReference(struct soap*, const struct __tds__GetEndpointReference *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetEndpointReference(struct soap*, const char*, int, const struct __tds__GetEndpointReference *, const char*);
SOAP_FMAC3 struct __tds__GetEndpointReference * SOAP_FMAC4 soap_in___tds__GetEndpointReference(struct soap*, const char*, struct __tds__GetEndpointReference *, const char*);
SOAP_FMAC1 struct __tds__GetEndpointReference * SOAP_FMAC2 soap_instantiate___tds__GetEndpointReference(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetEndpointReference * soap_new___tds__GetEndpointReference(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetEndpointReference(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetEndpointReference * soap_new_req___tds__GetEndpointReference(
	struct soap *soap)
{	struct __tds__GetEndpointReference *_p = soap_new___tds__GetEndpointReference(soap);
	if (_p)
	{	soap_default___tds__GetEndpointReference(soap, _p);
	}
	return _p;
}

inline struct __tds__GetEndpointReference * soap_new_set___tds__GetEndpointReference(
	struct soap *soap,
	_tds__GetEndpointReference *tds__GetEndpointReference)
{	struct __tds__GetEndpointReference *_p = soap_new___tds__GetEndpointReference(soap);
	if (_p)
	{	soap_default___tds__GetEndpointReference(soap, _p);
		_p->tds__GetEndpointReference = tds__GetEndpointReference;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetEndpointReference(struct soap*, const struct __tds__GetEndpointReference *, const char*, const char*);

#ifndef soap_write___tds__GetEndpointReference
#define soap_write___tds__GetEndpointReference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetEndpointReference(soap, data), 0) || soap_put___tds__GetEndpointReference(soap, data, "-tds:GetEndpointReference", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetEndpointReference * SOAP_FMAC4 soap_get___tds__GetEndpointReference(struct soap*, struct __tds__GetEndpointReference *, const char*, const char*);

#ifndef soap_read___tds__GetEndpointReference
#define soap_read___tds__GetEndpointReference(soap, data) ( ((data) ? (soap_default___tds__GetEndpointReference(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetEndpointReference(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetDPAddresses
#define SOAP_TYPE___tds__GetDPAddresses (1664)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetDPAddresses(struct soap*, struct __tds__GetDPAddresses *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetDPAddresses(struct soap*, const struct __tds__GetDPAddresses *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetDPAddresses(struct soap*, const char*, int, const struct __tds__GetDPAddresses *, const char*);
SOAP_FMAC3 struct __tds__GetDPAddresses * SOAP_FMAC4 soap_in___tds__GetDPAddresses(struct soap*, const char*, struct __tds__GetDPAddresses *, const char*);
SOAP_FMAC1 struct __tds__GetDPAddresses * SOAP_FMAC2 soap_instantiate___tds__GetDPAddresses(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetDPAddresses * soap_new___tds__GetDPAddresses(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetDPAddresses(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetDPAddresses * soap_new_req___tds__GetDPAddresses(
	struct soap *soap)
{	struct __tds__GetDPAddresses *_p = soap_new___tds__GetDPAddresses(soap);
	if (_p)
	{	soap_default___tds__GetDPAddresses(soap, _p);
	}
	return _p;
}

inline struct __tds__GetDPAddresses * soap_new_set___tds__GetDPAddresses(
	struct soap *soap,
	_tds__GetDPAddresses *tds__GetDPAddresses)
{	struct __tds__GetDPAddresses *_p = soap_new___tds__GetDPAddresses(soap);
	if (_p)
	{	soap_default___tds__GetDPAddresses(soap, _p);
		_p->tds__GetDPAddresses = tds__GetDPAddresses;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetDPAddresses(struct soap*, const struct __tds__GetDPAddresses *, const char*, const char*);

#ifndef soap_write___tds__GetDPAddresses
#define soap_write___tds__GetDPAddresses(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetDPAddresses(soap, data), 0) || soap_put___tds__GetDPAddresses(soap, data, "-tds:GetDPAddresses", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetDPAddresses * SOAP_FMAC4 soap_get___tds__GetDPAddresses(struct soap*, struct __tds__GetDPAddresses *, const char*, const char*);

#ifndef soap_read___tds__GetDPAddresses
#define soap_read___tds__GetDPAddresses(soap, data) ( ((data) ? (soap_default___tds__GetDPAddresses(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetDPAddresses(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__SetRemoteDiscoveryMode
#define SOAP_TYPE___tds__SetRemoteDiscoveryMode (1660)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetRemoteDiscoveryMode(struct soap*, struct __tds__SetRemoteDiscoveryMode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetRemoteDiscoveryMode(struct soap*, const struct __tds__SetRemoteDiscoveryMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetRemoteDiscoveryMode(struct soap*, const char*, int, const struct __tds__SetRemoteDiscoveryMode *, const char*);
SOAP_FMAC3 struct __tds__SetRemoteDiscoveryMode * SOAP_FMAC4 soap_in___tds__SetRemoteDiscoveryMode(struct soap*, const char*, struct __tds__SetRemoteDiscoveryMode *, const char*);
SOAP_FMAC1 struct __tds__SetRemoteDiscoveryMode * SOAP_FMAC2 soap_instantiate___tds__SetRemoteDiscoveryMode(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetRemoteDiscoveryMode * soap_new___tds__SetRemoteDiscoveryMode(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetRemoteDiscoveryMode(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetRemoteDiscoveryMode * soap_new_req___tds__SetRemoteDiscoveryMode(
	struct soap *soap)
{	struct __tds__SetRemoteDiscoveryMode *_p = soap_new___tds__SetRemoteDiscoveryMode(soap);
	if (_p)
	{	soap_default___tds__SetRemoteDiscoveryMode(soap, _p);
	}
	return _p;
}

inline struct __tds__SetRemoteDiscoveryMode * soap_new_set___tds__SetRemoteDiscoveryMode(
	struct soap *soap,
	_tds__SetRemoteDiscoveryMode *tds__SetRemoteDiscoveryMode)
{	struct __tds__SetRemoteDiscoveryMode *_p = soap_new___tds__SetRemoteDiscoveryMode(soap);
	if (_p)
	{	soap_default___tds__SetRemoteDiscoveryMode(soap, _p);
		_p->tds__SetRemoteDiscoveryMode = tds__SetRemoteDiscoveryMode;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetRemoteDiscoveryMode(struct soap*, const struct __tds__SetRemoteDiscoveryMode *, const char*, const char*);

#ifndef soap_write___tds__SetRemoteDiscoveryMode
#define soap_write___tds__SetRemoteDiscoveryMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetRemoteDiscoveryMode(soap, data), 0) || soap_put___tds__SetRemoteDiscoveryMode(soap, data, "-tds:SetRemoteDiscoveryMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetRemoteDiscoveryMode * SOAP_FMAC4 soap_get___tds__SetRemoteDiscoveryMode(struct soap*, struct __tds__SetRemoteDiscoveryMode *, const char*, const char*);

#ifndef soap_read___tds__SetRemoteDiscoveryMode
#define soap_read___tds__SetRemoteDiscoveryMode(soap, data) ( ((data) ? (soap_default___tds__SetRemoteDiscoveryMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__SetRemoteDiscoveryMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetRemoteDiscoveryMode
#define SOAP_TYPE___tds__GetRemoteDiscoveryMode (1656)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetRemoteDiscoveryMode(struct soap*, struct __tds__GetRemoteDiscoveryMode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetRemoteDiscoveryMode(struct soap*, const struct __tds__GetRemoteDiscoveryMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetRemoteDiscoveryMode(struct soap*, const char*, int, const struct __tds__GetRemoteDiscoveryMode *, const char*);
SOAP_FMAC3 struct __tds__GetRemoteDiscoveryMode * SOAP_FMAC4 soap_in___tds__GetRemoteDiscoveryMode(struct soap*, const char*, struct __tds__GetRemoteDiscoveryMode *, const char*);
SOAP_FMAC1 struct __tds__GetRemoteDiscoveryMode * SOAP_FMAC2 soap_instantiate___tds__GetRemoteDiscoveryMode(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetRemoteDiscoveryMode * soap_new___tds__GetRemoteDiscoveryMode(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetRemoteDiscoveryMode(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetRemoteDiscoveryMode * soap_new_req___tds__GetRemoteDiscoveryMode(
	struct soap *soap)
{	struct __tds__GetRemoteDiscoveryMode *_p = soap_new___tds__GetRemoteDiscoveryMode(soap);
	if (_p)
	{	soap_default___tds__GetRemoteDiscoveryMode(soap, _p);
	}
	return _p;
}

inline struct __tds__GetRemoteDiscoveryMode * soap_new_set___tds__GetRemoteDiscoveryMode(
	struct soap *soap,
	_tds__GetRemoteDiscoveryMode *tds__GetRemoteDiscoveryMode)
{	struct __tds__GetRemoteDiscoveryMode *_p = soap_new___tds__GetRemoteDiscoveryMode(soap);
	if (_p)
	{	soap_default___tds__GetRemoteDiscoveryMode(soap, _p);
		_p->tds__GetRemoteDiscoveryMode = tds__GetRemoteDiscoveryMode;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetRemoteDiscoveryMode(struct soap*, const struct __tds__GetRemoteDiscoveryMode *, const char*, const char*);

#ifndef soap_write___tds__GetRemoteDiscoveryMode
#define soap_write___tds__GetRemoteDiscoveryMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetRemoteDiscoveryMode(soap, data), 0) || soap_put___tds__GetRemoteDiscoveryMode(soap, data, "-tds:GetRemoteDiscoveryMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetRemoteDiscoveryMode * SOAP_FMAC4 soap_get___tds__GetRemoteDiscoveryMode(struct soap*, struct __tds__GetRemoteDiscoveryMode *, const char*, const char*);

#ifndef soap_read___tds__GetRemoteDiscoveryMode
#define soap_read___tds__GetRemoteDiscoveryMode(soap, data) ( ((data) ? (soap_default___tds__GetRemoteDiscoveryMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetRemoteDiscoveryMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__SetDiscoveryMode
#define SOAP_TYPE___tds__SetDiscoveryMode (1652)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetDiscoveryMode(struct soap*, struct __tds__SetDiscoveryMode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetDiscoveryMode(struct soap*, const struct __tds__SetDiscoveryMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetDiscoveryMode(struct soap*, const char*, int, const struct __tds__SetDiscoveryMode *, const char*);
SOAP_FMAC3 struct __tds__SetDiscoveryMode * SOAP_FMAC4 soap_in___tds__SetDiscoveryMode(struct soap*, const char*, struct __tds__SetDiscoveryMode *, const char*);
SOAP_FMAC1 struct __tds__SetDiscoveryMode * SOAP_FMAC2 soap_instantiate___tds__SetDiscoveryMode(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetDiscoveryMode * soap_new___tds__SetDiscoveryMode(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetDiscoveryMode(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetDiscoveryMode * soap_new_req___tds__SetDiscoveryMode(
	struct soap *soap)
{	struct __tds__SetDiscoveryMode *_p = soap_new___tds__SetDiscoveryMode(soap);
	if (_p)
	{	soap_default___tds__SetDiscoveryMode(soap, _p);
	}
	return _p;
}

inline struct __tds__SetDiscoveryMode * soap_new_set___tds__SetDiscoveryMode(
	struct soap *soap,
	_tds__SetDiscoveryMode *tds__SetDiscoveryMode)
{	struct __tds__SetDiscoveryMode *_p = soap_new___tds__SetDiscoveryMode(soap);
	if (_p)
	{	soap_default___tds__SetDiscoveryMode(soap, _p);
		_p->tds__SetDiscoveryMode = tds__SetDiscoveryMode;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetDiscoveryMode(struct soap*, const struct __tds__SetDiscoveryMode *, const char*, const char*);

#ifndef soap_write___tds__SetDiscoveryMode
#define soap_write___tds__SetDiscoveryMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetDiscoveryMode(soap, data), 0) || soap_put___tds__SetDiscoveryMode(soap, data, "-tds:SetDiscoveryMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetDiscoveryMode * SOAP_FMAC4 soap_get___tds__SetDiscoveryMode(struct soap*, struct __tds__SetDiscoveryMode *, const char*, const char*);

#ifndef soap_read___tds__SetDiscoveryMode
#define soap_read___tds__SetDiscoveryMode(soap, data) ( ((data) ? (soap_default___tds__SetDiscoveryMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__SetDiscoveryMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetDiscoveryMode
#define SOAP_TYPE___tds__GetDiscoveryMode (1648)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetDiscoveryMode(struct soap*, struct __tds__GetDiscoveryMode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetDiscoveryMode(struct soap*, const struct __tds__GetDiscoveryMode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetDiscoveryMode(struct soap*, const char*, int, const struct __tds__GetDiscoveryMode *, const char*);
SOAP_FMAC3 struct __tds__GetDiscoveryMode * SOAP_FMAC4 soap_in___tds__GetDiscoveryMode(struct soap*, const char*, struct __tds__GetDiscoveryMode *, const char*);
SOAP_FMAC1 struct __tds__GetDiscoveryMode * SOAP_FMAC2 soap_instantiate___tds__GetDiscoveryMode(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetDiscoveryMode * soap_new___tds__GetDiscoveryMode(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetDiscoveryMode(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetDiscoveryMode * soap_new_req___tds__GetDiscoveryMode(
	struct soap *soap)
{	struct __tds__GetDiscoveryMode *_p = soap_new___tds__GetDiscoveryMode(soap);
	if (_p)
	{	soap_default___tds__GetDiscoveryMode(soap, _p);
	}
	return _p;
}

inline struct __tds__GetDiscoveryMode * soap_new_set___tds__GetDiscoveryMode(
	struct soap *soap,
	_tds__GetDiscoveryMode *tds__GetDiscoveryMode)
{	struct __tds__GetDiscoveryMode *_p = soap_new___tds__GetDiscoveryMode(soap);
	if (_p)
	{	soap_default___tds__GetDiscoveryMode(soap, _p);
		_p->tds__GetDiscoveryMode = tds__GetDiscoveryMode;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetDiscoveryMode(struct soap*, const struct __tds__GetDiscoveryMode *, const char*, const char*);

#ifndef soap_write___tds__GetDiscoveryMode
#define soap_write___tds__GetDiscoveryMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetDiscoveryMode(soap, data), 0) || soap_put___tds__GetDiscoveryMode(soap, data, "-tds:GetDiscoveryMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetDiscoveryMode * SOAP_FMAC4 soap_get___tds__GetDiscoveryMode(struct soap*, struct __tds__GetDiscoveryMode *, const char*, const char*);

#ifndef soap_read___tds__GetDiscoveryMode
#define soap_read___tds__GetDiscoveryMode(soap, data) ( ((data) ? (soap_default___tds__GetDiscoveryMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetDiscoveryMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__RemoveScopes
#define SOAP_TYPE___tds__RemoveScopes (1644)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__RemoveScopes(struct soap*, struct __tds__RemoveScopes *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__RemoveScopes(struct soap*, const struct __tds__RemoveScopes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__RemoveScopes(struct soap*, const char*, int, const struct __tds__RemoveScopes *, const char*);
SOAP_FMAC3 struct __tds__RemoveScopes * SOAP_FMAC4 soap_in___tds__RemoveScopes(struct soap*, const char*, struct __tds__RemoveScopes *, const char*);
SOAP_FMAC1 struct __tds__RemoveScopes * SOAP_FMAC2 soap_instantiate___tds__RemoveScopes(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__RemoveScopes * soap_new___tds__RemoveScopes(struct soap *soap, int n = -1) { return soap_instantiate___tds__RemoveScopes(soap, n, NULL, NULL, NULL); }

inline struct __tds__RemoveScopes * soap_new_req___tds__RemoveScopes(
	struct soap *soap)
{	struct __tds__RemoveScopes *_p = soap_new___tds__RemoveScopes(soap);
	if (_p)
	{	soap_default___tds__RemoveScopes(soap, _p);
	}
	return _p;
}

inline struct __tds__RemoveScopes * soap_new_set___tds__RemoveScopes(
	struct soap *soap,
	_tds__RemoveScopes *tds__RemoveScopes)
{	struct __tds__RemoveScopes *_p = soap_new___tds__RemoveScopes(soap);
	if (_p)
	{	soap_default___tds__RemoveScopes(soap, _p);
		_p->tds__RemoveScopes = tds__RemoveScopes;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__RemoveScopes(struct soap*, const struct __tds__RemoveScopes *, const char*, const char*);

#ifndef soap_write___tds__RemoveScopes
#define soap_write___tds__RemoveScopes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__RemoveScopes(soap, data), 0) || soap_put___tds__RemoveScopes(soap, data, "-tds:RemoveScopes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__RemoveScopes * SOAP_FMAC4 soap_get___tds__RemoveScopes(struct soap*, struct __tds__RemoveScopes *, const char*, const char*);

#ifndef soap_read___tds__RemoveScopes
#define soap_read___tds__RemoveScopes(soap, data) ( ((data) ? (soap_default___tds__RemoveScopes(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__RemoveScopes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__AddScopes
#define SOAP_TYPE___tds__AddScopes (1640)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__AddScopes(struct soap*, struct __tds__AddScopes *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__AddScopes(struct soap*, const struct __tds__AddScopes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__AddScopes(struct soap*, const char*, int, const struct __tds__AddScopes *, const char*);
SOAP_FMAC3 struct __tds__AddScopes * SOAP_FMAC4 soap_in___tds__AddScopes(struct soap*, const char*, struct __tds__AddScopes *, const char*);
SOAP_FMAC1 struct __tds__AddScopes * SOAP_FMAC2 soap_instantiate___tds__AddScopes(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__AddScopes * soap_new___tds__AddScopes(struct soap *soap, int n = -1) { return soap_instantiate___tds__AddScopes(soap, n, NULL, NULL, NULL); }

inline struct __tds__AddScopes * soap_new_req___tds__AddScopes(
	struct soap *soap)
{	struct __tds__AddScopes *_p = soap_new___tds__AddScopes(soap);
	if (_p)
	{	soap_default___tds__AddScopes(soap, _p);
	}
	return _p;
}

inline struct __tds__AddScopes * soap_new_set___tds__AddScopes(
	struct soap *soap,
	_tds__AddScopes *tds__AddScopes)
{	struct __tds__AddScopes *_p = soap_new___tds__AddScopes(soap);
	if (_p)
	{	soap_default___tds__AddScopes(soap, _p);
		_p->tds__AddScopes = tds__AddScopes;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__AddScopes(struct soap*, const struct __tds__AddScopes *, const char*, const char*);

#ifndef soap_write___tds__AddScopes
#define soap_write___tds__AddScopes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__AddScopes(soap, data), 0) || soap_put___tds__AddScopes(soap, data, "-tds:AddScopes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__AddScopes * SOAP_FMAC4 soap_get___tds__AddScopes(struct soap*, struct __tds__AddScopes *, const char*, const char*);

#ifndef soap_read___tds__AddScopes
#define soap_read___tds__AddScopes(soap, data) ( ((data) ? (soap_default___tds__AddScopes(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__AddScopes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__SetScopes
#define SOAP_TYPE___tds__SetScopes (1636)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetScopes(struct soap*, struct __tds__SetScopes *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetScopes(struct soap*, const struct __tds__SetScopes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetScopes(struct soap*, const char*, int, const struct __tds__SetScopes *, const char*);
SOAP_FMAC3 struct __tds__SetScopes * SOAP_FMAC4 soap_in___tds__SetScopes(struct soap*, const char*, struct __tds__SetScopes *, const char*);
SOAP_FMAC1 struct __tds__SetScopes * SOAP_FMAC2 soap_instantiate___tds__SetScopes(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetScopes * soap_new___tds__SetScopes(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetScopes(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetScopes * soap_new_req___tds__SetScopes(
	struct soap *soap)
{	struct __tds__SetScopes *_p = soap_new___tds__SetScopes(soap);
	if (_p)
	{	soap_default___tds__SetScopes(soap, _p);
	}
	return _p;
}

inline struct __tds__SetScopes * soap_new_set___tds__SetScopes(
	struct soap *soap,
	_tds__SetScopes *tds__SetScopes)
{	struct __tds__SetScopes *_p = soap_new___tds__SetScopes(soap);
	if (_p)
	{	soap_default___tds__SetScopes(soap, _p);
		_p->tds__SetScopes = tds__SetScopes;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetScopes(struct soap*, const struct __tds__SetScopes *, const char*, const char*);

#ifndef soap_write___tds__SetScopes
#define soap_write___tds__SetScopes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetScopes(soap, data), 0) || soap_put___tds__SetScopes(soap, data, "-tds:SetScopes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetScopes * SOAP_FMAC4 soap_get___tds__SetScopes(struct soap*, struct __tds__SetScopes *, const char*, const char*);

#ifndef soap_read___tds__SetScopes
#define soap_read___tds__SetScopes(soap, data) ( ((data) ? (soap_default___tds__SetScopes(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__SetScopes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetScopes
#define SOAP_TYPE___tds__GetScopes (1632)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetScopes(struct soap*, struct __tds__GetScopes *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetScopes(struct soap*, const struct __tds__GetScopes *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetScopes(struct soap*, const char*, int, const struct __tds__GetScopes *, const char*);
SOAP_FMAC3 struct __tds__GetScopes * SOAP_FMAC4 soap_in___tds__GetScopes(struct soap*, const char*, struct __tds__GetScopes *, const char*);
SOAP_FMAC1 struct __tds__GetScopes * SOAP_FMAC2 soap_instantiate___tds__GetScopes(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetScopes * soap_new___tds__GetScopes(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetScopes(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetScopes * soap_new_req___tds__GetScopes(
	struct soap *soap)
{	struct __tds__GetScopes *_p = soap_new___tds__GetScopes(soap);
	if (_p)
	{	soap_default___tds__GetScopes(soap, _p);
	}
	return _p;
}

inline struct __tds__GetScopes * soap_new_set___tds__GetScopes(
	struct soap *soap,
	_tds__GetScopes *tds__GetScopes)
{	struct __tds__GetScopes *_p = soap_new___tds__GetScopes(soap);
	if (_p)
	{	soap_default___tds__GetScopes(soap, _p);
		_p->tds__GetScopes = tds__GetScopes;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetScopes(struct soap*, const struct __tds__GetScopes *, const char*, const char*);

#ifndef soap_write___tds__GetScopes
#define soap_write___tds__GetScopes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetScopes(soap, data), 0) || soap_put___tds__GetScopes(soap, data, "-tds:GetScopes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetScopes * SOAP_FMAC4 soap_get___tds__GetScopes(struct soap*, struct __tds__GetScopes *, const char*, const char*);

#ifndef soap_read___tds__GetScopes
#define soap_read___tds__GetScopes(soap, data) ( ((data) ? (soap_default___tds__GetScopes(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetScopes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetSystemSupportInformation
#define SOAP_TYPE___tds__GetSystemSupportInformation (1628)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetSystemSupportInformation(struct soap*, struct __tds__GetSystemSupportInformation *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetSystemSupportInformation(struct soap*, const struct __tds__GetSystemSupportInformation *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetSystemSupportInformation(struct soap*, const char*, int, const struct __tds__GetSystemSupportInformation *, const char*);
SOAP_FMAC3 struct __tds__GetSystemSupportInformation * SOAP_FMAC4 soap_in___tds__GetSystemSupportInformation(struct soap*, const char*, struct __tds__GetSystemSupportInformation *, const char*);
SOAP_FMAC1 struct __tds__GetSystemSupportInformation * SOAP_FMAC2 soap_instantiate___tds__GetSystemSupportInformation(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetSystemSupportInformation * soap_new___tds__GetSystemSupportInformation(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetSystemSupportInformation(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetSystemSupportInformation * soap_new_req___tds__GetSystemSupportInformation(
	struct soap *soap)
{	struct __tds__GetSystemSupportInformation *_p = soap_new___tds__GetSystemSupportInformation(soap);
	if (_p)
	{	soap_default___tds__GetSystemSupportInformation(soap, _p);
	}
	return _p;
}

inline struct __tds__GetSystemSupportInformation * soap_new_set___tds__GetSystemSupportInformation(
	struct soap *soap,
	_tds__GetSystemSupportInformation *tds__GetSystemSupportInformation)
{	struct __tds__GetSystemSupportInformation *_p = soap_new___tds__GetSystemSupportInformation(soap);
	if (_p)
	{	soap_default___tds__GetSystemSupportInformation(soap, _p);
		_p->tds__GetSystemSupportInformation = tds__GetSystemSupportInformation;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetSystemSupportInformation(struct soap*, const struct __tds__GetSystemSupportInformation *, const char*, const char*);

#ifndef soap_write___tds__GetSystemSupportInformation
#define soap_write___tds__GetSystemSupportInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetSystemSupportInformation(soap, data), 0) || soap_put___tds__GetSystemSupportInformation(soap, data, "-tds:GetSystemSupportInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetSystemSupportInformation * SOAP_FMAC4 soap_get___tds__GetSystemSupportInformation(struct soap*, struct __tds__GetSystemSupportInformation *, const char*, const char*);

#ifndef soap_read___tds__GetSystemSupportInformation
#define soap_read___tds__GetSystemSupportInformation(soap, data) ( ((data) ? (soap_default___tds__GetSystemSupportInformation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetSystemSupportInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetSystemLog
#define SOAP_TYPE___tds__GetSystemLog (1624)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetSystemLog(struct soap*, struct __tds__GetSystemLog *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetSystemLog(struct soap*, const struct __tds__GetSystemLog *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetSystemLog(struct soap*, const char*, int, const struct __tds__GetSystemLog *, const char*);
SOAP_FMAC3 struct __tds__GetSystemLog * SOAP_FMAC4 soap_in___tds__GetSystemLog(struct soap*, const char*, struct __tds__GetSystemLog *, const char*);
SOAP_FMAC1 struct __tds__GetSystemLog * SOAP_FMAC2 soap_instantiate___tds__GetSystemLog(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetSystemLog * soap_new___tds__GetSystemLog(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetSystemLog(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetSystemLog * soap_new_req___tds__GetSystemLog(
	struct soap *soap)
{	struct __tds__GetSystemLog *_p = soap_new___tds__GetSystemLog(soap);
	if (_p)
	{	soap_default___tds__GetSystemLog(soap, _p);
	}
	return _p;
}

inline struct __tds__GetSystemLog * soap_new_set___tds__GetSystemLog(
	struct soap *soap,
	_tds__GetSystemLog *tds__GetSystemLog)
{	struct __tds__GetSystemLog *_p = soap_new___tds__GetSystemLog(soap);
	if (_p)
	{	soap_default___tds__GetSystemLog(soap, _p);
		_p->tds__GetSystemLog = tds__GetSystemLog;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetSystemLog(struct soap*, const struct __tds__GetSystemLog *, const char*, const char*);

#ifndef soap_write___tds__GetSystemLog
#define soap_write___tds__GetSystemLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetSystemLog(soap, data), 0) || soap_put___tds__GetSystemLog(soap, data, "-tds:GetSystemLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetSystemLog * SOAP_FMAC4 soap_get___tds__GetSystemLog(struct soap*, struct __tds__GetSystemLog *, const char*, const char*);

#ifndef soap_read___tds__GetSystemLog
#define soap_read___tds__GetSystemLog(soap, data) ( ((data) ? (soap_default___tds__GetSystemLog(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetSystemLog(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetSystemBackup
#define SOAP_TYPE___tds__GetSystemBackup (1620)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetSystemBackup(struct soap*, struct __tds__GetSystemBackup *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetSystemBackup(struct soap*, const struct __tds__GetSystemBackup *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetSystemBackup(struct soap*, const char*, int, const struct __tds__GetSystemBackup *, const char*);
SOAP_FMAC3 struct __tds__GetSystemBackup * SOAP_FMAC4 soap_in___tds__GetSystemBackup(struct soap*, const char*, struct __tds__GetSystemBackup *, const char*);
SOAP_FMAC1 struct __tds__GetSystemBackup * SOAP_FMAC2 soap_instantiate___tds__GetSystemBackup(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetSystemBackup * soap_new___tds__GetSystemBackup(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetSystemBackup(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetSystemBackup * soap_new_req___tds__GetSystemBackup(
	struct soap *soap)
{	struct __tds__GetSystemBackup *_p = soap_new___tds__GetSystemBackup(soap);
	if (_p)
	{	soap_default___tds__GetSystemBackup(soap, _p);
	}
	return _p;
}

inline struct __tds__GetSystemBackup * soap_new_set___tds__GetSystemBackup(
	struct soap *soap,
	_tds__GetSystemBackup *tds__GetSystemBackup)
{	struct __tds__GetSystemBackup *_p = soap_new___tds__GetSystemBackup(soap);
	if (_p)
	{	soap_default___tds__GetSystemBackup(soap, _p);
		_p->tds__GetSystemBackup = tds__GetSystemBackup;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetSystemBackup(struct soap*, const struct __tds__GetSystemBackup *, const char*, const char*);

#ifndef soap_write___tds__GetSystemBackup
#define soap_write___tds__GetSystemBackup(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetSystemBackup(soap, data), 0) || soap_put___tds__GetSystemBackup(soap, data, "-tds:GetSystemBackup", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetSystemBackup * SOAP_FMAC4 soap_get___tds__GetSystemBackup(struct soap*, struct __tds__GetSystemBackup *, const char*, const char*);

#ifndef soap_read___tds__GetSystemBackup
#define soap_read___tds__GetSystemBackup(soap, data) ( ((data) ? (soap_default___tds__GetSystemBackup(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetSystemBackup(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__RestoreSystem
#define SOAP_TYPE___tds__RestoreSystem (1616)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__RestoreSystem(struct soap*, struct __tds__RestoreSystem *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__RestoreSystem(struct soap*, const struct __tds__RestoreSystem *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__RestoreSystem(struct soap*, const char*, int, const struct __tds__RestoreSystem *, const char*);
SOAP_FMAC3 struct __tds__RestoreSystem * SOAP_FMAC4 soap_in___tds__RestoreSystem(struct soap*, const char*, struct __tds__RestoreSystem *, const char*);
SOAP_FMAC1 struct __tds__RestoreSystem * SOAP_FMAC2 soap_instantiate___tds__RestoreSystem(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__RestoreSystem * soap_new___tds__RestoreSystem(struct soap *soap, int n = -1) { return soap_instantiate___tds__RestoreSystem(soap, n, NULL, NULL, NULL); }

inline struct __tds__RestoreSystem * soap_new_req___tds__RestoreSystem(
	struct soap *soap)
{	struct __tds__RestoreSystem *_p = soap_new___tds__RestoreSystem(soap);
	if (_p)
	{	soap_default___tds__RestoreSystem(soap, _p);
	}
	return _p;
}

inline struct __tds__RestoreSystem * soap_new_set___tds__RestoreSystem(
	struct soap *soap,
	_tds__RestoreSystem *tds__RestoreSystem)
{	struct __tds__RestoreSystem *_p = soap_new___tds__RestoreSystem(soap);
	if (_p)
	{	soap_default___tds__RestoreSystem(soap, _p);
		_p->tds__RestoreSystem = tds__RestoreSystem;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__RestoreSystem(struct soap*, const struct __tds__RestoreSystem *, const char*, const char*);

#ifndef soap_write___tds__RestoreSystem
#define soap_write___tds__RestoreSystem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__RestoreSystem(soap, data), 0) || soap_put___tds__RestoreSystem(soap, data, "-tds:RestoreSystem", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__RestoreSystem * SOAP_FMAC4 soap_get___tds__RestoreSystem(struct soap*, struct __tds__RestoreSystem *, const char*, const char*);

#ifndef soap_read___tds__RestoreSystem
#define soap_read___tds__RestoreSystem(soap, data) ( ((data) ? (soap_default___tds__RestoreSystem(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__RestoreSystem(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__SystemReboot
#define SOAP_TYPE___tds__SystemReboot (1612)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SystemReboot(struct soap*, struct __tds__SystemReboot *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SystemReboot(struct soap*, const struct __tds__SystemReboot *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SystemReboot(struct soap*, const char*, int, const struct __tds__SystemReboot *, const char*);
SOAP_FMAC3 struct __tds__SystemReboot * SOAP_FMAC4 soap_in___tds__SystemReboot(struct soap*, const char*, struct __tds__SystemReboot *, const char*);
SOAP_FMAC1 struct __tds__SystemReboot * SOAP_FMAC2 soap_instantiate___tds__SystemReboot(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SystemReboot * soap_new___tds__SystemReboot(struct soap *soap, int n = -1) { return soap_instantiate___tds__SystemReboot(soap, n, NULL, NULL, NULL); }

inline struct __tds__SystemReboot * soap_new_req___tds__SystemReboot(
	struct soap *soap)
{	struct __tds__SystemReboot *_p = soap_new___tds__SystemReboot(soap);
	if (_p)
	{	soap_default___tds__SystemReboot(soap, _p);
	}
	return _p;
}

inline struct __tds__SystemReboot * soap_new_set___tds__SystemReboot(
	struct soap *soap,
	_tds__SystemReboot *tds__SystemReboot)
{	struct __tds__SystemReboot *_p = soap_new___tds__SystemReboot(soap);
	if (_p)
	{	soap_default___tds__SystemReboot(soap, _p);
		_p->tds__SystemReboot = tds__SystemReboot;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SystemReboot(struct soap*, const struct __tds__SystemReboot *, const char*, const char*);

#ifndef soap_write___tds__SystemReboot
#define soap_write___tds__SystemReboot(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SystemReboot(soap, data), 0) || soap_put___tds__SystemReboot(soap, data, "-tds:SystemReboot", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SystemReboot * SOAP_FMAC4 soap_get___tds__SystemReboot(struct soap*, struct __tds__SystemReboot *, const char*, const char*);

#ifndef soap_read___tds__SystemReboot
#define soap_read___tds__SystemReboot(soap, data) ( ((data) ? (soap_default___tds__SystemReboot(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__SystemReboot(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__UpgradeSystemFirmware
#define SOAP_TYPE___tds__UpgradeSystemFirmware (1608)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__UpgradeSystemFirmware(struct soap*, struct __tds__UpgradeSystemFirmware *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__UpgradeSystemFirmware(struct soap*, const struct __tds__UpgradeSystemFirmware *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__UpgradeSystemFirmware(struct soap*, const char*, int, const struct __tds__UpgradeSystemFirmware *, const char*);
SOAP_FMAC3 struct __tds__UpgradeSystemFirmware * SOAP_FMAC4 soap_in___tds__UpgradeSystemFirmware(struct soap*, const char*, struct __tds__UpgradeSystemFirmware *, const char*);
SOAP_FMAC1 struct __tds__UpgradeSystemFirmware * SOAP_FMAC2 soap_instantiate___tds__UpgradeSystemFirmware(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__UpgradeSystemFirmware * soap_new___tds__UpgradeSystemFirmware(struct soap *soap, int n = -1) { return soap_instantiate___tds__UpgradeSystemFirmware(soap, n, NULL, NULL, NULL); }

inline struct __tds__UpgradeSystemFirmware * soap_new_req___tds__UpgradeSystemFirmware(
	struct soap *soap)
{	struct __tds__UpgradeSystemFirmware *_p = soap_new___tds__UpgradeSystemFirmware(soap);
	if (_p)
	{	soap_default___tds__UpgradeSystemFirmware(soap, _p);
	}
	return _p;
}

inline struct __tds__UpgradeSystemFirmware * soap_new_set___tds__UpgradeSystemFirmware(
	struct soap *soap,
	_tds__UpgradeSystemFirmware *tds__UpgradeSystemFirmware)
{	struct __tds__UpgradeSystemFirmware *_p = soap_new___tds__UpgradeSystemFirmware(soap);
	if (_p)
	{	soap_default___tds__UpgradeSystemFirmware(soap, _p);
		_p->tds__UpgradeSystemFirmware = tds__UpgradeSystemFirmware;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__UpgradeSystemFirmware(struct soap*, const struct __tds__UpgradeSystemFirmware *, const char*, const char*);

#ifndef soap_write___tds__UpgradeSystemFirmware
#define soap_write___tds__UpgradeSystemFirmware(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__UpgradeSystemFirmware(soap, data), 0) || soap_put___tds__UpgradeSystemFirmware(soap, data, "-tds:UpgradeSystemFirmware", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__UpgradeSystemFirmware * SOAP_FMAC4 soap_get___tds__UpgradeSystemFirmware(struct soap*, struct __tds__UpgradeSystemFirmware *, const char*, const char*);

#ifndef soap_read___tds__UpgradeSystemFirmware
#define soap_read___tds__UpgradeSystemFirmware(soap, data) ( ((data) ? (soap_default___tds__UpgradeSystemFirmware(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__UpgradeSystemFirmware(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__SetSystemFactoryDefault
#define SOAP_TYPE___tds__SetSystemFactoryDefault (1604)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetSystemFactoryDefault(struct soap*, struct __tds__SetSystemFactoryDefault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetSystemFactoryDefault(struct soap*, const struct __tds__SetSystemFactoryDefault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetSystemFactoryDefault(struct soap*, const char*, int, const struct __tds__SetSystemFactoryDefault *, const char*);
SOAP_FMAC3 struct __tds__SetSystemFactoryDefault * SOAP_FMAC4 soap_in___tds__SetSystemFactoryDefault(struct soap*, const char*, struct __tds__SetSystemFactoryDefault *, const char*);
SOAP_FMAC1 struct __tds__SetSystemFactoryDefault * SOAP_FMAC2 soap_instantiate___tds__SetSystemFactoryDefault(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetSystemFactoryDefault * soap_new___tds__SetSystemFactoryDefault(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetSystemFactoryDefault(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetSystemFactoryDefault * soap_new_req___tds__SetSystemFactoryDefault(
	struct soap *soap)
{	struct __tds__SetSystemFactoryDefault *_p = soap_new___tds__SetSystemFactoryDefault(soap);
	if (_p)
	{	soap_default___tds__SetSystemFactoryDefault(soap, _p);
	}
	return _p;
}

inline struct __tds__SetSystemFactoryDefault * soap_new_set___tds__SetSystemFactoryDefault(
	struct soap *soap,
	_tds__SetSystemFactoryDefault *tds__SetSystemFactoryDefault)
{	struct __tds__SetSystemFactoryDefault *_p = soap_new___tds__SetSystemFactoryDefault(soap);
	if (_p)
	{	soap_default___tds__SetSystemFactoryDefault(soap, _p);
		_p->tds__SetSystemFactoryDefault = tds__SetSystemFactoryDefault;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetSystemFactoryDefault(struct soap*, const struct __tds__SetSystemFactoryDefault *, const char*, const char*);

#ifndef soap_write___tds__SetSystemFactoryDefault
#define soap_write___tds__SetSystemFactoryDefault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetSystemFactoryDefault(soap, data), 0) || soap_put___tds__SetSystemFactoryDefault(soap, data, "-tds:SetSystemFactoryDefault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetSystemFactoryDefault * SOAP_FMAC4 soap_get___tds__SetSystemFactoryDefault(struct soap*, struct __tds__SetSystemFactoryDefault *, const char*, const char*);

#ifndef soap_read___tds__SetSystemFactoryDefault
#define soap_read___tds__SetSystemFactoryDefault(soap, data) ( ((data) ? (soap_default___tds__SetSystemFactoryDefault(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__SetSystemFactoryDefault(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetSystemDateAndTime
#define SOAP_TYPE___tds__GetSystemDateAndTime (1600)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetSystemDateAndTime(struct soap*, struct __tds__GetSystemDateAndTime *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetSystemDateAndTime(struct soap*, const struct __tds__GetSystemDateAndTime *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetSystemDateAndTime(struct soap*, const char*, int, const struct __tds__GetSystemDateAndTime *, const char*);
SOAP_FMAC3 struct __tds__GetSystemDateAndTime * SOAP_FMAC4 soap_in___tds__GetSystemDateAndTime(struct soap*, const char*, struct __tds__GetSystemDateAndTime *, const char*);
SOAP_FMAC1 struct __tds__GetSystemDateAndTime * SOAP_FMAC2 soap_instantiate___tds__GetSystemDateAndTime(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetSystemDateAndTime * soap_new___tds__GetSystemDateAndTime(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetSystemDateAndTime(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetSystemDateAndTime * soap_new_req___tds__GetSystemDateAndTime(
	struct soap *soap)
{	struct __tds__GetSystemDateAndTime *_p = soap_new___tds__GetSystemDateAndTime(soap);
	if (_p)
	{	soap_default___tds__GetSystemDateAndTime(soap, _p);
	}
	return _p;
}

inline struct __tds__GetSystemDateAndTime * soap_new_set___tds__GetSystemDateAndTime(
	struct soap *soap,
	_tds__GetSystemDateAndTime *tds__GetSystemDateAndTime)
{	struct __tds__GetSystemDateAndTime *_p = soap_new___tds__GetSystemDateAndTime(soap);
	if (_p)
	{	soap_default___tds__GetSystemDateAndTime(soap, _p);
		_p->tds__GetSystemDateAndTime = tds__GetSystemDateAndTime;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetSystemDateAndTime(struct soap*, const struct __tds__GetSystemDateAndTime *, const char*, const char*);

#ifndef soap_write___tds__GetSystemDateAndTime
#define soap_write___tds__GetSystemDateAndTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetSystemDateAndTime(soap, data), 0) || soap_put___tds__GetSystemDateAndTime(soap, data, "-tds:GetSystemDateAndTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetSystemDateAndTime * SOAP_FMAC4 soap_get___tds__GetSystemDateAndTime(struct soap*, struct __tds__GetSystemDateAndTime *, const char*, const char*);

#ifndef soap_read___tds__GetSystemDateAndTime
#define soap_read___tds__GetSystemDateAndTime(soap, data) ( ((data) ? (soap_default___tds__GetSystemDateAndTime(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetSystemDateAndTime(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__SetSystemDateAndTime
#define SOAP_TYPE___tds__SetSystemDateAndTime (1596)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__SetSystemDateAndTime(struct soap*, struct __tds__SetSystemDateAndTime *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__SetSystemDateAndTime(struct soap*, const struct __tds__SetSystemDateAndTime *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__SetSystemDateAndTime(struct soap*, const char*, int, const struct __tds__SetSystemDateAndTime *, const char*);
SOAP_FMAC3 struct __tds__SetSystemDateAndTime * SOAP_FMAC4 soap_in___tds__SetSystemDateAndTime(struct soap*, const char*, struct __tds__SetSystemDateAndTime *, const char*);
SOAP_FMAC1 struct __tds__SetSystemDateAndTime * SOAP_FMAC2 soap_instantiate___tds__SetSystemDateAndTime(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__SetSystemDateAndTime * soap_new___tds__SetSystemDateAndTime(struct soap *soap, int n = -1) { return soap_instantiate___tds__SetSystemDateAndTime(soap, n, NULL, NULL, NULL); }

inline struct __tds__SetSystemDateAndTime * soap_new_req___tds__SetSystemDateAndTime(
	struct soap *soap)
{	struct __tds__SetSystemDateAndTime *_p = soap_new___tds__SetSystemDateAndTime(soap);
	if (_p)
	{	soap_default___tds__SetSystemDateAndTime(soap, _p);
	}
	return _p;
}

inline struct __tds__SetSystemDateAndTime * soap_new_set___tds__SetSystemDateAndTime(
	struct soap *soap,
	_tds__SetSystemDateAndTime *tds__SetSystemDateAndTime)
{	struct __tds__SetSystemDateAndTime *_p = soap_new___tds__SetSystemDateAndTime(soap);
	if (_p)
	{	soap_default___tds__SetSystemDateAndTime(soap, _p);
		_p->tds__SetSystemDateAndTime = tds__SetSystemDateAndTime;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__SetSystemDateAndTime(struct soap*, const struct __tds__SetSystemDateAndTime *, const char*, const char*);

#ifndef soap_write___tds__SetSystemDateAndTime
#define soap_write___tds__SetSystemDateAndTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__SetSystemDateAndTime(soap, data), 0) || soap_put___tds__SetSystemDateAndTime(soap, data, "-tds:SetSystemDateAndTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__SetSystemDateAndTime * SOAP_FMAC4 soap_get___tds__SetSystemDateAndTime(struct soap*, struct __tds__SetSystemDateAndTime *, const char*, const char*);

#ifndef soap_read___tds__SetSystemDateAndTime
#define soap_read___tds__SetSystemDateAndTime(soap, data) ( ((data) ? (soap_default___tds__SetSystemDateAndTime(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__SetSystemDateAndTime(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetDeviceInformation
#define SOAP_TYPE___tds__GetDeviceInformation (1592)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetDeviceInformation(struct soap*, struct __tds__GetDeviceInformation *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetDeviceInformation(struct soap*, const struct __tds__GetDeviceInformation *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetDeviceInformation(struct soap*, const char*, int, const struct __tds__GetDeviceInformation *, const char*);
SOAP_FMAC3 struct __tds__GetDeviceInformation * SOAP_FMAC4 soap_in___tds__GetDeviceInformation(struct soap*, const char*, struct __tds__GetDeviceInformation *, const char*);
SOAP_FMAC1 struct __tds__GetDeviceInformation * SOAP_FMAC2 soap_instantiate___tds__GetDeviceInformation(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetDeviceInformation * soap_new___tds__GetDeviceInformation(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetDeviceInformation(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetDeviceInformation * soap_new_req___tds__GetDeviceInformation(
	struct soap *soap)
{	struct __tds__GetDeviceInformation *_p = soap_new___tds__GetDeviceInformation(soap);
	if (_p)
	{	soap_default___tds__GetDeviceInformation(soap, _p);
	}
	return _p;
}

inline struct __tds__GetDeviceInformation * soap_new_set___tds__GetDeviceInformation(
	struct soap *soap,
	_tds__GetDeviceInformation *tds__GetDeviceInformation)
{	struct __tds__GetDeviceInformation *_p = soap_new___tds__GetDeviceInformation(soap);
	if (_p)
	{	soap_default___tds__GetDeviceInformation(soap, _p);
		_p->tds__GetDeviceInformation = tds__GetDeviceInformation;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetDeviceInformation(struct soap*, const struct __tds__GetDeviceInformation *, const char*, const char*);

#ifndef soap_write___tds__GetDeviceInformation
#define soap_write___tds__GetDeviceInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetDeviceInformation(soap, data), 0) || soap_put___tds__GetDeviceInformation(soap, data, "-tds:GetDeviceInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetDeviceInformation * SOAP_FMAC4 soap_get___tds__GetDeviceInformation(struct soap*, struct __tds__GetDeviceInformation *, const char*, const char*);

#ifndef soap_read___tds__GetDeviceInformation
#define soap_read___tds__GetDeviceInformation(soap, data) ( ((data) ? (soap_default___tds__GetDeviceInformation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetDeviceInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetServiceCapabilities
#define SOAP_TYPE___tds__GetServiceCapabilities (1588)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetServiceCapabilities(struct soap*, struct __tds__GetServiceCapabilities *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetServiceCapabilities(struct soap*, const struct __tds__GetServiceCapabilities *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetServiceCapabilities(struct soap*, const char*, int, const struct __tds__GetServiceCapabilities *, const char*);
SOAP_FMAC3 struct __tds__GetServiceCapabilities * SOAP_FMAC4 soap_in___tds__GetServiceCapabilities(struct soap*, const char*, struct __tds__GetServiceCapabilities *, const char*);
SOAP_FMAC1 struct __tds__GetServiceCapabilities * SOAP_FMAC2 soap_instantiate___tds__GetServiceCapabilities(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetServiceCapabilities * soap_new___tds__GetServiceCapabilities(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetServiceCapabilities(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetServiceCapabilities * soap_new_req___tds__GetServiceCapabilities(
	struct soap *soap)
{	struct __tds__GetServiceCapabilities *_p = soap_new___tds__GetServiceCapabilities(soap);
	if (_p)
	{	soap_default___tds__GetServiceCapabilities(soap, _p);
	}
	return _p;
}

inline struct __tds__GetServiceCapabilities * soap_new_set___tds__GetServiceCapabilities(
	struct soap *soap,
	_tds__GetServiceCapabilities *tds__GetServiceCapabilities)
{	struct __tds__GetServiceCapabilities *_p = soap_new___tds__GetServiceCapabilities(soap);
	if (_p)
	{	soap_default___tds__GetServiceCapabilities(soap, _p);
		_p->tds__GetServiceCapabilities = tds__GetServiceCapabilities;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetServiceCapabilities(struct soap*, const struct __tds__GetServiceCapabilities *, const char*, const char*);

#ifndef soap_write___tds__GetServiceCapabilities
#define soap_write___tds__GetServiceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetServiceCapabilities(soap, data), 0) || soap_put___tds__GetServiceCapabilities(soap, data, "-tds:GetServiceCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetServiceCapabilities * SOAP_FMAC4 soap_get___tds__GetServiceCapabilities(struct soap*, struct __tds__GetServiceCapabilities *, const char*, const char*);

#ifndef soap_read___tds__GetServiceCapabilities
#define soap_read___tds__GetServiceCapabilities(soap, data) ( ((data) ? (soap_default___tds__GetServiceCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetServiceCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE___tds__GetServices
#define SOAP_TYPE___tds__GetServices (1584)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___tds__GetServices(struct soap*, struct __tds__GetServices *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___tds__GetServices(struct soap*, const struct __tds__GetServices *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___tds__GetServices(struct soap*, const char*, int, const struct __tds__GetServices *, const char*);
SOAP_FMAC3 struct __tds__GetServices * SOAP_FMAC4 soap_in___tds__GetServices(struct soap*, const char*, struct __tds__GetServices *, const char*);
SOAP_FMAC1 struct __tds__GetServices * SOAP_FMAC2 soap_instantiate___tds__GetServices(struct soap*, int, const char*, const char*, size_t*);

inline struct __tds__GetServices * soap_new___tds__GetServices(struct soap *soap, int n = -1) { return soap_instantiate___tds__GetServices(soap, n, NULL, NULL, NULL); }

inline struct __tds__GetServices * soap_new_req___tds__GetServices(
	struct soap *soap)
{	struct __tds__GetServices *_p = soap_new___tds__GetServices(soap);
	if (_p)
	{	soap_default___tds__GetServices(soap, _p);
	}
	return _p;
}

inline struct __tds__GetServices * soap_new_set___tds__GetServices(
	struct soap *soap,
	_tds__GetServices *tds__GetServices)
{	struct __tds__GetServices *_p = soap_new___tds__GetServices(soap);
	if (_p)
	{	soap_default___tds__GetServices(soap, _p);
		_p->tds__GetServices = tds__GetServices;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put___tds__GetServices(struct soap*, const struct __tds__GetServices *, const char*, const char*);

#ifndef soap_write___tds__GetServices
#define soap_write___tds__GetServices(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize___tds__GetServices(soap, data), 0) || soap_put___tds__GetServices(soap, data, "-tds:GetServices", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct __tds__GetServices * SOAP_FMAC4 soap_get___tds__GetServices(struct soap*, struct __tds__GetServices *, const char*, const char*);

#ifndef soap_read___tds__GetServices
#define soap_read___tds__GetServices(soap, data) ( ((data) ? (soap_default___tds__GetServices(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get___tds__GetServices(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_SOAP_ENV__Envelope
#define SOAP_TYPE_SOAP_ENV__Envelope (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Envelope(struct soap*, struct SOAP_ENV__Envelope *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Envelope(struct soap*, const struct SOAP_ENV__Envelope *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Envelope(struct soap*, const char*, int, const struct SOAP_ENV__Envelope *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Envelope * SOAP_FMAC4 soap_in_SOAP_ENV__Envelope(struct soap*, const char*, struct SOAP_ENV__Envelope *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Envelope * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Envelope(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Envelope * soap_new_SOAP_ENV__Envelope(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Envelope(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Envelope * soap_new_req_SOAP_ENV__Envelope(
	struct soap *soap)
{	struct SOAP_ENV__Envelope *_p = soap_new_SOAP_ENV__Envelope(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Envelope(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Envelope * soap_new_set_SOAP_ENV__Envelope(
	struct soap *soap,
	struct SOAP_ENV__Header *SOAP_ENV__Header,
	char *SOAP_ENV__Body)
{	struct SOAP_ENV__Envelope *_p = soap_new_SOAP_ENV__Envelope(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Envelope(soap, _p);
		_p->SOAP_ENV__Header = SOAP_ENV__Header;
		_p->SOAP_ENV__Body = SOAP_ENV__Body;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Envelope(struct soap*, const struct SOAP_ENV__Envelope *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Envelope
#define soap_write_SOAP_ENV__Envelope(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Envelope(soap, data), 0) || soap_put_SOAP_ENV__Envelope(soap, data, "SOAP-ENV:Envelope", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Envelope * SOAP_FMAC4 soap_get_SOAP_ENV__Envelope(struct soap*, struct SOAP_ENV__Envelope *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Envelope
#define soap_read_SOAP_ENV__Envelope(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Envelope(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Envelope(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(
	struct soap *soap)
{	struct SOAP_ENV__Fault *_p = soap_new_SOAP_ENV__Fault(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Fault(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(
	struct soap *soap,
	char *faultcode,
	char *faultstring,
	char *faultactor,
	struct SOAP_ENV__Detail *detail,
	struct SOAP_ENV__Code *SOAP_ENV__Code,
	struct SOAP_ENV__Reason *SOAP_ENV__Reason,
	char *SOAP_ENV__Node,
	char *SOAP_ENV__Role,
	struct SOAP_ENV__Detail *SOAP_ENV__Detail)
{	struct SOAP_ENV__Fault *_p = soap_new_SOAP_ENV__Fault(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Fault(soap, _p);
		_p->faultcode = faultcode;
		_p->faultstring = faultstring;
		_p->faultactor = faultactor;
		_p->detail = detail;
		_p->SOAP_ENV__Code = SOAP_ENV__Code;
		_p->SOAP_ENV__Reason = SOAP_ENV__Reason;
		_p->SOAP_ENV__Node = SOAP_ENV__Node;
		_p->SOAP_ENV__Role = SOAP_ENV__Role;
		_p->SOAP_ENV__Detail = SOAP_ENV__Detail;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Fault(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(
	struct soap *soap)
{	struct SOAP_ENV__Reason *_p = soap_new_SOAP_ENV__Reason(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Reason(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(
	struct soap *soap,
	char *SOAP_ENV__Text)
{	struct SOAP_ENV__Reason *_p = soap_new_SOAP_ENV__Reason(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Reason(soap, _p);
		_p->SOAP_ENV__Text = SOAP_ENV__Text;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Reason(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(
	struct soap *soap)
{	struct SOAP_ENV__Code *_p = soap_new_SOAP_ENV__Code(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Code(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(
	struct soap *soap,
	char *SOAP_ENV__Value,
	struct SOAP_ENV__Code *SOAP_ENV__Subcode)
{	struct SOAP_ENV__Code *_p = soap_new_SOAP_ENV__Code(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Code(soap, _p);
		_p->SOAP_ENV__Value = SOAP_ENV__Value;
		_p->SOAP_ENV__Subcode = SOAP_ENV__Subcode;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Code(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(
	struct soap *soap,
	int __type,
	void *fault)
{	struct SOAP_ENV__Detail *_p = soap_new_SOAP_ENV__Detail(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Detail(soap, _p);
		_p->__type = __type;
		_p->fault = fault;
	}
	return _p;
}

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(
	struct soap *soap,
	char *__any,
	int __type,
	void *fault)
{	struct SOAP_ENV__Detail *_p = soap_new_SOAP_ENV__Detail(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Detail(soap, _p);
		_p->__any = __any;
		_p->__type = __type;
		_p->fault = fault;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Detail(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);
SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(
	struct soap *soap)
{	struct SOAP_ENV__Header *_p = soap_new_SOAP_ENV__Header(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Header(soap, _p);
	}
	return _p;
}

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(
	struct soap *soap,
	char *wsa5__MessageID,
	struct wsa5__RelatesToType *wsa5__RelatesTo,
	struct wsa5__EndpointReferenceType *wsa5__From,
	struct wsa5__EndpointReferenceType *wsa5__ReplyTo,
	struct wsa5__EndpointReferenceType *wsa5__FaultTo,
	char *wsa5__To,
	char *wsa5__Action,
	struct chan__ChannelInstanceType *chan__ChannelInstance)
{	struct SOAP_ENV__Header *_p = soap_new_SOAP_ENV__Header(soap);
	if (_p)
	{	soap_default_SOAP_ENV__Header(soap, _p);
		_p->wsa5__MessageID = wsa5__MessageID;
		_p->wsa5__RelatesTo = wsa5__RelatesTo;
		_p->wsa5__From = wsa5__From;
		_p->wsa5__ReplyTo = wsa5__ReplyTo;
		_p->wsa5__FaultTo = wsa5__FaultTo;
		_p->wsa5__To = wsa5__To;
		_p->wsa5__Action = wsa5__Action;
		_p->chan__ChannelInstance = chan__ChannelInstance;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( ((data) ? (soap_default_SOAP_ENV__Header(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_chan__ChannelInstanceType
#define SOAP_TYPE_chan__ChannelInstanceType (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_chan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_chan__ChannelInstanceType(struct soap*, const struct chan__ChannelInstanceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_chan__ChannelInstanceType(struct soap*, const char*, int, const struct chan__ChannelInstanceType *, const char*);
SOAP_FMAC3 struct chan__ChannelInstanceType * SOAP_FMAC4 soap_in_chan__ChannelInstanceType(struct soap*, const char*, struct chan__ChannelInstanceType *, const char*);
SOAP_FMAC1 struct chan__ChannelInstanceType * SOAP_FMAC2 soap_instantiate_chan__ChannelInstanceType(struct soap*, int, const char*, const char*, size_t*);

inline struct chan__ChannelInstanceType * soap_new_chan__ChannelInstanceType(struct soap *soap, int n = -1) { return soap_instantiate_chan__ChannelInstanceType(soap, n, NULL, NULL, NULL); }

inline struct chan__ChannelInstanceType * soap_new_req_chan__ChannelInstanceType(
	struct soap *soap,
	int __item)
{	struct chan__ChannelInstanceType *_p = soap_new_chan__ChannelInstanceType(soap);
	if (_p)
	{	soap_default_chan__ChannelInstanceType(soap, _p);
		_p->__item = __item;
	}
	return _p;
}

inline struct chan__ChannelInstanceType * soap_new_set_chan__ChannelInstanceType(
	struct soap *soap,
	int __item,
	enum _wsa5__IsReferenceParameter wsa5__IsReferenceParameter)
{	struct chan__ChannelInstanceType *_p = soap_new_chan__ChannelInstanceType(soap);
	if (_p)
	{	soap_default_chan__ChannelInstanceType(soap, _p);
		_p->__item = __item;
		_p->wsa5__IsReferenceParameter = wsa5__IsReferenceParameter;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_chan__ChannelInstanceType(struct soap*, const struct chan__ChannelInstanceType *, const char*, const char*);

#ifndef soap_write_chan__ChannelInstanceType
#define soap_write_chan__ChannelInstanceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_chan__ChannelInstanceType(soap, data), 0) || soap_put_chan__ChannelInstanceType(soap, data, "chan:ChannelInstanceType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct chan__ChannelInstanceType * SOAP_FMAC4 soap_get_chan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType *, const char*, const char*);

#ifndef soap_read_chan__ChannelInstanceType
#define soap_read_chan__ChannelInstanceType(soap, data) ( ((data) ? (soap_default_chan__ChannelInstanceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_chan__ChannelInstanceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

/* _wsa5__ProblemAction is a typedef synonym for wsa5__ProblemActionType */

#ifndef SOAP_TYPE__wsa5__ProblemAction
#define SOAP_TYPE__wsa5__ProblemAction (42)
#endif

#define soap_default__wsa5__ProblemAction(soap, a) soap_default_wsa5__ProblemActionType(soap, a)


#define soap_serialize__wsa5__ProblemAction soap_serialize_wsa5__ProblemActionType


#define soap__wsa5__ProblemAction2s soap_wsa5__ProblemActionType2s


#define soap_out__wsa5__ProblemAction soap_out_wsa5__ProblemActionType


#define soap_s2_wsa5__ProblemAction soap_s2wsa5__ProblemActionType


#define soap_in__wsa5__ProblemAction soap_in_wsa5__ProblemActionType


#define soap_instantiate__wsa5__ProblemAction soap_instantiate_wsa5__ProblemActionType


#define soap_new__wsa5__ProblemAction soap_new_wsa5__ProblemActionType


#define soap_new_req__wsa5__ProblemAction soap_new_req_wsa5__ProblemActionType


#define soap_new_set__wsa5__ProblemAction soap_new_set_wsa5__ProblemActionType


#define soap_put__wsa5__ProblemAction soap_put_wsa5__ProblemActionType


#define soap_write__wsa5__ProblemAction soap_write_wsa5__ProblemActionType


#define soap_get__wsa5__ProblemAction soap_get_wsa5__ProblemActionType


#define soap_read__wsa5__ProblemAction soap_read_wsa5__ProblemActionType

/* _wsa5__FaultTo is a typedef synonym for wsa5__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa5__FaultTo
#define SOAP_TYPE__wsa5__FaultTo (35)
#endif

#define soap_default__wsa5__FaultTo(soap, a) soap_default_wsa5__EndpointReferenceType(soap, a)


#define soap_serialize__wsa5__FaultTo soap_serialize_wsa5__EndpointReferenceType


#define soap__wsa5__FaultTo2s soap_wsa5__EndpointReferenceType2s


#define soap_out__wsa5__FaultTo soap_out_wsa5__EndpointReferenceType


#define soap_s2_wsa5__FaultTo soap_s2wsa5__EndpointReferenceType


#define soap_in__wsa5__FaultTo soap_in_wsa5__EndpointReferenceType


#define soap_instantiate__wsa5__FaultTo soap_instantiate_wsa5__EndpointReferenceType


#define soap_new__wsa5__FaultTo soap_new_wsa5__EndpointReferenceType


#define soap_new_req__wsa5__FaultTo soap_new_req_wsa5__EndpointReferenceType


#define soap_new_set__wsa5__FaultTo soap_new_set_wsa5__EndpointReferenceType


#define soap_put__wsa5__FaultTo soap_put_wsa5__EndpointReferenceType


#define soap_write__wsa5__FaultTo soap_write_wsa5__EndpointReferenceType


#define soap_get__wsa5__FaultTo soap_get_wsa5__EndpointReferenceType


#define soap_read__wsa5__FaultTo soap_read_wsa5__EndpointReferenceType

/* _wsa5__From is a typedef synonym for wsa5__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa5__From
#define SOAP_TYPE__wsa5__From (34)
#endif

#define soap_default__wsa5__From(soap, a) soap_default_wsa5__EndpointReferenceType(soap, a)


#define soap_serialize__wsa5__From soap_serialize_wsa5__EndpointReferenceType


#define soap__wsa5__From2s soap_wsa5__EndpointReferenceType2s


#define soap_out__wsa5__From soap_out_wsa5__EndpointReferenceType


#define soap_s2_wsa5__From soap_s2wsa5__EndpointReferenceType


#define soap_in__wsa5__From soap_in_wsa5__EndpointReferenceType


#define soap_instantiate__wsa5__From soap_instantiate_wsa5__EndpointReferenceType


#define soap_new__wsa5__From soap_new_wsa5__EndpointReferenceType


#define soap_new_req__wsa5__From soap_new_req_wsa5__EndpointReferenceType


#define soap_new_set__wsa5__From soap_new_set_wsa5__EndpointReferenceType


#define soap_put__wsa5__From soap_put_wsa5__EndpointReferenceType


#define soap_write__wsa5__From soap_write_wsa5__EndpointReferenceType


#define soap_get__wsa5__From soap_get_wsa5__EndpointReferenceType


#define soap_read__wsa5__From soap_read_wsa5__EndpointReferenceType

/* _wsa5__ReplyTo is a typedef synonym for wsa5__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa5__ReplyTo
#define SOAP_TYPE__wsa5__ReplyTo (33)
#endif

#define soap_default__wsa5__ReplyTo(soap, a) soap_default_wsa5__EndpointReferenceType(soap, a)


#define soap_serialize__wsa5__ReplyTo soap_serialize_wsa5__EndpointReferenceType


#define soap__wsa5__ReplyTo2s soap_wsa5__EndpointReferenceType2s


#define soap_out__wsa5__ReplyTo soap_out_wsa5__EndpointReferenceType


#define soap_s2_wsa5__ReplyTo soap_s2wsa5__EndpointReferenceType


#define soap_in__wsa5__ReplyTo soap_in_wsa5__EndpointReferenceType


#define soap_instantiate__wsa5__ReplyTo soap_instantiate_wsa5__EndpointReferenceType


#define soap_new__wsa5__ReplyTo soap_new_wsa5__EndpointReferenceType


#define soap_new_req__wsa5__ReplyTo soap_new_req_wsa5__EndpointReferenceType


#define soap_new_set__wsa5__ReplyTo soap_new_set_wsa5__EndpointReferenceType


#define soap_put__wsa5__ReplyTo soap_put_wsa5__EndpointReferenceType


#define soap_write__wsa5__ReplyTo soap_write_wsa5__EndpointReferenceType


#define soap_get__wsa5__ReplyTo soap_get_wsa5__EndpointReferenceType


#define soap_read__wsa5__ReplyTo soap_read_wsa5__EndpointReferenceType

/* _wsa5__RelatesTo is a typedef synonym for wsa5__RelatesToType */

#ifndef SOAP_TYPE__wsa5__RelatesTo
#define SOAP_TYPE__wsa5__RelatesTo (32)
#endif

#define soap_default__wsa5__RelatesTo(soap, a) soap_default_wsa5__RelatesToType(soap, a)


#define soap_serialize__wsa5__RelatesTo soap_serialize_wsa5__RelatesToType


#define soap__wsa5__RelatesTo2s soap_wsa5__RelatesToType2s


#define soap_out__wsa5__RelatesTo soap_out_wsa5__RelatesToType


#define soap_s2_wsa5__RelatesTo soap_s2wsa5__RelatesToType


#define soap_in__wsa5__RelatesTo soap_in_wsa5__RelatesToType


#define soap_instantiate__wsa5__RelatesTo soap_instantiate_wsa5__RelatesToType


#define soap_new__wsa5__RelatesTo soap_new_wsa5__RelatesToType


#define soap_new_req__wsa5__RelatesTo soap_new_req_wsa5__RelatesToType


#define soap_new_set__wsa5__RelatesTo soap_new_set_wsa5__RelatesToType


#define soap_put__wsa5__RelatesTo soap_put_wsa5__RelatesToType


#define soap_write__wsa5__RelatesTo soap_write_wsa5__RelatesToType


#define soap_get__wsa5__RelatesTo soap_get_wsa5__RelatesToType


#define soap_read__wsa5__RelatesTo soap_read_wsa5__RelatesToType

/* _wsa5__Metadata is a typedef synonym for wsa5__MetadataType */

#ifndef SOAP_TYPE__wsa5__Metadata
#define SOAP_TYPE__wsa5__Metadata (30)
#endif

#define soap_default__wsa5__Metadata(soap, a) soap_default_wsa5__MetadataType(soap, a)


#define soap_serialize__wsa5__Metadata soap_serialize_wsa5__MetadataType


#define soap__wsa5__Metadata2s soap_wsa5__MetadataType2s


#define soap_out__wsa5__Metadata soap_out_wsa5__MetadataType


#define soap_s2_wsa5__Metadata soap_s2wsa5__MetadataType


#define soap_in__wsa5__Metadata soap_in_wsa5__MetadataType


#define soap_instantiate__wsa5__Metadata soap_instantiate_wsa5__MetadataType


#define soap_new__wsa5__Metadata soap_new_wsa5__MetadataType


#define soap_new_req__wsa5__Metadata soap_new_req_wsa5__MetadataType


#define soap_new_set__wsa5__Metadata soap_new_set_wsa5__MetadataType


#define soap_put__wsa5__Metadata soap_put_wsa5__MetadataType


#define soap_write__wsa5__Metadata soap_write_wsa5__MetadataType


#define soap_get__wsa5__Metadata soap_get_wsa5__MetadataType


#define soap_read__wsa5__Metadata soap_read_wsa5__MetadataType

/* _wsa5__ReferenceParameters is a typedef synonym for wsa5__ReferenceParametersType */

#ifndef SOAP_TYPE__wsa5__ReferenceParameters
#define SOAP_TYPE__wsa5__ReferenceParameters (29)
#endif

#define soap_default__wsa5__ReferenceParameters(soap, a) soap_default_wsa5__ReferenceParametersType(soap, a)


#define soap_serialize__wsa5__ReferenceParameters soap_serialize_wsa5__ReferenceParametersType


#define soap__wsa5__ReferenceParameters2s soap_wsa5__ReferenceParametersType2s


#define soap_out__wsa5__ReferenceParameters soap_out_wsa5__ReferenceParametersType


#define soap_s2_wsa5__ReferenceParameters soap_s2wsa5__ReferenceParametersType


#define soap_in__wsa5__ReferenceParameters soap_in_wsa5__ReferenceParametersType


#define soap_instantiate__wsa5__ReferenceParameters soap_instantiate_wsa5__ReferenceParametersType


#define soap_new__wsa5__ReferenceParameters soap_new_wsa5__ReferenceParametersType


#define soap_new_req__wsa5__ReferenceParameters soap_new_req_wsa5__ReferenceParametersType


#define soap_new_set__wsa5__ReferenceParameters soap_new_set_wsa5__ReferenceParametersType


#define soap_put__wsa5__ReferenceParameters soap_put_wsa5__ReferenceParametersType


#define soap_write__wsa5__ReferenceParameters soap_write_wsa5__ReferenceParametersType


#define soap_get__wsa5__ReferenceParameters soap_get_wsa5__ReferenceParametersType


#define soap_read__wsa5__ReferenceParameters soap_read_wsa5__ReferenceParametersType

/* _wsa5__EndpointReference is a typedef synonym for wsa5__EndpointReferenceType */

#ifndef SOAP_TYPE__wsa5__EndpointReference
#define SOAP_TYPE__wsa5__EndpointReference (28)
#endif

#define soap_default__wsa5__EndpointReference(soap, a) soap_default_wsa5__EndpointReferenceType(soap, a)


#define soap_serialize__wsa5__EndpointReference soap_serialize_wsa5__EndpointReferenceType


#define soap__wsa5__EndpointReference2s soap_wsa5__EndpointReferenceType2s


#define soap_out__wsa5__EndpointReference soap_out_wsa5__EndpointReferenceType


#define soap_s2_wsa5__EndpointReference soap_s2wsa5__EndpointReferenceType


#define soap_in__wsa5__EndpointReference soap_in_wsa5__EndpointReferenceType


#define soap_instantiate__wsa5__EndpointReference soap_instantiate_wsa5__EndpointReferenceType


#define soap_new__wsa5__EndpointReference soap_new_wsa5__EndpointReferenceType


#define soap_new_req__wsa5__EndpointReference soap_new_req_wsa5__EndpointReferenceType


#define soap_new_set__wsa5__EndpointReference soap_new_set_wsa5__EndpointReferenceType


#define soap_put__wsa5__EndpointReference soap_put_wsa5__EndpointReferenceType


#define soap_write__wsa5__EndpointReference soap_write_wsa5__EndpointReferenceType


#define soap_get__wsa5__EndpointReference soap_get_wsa5__EndpointReferenceType


#define soap_read__wsa5__EndpointReference soap_read_wsa5__EndpointReferenceType


#ifndef SOAP_TYPE_wsa5__ProblemActionType
#define SOAP_TYPE_wsa5__ProblemActionType (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__ProblemActionType(struct soap*, struct wsa5__ProblemActionType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__ProblemActionType(struct soap*, const struct wsa5__ProblemActionType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__ProblemActionType(struct soap*, const char*, int, const struct wsa5__ProblemActionType *, const char*);
SOAP_FMAC3 struct wsa5__ProblemActionType * SOAP_FMAC4 soap_in_wsa5__ProblemActionType(struct soap*, const char*, struct wsa5__ProblemActionType *, const char*);
SOAP_FMAC1 struct wsa5__ProblemActionType * SOAP_FMAC2 soap_instantiate_wsa5__ProblemActionType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsa5__ProblemActionType * soap_new_wsa5__ProblemActionType(struct soap *soap, int n = -1) { return soap_instantiate_wsa5__ProblemActionType(soap, n, NULL, NULL, NULL); }

inline struct wsa5__ProblemActionType * soap_new_req_wsa5__ProblemActionType(
	struct soap *soap)
{	struct wsa5__ProblemActionType *_p = soap_new_wsa5__ProblemActionType(soap);
	if (_p)
	{	soap_default_wsa5__ProblemActionType(soap, _p);
	}
	return _p;
}

inline struct wsa5__ProblemActionType * soap_new_set_wsa5__ProblemActionType(
	struct soap *soap,
	char *Action,
	char *SoapAction,
	char *__anyAttribute)
{	struct wsa5__ProblemActionType *_p = soap_new_wsa5__ProblemActionType(soap);
	if (_p)
	{	soap_default_wsa5__ProblemActionType(soap, _p);
		_p->Action = Action;
		_p->SoapAction = SoapAction;
		_p->__anyAttribute = __anyAttribute;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__ProblemActionType(struct soap*, const struct wsa5__ProblemActionType *, const char*, const char*);

#ifndef soap_write_wsa5__ProblemActionType
#define soap_write_wsa5__ProblemActionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__ProblemActionType(soap, data), 0) || soap_put_wsa5__ProblemActionType(soap, data, "wsa5:ProblemActionType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__ProblemActionType * SOAP_FMAC4 soap_get_wsa5__ProblemActionType(struct soap*, struct wsa5__ProblemActionType *, const char*, const char*);

#ifndef soap_read_wsa5__ProblemActionType
#define soap_read_wsa5__ProblemActionType(soap, data) ( ((data) ? (soap_default_wsa5__ProblemActionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsa5__ProblemActionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsa5__RelatesToType
#define SOAP_TYPE_wsa5__RelatesToType (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__RelatesToType(struct soap*, struct wsa5__RelatesToType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__RelatesToType(struct soap*, const struct wsa5__RelatesToType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__RelatesToType(struct soap*, const char*, int, const struct wsa5__RelatesToType *, const char*);
SOAP_FMAC3 struct wsa5__RelatesToType * SOAP_FMAC4 soap_in_wsa5__RelatesToType(struct soap*, const char*, struct wsa5__RelatesToType *, const char*);
SOAP_FMAC1 struct wsa5__RelatesToType * SOAP_FMAC2 soap_instantiate_wsa5__RelatesToType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsa5__RelatesToType * soap_new_wsa5__RelatesToType(struct soap *soap, int n = -1) { return soap_instantiate_wsa5__RelatesToType(soap, n, NULL, NULL, NULL); }

inline struct wsa5__RelatesToType * soap_new_req_wsa5__RelatesToType(
	struct soap *soap)
{	struct wsa5__RelatesToType *_p = soap_new_wsa5__RelatesToType(soap);
	if (_p)
	{	soap_default_wsa5__RelatesToType(soap, _p);
	}
	return _p;
}

inline struct wsa5__RelatesToType * soap_new_set_wsa5__RelatesToType(
	struct soap *soap,
	char *__item,
	char *RelationshipType,
	char *__anyAttribute)
{	struct wsa5__RelatesToType *_p = soap_new_wsa5__RelatesToType(soap);
	if (_p)
	{	soap_default_wsa5__RelatesToType(soap, _p);
		_p->__item = __item;
		_p->RelationshipType = RelationshipType;
		_p->__anyAttribute = __anyAttribute;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__RelatesToType(struct soap*, const struct wsa5__RelatesToType *, const char*, const char*);

#ifndef soap_write_wsa5__RelatesToType
#define soap_write_wsa5__RelatesToType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__RelatesToType(soap, data), 0) || soap_put_wsa5__RelatesToType(soap, data, "wsa5:RelatesToType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__RelatesToType * SOAP_FMAC4 soap_get_wsa5__RelatesToType(struct soap*, struct wsa5__RelatesToType *, const char*, const char*);

#ifndef soap_read_wsa5__RelatesToType
#define soap_read_wsa5__RelatesToType(soap, data) ( ((data) ? (soap_default_wsa5__RelatesToType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsa5__RelatesToType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsa5__MetadataType
#define SOAP_TYPE_wsa5__MetadataType (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__MetadataType(struct soap*, struct wsa5__MetadataType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__MetadataType(struct soap*, const struct wsa5__MetadataType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__MetadataType(struct soap*, const char*, int, const struct wsa5__MetadataType *, const char*);
SOAP_FMAC3 struct wsa5__MetadataType * SOAP_FMAC4 soap_in_wsa5__MetadataType(struct soap*, const char*, struct wsa5__MetadataType *, const char*);
SOAP_FMAC1 struct wsa5__MetadataType * SOAP_FMAC2 soap_instantiate_wsa5__MetadataType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsa5__MetadataType * soap_new_wsa5__MetadataType(struct soap *soap, int n = -1) { return soap_instantiate_wsa5__MetadataType(soap, n, NULL, NULL, NULL); }

inline struct wsa5__MetadataType * soap_new_req_wsa5__MetadataType(
	struct soap *soap,
	int __size,
	char **__any)
{	struct wsa5__MetadataType *_p = soap_new_wsa5__MetadataType(soap);
	if (_p)
	{	soap_default_wsa5__MetadataType(soap, _p);
		_p->__size = __size;
		_p->__any = __any;
	}
	return _p;
}

inline struct wsa5__MetadataType * soap_new_set_wsa5__MetadataType(
	struct soap *soap,
	int __size,
	char **__any,
	char *__anyAttribute)
{	struct wsa5__MetadataType *_p = soap_new_wsa5__MetadataType(soap);
	if (_p)
	{	soap_default_wsa5__MetadataType(soap, _p);
		_p->__size = __size;
		_p->__any = __any;
		_p->__anyAttribute = __anyAttribute;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__MetadataType(struct soap*, const struct wsa5__MetadataType *, const char*, const char*);

#ifndef soap_write_wsa5__MetadataType
#define soap_write_wsa5__MetadataType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__MetadataType(soap, data), 0) || soap_put_wsa5__MetadataType(soap, data, "wsa5:MetadataType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__MetadataType * SOAP_FMAC4 soap_get_wsa5__MetadataType(struct soap*, struct wsa5__MetadataType *, const char*, const char*);

#ifndef soap_read_wsa5__MetadataType
#define soap_read_wsa5__MetadataType(soap, data) ( ((data) ? (soap_default_wsa5__MetadataType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsa5__MetadataType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsa5__ReferenceParametersType
#define SOAP_TYPE_wsa5__ReferenceParametersType (16)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__ReferenceParametersType(struct soap*, const struct wsa5__ReferenceParametersType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__ReferenceParametersType(struct soap*, const char*, int, const struct wsa5__ReferenceParametersType *, const char*);
SOAP_FMAC3 struct wsa5__ReferenceParametersType * SOAP_FMAC4 soap_in_wsa5__ReferenceParametersType(struct soap*, const char*, struct wsa5__ReferenceParametersType *, const char*);
SOAP_FMAC1 struct wsa5__ReferenceParametersType * SOAP_FMAC2 soap_instantiate_wsa5__ReferenceParametersType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsa5__ReferenceParametersType * soap_new_wsa5__ReferenceParametersType(struct soap *soap, int n = -1) { return soap_instantiate_wsa5__ReferenceParametersType(soap, n, NULL, NULL, NULL); }

inline struct wsa5__ReferenceParametersType * soap_new_req_wsa5__ReferenceParametersType(
	struct soap *soap,
	int __size,
	char **__any)
{	struct wsa5__ReferenceParametersType *_p = soap_new_wsa5__ReferenceParametersType(soap);
	if (_p)
	{	soap_default_wsa5__ReferenceParametersType(soap, _p);
		_p->__size = __size;
		_p->__any = __any;
	}
	return _p;
}

inline struct wsa5__ReferenceParametersType * soap_new_set_wsa5__ReferenceParametersType(
	struct soap *soap,
	int *chan__ChannelInstance,
	int __size,
	char **__any,
	char *__anyAttribute)
{	struct wsa5__ReferenceParametersType *_p = soap_new_wsa5__ReferenceParametersType(soap);
	if (_p)
	{	soap_default_wsa5__ReferenceParametersType(soap, _p);
		_p->chan__ChannelInstance = chan__ChannelInstance;
		_p->__size = __size;
		_p->__any = __any;
		_p->__anyAttribute = __anyAttribute;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__ReferenceParametersType(struct soap*, const struct wsa5__ReferenceParametersType *, const char*, const char*);

#ifndef soap_write_wsa5__ReferenceParametersType
#define soap_write_wsa5__ReferenceParametersType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__ReferenceParametersType(soap, data), 0) || soap_put_wsa5__ReferenceParametersType(soap, data, "wsa5:ReferenceParametersType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__ReferenceParametersType * SOAP_FMAC4 soap_get_wsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType *, const char*, const char*);

#ifndef soap_read_wsa5__ReferenceParametersType
#define soap_read_wsa5__ReferenceParametersType(soap, data) ( ((data) ? (soap_default_wsa5__ReferenceParametersType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsa5__ReferenceParametersType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsa5__EndpointReferenceType
#define SOAP_TYPE_wsa5__EndpointReferenceType (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_wsa5__EndpointReferenceType(struct soap*, struct wsa5__EndpointReferenceType *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__EndpointReferenceType(struct soap*, const struct wsa5__EndpointReferenceType *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__EndpointReferenceType(struct soap*, const char*, int, const struct wsa5__EndpointReferenceType *, const char*);
SOAP_FMAC3 struct wsa5__EndpointReferenceType * SOAP_FMAC4 soap_in_wsa5__EndpointReferenceType(struct soap*, const char*, struct wsa5__EndpointReferenceType *, const char*);
SOAP_FMAC1 struct wsa5__EndpointReferenceType * SOAP_FMAC2 soap_instantiate_wsa5__EndpointReferenceType(struct soap*, int, const char*, const char*, size_t*);

inline struct wsa5__EndpointReferenceType * soap_new_wsa5__EndpointReferenceType(struct soap *soap, int n = -1) { return soap_instantiate_wsa5__EndpointReferenceType(soap, n, NULL, NULL, NULL); }

inline struct wsa5__EndpointReferenceType * soap_new_req_wsa5__EndpointReferenceType(
	struct soap *soap,
	char *Address,
	int __size,
	char **__any)
{	struct wsa5__EndpointReferenceType *_p = soap_new_wsa5__EndpointReferenceType(soap);
	if (_p)
	{	soap_default_wsa5__EndpointReferenceType(soap, _p);
		_p->Address = Address;
		_p->__size = __size;
		_p->__any = __any;
	}
	return _p;
}

inline struct wsa5__EndpointReferenceType * soap_new_set_wsa5__EndpointReferenceType(
	struct soap *soap,
	char *Address,
	struct wsa5__ReferenceParametersType *ReferenceParameters,
	struct wsa5__MetadataType *Metadata,
	int __size,
	char **__any,
	char *__anyAttribute)
{	struct wsa5__EndpointReferenceType *_p = soap_new_wsa5__EndpointReferenceType(soap);
	if (_p)
	{	soap_default_wsa5__EndpointReferenceType(soap, _p);
		_p->Address = Address;
		_p->ReferenceParameters = ReferenceParameters;
		_p->Metadata = Metadata;
		_p->__size = __size;
		_p->__any = __any;
		_p->__anyAttribute = __anyAttribute;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__EndpointReferenceType(struct soap*, const struct wsa5__EndpointReferenceType *, const char*, const char*);

#ifndef soap_write_wsa5__EndpointReferenceType
#define soap_write_wsa5__EndpointReferenceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__EndpointReferenceType(soap, data), 0) || soap_put_wsa5__EndpointReferenceType(soap, data, "wsa5:EndpointReferenceType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__EndpointReferenceType * SOAP_FMAC4 soap_get_wsa5__EndpointReferenceType(struct soap*, struct wsa5__EndpointReferenceType *, const char*, const char*);

#ifndef soap_read_wsa5__EndpointReferenceType
#define soap_read_wsa5__EndpointReferenceType(soap, data) ( ((data) ? (soap_default_wsa5__EndpointReferenceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsa5__EndpointReferenceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__xop__Include
#define SOAP_TYPE__xop__Include (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__xop__Include(struct soap*, struct _xop__Include *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__xop__Include(struct soap*, const struct _xop__Include *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__xop__Include(struct soap*, const char*, int, const struct _xop__Include *, const char*);
SOAP_FMAC3 struct _xop__Include * SOAP_FMAC4 soap_in__xop__Include(struct soap*, const char*, struct _xop__Include *, const char*);
SOAP_FMAC1 struct _xop__Include * SOAP_FMAC2 soap_instantiate__xop__Include(struct soap*, int, const char*, const char*, size_t*);

inline struct _xop__Include * soap_new__xop__Include(struct soap *soap, int n = -1) { return soap_instantiate__xop__Include(soap, n, NULL, NULL, NULL); }

inline struct _xop__Include * soap_new_req__xop__Include(
	struct soap *soap)
{	struct _xop__Include *_p = soap_new__xop__Include(soap);
	if (_p)
	{	soap_default__xop__Include(soap, _p);
	}
	return _p;
}

inline struct _xop__Include * soap_new_set__xop__Include(
	struct soap *soap,
	unsigned char *__ptr,
	int __size,
	char *id,
	char *type,
	char *options)
{	struct _xop__Include *_p = soap_new__xop__Include(soap);
	if (_p)
	{	soap_default__xop__Include(soap, _p);
		_p->__ptr = __ptr;
		_p->__size = __size;
		_p->id = id;
		_p->type = type;
		_p->options = options;
	}
	return _p;
}
SOAP_FMAC3 int SOAP_FMAC4 soap_put__xop__Include(struct soap*, const struct _xop__Include *, const char*, const char*);

#ifndef soap_write__xop__Include
#define soap_write__xop__Include(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__xop__Include(soap, data), 0) || soap_put__xop__Include(soap, data, "xop:Include", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _xop__Include * SOAP_FMAC4 soap_get__xop__Include(struct soap*, struct _xop__Include *, const char*, const char*);

#ifndef soap_read__xop__Include
#define soap_read__xop__Include(soap, data) ( ((data) ? (soap_default__xop__Include(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__xop__Include(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__tt__union_ColorOptions
#define SOAP_TYPE__tt__union_ColorOptions (1492)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tt__union_ColorOptions(struct soap*, int, const union _tt__union_ColorOptions *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__union_ColorOptions(struct soap*, int, const union _tt__union_ColorOptions *);
SOAP_FMAC3 union _tt__union_ColorOptions * SOAP_FMAC4 soap_in__tt__union_ColorOptions(struct soap*, int*, union _tt__union_ColorOptions *);

#ifndef SOAP_TYPE__tt__union_PTZPresetTourPresetDetail
#define SOAP_TYPE__tt__union_PTZPresetTourPresetDetail (1291)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tt__union_PTZPresetTourPresetDetail(struct soap*, int, const union _tt__union_PTZPresetTourPresetDetail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tt__union_PTZPresetTourPresetDetail(struct soap*, int, const union _tt__union_PTZPresetTourPresetDetail *);
SOAP_FMAC3 union _tt__union_PTZPresetTourPresetDetail * SOAP_FMAC4 soap_in__tt__union_PTZPresetTourPresetDetail(struct soap*, int*, union _tt__union_PTZPresetTourPresetDetail *);

#ifndef SOAP_TYPE__tmd__union_SerialData
#define SOAP_TYPE__tmd__union_SerialData (977)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__tmd__union_SerialData(struct soap*, int, const union _tmd__union_SerialData *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__tmd__union_SerialData(struct soap*, int, const union _tmd__union_SerialData *);
SOAP_FMAC3 union _tmd__union_SerialData * SOAP_FMAC4 soap_in__tmd__union_SerialData(struct soap*, int*, union _tmd__union_SerialData *);

#ifndef SOAP_TYPE_PointerTo_tmd__SendReceiveSerialCommand
#define SOAP_TYPE_PointerTo_tmd__SendReceiveSerialCommand (2085)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tmd__SendReceiveSerialCommand(struct soap*, _tmd__SendReceiveSerialCommand *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tmd__SendReceiveSerialCommand(struct soap*, const char *, int, _tmd__SendReceiveSerialCommand *const*, const char *);
SOAP_FMAC3 _tmd__SendReceiveSerialCommand ** SOAP_FMAC4 soap_in_PointerTo_tmd__SendReceiveSerialCommand(struct soap*, const char*, _tmd__SendReceiveSerialCommand **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tmd__SendReceiveSerialCommand(struct soap*, _tmd__SendReceiveSerialCommand *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tmd__SendReceiveSerialCommand
#define soap_write_PointerTo_tmd__SendReceiveSerialCommand(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tmd__SendReceiveSerialCommand(soap, data), 0) || soap_put_PointerTo_tmd__SendReceiveSerialCommand(soap, data, "tmd:SendReceiveSerialCommand", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__SendReceiveSerialCommand ** SOAP_FMAC4 soap_get_PointerTo_tmd__SendReceiveSerialCommand(struct soap*, _tmd__SendReceiveSerialCommand **, const char*, const char*);

#ifndef soap_read_PointerTo_tmd__SendReceiveSerialCommand
#define soap_read_PointerTo_tmd__SendReceiveSerialCommand(soap, data) ( ((data) ? (soap_default_PointerTo_tmd__SendReceiveSerialCommand(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tmd__SendReceiveSerialCommand(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tmd__GetSerialPortConfigurationOptions
#define SOAP_TYPE_PointerTo_tmd__GetSerialPortConfigurationOptions (2081)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tmd__GetSerialPortConfigurationOptions(struct soap*, _tmd__GetSerialPortConfigurationOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tmd__GetSerialPortConfigurationOptions(struct soap*, const char *, int, _tmd__GetSerialPortConfigurationOptions *const*, const char *);
SOAP_FMAC3 _tmd__GetSerialPortConfigurationOptions ** SOAP_FMAC4 soap_in_PointerTo_tmd__GetSerialPortConfigurationOptions(struct soap*, const char*, _tmd__GetSerialPortConfigurationOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tmd__GetSerialPortConfigurationOptions(struct soap*, _tmd__GetSerialPortConfigurationOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tmd__GetSerialPortConfigurationOptions
#define soap_write_PointerTo_tmd__GetSerialPortConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tmd__GetSerialPortConfigurationOptions(soap, data), 0) || soap_put_PointerTo_tmd__GetSerialPortConfigurationOptions(soap, data, "tmd:GetSerialPortConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetSerialPortConfigurationOptions ** SOAP_FMAC4 soap_get_PointerTo_tmd__GetSerialPortConfigurationOptions(struct soap*, _tmd__GetSerialPortConfigurationOptions **, const char*, const char*);

#ifndef soap_read_PointerTo_tmd__GetSerialPortConfigurationOptions
#define soap_read_PointerTo_tmd__GetSerialPortConfigurationOptions(soap, data) ( ((data) ? (soap_default_PointerTo_tmd__GetSerialPortConfigurationOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tmd__GetSerialPortConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tmd__SetSerialPortConfiguration
#define SOAP_TYPE_PointerTo_tmd__SetSerialPortConfiguration (2077)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tmd__SetSerialPortConfiguration(struct soap*, _tmd__SetSerialPortConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tmd__SetSerialPortConfiguration(struct soap*, const char *, int, _tmd__SetSerialPortConfiguration *const*, const char *);
SOAP_FMAC3 _tmd__SetSerialPortConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tmd__SetSerialPortConfiguration(struct soap*, const char*, _tmd__SetSerialPortConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tmd__SetSerialPortConfiguration(struct soap*, _tmd__SetSerialPortConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tmd__SetSerialPortConfiguration
#define soap_write_PointerTo_tmd__SetSerialPortConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tmd__SetSerialPortConfiguration(soap, data), 0) || soap_put_PointerTo_tmd__SetSerialPortConfiguration(soap, data, "tmd:SetSerialPortConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__SetSerialPortConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tmd__SetSerialPortConfiguration(struct soap*, _tmd__SetSerialPortConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tmd__SetSerialPortConfiguration
#define soap_read_PointerTo_tmd__SetSerialPortConfiguration(soap, data) ( ((data) ? (soap_default_PointerTo_tmd__SetSerialPortConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tmd__SetSerialPortConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tmd__GetSerialPortConfiguration
#define SOAP_TYPE_PointerTo_tmd__GetSerialPortConfiguration (2073)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tmd__GetSerialPortConfiguration(struct soap*, _tmd__GetSerialPortConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tmd__GetSerialPortConfiguration(struct soap*, const char *, int, _tmd__GetSerialPortConfiguration *const*, const char *);
SOAP_FMAC3 _tmd__GetSerialPortConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tmd__GetSerialPortConfiguration(struct soap*, const char*, _tmd__GetSerialPortConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tmd__GetSerialPortConfiguration(struct soap*, _tmd__GetSerialPortConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tmd__GetSerialPortConfiguration
#define soap_write_PointerTo_tmd__GetSerialPortConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tmd__GetSerialPortConfiguration(soap, data), 0) || soap_put_PointerTo_tmd__GetSerialPortConfiguration(soap, data, "tmd:GetSerialPortConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetSerialPortConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tmd__GetSerialPortConfiguration(struct soap*, _tmd__GetSerialPortConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tmd__GetSerialPortConfiguration
#define soap_read_PointerTo_tmd__GetSerialPortConfiguration(soap, data) ( ((data) ? (soap_default_PointerTo_tmd__GetSerialPortConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tmd__GetSerialPortConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tmd__GetSerialPorts
#define SOAP_TYPE_PointerTo_tmd__GetSerialPorts (2069)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tmd__GetSerialPorts(struct soap*, _tmd__GetSerialPorts *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tmd__GetSerialPorts(struct soap*, const char *, int, _tmd__GetSerialPorts *const*, const char *);
SOAP_FMAC3 _tmd__GetSerialPorts ** SOAP_FMAC4 soap_in_PointerTo_tmd__GetSerialPorts(struct soap*, const char*, _tmd__GetSerialPorts **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tmd__GetSerialPorts(struct soap*, _tmd__GetSerialPorts *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tmd__GetSerialPorts
#define soap_write_PointerTo_tmd__GetSerialPorts(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tmd__GetSerialPorts(soap, data), 0) || soap_put_PointerTo_tmd__GetSerialPorts(soap, data, "tmd:GetSerialPorts", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetSerialPorts ** SOAP_FMAC4 soap_get_PointerTo_tmd__GetSerialPorts(struct soap*, _tmd__GetSerialPorts **, const char*, const char*);

#ifndef soap_read_PointerTo_tmd__GetSerialPorts
#define soap_read_PointerTo_tmd__GetSerialPorts(soap, data) ( ((data) ? (soap_default_PointerTo_tmd__GetSerialPorts(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tmd__GetSerialPorts(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tmd__SetDigitalInputConfigurations
#define SOAP_TYPE_PointerTo_tmd__SetDigitalInputConfigurations (2065)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tmd__SetDigitalInputConfigurations(struct soap*, _tmd__SetDigitalInputConfigurations *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tmd__SetDigitalInputConfigurations(struct soap*, const char *, int, _tmd__SetDigitalInputConfigurations *const*, const char *);
SOAP_FMAC3 _tmd__SetDigitalInputConfigurations ** SOAP_FMAC4 soap_in_PointerTo_tmd__SetDigitalInputConfigurations(struct soap*, const char*, _tmd__SetDigitalInputConfigurations **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tmd__SetDigitalInputConfigurations(struct soap*, _tmd__SetDigitalInputConfigurations *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tmd__SetDigitalInputConfigurations
#define soap_write_PointerTo_tmd__SetDigitalInputConfigurations(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tmd__SetDigitalInputConfigurations(soap, data), 0) || soap_put_PointerTo_tmd__SetDigitalInputConfigurations(soap, data, "tmd:SetDigitalInputConfigurations", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__SetDigitalInputConfigurations ** SOAP_FMAC4 soap_get_PointerTo_tmd__SetDigitalInputConfigurations(struct soap*, _tmd__SetDigitalInputConfigurations **, const char*, const char*);

#ifndef soap_read_PointerTo_tmd__SetDigitalInputConfigurations
#define soap_read_PointerTo_tmd__SetDigitalInputConfigurations(soap, data) ( ((data) ? (soap_default_PointerTo_tmd__SetDigitalInputConfigurations(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tmd__SetDigitalInputConfigurations(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tmd__GetDigitalInputConfigurationOptions
#define SOAP_TYPE_PointerTo_tmd__GetDigitalInputConfigurationOptions (2061)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tmd__GetDigitalInputConfigurationOptions(struct soap*, _tmd__GetDigitalInputConfigurationOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tmd__GetDigitalInputConfigurationOptions(struct soap*, const char *, int, _tmd__GetDigitalInputConfigurationOptions *const*, const char *);
SOAP_FMAC3 _tmd__GetDigitalInputConfigurationOptions ** SOAP_FMAC4 soap_in_PointerTo_tmd__GetDigitalInputConfigurationOptions(struct soap*, const char*, _tmd__GetDigitalInputConfigurationOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tmd__GetDigitalInputConfigurationOptions(struct soap*, _tmd__GetDigitalInputConfigurationOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tmd__GetDigitalInputConfigurationOptions
#define soap_write_PointerTo_tmd__GetDigitalInputConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tmd__GetDigitalInputConfigurationOptions(soap, data), 0) || soap_put_PointerTo_tmd__GetDigitalInputConfigurationOptions(soap, data, "tmd:GetDigitalInputConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetDigitalInputConfigurationOptions ** SOAP_FMAC4 soap_get_PointerTo_tmd__GetDigitalInputConfigurationOptions(struct soap*, _tmd__GetDigitalInputConfigurationOptions **, const char*, const char*);

#ifndef soap_read_PointerTo_tmd__GetDigitalInputConfigurationOptions
#define soap_read_PointerTo_tmd__GetDigitalInputConfigurationOptions(soap, data) ( ((data) ? (soap_default_PointerTo_tmd__GetDigitalInputConfigurationOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tmd__GetDigitalInputConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tmd__GetDigitalInputs
#define SOAP_TYPE_PointerTo_tmd__GetDigitalInputs (2057)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tmd__GetDigitalInputs(struct soap*, _tmd__GetDigitalInputs *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tmd__GetDigitalInputs(struct soap*, const char *, int, _tmd__GetDigitalInputs *const*, const char *);
SOAP_FMAC3 _tmd__GetDigitalInputs ** SOAP_FMAC4 soap_in_PointerTo_tmd__GetDigitalInputs(struct soap*, const char*, _tmd__GetDigitalInputs **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tmd__GetDigitalInputs(struct soap*, _tmd__GetDigitalInputs *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tmd__GetDigitalInputs
#define soap_write_PointerTo_tmd__GetDigitalInputs(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tmd__GetDigitalInputs(soap, data), 0) || soap_put_PointerTo_tmd__GetDigitalInputs(soap, data, "tmd:GetDigitalInputs", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetDigitalInputs ** SOAP_FMAC4 soap_get_PointerTo_tmd__GetDigitalInputs(struct soap*, _tmd__GetDigitalInputs **, const char*, const char*);

#ifndef soap_read_PointerTo_tmd__GetDigitalInputs
#define soap_read_PointerTo_tmd__GetDigitalInputs(soap, data) ( ((data) ? (soap_default_PointerTo_tmd__GetDigitalInputs(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tmd__GetDigitalInputs(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tmd__SetRelayOutputSettings
#define SOAP_TYPE_PointerTo_tmd__SetRelayOutputSettings (2051)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tmd__SetRelayOutputSettings(struct soap*, _tmd__SetRelayOutputSettings *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tmd__SetRelayOutputSettings(struct soap*, const char *, int, _tmd__SetRelayOutputSettings *const*, const char *);
SOAP_FMAC3 _tmd__SetRelayOutputSettings ** SOAP_FMAC4 soap_in_PointerTo_tmd__SetRelayOutputSettings(struct soap*, const char*, _tmd__SetRelayOutputSettings **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tmd__SetRelayOutputSettings(struct soap*, _tmd__SetRelayOutputSettings *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tmd__SetRelayOutputSettings
#define soap_write_PointerTo_tmd__SetRelayOutputSettings(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tmd__SetRelayOutputSettings(soap, data), 0) || soap_put_PointerTo_tmd__SetRelayOutputSettings(soap, data, "tmd:SetRelayOutputSettings", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__SetRelayOutputSettings ** SOAP_FMAC4 soap_get_PointerTo_tmd__SetRelayOutputSettings(struct soap*, _tmd__SetRelayOutputSettings **, const char*, const char*);

#ifndef soap_read_PointerTo_tmd__SetRelayOutputSettings
#define soap_read_PointerTo_tmd__SetRelayOutputSettings(soap, data) ( ((data) ? (soap_default_PointerTo_tmd__SetRelayOutputSettings(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tmd__SetRelayOutputSettings(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tmd__GetAudioOutputConfigurationOptions
#define SOAP_TYPE_PointerTo_tmd__GetAudioOutputConfigurationOptions (2045)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tmd__GetAudioOutputConfigurationOptions(struct soap*, _tmd__GetAudioOutputConfigurationOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tmd__GetAudioOutputConfigurationOptions(struct soap*, const char *, int, _tmd__GetAudioOutputConfigurationOptions *const*, const char *);
SOAP_FMAC3 _tmd__GetAudioOutputConfigurationOptions ** SOAP_FMAC4 soap_in_PointerTo_tmd__GetAudioOutputConfigurationOptions(struct soap*, const char*, _tmd__GetAudioOutputConfigurationOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tmd__GetAudioOutputConfigurationOptions(struct soap*, _tmd__GetAudioOutputConfigurationOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tmd__GetAudioOutputConfigurationOptions
#define soap_write_PointerTo_tmd__GetAudioOutputConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tmd__GetAudioOutputConfigurationOptions(soap, data), 0) || soap_put_PointerTo_tmd__GetAudioOutputConfigurationOptions(soap, data, "tmd:GetAudioOutputConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetAudioOutputConfigurationOptions ** SOAP_FMAC4 soap_get_PointerTo_tmd__GetAudioOutputConfigurationOptions(struct soap*, _tmd__GetAudioOutputConfigurationOptions **, const char*, const char*);

#ifndef soap_read_PointerTo_tmd__GetAudioOutputConfigurationOptions
#define soap_read_PointerTo_tmd__GetAudioOutputConfigurationOptions(soap, data) ( ((data) ? (soap_default_PointerTo_tmd__GetAudioOutputConfigurationOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tmd__GetAudioOutputConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tmd__GetAudioSourceConfigurationOptions
#define SOAP_TYPE_PointerTo_tmd__GetAudioSourceConfigurationOptions (2041)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tmd__GetAudioSourceConfigurationOptions(struct soap*, _tmd__GetAudioSourceConfigurationOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tmd__GetAudioSourceConfigurationOptions(struct soap*, const char *, int, _tmd__GetAudioSourceConfigurationOptions *const*, const char *);
SOAP_FMAC3 _tmd__GetAudioSourceConfigurationOptions ** SOAP_FMAC4 soap_in_PointerTo_tmd__GetAudioSourceConfigurationOptions(struct soap*, const char*, _tmd__GetAudioSourceConfigurationOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tmd__GetAudioSourceConfigurationOptions(struct soap*, _tmd__GetAudioSourceConfigurationOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tmd__GetAudioSourceConfigurationOptions
#define soap_write_PointerTo_tmd__GetAudioSourceConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tmd__GetAudioSourceConfigurationOptions(soap, data), 0) || soap_put_PointerTo_tmd__GetAudioSourceConfigurationOptions(soap, data, "tmd:GetAudioSourceConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetAudioSourceConfigurationOptions ** SOAP_FMAC4 soap_get_PointerTo_tmd__GetAudioSourceConfigurationOptions(struct soap*, _tmd__GetAudioSourceConfigurationOptions **, const char*, const char*);

#ifndef soap_read_PointerTo_tmd__GetAudioSourceConfigurationOptions
#define soap_read_PointerTo_tmd__GetAudioSourceConfigurationOptions(soap, data) ( ((data) ? (soap_default_PointerTo_tmd__GetAudioSourceConfigurationOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tmd__GetAudioSourceConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tmd__GetVideoOutputConfigurationOptions
#define SOAP_TYPE_PointerTo_tmd__GetVideoOutputConfigurationOptions (2037)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tmd__GetVideoOutputConfigurationOptions(struct soap*, _tmd__GetVideoOutputConfigurationOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tmd__GetVideoOutputConfigurationOptions(struct soap*, const char *, int, _tmd__GetVideoOutputConfigurationOptions *const*, const char *);
SOAP_FMAC3 _tmd__GetVideoOutputConfigurationOptions ** SOAP_FMAC4 soap_in_PointerTo_tmd__GetVideoOutputConfigurationOptions(struct soap*, const char*, _tmd__GetVideoOutputConfigurationOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tmd__GetVideoOutputConfigurationOptions(struct soap*, _tmd__GetVideoOutputConfigurationOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tmd__GetVideoOutputConfigurationOptions
#define soap_write_PointerTo_tmd__GetVideoOutputConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tmd__GetVideoOutputConfigurationOptions(soap, data), 0) || soap_put_PointerTo_tmd__GetVideoOutputConfigurationOptions(soap, data, "tmd:GetVideoOutputConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetVideoOutputConfigurationOptions ** SOAP_FMAC4 soap_get_PointerTo_tmd__GetVideoOutputConfigurationOptions(struct soap*, _tmd__GetVideoOutputConfigurationOptions **, const char*, const char*);

#ifndef soap_read_PointerTo_tmd__GetVideoOutputConfigurationOptions
#define soap_read_PointerTo_tmd__GetVideoOutputConfigurationOptions(soap, data) ( ((data) ? (soap_default_PointerTo_tmd__GetVideoOutputConfigurationOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tmd__GetVideoOutputConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tmd__GetVideoSourceConfigurationOptions
#define SOAP_TYPE_PointerTo_tmd__GetVideoSourceConfigurationOptions (2033)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tmd__GetVideoSourceConfigurationOptions(struct soap*, _tmd__GetVideoSourceConfigurationOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tmd__GetVideoSourceConfigurationOptions(struct soap*, const char *, int, _tmd__GetVideoSourceConfigurationOptions *const*, const char *);
SOAP_FMAC3 _tmd__GetVideoSourceConfigurationOptions ** SOAP_FMAC4 soap_in_PointerTo_tmd__GetVideoSourceConfigurationOptions(struct soap*, const char*, _tmd__GetVideoSourceConfigurationOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tmd__GetVideoSourceConfigurationOptions(struct soap*, _tmd__GetVideoSourceConfigurationOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tmd__GetVideoSourceConfigurationOptions
#define soap_write_PointerTo_tmd__GetVideoSourceConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tmd__GetVideoSourceConfigurationOptions(soap, data), 0) || soap_put_PointerTo_tmd__GetVideoSourceConfigurationOptions(soap, data, "tmd:GetVideoSourceConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetVideoSourceConfigurationOptions ** SOAP_FMAC4 soap_get_PointerTo_tmd__GetVideoSourceConfigurationOptions(struct soap*, _tmd__GetVideoSourceConfigurationOptions **, const char*, const char*);

#ifndef soap_read_PointerTo_tmd__GetVideoSourceConfigurationOptions
#define soap_read_PointerTo_tmd__GetVideoSourceConfigurationOptions(soap, data) ( ((data) ? (soap_default_PointerTo_tmd__GetVideoSourceConfigurationOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tmd__GetVideoSourceConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tmd__SetAudioOutputConfiguration
#define SOAP_TYPE_PointerTo_tmd__SetAudioOutputConfiguration (2029)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tmd__SetAudioOutputConfiguration(struct soap*, _tmd__SetAudioOutputConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tmd__SetAudioOutputConfiguration(struct soap*, const char *, int, _tmd__SetAudioOutputConfiguration *const*, const char *);
SOAP_FMAC3 _tmd__SetAudioOutputConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tmd__SetAudioOutputConfiguration(struct soap*, const char*, _tmd__SetAudioOutputConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tmd__SetAudioOutputConfiguration(struct soap*, _tmd__SetAudioOutputConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tmd__SetAudioOutputConfiguration
#define soap_write_PointerTo_tmd__SetAudioOutputConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tmd__SetAudioOutputConfiguration(soap, data), 0) || soap_put_PointerTo_tmd__SetAudioOutputConfiguration(soap, data, "tmd:SetAudioOutputConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__SetAudioOutputConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tmd__SetAudioOutputConfiguration(struct soap*, _tmd__SetAudioOutputConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tmd__SetAudioOutputConfiguration
#define soap_read_PointerTo_tmd__SetAudioOutputConfiguration(soap, data) ( ((data) ? (soap_default_PointerTo_tmd__SetAudioOutputConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tmd__SetAudioOutputConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tmd__SetAudioSourceConfiguration
#define SOAP_TYPE_PointerTo_tmd__SetAudioSourceConfiguration (2025)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tmd__SetAudioSourceConfiguration(struct soap*, _tmd__SetAudioSourceConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tmd__SetAudioSourceConfiguration(struct soap*, const char *, int, _tmd__SetAudioSourceConfiguration *const*, const char *);
SOAP_FMAC3 _tmd__SetAudioSourceConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tmd__SetAudioSourceConfiguration(struct soap*, const char*, _tmd__SetAudioSourceConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tmd__SetAudioSourceConfiguration(struct soap*, _tmd__SetAudioSourceConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tmd__SetAudioSourceConfiguration
#define soap_write_PointerTo_tmd__SetAudioSourceConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tmd__SetAudioSourceConfiguration(soap, data), 0) || soap_put_PointerTo_tmd__SetAudioSourceConfiguration(soap, data, "tmd:SetAudioSourceConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__SetAudioSourceConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tmd__SetAudioSourceConfiguration(struct soap*, _tmd__SetAudioSourceConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tmd__SetAudioSourceConfiguration
#define soap_read_PointerTo_tmd__SetAudioSourceConfiguration(soap, data) ( ((data) ? (soap_default_PointerTo_tmd__SetAudioSourceConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tmd__SetAudioSourceConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tmd__SetVideoOutputConfiguration
#define SOAP_TYPE_PointerTo_tmd__SetVideoOutputConfiguration (2021)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tmd__SetVideoOutputConfiguration(struct soap*, _tmd__SetVideoOutputConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tmd__SetVideoOutputConfiguration(struct soap*, const char *, int, _tmd__SetVideoOutputConfiguration *const*, const char *);
SOAP_FMAC3 _tmd__SetVideoOutputConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tmd__SetVideoOutputConfiguration(struct soap*, const char*, _tmd__SetVideoOutputConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tmd__SetVideoOutputConfiguration(struct soap*, _tmd__SetVideoOutputConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tmd__SetVideoOutputConfiguration
#define soap_write_PointerTo_tmd__SetVideoOutputConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tmd__SetVideoOutputConfiguration(soap, data), 0) || soap_put_PointerTo_tmd__SetVideoOutputConfiguration(soap, data, "tmd:SetVideoOutputConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__SetVideoOutputConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tmd__SetVideoOutputConfiguration(struct soap*, _tmd__SetVideoOutputConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tmd__SetVideoOutputConfiguration
#define soap_read_PointerTo_tmd__SetVideoOutputConfiguration(soap, data) ( ((data) ? (soap_default_PointerTo_tmd__SetVideoOutputConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tmd__SetVideoOutputConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tmd__SetVideoSourceConfiguration
#define SOAP_TYPE_PointerTo_tmd__SetVideoSourceConfiguration (2017)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tmd__SetVideoSourceConfiguration(struct soap*, _tmd__SetVideoSourceConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tmd__SetVideoSourceConfiguration(struct soap*, const char *, int, _tmd__SetVideoSourceConfiguration *const*, const char *);
SOAP_FMAC3 _tmd__SetVideoSourceConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tmd__SetVideoSourceConfiguration(struct soap*, const char*, _tmd__SetVideoSourceConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tmd__SetVideoSourceConfiguration(struct soap*, _tmd__SetVideoSourceConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tmd__SetVideoSourceConfiguration
#define soap_write_PointerTo_tmd__SetVideoSourceConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tmd__SetVideoSourceConfiguration(soap, data), 0) || soap_put_PointerTo_tmd__SetVideoSourceConfiguration(soap, data, "tmd:SetVideoSourceConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__SetVideoSourceConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tmd__SetVideoSourceConfiguration(struct soap*, _tmd__SetVideoSourceConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tmd__SetVideoSourceConfiguration
#define soap_read_PointerTo_tmd__SetVideoSourceConfiguration(soap, data) ( ((data) ? (soap_default_PointerTo_tmd__SetVideoSourceConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tmd__SetVideoSourceConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tmd__GetAudioOutputConfiguration
#define SOAP_TYPE_PointerTo_tmd__GetAudioOutputConfiguration (2013)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tmd__GetAudioOutputConfiguration(struct soap*, _tmd__GetAudioOutputConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tmd__GetAudioOutputConfiguration(struct soap*, const char *, int, _tmd__GetAudioOutputConfiguration *const*, const char *);
SOAP_FMAC3 _tmd__GetAudioOutputConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tmd__GetAudioOutputConfiguration(struct soap*, const char*, _tmd__GetAudioOutputConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tmd__GetAudioOutputConfiguration(struct soap*, _tmd__GetAudioOutputConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tmd__GetAudioOutputConfiguration
#define soap_write_PointerTo_tmd__GetAudioOutputConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tmd__GetAudioOutputConfiguration(soap, data), 0) || soap_put_PointerTo_tmd__GetAudioOutputConfiguration(soap, data, "tmd:GetAudioOutputConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetAudioOutputConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tmd__GetAudioOutputConfiguration(struct soap*, _tmd__GetAudioOutputConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tmd__GetAudioOutputConfiguration
#define soap_read_PointerTo_tmd__GetAudioOutputConfiguration(soap, data) ( ((data) ? (soap_default_PointerTo_tmd__GetAudioOutputConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tmd__GetAudioOutputConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tmd__GetAudioSourceConfiguration
#define SOAP_TYPE_PointerTo_tmd__GetAudioSourceConfiguration (2009)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tmd__GetAudioSourceConfiguration(struct soap*, _tmd__GetAudioSourceConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tmd__GetAudioSourceConfiguration(struct soap*, const char *, int, _tmd__GetAudioSourceConfiguration *const*, const char *);
SOAP_FMAC3 _tmd__GetAudioSourceConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tmd__GetAudioSourceConfiguration(struct soap*, const char*, _tmd__GetAudioSourceConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tmd__GetAudioSourceConfiguration(struct soap*, _tmd__GetAudioSourceConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tmd__GetAudioSourceConfiguration
#define soap_write_PointerTo_tmd__GetAudioSourceConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tmd__GetAudioSourceConfiguration(soap, data), 0) || soap_put_PointerTo_tmd__GetAudioSourceConfiguration(soap, data, "tmd:GetAudioSourceConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetAudioSourceConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tmd__GetAudioSourceConfiguration(struct soap*, _tmd__GetAudioSourceConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tmd__GetAudioSourceConfiguration
#define soap_read_PointerTo_tmd__GetAudioSourceConfiguration(soap, data) ( ((data) ? (soap_default_PointerTo_tmd__GetAudioSourceConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tmd__GetAudioSourceConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tmd__GetVideoOutputConfiguration
#define SOAP_TYPE_PointerTo_tmd__GetVideoOutputConfiguration (2005)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tmd__GetVideoOutputConfiguration(struct soap*, _tmd__GetVideoOutputConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tmd__GetVideoOutputConfiguration(struct soap*, const char *, int, _tmd__GetVideoOutputConfiguration *const*, const char *);
SOAP_FMAC3 _tmd__GetVideoOutputConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tmd__GetVideoOutputConfiguration(struct soap*, const char*, _tmd__GetVideoOutputConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tmd__GetVideoOutputConfiguration(struct soap*, _tmd__GetVideoOutputConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tmd__GetVideoOutputConfiguration
#define soap_write_PointerTo_tmd__GetVideoOutputConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tmd__GetVideoOutputConfiguration(soap, data), 0) || soap_put_PointerTo_tmd__GetVideoOutputConfiguration(soap, data, "tmd:GetVideoOutputConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetVideoOutputConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tmd__GetVideoOutputConfiguration(struct soap*, _tmd__GetVideoOutputConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tmd__GetVideoOutputConfiguration
#define soap_read_PointerTo_tmd__GetVideoOutputConfiguration(soap, data) ( ((data) ? (soap_default_PointerTo_tmd__GetVideoOutputConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tmd__GetVideoOutputConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tmd__GetVideoSourceConfiguration
#define SOAP_TYPE_PointerTo_tmd__GetVideoSourceConfiguration (2001)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tmd__GetVideoSourceConfiguration(struct soap*, _tmd__GetVideoSourceConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tmd__GetVideoSourceConfiguration(struct soap*, const char *, int, _tmd__GetVideoSourceConfiguration *const*, const char *);
SOAP_FMAC3 _tmd__GetVideoSourceConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tmd__GetVideoSourceConfiguration(struct soap*, const char*, _tmd__GetVideoSourceConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tmd__GetVideoSourceConfiguration(struct soap*, _tmd__GetVideoSourceConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tmd__GetVideoSourceConfiguration
#define soap_write_PointerTo_tmd__GetVideoSourceConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tmd__GetVideoSourceConfiguration(soap, data), 0) || soap_put_PointerTo_tmd__GetVideoSourceConfiguration(soap, data, "tmd:GetVideoSourceConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetVideoSourceConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tmd__GetVideoSourceConfiguration(struct soap*, _tmd__GetVideoSourceConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tmd__GetVideoSourceConfiguration
#define soap_read_PointerTo_tmd__GetVideoSourceConfiguration(soap, data) ( ((data) ? (soap_default_PointerTo_tmd__GetVideoSourceConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tmd__GetVideoSourceConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tmd__GetVideoOutputs
#define SOAP_TYPE_PointerTo_tmd__GetVideoOutputs (1997)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tmd__GetVideoOutputs(struct soap*, _tmd__GetVideoOutputs *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tmd__GetVideoOutputs(struct soap*, const char *, int, _tmd__GetVideoOutputs *const*, const char *);
SOAP_FMAC3 _tmd__GetVideoOutputs ** SOAP_FMAC4 soap_in_PointerTo_tmd__GetVideoOutputs(struct soap*, const char*, _tmd__GetVideoOutputs **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tmd__GetVideoOutputs(struct soap*, _tmd__GetVideoOutputs *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tmd__GetVideoOutputs
#define soap_write_PointerTo_tmd__GetVideoOutputs(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tmd__GetVideoOutputs(soap, data), 0) || soap_put_PointerTo_tmd__GetVideoOutputs(soap, data, "tmd:GetVideoOutputs", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetVideoOutputs ** SOAP_FMAC4 soap_get_PointerTo_tmd__GetVideoOutputs(struct soap*, _tmd__GetVideoOutputs **, const char*, const char*);

#ifndef soap_read_PointerTo_tmd__GetVideoOutputs
#define soap_read_PointerTo_tmd__GetVideoOutputs(soap, data) ( ((data) ? (soap_default_PointerTo_tmd__GetVideoOutputs(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tmd__GetVideoOutputs(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotmd__Get
#define SOAP_TYPE_PointerTotmd__Get (1989)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotmd__Get(struct soap*, tmd__Get *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotmd__Get(struct soap*, const char *, int, tmd__Get *const*, const char *);
SOAP_FMAC3 tmd__Get ** SOAP_FMAC4 soap_in_PointerTotmd__Get(struct soap*, const char*, tmd__Get **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotmd__Get(struct soap*, tmd__Get *const*, const char*, const char*);

#ifndef soap_write_PointerTotmd__Get
#define soap_write_PointerTotmd__Get(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotmd__Get(soap, data), 0) || soap_put_PointerTotmd__Get(soap, data, "tmd:Get", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tmd__Get ** SOAP_FMAC4 soap_get_PointerTotmd__Get(struct soap*, tmd__Get **, const char*, const char*);

#ifndef soap_read_PointerTotmd__Get
#define soap_read_PointerTotmd__Get(soap, data) ( ((data) ? (soap_default_PointerTotmd__Get(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTotmd__Get(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tmd__GetRelayOutputOptions
#define SOAP_TYPE_PointerTo_tmd__GetRelayOutputOptions (1985)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tmd__GetRelayOutputOptions(struct soap*, _tmd__GetRelayOutputOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tmd__GetRelayOutputOptions(struct soap*, const char *, int, _tmd__GetRelayOutputOptions *const*, const char *);
SOAP_FMAC3 _tmd__GetRelayOutputOptions ** SOAP_FMAC4 soap_in_PointerTo_tmd__GetRelayOutputOptions(struct soap*, const char*, _tmd__GetRelayOutputOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tmd__GetRelayOutputOptions(struct soap*, _tmd__GetRelayOutputOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tmd__GetRelayOutputOptions
#define soap_write_PointerTo_tmd__GetRelayOutputOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tmd__GetRelayOutputOptions(soap, data), 0) || soap_put_PointerTo_tmd__GetRelayOutputOptions(soap, data, "tmd:GetRelayOutputOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetRelayOutputOptions ** SOAP_FMAC4 soap_get_PointerTo_tmd__GetRelayOutputOptions(struct soap*, _tmd__GetRelayOutputOptions **, const char*, const char*);

#ifndef soap_read_PointerTo_tmd__GetRelayOutputOptions
#define soap_read_PointerTo_tmd__GetRelayOutputOptions(soap, data) ( ((data) ? (soap_default_PointerTo_tmd__GetRelayOutputOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tmd__GetRelayOutputOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tmd__GetServiceCapabilities
#define SOAP_TYPE_PointerTo_tmd__GetServiceCapabilities (1981)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tmd__GetServiceCapabilities(struct soap*, _tmd__GetServiceCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tmd__GetServiceCapabilities(struct soap*, const char *, int, _tmd__GetServiceCapabilities *const*, const char *);
SOAP_FMAC3 _tmd__GetServiceCapabilities ** SOAP_FMAC4 soap_in_PointerTo_tmd__GetServiceCapabilities(struct soap*, const char*, _tmd__GetServiceCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tmd__GetServiceCapabilities(struct soap*, _tmd__GetServiceCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tmd__GetServiceCapabilities
#define soap_write_PointerTo_tmd__GetServiceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tmd__GetServiceCapabilities(soap, data), 0) || soap_put_PointerTo_tmd__GetServiceCapabilities(soap, data, "tmd:GetServiceCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tmd__GetServiceCapabilities ** SOAP_FMAC4 soap_get_PointerTo_tmd__GetServiceCapabilities(struct soap*, _tmd__GetServiceCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTo_tmd__GetServiceCapabilities
#define soap_read_PointerTo_tmd__GetServiceCapabilities(soap, data) ( ((data) ? (soap_default_PointerTo_tmd__GetServiceCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tmd__GetServiceCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tls__DeletePaneConfiguration
#define SOAP_TYPE_PointerTo_tls__DeletePaneConfiguration (1977)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tls__DeletePaneConfiguration(struct soap*, _tls__DeletePaneConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tls__DeletePaneConfiguration(struct soap*, const char *, int, _tls__DeletePaneConfiguration *const*, const char *);
SOAP_FMAC3 _tls__DeletePaneConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tls__DeletePaneConfiguration(struct soap*, const char*, _tls__DeletePaneConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tls__DeletePaneConfiguration(struct soap*, _tls__DeletePaneConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tls__DeletePaneConfiguration
#define soap_write_PointerTo_tls__DeletePaneConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tls__DeletePaneConfiguration(soap, data), 0) || soap_put_PointerTo_tls__DeletePaneConfiguration(soap, data, "tls:DeletePaneConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__DeletePaneConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tls__DeletePaneConfiguration(struct soap*, _tls__DeletePaneConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tls__DeletePaneConfiguration
#define soap_read_PointerTo_tls__DeletePaneConfiguration(soap, data) ( ((data) ? (soap_default_PointerTo_tls__DeletePaneConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tls__DeletePaneConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tls__CreatePaneConfiguration
#define SOAP_TYPE_PointerTo_tls__CreatePaneConfiguration (1973)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tls__CreatePaneConfiguration(struct soap*, _tls__CreatePaneConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tls__CreatePaneConfiguration(struct soap*, const char *, int, _tls__CreatePaneConfiguration *const*, const char *);
SOAP_FMAC3 _tls__CreatePaneConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tls__CreatePaneConfiguration(struct soap*, const char*, _tls__CreatePaneConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tls__CreatePaneConfiguration(struct soap*, _tls__CreatePaneConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tls__CreatePaneConfiguration
#define soap_write_PointerTo_tls__CreatePaneConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tls__CreatePaneConfiguration(soap, data), 0) || soap_put_PointerTo_tls__CreatePaneConfiguration(soap, data, "tls:CreatePaneConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__CreatePaneConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tls__CreatePaneConfiguration(struct soap*, _tls__CreatePaneConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tls__CreatePaneConfiguration
#define soap_read_PointerTo_tls__CreatePaneConfiguration(soap, data) ( ((data) ? (soap_default_PointerTo_tls__CreatePaneConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tls__CreatePaneConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tls__SetPaneConfiguration
#define SOAP_TYPE_PointerTo_tls__SetPaneConfiguration (1969)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tls__SetPaneConfiguration(struct soap*, _tls__SetPaneConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tls__SetPaneConfiguration(struct soap*, const char *, int, _tls__SetPaneConfiguration *const*, const char *);
SOAP_FMAC3 _tls__SetPaneConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tls__SetPaneConfiguration(struct soap*, const char*, _tls__SetPaneConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tls__SetPaneConfiguration(struct soap*, _tls__SetPaneConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tls__SetPaneConfiguration
#define soap_write_PointerTo_tls__SetPaneConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tls__SetPaneConfiguration(soap, data), 0) || soap_put_PointerTo_tls__SetPaneConfiguration(soap, data, "tls:SetPaneConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__SetPaneConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tls__SetPaneConfiguration(struct soap*, _tls__SetPaneConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tls__SetPaneConfiguration
#define soap_read_PointerTo_tls__SetPaneConfiguration(soap, data) ( ((data) ? (soap_default_PointerTo_tls__SetPaneConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tls__SetPaneConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tls__SetPaneConfigurations
#define SOAP_TYPE_PointerTo_tls__SetPaneConfigurations (1965)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tls__SetPaneConfigurations(struct soap*, _tls__SetPaneConfigurations *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tls__SetPaneConfigurations(struct soap*, const char *, int, _tls__SetPaneConfigurations *const*, const char *);
SOAP_FMAC3 _tls__SetPaneConfigurations ** SOAP_FMAC4 soap_in_PointerTo_tls__SetPaneConfigurations(struct soap*, const char*, _tls__SetPaneConfigurations **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tls__SetPaneConfigurations(struct soap*, _tls__SetPaneConfigurations *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tls__SetPaneConfigurations
#define soap_write_PointerTo_tls__SetPaneConfigurations(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tls__SetPaneConfigurations(soap, data), 0) || soap_put_PointerTo_tls__SetPaneConfigurations(soap, data, "tls:SetPaneConfigurations", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__SetPaneConfigurations ** SOAP_FMAC4 soap_get_PointerTo_tls__SetPaneConfigurations(struct soap*, _tls__SetPaneConfigurations **, const char*, const char*);

#ifndef soap_read_PointerTo_tls__SetPaneConfigurations
#define soap_read_PointerTo_tls__SetPaneConfigurations(soap, data) ( ((data) ? (soap_default_PointerTo_tls__SetPaneConfigurations(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tls__SetPaneConfigurations(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tls__GetPaneConfiguration
#define SOAP_TYPE_PointerTo_tls__GetPaneConfiguration (1961)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tls__GetPaneConfiguration(struct soap*, _tls__GetPaneConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tls__GetPaneConfiguration(struct soap*, const char *, int, _tls__GetPaneConfiguration *const*, const char *);
SOAP_FMAC3 _tls__GetPaneConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tls__GetPaneConfiguration(struct soap*, const char*, _tls__GetPaneConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tls__GetPaneConfiguration(struct soap*, _tls__GetPaneConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tls__GetPaneConfiguration
#define soap_write_PointerTo_tls__GetPaneConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tls__GetPaneConfiguration(soap, data), 0) || soap_put_PointerTo_tls__GetPaneConfiguration(soap, data, "tls:GetPaneConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__GetPaneConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tls__GetPaneConfiguration(struct soap*, _tls__GetPaneConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tls__GetPaneConfiguration
#define soap_read_PointerTo_tls__GetPaneConfiguration(soap, data) ( ((data) ? (soap_default_PointerTo_tls__GetPaneConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tls__GetPaneConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tls__GetPaneConfigurations
#define SOAP_TYPE_PointerTo_tls__GetPaneConfigurations (1957)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tls__GetPaneConfigurations(struct soap*, _tls__GetPaneConfigurations *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tls__GetPaneConfigurations(struct soap*, const char *, int, _tls__GetPaneConfigurations *const*, const char *);
SOAP_FMAC3 _tls__GetPaneConfigurations ** SOAP_FMAC4 soap_in_PointerTo_tls__GetPaneConfigurations(struct soap*, const char*, _tls__GetPaneConfigurations **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tls__GetPaneConfigurations(struct soap*, _tls__GetPaneConfigurations *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tls__GetPaneConfigurations
#define soap_write_PointerTo_tls__GetPaneConfigurations(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tls__GetPaneConfigurations(soap, data), 0) || soap_put_PointerTo_tls__GetPaneConfigurations(soap, data, "tls:GetPaneConfigurations", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__GetPaneConfigurations ** SOAP_FMAC4 soap_get_PointerTo_tls__GetPaneConfigurations(struct soap*, _tls__GetPaneConfigurations **, const char*, const char*);

#ifndef soap_read_PointerTo_tls__GetPaneConfigurations
#define soap_read_PointerTo_tls__GetPaneConfigurations(soap, data) ( ((data) ? (soap_default_PointerTo_tls__GetPaneConfigurations(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tls__GetPaneConfigurations(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tls__GetDisplayOptions
#define SOAP_TYPE_PointerTo_tls__GetDisplayOptions (1953)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tls__GetDisplayOptions(struct soap*, _tls__GetDisplayOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tls__GetDisplayOptions(struct soap*, const char *, int, _tls__GetDisplayOptions *const*, const char *);
SOAP_FMAC3 _tls__GetDisplayOptions ** SOAP_FMAC4 soap_in_PointerTo_tls__GetDisplayOptions(struct soap*, const char*, _tls__GetDisplayOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tls__GetDisplayOptions(struct soap*, _tls__GetDisplayOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tls__GetDisplayOptions
#define soap_write_PointerTo_tls__GetDisplayOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tls__GetDisplayOptions(soap, data), 0) || soap_put_PointerTo_tls__GetDisplayOptions(soap, data, "tls:GetDisplayOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__GetDisplayOptions ** SOAP_FMAC4 soap_get_PointerTo_tls__GetDisplayOptions(struct soap*, _tls__GetDisplayOptions **, const char*, const char*);

#ifndef soap_read_PointerTo_tls__GetDisplayOptions
#define soap_read_PointerTo_tls__GetDisplayOptions(soap, data) ( ((data) ? (soap_default_PointerTo_tls__GetDisplayOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tls__GetDisplayOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tls__SetLayout
#define SOAP_TYPE_PointerTo_tls__SetLayout (1949)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tls__SetLayout(struct soap*, _tls__SetLayout *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tls__SetLayout(struct soap*, const char *, int, _tls__SetLayout *const*, const char *);
SOAP_FMAC3 _tls__SetLayout ** SOAP_FMAC4 soap_in_PointerTo_tls__SetLayout(struct soap*, const char*, _tls__SetLayout **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tls__SetLayout(struct soap*, _tls__SetLayout *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tls__SetLayout
#define soap_write_PointerTo_tls__SetLayout(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tls__SetLayout(soap, data), 0) || soap_put_PointerTo_tls__SetLayout(soap, data, "tls:SetLayout", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__SetLayout ** SOAP_FMAC4 soap_get_PointerTo_tls__SetLayout(struct soap*, _tls__SetLayout **, const char*, const char*);

#ifndef soap_read_PointerTo_tls__SetLayout
#define soap_read_PointerTo_tls__SetLayout(soap, data) ( ((data) ? (soap_default_PointerTo_tls__SetLayout(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tls__SetLayout(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tls__GetLayout
#define SOAP_TYPE_PointerTo_tls__GetLayout (1945)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tls__GetLayout(struct soap*, _tls__GetLayout *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tls__GetLayout(struct soap*, const char *, int, _tls__GetLayout *const*, const char *);
SOAP_FMAC3 _tls__GetLayout ** SOAP_FMAC4 soap_in_PointerTo_tls__GetLayout(struct soap*, const char*, _tls__GetLayout **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tls__GetLayout(struct soap*, _tls__GetLayout *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tls__GetLayout
#define soap_write_PointerTo_tls__GetLayout(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tls__GetLayout(soap, data), 0) || soap_put_PointerTo_tls__GetLayout(soap, data, "tls:GetLayout", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__GetLayout ** SOAP_FMAC4 soap_get_PointerTo_tls__GetLayout(struct soap*, _tls__GetLayout **, const char*, const char*);

#ifndef soap_read_PointerTo_tls__GetLayout
#define soap_read_PointerTo_tls__GetLayout(soap, data) ( ((data) ? (soap_default_PointerTo_tls__GetLayout(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tls__GetLayout(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tls__GetServiceCapabilities
#define SOAP_TYPE_PointerTo_tls__GetServiceCapabilities (1941)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tls__GetServiceCapabilities(struct soap*, _tls__GetServiceCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tls__GetServiceCapabilities(struct soap*, const char *, int, _tls__GetServiceCapabilities *const*, const char *);
SOAP_FMAC3 _tls__GetServiceCapabilities ** SOAP_FMAC4 soap_in_PointerTo_tls__GetServiceCapabilities(struct soap*, const char*, _tls__GetServiceCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tls__GetServiceCapabilities(struct soap*, _tls__GetServiceCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tls__GetServiceCapabilities
#define soap_write_PointerTo_tls__GetServiceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tls__GetServiceCapabilities(soap, data), 0) || soap_put_PointerTo_tls__GetServiceCapabilities(soap, data, "tls:GetServiceCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tls__GetServiceCapabilities ** SOAP_FMAC4 soap_get_PointerTo_tls__GetServiceCapabilities(struct soap*, _tls__GetServiceCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTo_tls__GetServiceCapabilities
#define soap_read_PointerTo_tls__GetServiceCapabilities(soap, data) ( ((data) ? (soap_default_PointerTo_tls__GetServiceCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tls__GetServiceCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__DeleteGeoLocation
#define SOAP_TYPE_PointerTo_tds__DeleteGeoLocation (1937)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__DeleteGeoLocation(struct soap*, _tds__DeleteGeoLocation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__DeleteGeoLocation(struct soap*, const char *, int, _tds__DeleteGeoLocation *const*, const char *);
SOAP_FMAC3 _tds__DeleteGeoLocation ** SOAP_FMAC4 soap_in_PointerTo_tds__DeleteGeoLocation(struct soap*, const char*, _tds__DeleteGeoLocation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__DeleteGeoLocation(struct soap*, _tds__DeleteGeoLocation *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__DeleteGeoLocation
#define soap_write_PointerTo_tds__DeleteGeoLocation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__DeleteGeoLocation(soap, data), 0) || soap_put_PointerTo_tds__DeleteGeoLocation(soap, data, "tds:DeleteGeoLocation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__DeleteGeoLocation ** SOAP_FMAC4 soap_get_PointerTo_tds__DeleteGeoLocation(struct soap*, _tds__DeleteGeoLocation **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__DeleteGeoLocation
#define soap_read_PointerTo_tds__DeleteGeoLocation(soap, data) ( ((data) ? (soap_default_PointerTo_tds__DeleteGeoLocation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__DeleteGeoLocation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetGeoLocation
#define SOAP_TYPE_PointerTo_tds__SetGeoLocation (1933)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetGeoLocation(struct soap*, _tds__SetGeoLocation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetGeoLocation(struct soap*, const char *, int, _tds__SetGeoLocation *const*, const char *);
SOAP_FMAC3 _tds__SetGeoLocation ** SOAP_FMAC4 soap_in_PointerTo_tds__SetGeoLocation(struct soap*, const char*, _tds__SetGeoLocation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetGeoLocation(struct soap*, _tds__SetGeoLocation *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetGeoLocation
#define soap_write_PointerTo_tds__SetGeoLocation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetGeoLocation(soap, data), 0) || soap_put_PointerTo_tds__SetGeoLocation(soap, data, "tds:SetGeoLocation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetGeoLocation ** SOAP_FMAC4 soap_get_PointerTo_tds__SetGeoLocation(struct soap*, _tds__SetGeoLocation **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetGeoLocation
#define soap_read_PointerTo_tds__SetGeoLocation(soap, data) ( ((data) ? (soap_default_PointerTo_tds__SetGeoLocation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetGeoLocation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetGeoLocation
#define SOAP_TYPE_PointerTo_tds__GetGeoLocation (1929)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetGeoLocation(struct soap*, _tds__GetGeoLocation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetGeoLocation(struct soap*, const char *, int, _tds__GetGeoLocation *const*, const char *);
SOAP_FMAC3 _tds__GetGeoLocation ** SOAP_FMAC4 soap_in_PointerTo_tds__GetGeoLocation(struct soap*, const char*, _tds__GetGeoLocation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetGeoLocation(struct soap*, _tds__GetGeoLocation *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetGeoLocation
#define soap_write_PointerTo_tds__GetGeoLocation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetGeoLocation(soap, data), 0) || soap_put_PointerTo_tds__GetGeoLocation(soap, data, "tds:GetGeoLocation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetGeoLocation ** SOAP_FMAC4 soap_get_PointerTo_tds__GetGeoLocation(struct soap*, _tds__GetGeoLocation **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetGeoLocation
#define soap_read_PointerTo_tds__GetGeoLocation(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetGeoLocation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetGeoLocation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__DeleteStorageConfiguration
#define SOAP_TYPE_PointerTo_tds__DeleteStorageConfiguration (1925)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__DeleteStorageConfiguration(struct soap*, _tds__DeleteStorageConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__DeleteStorageConfiguration(struct soap*, const char *, int, _tds__DeleteStorageConfiguration *const*, const char *);
SOAP_FMAC3 _tds__DeleteStorageConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tds__DeleteStorageConfiguration(struct soap*, const char*, _tds__DeleteStorageConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__DeleteStorageConfiguration(struct soap*, _tds__DeleteStorageConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__DeleteStorageConfiguration
#define soap_write_PointerTo_tds__DeleteStorageConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__DeleteStorageConfiguration(soap, data), 0) || soap_put_PointerTo_tds__DeleteStorageConfiguration(soap, data, "tds:DeleteStorageConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__DeleteStorageConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tds__DeleteStorageConfiguration(struct soap*, _tds__DeleteStorageConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__DeleteStorageConfiguration
#define soap_read_PointerTo_tds__DeleteStorageConfiguration(soap, data) ( ((data) ? (soap_default_PointerTo_tds__DeleteStorageConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__DeleteStorageConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetStorageConfiguration
#define SOAP_TYPE_PointerTo_tds__SetStorageConfiguration (1921)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetStorageConfiguration(struct soap*, _tds__SetStorageConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetStorageConfiguration(struct soap*, const char *, int, _tds__SetStorageConfiguration *const*, const char *);
SOAP_FMAC3 _tds__SetStorageConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tds__SetStorageConfiguration(struct soap*, const char*, _tds__SetStorageConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetStorageConfiguration(struct soap*, _tds__SetStorageConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetStorageConfiguration
#define soap_write_PointerTo_tds__SetStorageConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetStorageConfiguration(soap, data), 0) || soap_put_PointerTo_tds__SetStorageConfiguration(soap, data, "tds:SetStorageConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetStorageConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tds__SetStorageConfiguration(struct soap*, _tds__SetStorageConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetStorageConfiguration
#define soap_read_PointerTo_tds__SetStorageConfiguration(soap, data) ( ((data) ? (soap_default_PointerTo_tds__SetStorageConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetStorageConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetStorageConfiguration
#define SOAP_TYPE_PointerTo_tds__GetStorageConfiguration (1917)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetStorageConfiguration(struct soap*, _tds__GetStorageConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetStorageConfiguration(struct soap*, const char *, int, _tds__GetStorageConfiguration *const*, const char *);
SOAP_FMAC3 _tds__GetStorageConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tds__GetStorageConfiguration(struct soap*, const char*, _tds__GetStorageConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetStorageConfiguration(struct soap*, _tds__GetStorageConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetStorageConfiguration
#define soap_write_PointerTo_tds__GetStorageConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetStorageConfiguration(soap, data), 0) || soap_put_PointerTo_tds__GetStorageConfiguration(soap, data, "tds:GetStorageConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetStorageConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tds__GetStorageConfiguration(struct soap*, _tds__GetStorageConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetStorageConfiguration
#define soap_read_PointerTo_tds__GetStorageConfiguration(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetStorageConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetStorageConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__CreateStorageConfiguration
#define SOAP_TYPE_PointerTo_tds__CreateStorageConfiguration (1913)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__CreateStorageConfiguration(struct soap*, _tds__CreateStorageConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__CreateStorageConfiguration(struct soap*, const char *, int, _tds__CreateStorageConfiguration *const*, const char *);
SOAP_FMAC3 _tds__CreateStorageConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tds__CreateStorageConfiguration(struct soap*, const char*, _tds__CreateStorageConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__CreateStorageConfiguration(struct soap*, _tds__CreateStorageConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__CreateStorageConfiguration
#define soap_write_PointerTo_tds__CreateStorageConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__CreateStorageConfiguration(soap, data), 0) || soap_put_PointerTo_tds__CreateStorageConfiguration(soap, data, "tds:CreateStorageConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__CreateStorageConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tds__CreateStorageConfiguration(struct soap*, _tds__CreateStorageConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__CreateStorageConfiguration
#define soap_read_PointerTo_tds__CreateStorageConfiguration(soap, data) ( ((data) ? (soap_default_PointerTo_tds__CreateStorageConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__CreateStorageConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetStorageConfigurations
#define SOAP_TYPE_PointerTo_tds__GetStorageConfigurations (1909)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetStorageConfigurations(struct soap*, _tds__GetStorageConfigurations *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetStorageConfigurations(struct soap*, const char *, int, _tds__GetStorageConfigurations *const*, const char *);
SOAP_FMAC3 _tds__GetStorageConfigurations ** SOAP_FMAC4 soap_in_PointerTo_tds__GetStorageConfigurations(struct soap*, const char*, _tds__GetStorageConfigurations **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetStorageConfigurations(struct soap*, _tds__GetStorageConfigurations *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetStorageConfigurations
#define soap_write_PointerTo_tds__GetStorageConfigurations(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetStorageConfigurations(soap, data), 0) || soap_put_PointerTo_tds__GetStorageConfigurations(soap, data, "tds:GetStorageConfigurations", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetStorageConfigurations ** SOAP_FMAC4 soap_get_PointerTo_tds__GetStorageConfigurations(struct soap*, _tds__GetStorageConfigurations **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetStorageConfigurations
#define soap_read_PointerTo_tds__GetStorageConfigurations(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetStorageConfigurations(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetStorageConfigurations(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__StartSystemRestore
#define SOAP_TYPE_PointerTo_tds__StartSystemRestore (1905)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__StartSystemRestore(struct soap*, _tds__StartSystemRestore *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__StartSystemRestore(struct soap*, const char *, int, _tds__StartSystemRestore *const*, const char *);
SOAP_FMAC3 _tds__StartSystemRestore ** SOAP_FMAC4 soap_in_PointerTo_tds__StartSystemRestore(struct soap*, const char*, _tds__StartSystemRestore **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__StartSystemRestore(struct soap*, _tds__StartSystemRestore *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__StartSystemRestore
#define soap_write_PointerTo_tds__StartSystemRestore(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__StartSystemRestore(soap, data), 0) || soap_put_PointerTo_tds__StartSystemRestore(soap, data, "tds:StartSystemRestore", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__StartSystemRestore ** SOAP_FMAC4 soap_get_PointerTo_tds__StartSystemRestore(struct soap*, _tds__StartSystemRestore **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__StartSystemRestore
#define soap_read_PointerTo_tds__StartSystemRestore(soap, data) ( ((data) ? (soap_default_PointerTo_tds__StartSystemRestore(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__StartSystemRestore(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__StartFirmwareUpgrade
#define SOAP_TYPE_PointerTo_tds__StartFirmwareUpgrade (1901)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__StartFirmwareUpgrade(struct soap*, _tds__StartFirmwareUpgrade *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__StartFirmwareUpgrade(struct soap*, const char *, int, _tds__StartFirmwareUpgrade *const*, const char *);
SOAP_FMAC3 _tds__StartFirmwareUpgrade ** SOAP_FMAC4 soap_in_PointerTo_tds__StartFirmwareUpgrade(struct soap*, const char*, _tds__StartFirmwareUpgrade **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__StartFirmwareUpgrade(struct soap*, _tds__StartFirmwareUpgrade *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__StartFirmwareUpgrade
#define soap_write_PointerTo_tds__StartFirmwareUpgrade(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__StartFirmwareUpgrade(soap, data), 0) || soap_put_PointerTo_tds__StartFirmwareUpgrade(soap, data, "tds:StartFirmwareUpgrade", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__StartFirmwareUpgrade ** SOAP_FMAC4 soap_get_PointerTo_tds__StartFirmwareUpgrade(struct soap*, _tds__StartFirmwareUpgrade **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__StartFirmwareUpgrade
#define soap_read_PointerTo_tds__StartFirmwareUpgrade(soap, data) ( ((data) ? (soap_default_PointerTo_tds__StartFirmwareUpgrade(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__StartFirmwareUpgrade(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetSystemUris
#define SOAP_TYPE_PointerTo_tds__GetSystemUris (1897)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetSystemUris(struct soap*, _tds__GetSystemUris *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetSystemUris(struct soap*, const char *, int, _tds__GetSystemUris *const*, const char *);
SOAP_FMAC3 _tds__GetSystemUris ** SOAP_FMAC4 soap_in_PointerTo_tds__GetSystemUris(struct soap*, const char*, _tds__GetSystemUris **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetSystemUris(struct soap*, _tds__GetSystemUris *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetSystemUris
#define soap_write_PointerTo_tds__GetSystemUris(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetSystemUris(soap, data), 0) || soap_put_PointerTo_tds__GetSystemUris(soap, data, "tds:GetSystemUris", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemUris ** SOAP_FMAC4 soap_get_PointerTo_tds__GetSystemUris(struct soap*, _tds__GetSystemUris **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetSystemUris
#define soap_read_PointerTo_tds__GetSystemUris(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetSystemUris(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetSystemUris(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__ScanAvailableDot11Networks
#define SOAP_TYPE_PointerTo_tds__ScanAvailableDot11Networks (1893)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__ScanAvailableDot11Networks(struct soap*, _tds__ScanAvailableDot11Networks *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__ScanAvailableDot11Networks(struct soap*, const char *, int, _tds__ScanAvailableDot11Networks *const*, const char *);
SOAP_FMAC3 _tds__ScanAvailableDot11Networks ** SOAP_FMAC4 soap_in_PointerTo_tds__ScanAvailableDot11Networks(struct soap*, const char*, _tds__ScanAvailableDot11Networks **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__ScanAvailableDot11Networks(struct soap*, _tds__ScanAvailableDot11Networks *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__ScanAvailableDot11Networks
#define soap_write_PointerTo_tds__ScanAvailableDot11Networks(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__ScanAvailableDot11Networks(soap, data), 0) || soap_put_PointerTo_tds__ScanAvailableDot11Networks(soap, data, "tds:ScanAvailableDot11Networks", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__ScanAvailableDot11Networks ** SOAP_FMAC4 soap_get_PointerTo_tds__ScanAvailableDot11Networks(struct soap*, _tds__ScanAvailableDot11Networks **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__ScanAvailableDot11Networks
#define soap_read_PointerTo_tds__ScanAvailableDot11Networks(soap, data) ( ((data) ? (soap_default_PointerTo_tds__ScanAvailableDot11Networks(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__ScanAvailableDot11Networks(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetDot11Status
#define SOAP_TYPE_PointerTo_tds__GetDot11Status (1889)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetDot11Status(struct soap*, _tds__GetDot11Status *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetDot11Status(struct soap*, const char *, int, _tds__GetDot11Status *const*, const char *);
SOAP_FMAC3 _tds__GetDot11Status ** SOAP_FMAC4 soap_in_PointerTo_tds__GetDot11Status(struct soap*, const char*, _tds__GetDot11Status **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetDot11Status(struct soap*, _tds__GetDot11Status *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetDot11Status
#define soap_write_PointerTo_tds__GetDot11Status(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetDot11Status(soap, data), 0) || soap_put_PointerTo_tds__GetDot11Status(soap, data, "tds:GetDot11Status", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDot11Status ** SOAP_FMAC4 soap_get_PointerTo_tds__GetDot11Status(struct soap*, _tds__GetDot11Status **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetDot11Status
#define soap_read_PointerTo_tds__GetDot11Status(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetDot11Status(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetDot11Status(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetDot11Capabilities
#define SOAP_TYPE_PointerTo_tds__GetDot11Capabilities (1885)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetDot11Capabilities(struct soap*, _tds__GetDot11Capabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetDot11Capabilities(struct soap*, const char *, int, _tds__GetDot11Capabilities *const*, const char *);
SOAP_FMAC3 _tds__GetDot11Capabilities ** SOAP_FMAC4 soap_in_PointerTo_tds__GetDot11Capabilities(struct soap*, const char*, _tds__GetDot11Capabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetDot11Capabilities(struct soap*, _tds__GetDot11Capabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetDot11Capabilities
#define soap_write_PointerTo_tds__GetDot11Capabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetDot11Capabilities(soap, data), 0) || soap_put_PointerTo_tds__GetDot11Capabilities(soap, data, "tds:GetDot11Capabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDot11Capabilities ** SOAP_FMAC4 soap_get_PointerTo_tds__GetDot11Capabilities(struct soap*, _tds__GetDot11Capabilities **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetDot11Capabilities
#define soap_read_PointerTo_tds__GetDot11Capabilities(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetDot11Capabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetDot11Capabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__DeleteDot1XConfiguration
#define SOAP_TYPE_PointerTo_tds__DeleteDot1XConfiguration (1881)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__DeleteDot1XConfiguration(struct soap*, _tds__DeleteDot1XConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__DeleteDot1XConfiguration(struct soap*, const char *, int, _tds__DeleteDot1XConfiguration *const*, const char *);
SOAP_FMAC3 _tds__DeleteDot1XConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tds__DeleteDot1XConfiguration(struct soap*, const char*, _tds__DeleteDot1XConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__DeleteDot1XConfiguration(struct soap*, _tds__DeleteDot1XConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__DeleteDot1XConfiguration
#define soap_write_PointerTo_tds__DeleteDot1XConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__DeleteDot1XConfiguration(soap, data), 0) || soap_put_PointerTo_tds__DeleteDot1XConfiguration(soap, data, "tds:DeleteDot1XConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__DeleteDot1XConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tds__DeleteDot1XConfiguration(struct soap*, _tds__DeleteDot1XConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__DeleteDot1XConfiguration
#define soap_read_PointerTo_tds__DeleteDot1XConfiguration(soap, data) ( ((data) ? (soap_default_PointerTo_tds__DeleteDot1XConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__DeleteDot1XConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetDot1XConfigurations
#define SOAP_TYPE_PointerTo_tds__GetDot1XConfigurations (1877)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetDot1XConfigurations(struct soap*, _tds__GetDot1XConfigurations *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetDot1XConfigurations(struct soap*, const char *, int, _tds__GetDot1XConfigurations *const*, const char *);
SOAP_FMAC3 _tds__GetDot1XConfigurations ** SOAP_FMAC4 soap_in_PointerTo_tds__GetDot1XConfigurations(struct soap*, const char*, _tds__GetDot1XConfigurations **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetDot1XConfigurations(struct soap*, _tds__GetDot1XConfigurations *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetDot1XConfigurations
#define soap_write_PointerTo_tds__GetDot1XConfigurations(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetDot1XConfigurations(soap, data), 0) || soap_put_PointerTo_tds__GetDot1XConfigurations(soap, data, "tds:GetDot1XConfigurations", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDot1XConfigurations ** SOAP_FMAC4 soap_get_PointerTo_tds__GetDot1XConfigurations(struct soap*, _tds__GetDot1XConfigurations **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetDot1XConfigurations
#define soap_read_PointerTo_tds__GetDot1XConfigurations(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetDot1XConfigurations(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetDot1XConfigurations(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetDot1XConfiguration
#define SOAP_TYPE_PointerTo_tds__GetDot1XConfiguration (1873)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetDot1XConfiguration(struct soap*, _tds__GetDot1XConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetDot1XConfiguration(struct soap*, const char *, int, _tds__GetDot1XConfiguration *const*, const char *);
SOAP_FMAC3 _tds__GetDot1XConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tds__GetDot1XConfiguration(struct soap*, const char*, _tds__GetDot1XConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetDot1XConfiguration(struct soap*, _tds__GetDot1XConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetDot1XConfiguration
#define soap_write_PointerTo_tds__GetDot1XConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetDot1XConfiguration(soap, data), 0) || soap_put_PointerTo_tds__GetDot1XConfiguration(soap, data, "tds:GetDot1XConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDot1XConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tds__GetDot1XConfiguration(struct soap*, _tds__GetDot1XConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetDot1XConfiguration
#define soap_read_PointerTo_tds__GetDot1XConfiguration(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetDot1XConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetDot1XConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetDot1XConfiguration
#define SOAP_TYPE_PointerTo_tds__SetDot1XConfiguration (1869)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetDot1XConfiguration(struct soap*, _tds__SetDot1XConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetDot1XConfiguration(struct soap*, const char *, int, _tds__SetDot1XConfiguration *const*, const char *);
SOAP_FMAC3 _tds__SetDot1XConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tds__SetDot1XConfiguration(struct soap*, const char*, _tds__SetDot1XConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetDot1XConfiguration(struct soap*, _tds__SetDot1XConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetDot1XConfiguration
#define soap_write_PointerTo_tds__SetDot1XConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetDot1XConfiguration(soap, data), 0) || soap_put_PointerTo_tds__SetDot1XConfiguration(soap, data, "tds:SetDot1XConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDot1XConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tds__SetDot1XConfiguration(struct soap*, _tds__SetDot1XConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetDot1XConfiguration
#define soap_read_PointerTo_tds__SetDot1XConfiguration(soap, data) ( ((data) ? (soap_default_PointerTo_tds__SetDot1XConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetDot1XConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__CreateDot1XConfiguration
#define SOAP_TYPE_PointerTo_tds__CreateDot1XConfiguration (1865)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__CreateDot1XConfiguration(struct soap*, _tds__CreateDot1XConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__CreateDot1XConfiguration(struct soap*, const char *, int, _tds__CreateDot1XConfiguration *const*, const char *);
SOAP_FMAC3 _tds__CreateDot1XConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tds__CreateDot1XConfiguration(struct soap*, const char*, _tds__CreateDot1XConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__CreateDot1XConfiguration(struct soap*, _tds__CreateDot1XConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__CreateDot1XConfiguration
#define soap_write_PointerTo_tds__CreateDot1XConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__CreateDot1XConfiguration(soap, data), 0) || soap_put_PointerTo_tds__CreateDot1XConfiguration(soap, data, "tds:CreateDot1XConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__CreateDot1XConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tds__CreateDot1XConfiguration(struct soap*, _tds__CreateDot1XConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__CreateDot1XConfiguration
#define soap_read_PointerTo_tds__CreateDot1XConfiguration(soap, data) ( ((data) ? (soap_default_PointerTo_tds__CreateDot1XConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__CreateDot1XConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__LoadCACertificates
#define SOAP_TYPE_PointerTo_tds__LoadCACertificates (1861)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__LoadCACertificates(struct soap*, _tds__LoadCACertificates *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__LoadCACertificates(struct soap*, const char *, int, _tds__LoadCACertificates *const*, const char *);
SOAP_FMAC3 _tds__LoadCACertificates ** SOAP_FMAC4 soap_in_PointerTo_tds__LoadCACertificates(struct soap*, const char*, _tds__LoadCACertificates **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__LoadCACertificates(struct soap*, _tds__LoadCACertificates *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__LoadCACertificates
#define soap_write_PointerTo_tds__LoadCACertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__LoadCACertificates(soap, data), 0) || soap_put_PointerTo_tds__LoadCACertificates(soap, data, "tds:LoadCACertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__LoadCACertificates ** SOAP_FMAC4 soap_get_PointerTo_tds__LoadCACertificates(struct soap*, _tds__LoadCACertificates **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__LoadCACertificates
#define soap_read_PointerTo_tds__LoadCACertificates(soap, data) ( ((data) ? (soap_default_PointerTo_tds__LoadCACertificates(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__LoadCACertificates(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetCertificateInformation
#define SOAP_TYPE_PointerTo_tds__GetCertificateInformation (1857)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetCertificateInformation(struct soap*, _tds__GetCertificateInformation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetCertificateInformation(struct soap*, const char *, int, _tds__GetCertificateInformation *const*, const char *);
SOAP_FMAC3 _tds__GetCertificateInformation ** SOAP_FMAC4 soap_in_PointerTo_tds__GetCertificateInformation(struct soap*, const char*, _tds__GetCertificateInformation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetCertificateInformation(struct soap*, _tds__GetCertificateInformation *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetCertificateInformation
#define soap_write_PointerTo_tds__GetCertificateInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetCertificateInformation(soap, data), 0) || soap_put_PointerTo_tds__GetCertificateInformation(soap, data, "tds:GetCertificateInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCertificateInformation ** SOAP_FMAC4 soap_get_PointerTo_tds__GetCertificateInformation(struct soap*, _tds__GetCertificateInformation **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetCertificateInformation
#define soap_read_PointerTo_tds__GetCertificateInformation(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetCertificateInformation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetCertificateInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__LoadCertificateWithPrivateKey
#define SOAP_TYPE_PointerTo_tds__LoadCertificateWithPrivateKey (1853)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__LoadCertificateWithPrivateKey(struct soap*, _tds__LoadCertificateWithPrivateKey *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__LoadCertificateWithPrivateKey(struct soap*, const char *, int, _tds__LoadCertificateWithPrivateKey *const*, const char *);
SOAP_FMAC3 _tds__LoadCertificateWithPrivateKey ** SOAP_FMAC4 soap_in_PointerTo_tds__LoadCertificateWithPrivateKey(struct soap*, const char*, _tds__LoadCertificateWithPrivateKey **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__LoadCertificateWithPrivateKey(struct soap*, _tds__LoadCertificateWithPrivateKey *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__LoadCertificateWithPrivateKey
#define soap_write_PointerTo_tds__LoadCertificateWithPrivateKey(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__LoadCertificateWithPrivateKey(soap, data), 0) || soap_put_PointerTo_tds__LoadCertificateWithPrivateKey(soap, data, "tds:LoadCertificateWithPrivateKey", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__LoadCertificateWithPrivateKey ** SOAP_FMAC4 soap_get_PointerTo_tds__LoadCertificateWithPrivateKey(struct soap*, _tds__LoadCertificateWithPrivateKey **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__LoadCertificateWithPrivateKey
#define soap_read_PointerTo_tds__LoadCertificateWithPrivateKey(soap, data) ( ((data) ? (soap_default_PointerTo_tds__LoadCertificateWithPrivateKey(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__LoadCertificateWithPrivateKey(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetCACertificates
#define SOAP_TYPE_PointerTo_tds__GetCACertificates (1849)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetCACertificates(struct soap*, _tds__GetCACertificates *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetCACertificates(struct soap*, const char *, int, _tds__GetCACertificates *const*, const char *);
SOAP_FMAC3 _tds__GetCACertificates ** SOAP_FMAC4 soap_in_PointerTo_tds__GetCACertificates(struct soap*, const char*, _tds__GetCACertificates **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetCACertificates(struct soap*, _tds__GetCACertificates *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetCACertificates
#define soap_write_PointerTo_tds__GetCACertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetCACertificates(soap, data), 0) || soap_put_PointerTo_tds__GetCACertificates(soap, data, "tds:GetCACertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCACertificates ** SOAP_FMAC4 soap_get_PointerTo_tds__GetCACertificates(struct soap*, _tds__GetCACertificates **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetCACertificates
#define soap_read_PointerTo_tds__GetCACertificates(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetCACertificates(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetCACertificates(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SendAuxiliaryCommand
#define SOAP_TYPE_PointerTo_tds__SendAuxiliaryCommand (1845)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SendAuxiliaryCommand(struct soap*, _tds__SendAuxiliaryCommand *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SendAuxiliaryCommand(struct soap*, const char *, int, _tds__SendAuxiliaryCommand *const*, const char *);
SOAP_FMAC3 _tds__SendAuxiliaryCommand ** SOAP_FMAC4 soap_in_PointerTo_tds__SendAuxiliaryCommand(struct soap*, const char*, _tds__SendAuxiliaryCommand **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SendAuxiliaryCommand(struct soap*, _tds__SendAuxiliaryCommand *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SendAuxiliaryCommand
#define soap_write_PointerTo_tds__SendAuxiliaryCommand(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SendAuxiliaryCommand(soap, data), 0) || soap_put_PointerTo_tds__SendAuxiliaryCommand(soap, data, "tds:SendAuxiliaryCommand", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SendAuxiliaryCommand ** SOAP_FMAC4 soap_get_PointerTo_tds__SendAuxiliaryCommand(struct soap*, _tds__SendAuxiliaryCommand **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SendAuxiliaryCommand
#define soap_read_PointerTo_tds__SendAuxiliaryCommand(soap, data) ( ((data) ? (soap_default_PointerTo_tds__SendAuxiliaryCommand(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__SendAuxiliaryCommand(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetRelayOutputState
#define SOAP_TYPE_PointerTo_tds__SetRelayOutputState (1841)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetRelayOutputState(struct soap*, _tds__SetRelayOutputState *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetRelayOutputState(struct soap*, const char *, int, _tds__SetRelayOutputState *const*, const char *);
SOAP_FMAC3 _tds__SetRelayOutputState ** SOAP_FMAC4 soap_in_PointerTo_tds__SetRelayOutputState(struct soap*, const char*, _tds__SetRelayOutputState **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetRelayOutputState(struct soap*, _tds__SetRelayOutputState *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetRelayOutputState
#define soap_write_PointerTo_tds__SetRelayOutputState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetRelayOutputState(soap, data), 0) || soap_put_PointerTo_tds__SetRelayOutputState(soap, data, "tds:SetRelayOutputState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetRelayOutputState ** SOAP_FMAC4 soap_get_PointerTo_tds__SetRelayOutputState(struct soap*, _tds__SetRelayOutputState **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetRelayOutputState
#define soap_read_PointerTo_tds__SetRelayOutputState(soap, data) ( ((data) ? (soap_default_PointerTo_tds__SetRelayOutputState(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetRelayOutputState(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetRelayOutputSettings
#define SOAP_TYPE_PointerTo_tds__SetRelayOutputSettings (1837)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetRelayOutputSettings(struct soap*, _tds__SetRelayOutputSettings *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetRelayOutputSettings(struct soap*, const char *, int, _tds__SetRelayOutputSettings *const*, const char *);
SOAP_FMAC3 _tds__SetRelayOutputSettings ** SOAP_FMAC4 soap_in_PointerTo_tds__SetRelayOutputSettings(struct soap*, const char*, _tds__SetRelayOutputSettings **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetRelayOutputSettings(struct soap*, _tds__SetRelayOutputSettings *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetRelayOutputSettings
#define soap_write_PointerTo_tds__SetRelayOutputSettings(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetRelayOutputSettings(soap, data), 0) || soap_put_PointerTo_tds__SetRelayOutputSettings(soap, data, "tds:SetRelayOutputSettings", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetRelayOutputSettings ** SOAP_FMAC4 soap_get_PointerTo_tds__SetRelayOutputSettings(struct soap*, _tds__SetRelayOutputSettings **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetRelayOutputSettings
#define soap_read_PointerTo_tds__SetRelayOutputSettings(soap, data) ( ((data) ? (soap_default_PointerTo_tds__SetRelayOutputSettings(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetRelayOutputSettings(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetRelayOutputs
#define SOAP_TYPE_PointerTo_tds__GetRelayOutputs (1833)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetRelayOutputs(struct soap*, _tds__GetRelayOutputs *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetRelayOutputs(struct soap*, const char *, int, _tds__GetRelayOutputs *const*, const char *);
SOAP_FMAC3 _tds__GetRelayOutputs ** SOAP_FMAC4 soap_in_PointerTo_tds__GetRelayOutputs(struct soap*, const char*, _tds__GetRelayOutputs **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetRelayOutputs(struct soap*, _tds__GetRelayOutputs *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetRelayOutputs
#define soap_write_PointerTo_tds__GetRelayOutputs(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetRelayOutputs(soap, data), 0) || soap_put_PointerTo_tds__GetRelayOutputs(soap, data, "tds:GetRelayOutputs", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetRelayOutputs ** SOAP_FMAC4 soap_get_PointerTo_tds__GetRelayOutputs(struct soap*, _tds__GetRelayOutputs **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetRelayOutputs
#define soap_read_PointerTo_tds__GetRelayOutputs(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetRelayOutputs(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetRelayOutputs(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetClientCertificateMode
#define SOAP_TYPE_PointerTo_tds__SetClientCertificateMode (1829)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetClientCertificateMode(struct soap*, _tds__SetClientCertificateMode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetClientCertificateMode(struct soap*, const char *, int, _tds__SetClientCertificateMode *const*, const char *);
SOAP_FMAC3 _tds__SetClientCertificateMode ** SOAP_FMAC4 soap_in_PointerTo_tds__SetClientCertificateMode(struct soap*, const char*, _tds__SetClientCertificateMode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetClientCertificateMode(struct soap*, _tds__SetClientCertificateMode *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetClientCertificateMode
#define soap_write_PointerTo_tds__SetClientCertificateMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetClientCertificateMode(soap, data), 0) || soap_put_PointerTo_tds__SetClientCertificateMode(soap, data, "tds:SetClientCertificateMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetClientCertificateMode ** SOAP_FMAC4 soap_get_PointerTo_tds__SetClientCertificateMode(struct soap*, _tds__SetClientCertificateMode **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetClientCertificateMode
#define soap_read_PointerTo_tds__SetClientCertificateMode(soap, data) ( ((data) ? (soap_default_PointerTo_tds__SetClientCertificateMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetClientCertificateMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetClientCertificateMode
#define SOAP_TYPE_PointerTo_tds__GetClientCertificateMode (1825)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetClientCertificateMode(struct soap*, _tds__GetClientCertificateMode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetClientCertificateMode(struct soap*, const char *, int, _tds__GetClientCertificateMode *const*, const char *);
SOAP_FMAC3 _tds__GetClientCertificateMode ** SOAP_FMAC4 soap_in_PointerTo_tds__GetClientCertificateMode(struct soap*, const char*, _tds__GetClientCertificateMode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetClientCertificateMode(struct soap*, _tds__GetClientCertificateMode *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetClientCertificateMode
#define soap_write_PointerTo_tds__GetClientCertificateMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetClientCertificateMode(soap, data), 0) || soap_put_PointerTo_tds__GetClientCertificateMode(soap, data, "tds:GetClientCertificateMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetClientCertificateMode ** SOAP_FMAC4 soap_get_PointerTo_tds__GetClientCertificateMode(struct soap*, _tds__GetClientCertificateMode **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetClientCertificateMode
#define soap_read_PointerTo_tds__GetClientCertificateMode(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetClientCertificateMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetClientCertificateMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__LoadCertificates
#define SOAP_TYPE_PointerTo_tds__LoadCertificates (1821)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__LoadCertificates(struct soap*, _tds__LoadCertificates *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__LoadCertificates(struct soap*, const char *, int, _tds__LoadCertificates *const*, const char *);
SOAP_FMAC3 _tds__LoadCertificates ** SOAP_FMAC4 soap_in_PointerTo_tds__LoadCertificates(struct soap*, const char*, _tds__LoadCertificates **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__LoadCertificates(struct soap*, _tds__LoadCertificates *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__LoadCertificates
#define soap_write_PointerTo_tds__LoadCertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__LoadCertificates(soap, data), 0) || soap_put_PointerTo_tds__LoadCertificates(soap, data, "tds:LoadCertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__LoadCertificates ** SOAP_FMAC4 soap_get_PointerTo_tds__LoadCertificates(struct soap*, _tds__LoadCertificates **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__LoadCertificates
#define soap_read_PointerTo_tds__LoadCertificates(soap, data) ( ((data) ? (soap_default_PointerTo_tds__LoadCertificates(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__LoadCertificates(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetPkcs10Request
#define SOAP_TYPE_PointerTo_tds__GetPkcs10Request (1817)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetPkcs10Request(struct soap*, _tds__GetPkcs10Request *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetPkcs10Request(struct soap*, const char *, int, _tds__GetPkcs10Request *const*, const char *);
SOAP_FMAC3 _tds__GetPkcs10Request ** SOAP_FMAC4 soap_in_PointerTo_tds__GetPkcs10Request(struct soap*, const char*, _tds__GetPkcs10Request **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetPkcs10Request(struct soap*, _tds__GetPkcs10Request *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetPkcs10Request
#define soap_write_PointerTo_tds__GetPkcs10Request(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetPkcs10Request(soap, data), 0) || soap_put_PointerTo_tds__GetPkcs10Request(soap, data, "tds:GetPkcs10Request", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetPkcs10Request ** SOAP_FMAC4 soap_get_PointerTo_tds__GetPkcs10Request(struct soap*, _tds__GetPkcs10Request **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetPkcs10Request
#define soap_read_PointerTo_tds__GetPkcs10Request(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetPkcs10Request(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetPkcs10Request(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__DeleteCertificates
#define SOAP_TYPE_PointerTo_tds__DeleteCertificates (1813)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__DeleteCertificates(struct soap*, _tds__DeleteCertificates *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__DeleteCertificates(struct soap*, const char *, int, _tds__DeleteCertificates *const*, const char *);
SOAP_FMAC3 _tds__DeleteCertificates ** SOAP_FMAC4 soap_in_PointerTo_tds__DeleteCertificates(struct soap*, const char*, _tds__DeleteCertificates **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__DeleteCertificates(struct soap*, _tds__DeleteCertificates *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__DeleteCertificates
#define soap_write_PointerTo_tds__DeleteCertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__DeleteCertificates(soap, data), 0) || soap_put_PointerTo_tds__DeleteCertificates(soap, data, "tds:DeleteCertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__DeleteCertificates ** SOAP_FMAC4 soap_get_PointerTo_tds__DeleteCertificates(struct soap*, _tds__DeleteCertificates **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__DeleteCertificates
#define soap_read_PointerTo_tds__DeleteCertificates(soap, data) ( ((data) ? (soap_default_PointerTo_tds__DeleteCertificates(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__DeleteCertificates(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetCertificatesStatus
#define SOAP_TYPE_PointerTo_tds__SetCertificatesStatus (1809)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetCertificatesStatus(struct soap*, _tds__SetCertificatesStatus *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetCertificatesStatus(struct soap*, const char *, int, _tds__SetCertificatesStatus *const*, const char *);
SOAP_FMAC3 _tds__SetCertificatesStatus ** SOAP_FMAC4 soap_in_PointerTo_tds__SetCertificatesStatus(struct soap*, const char*, _tds__SetCertificatesStatus **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetCertificatesStatus(struct soap*, _tds__SetCertificatesStatus *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetCertificatesStatus
#define soap_write_PointerTo_tds__SetCertificatesStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetCertificatesStatus(soap, data), 0) || soap_put_PointerTo_tds__SetCertificatesStatus(soap, data, "tds:SetCertificatesStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetCertificatesStatus ** SOAP_FMAC4 soap_get_PointerTo_tds__SetCertificatesStatus(struct soap*, _tds__SetCertificatesStatus **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetCertificatesStatus
#define soap_read_PointerTo_tds__SetCertificatesStatus(soap, data) ( ((data) ? (soap_default_PointerTo_tds__SetCertificatesStatus(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetCertificatesStatus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetCertificatesStatus
#define SOAP_TYPE_PointerTo_tds__GetCertificatesStatus (1805)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetCertificatesStatus(struct soap*, _tds__GetCertificatesStatus *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetCertificatesStatus(struct soap*, const char *, int, _tds__GetCertificatesStatus *const*, const char *);
SOAP_FMAC3 _tds__GetCertificatesStatus ** SOAP_FMAC4 soap_in_PointerTo_tds__GetCertificatesStatus(struct soap*, const char*, _tds__GetCertificatesStatus **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetCertificatesStatus(struct soap*, _tds__GetCertificatesStatus *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetCertificatesStatus
#define soap_write_PointerTo_tds__GetCertificatesStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetCertificatesStatus(soap, data), 0) || soap_put_PointerTo_tds__GetCertificatesStatus(soap, data, "tds:GetCertificatesStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCertificatesStatus ** SOAP_FMAC4 soap_get_PointerTo_tds__GetCertificatesStatus(struct soap*, _tds__GetCertificatesStatus **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetCertificatesStatus
#define soap_read_PointerTo_tds__GetCertificatesStatus(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetCertificatesStatus(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetCertificatesStatus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetCertificates
#define SOAP_TYPE_PointerTo_tds__GetCertificates (1801)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetCertificates(struct soap*, _tds__GetCertificates *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetCertificates(struct soap*, const char *, int, _tds__GetCertificates *const*, const char *);
SOAP_FMAC3 _tds__GetCertificates ** SOAP_FMAC4 soap_in_PointerTo_tds__GetCertificates(struct soap*, const char*, _tds__GetCertificates **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetCertificates(struct soap*, _tds__GetCertificates *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetCertificates
#define soap_write_PointerTo_tds__GetCertificates(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetCertificates(soap, data), 0) || soap_put_PointerTo_tds__GetCertificates(soap, data, "tds:GetCertificates", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCertificates ** SOAP_FMAC4 soap_get_PointerTo_tds__GetCertificates(struct soap*, _tds__GetCertificates **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetCertificates
#define soap_read_PointerTo_tds__GetCertificates(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetCertificates(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetCertificates(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__CreateCertificate
#define SOAP_TYPE_PointerTo_tds__CreateCertificate (1797)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__CreateCertificate(struct soap*, _tds__CreateCertificate *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__CreateCertificate(struct soap*, const char *, int, _tds__CreateCertificate *const*, const char *);
SOAP_FMAC3 _tds__CreateCertificate ** SOAP_FMAC4 soap_in_PointerTo_tds__CreateCertificate(struct soap*, const char*, _tds__CreateCertificate **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__CreateCertificate(struct soap*, _tds__CreateCertificate *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__CreateCertificate
#define soap_write_PointerTo_tds__CreateCertificate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__CreateCertificate(soap, data), 0) || soap_put_PointerTo_tds__CreateCertificate(soap, data, "tds:CreateCertificate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__CreateCertificate ** SOAP_FMAC4 soap_get_PointerTo_tds__CreateCertificate(struct soap*, _tds__CreateCertificate **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__CreateCertificate
#define soap_read_PointerTo_tds__CreateCertificate(soap, data) ( ((data) ? (soap_default_PointerTo_tds__CreateCertificate(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__CreateCertificate(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetAccessPolicy
#define SOAP_TYPE_PointerTo_tds__SetAccessPolicy (1793)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetAccessPolicy(struct soap*, _tds__SetAccessPolicy *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetAccessPolicy(struct soap*, const char *, int, _tds__SetAccessPolicy *const*, const char *);
SOAP_FMAC3 _tds__SetAccessPolicy ** SOAP_FMAC4 soap_in_PointerTo_tds__SetAccessPolicy(struct soap*, const char*, _tds__SetAccessPolicy **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetAccessPolicy(struct soap*, _tds__SetAccessPolicy *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetAccessPolicy
#define soap_write_PointerTo_tds__SetAccessPolicy(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetAccessPolicy(soap, data), 0) || soap_put_PointerTo_tds__SetAccessPolicy(soap, data, "tds:SetAccessPolicy", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetAccessPolicy ** SOAP_FMAC4 soap_get_PointerTo_tds__SetAccessPolicy(struct soap*, _tds__SetAccessPolicy **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetAccessPolicy
#define soap_read_PointerTo_tds__SetAccessPolicy(soap, data) ( ((data) ? (soap_default_PointerTo_tds__SetAccessPolicy(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetAccessPolicy(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetAccessPolicy
#define SOAP_TYPE_PointerTo_tds__GetAccessPolicy (1789)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetAccessPolicy(struct soap*, _tds__GetAccessPolicy *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetAccessPolicy(struct soap*, const char *, int, _tds__GetAccessPolicy *const*, const char *);
SOAP_FMAC3 _tds__GetAccessPolicy ** SOAP_FMAC4 soap_in_PointerTo_tds__GetAccessPolicy(struct soap*, const char*, _tds__GetAccessPolicy **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetAccessPolicy(struct soap*, _tds__GetAccessPolicy *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetAccessPolicy
#define soap_write_PointerTo_tds__GetAccessPolicy(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetAccessPolicy(soap, data), 0) || soap_put_PointerTo_tds__GetAccessPolicy(soap, data, "tds:GetAccessPolicy", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetAccessPolicy ** SOAP_FMAC4 soap_get_PointerTo_tds__GetAccessPolicy(struct soap*, _tds__GetAccessPolicy **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetAccessPolicy
#define soap_read_PointerTo_tds__GetAccessPolicy(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetAccessPolicy(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetAccessPolicy(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__RemoveIPAddressFilter
#define SOAP_TYPE_PointerTo_tds__RemoveIPAddressFilter (1785)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__RemoveIPAddressFilter(struct soap*, _tds__RemoveIPAddressFilter *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__RemoveIPAddressFilter(struct soap*, const char *, int, _tds__RemoveIPAddressFilter *const*, const char *);
SOAP_FMAC3 _tds__RemoveIPAddressFilter ** SOAP_FMAC4 soap_in_PointerTo_tds__RemoveIPAddressFilter(struct soap*, const char*, _tds__RemoveIPAddressFilter **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__RemoveIPAddressFilter(struct soap*, _tds__RemoveIPAddressFilter *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__RemoveIPAddressFilter
#define soap_write_PointerTo_tds__RemoveIPAddressFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__RemoveIPAddressFilter(soap, data), 0) || soap_put_PointerTo_tds__RemoveIPAddressFilter(soap, data, "tds:RemoveIPAddressFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__RemoveIPAddressFilter ** SOAP_FMAC4 soap_get_PointerTo_tds__RemoveIPAddressFilter(struct soap*, _tds__RemoveIPAddressFilter **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__RemoveIPAddressFilter
#define soap_read_PointerTo_tds__RemoveIPAddressFilter(soap, data) ( ((data) ? (soap_default_PointerTo_tds__RemoveIPAddressFilter(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__RemoveIPAddressFilter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__AddIPAddressFilter
#define SOAP_TYPE_PointerTo_tds__AddIPAddressFilter (1781)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__AddIPAddressFilter(struct soap*, _tds__AddIPAddressFilter *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__AddIPAddressFilter(struct soap*, const char *, int, _tds__AddIPAddressFilter *const*, const char *);
SOAP_FMAC3 _tds__AddIPAddressFilter ** SOAP_FMAC4 soap_in_PointerTo_tds__AddIPAddressFilter(struct soap*, const char*, _tds__AddIPAddressFilter **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__AddIPAddressFilter(struct soap*, _tds__AddIPAddressFilter *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__AddIPAddressFilter
#define soap_write_PointerTo_tds__AddIPAddressFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__AddIPAddressFilter(soap, data), 0) || soap_put_PointerTo_tds__AddIPAddressFilter(soap, data, "tds:AddIPAddressFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__AddIPAddressFilter ** SOAP_FMAC4 soap_get_PointerTo_tds__AddIPAddressFilter(struct soap*, _tds__AddIPAddressFilter **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__AddIPAddressFilter
#define soap_read_PointerTo_tds__AddIPAddressFilter(soap, data) ( ((data) ? (soap_default_PointerTo_tds__AddIPAddressFilter(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__AddIPAddressFilter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetIPAddressFilter
#define SOAP_TYPE_PointerTo_tds__SetIPAddressFilter (1777)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetIPAddressFilter(struct soap*, _tds__SetIPAddressFilter *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetIPAddressFilter(struct soap*, const char *, int, _tds__SetIPAddressFilter *const*, const char *);
SOAP_FMAC3 _tds__SetIPAddressFilter ** SOAP_FMAC4 soap_in_PointerTo_tds__SetIPAddressFilter(struct soap*, const char*, _tds__SetIPAddressFilter **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetIPAddressFilter(struct soap*, _tds__SetIPAddressFilter *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetIPAddressFilter
#define soap_write_PointerTo_tds__SetIPAddressFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetIPAddressFilter(soap, data), 0) || soap_put_PointerTo_tds__SetIPAddressFilter(soap, data, "tds:SetIPAddressFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetIPAddressFilter ** SOAP_FMAC4 soap_get_PointerTo_tds__SetIPAddressFilter(struct soap*, _tds__SetIPAddressFilter **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetIPAddressFilter
#define soap_read_PointerTo_tds__SetIPAddressFilter(soap, data) ( ((data) ? (soap_default_PointerTo_tds__SetIPAddressFilter(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetIPAddressFilter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetIPAddressFilter
#define SOAP_TYPE_PointerTo_tds__GetIPAddressFilter (1773)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetIPAddressFilter(struct soap*, _tds__GetIPAddressFilter *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetIPAddressFilter(struct soap*, const char *, int, _tds__GetIPAddressFilter *const*, const char *);
SOAP_FMAC3 _tds__GetIPAddressFilter ** SOAP_FMAC4 soap_in_PointerTo_tds__GetIPAddressFilter(struct soap*, const char*, _tds__GetIPAddressFilter **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetIPAddressFilter(struct soap*, _tds__GetIPAddressFilter *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetIPAddressFilter
#define soap_write_PointerTo_tds__GetIPAddressFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetIPAddressFilter(soap, data), 0) || soap_put_PointerTo_tds__GetIPAddressFilter(soap, data, "tds:GetIPAddressFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetIPAddressFilter ** SOAP_FMAC4 soap_get_PointerTo_tds__GetIPAddressFilter(struct soap*, _tds__GetIPAddressFilter **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetIPAddressFilter
#define soap_read_PointerTo_tds__GetIPAddressFilter(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetIPAddressFilter(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetIPAddressFilter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetZeroConfiguration
#define SOAP_TYPE_PointerTo_tds__SetZeroConfiguration (1769)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetZeroConfiguration(struct soap*, _tds__SetZeroConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetZeroConfiguration(struct soap*, const char *, int, _tds__SetZeroConfiguration *const*, const char *);
SOAP_FMAC3 _tds__SetZeroConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tds__SetZeroConfiguration(struct soap*, const char*, _tds__SetZeroConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetZeroConfiguration(struct soap*, _tds__SetZeroConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetZeroConfiguration
#define soap_write_PointerTo_tds__SetZeroConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetZeroConfiguration(soap, data), 0) || soap_put_PointerTo_tds__SetZeroConfiguration(soap, data, "tds:SetZeroConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetZeroConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tds__SetZeroConfiguration(struct soap*, _tds__SetZeroConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetZeroConfiguration
#define soap_read_PointerTo_tds__SetZeroConfiguration(soap, data) ( ((data) ? (soap_default_PointerTo_tds__SetZeroConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetZeroConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetZeroConfiguration
#define SOAP_TYPE_PointerTo_tds__GetZeroConfiguration (1765)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetZeroConfiguration(struct soap*, _tds__GetZeroConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetZeroConfiguration(struct soap*, const char *, int, _tds__GetZeroConfiguration *const*, const char *);
SOAP_FMAC3 _tds__GetZeroConfiguration ** SOAP_FMAC4 soap_in_PointerTo_tds__GetZeroConfiguration(struct soap*, const char*, _tds__GetZeroConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetZeroConfiguration(struct soap*, _tds__GetZeroConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetZeroConfiguration
#define soap_write_PointerTo_tds__GetZeroConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetZeroConfiguration(soap, data), 0) || soap_put_PointerTo_tds__GetZeroConfiguration(soap, data, "tds:GetZeroConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetZeroConfiguration ** SOAP_FMAC4 soap_get_PointerTo_tds__GetZeroConfiguration(struct soap*, _tds__GetZeroConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetZeroConfiguration
#define soap_read_PointerTo_tds__GetZeroConfiguration(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetZeroConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetZeroConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetNetworkDefaultGateway
#define SOAP_TYPE_PointerTo_tds__SetNetworkDefaultGateway (1761)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetNetworkDefaultGateway(struct soap*, _tds__SetNetworkDefaultGateway *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetNetworkDefaultGateway(struct soap*, const char *, int, _tds__SetNetworkDefaultGateway *const*, const char *);
SOAP_FMAC3 _tds__SetNetworkDefaultGateway ** SOAP_FMAC4 soap_in_PointerTo_tds__SetNetworkDefaultGateway(struct soap*, const char*, _tds__SetNetworkDefaultGateway **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetNetworkDefaultGateway(struct soap*, _tds__SetNetworkDefaultGateway *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetNetworkDefaultGateway
#define soap_write_PointerTo_tds__SetNetworkDefaultGateway(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetNetworkDefaultGateway(soap, data), 0) || soap_put_PointerTo_tds__SetNetworkDefaultGateway(soap, data, "tds:SetNetworkDefaultGateway", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetNetworkDefaultGateway ** SOAP_FMAC4 soap_get_PointerTo_tds__SetNetworkDefaultGateway(struct soap*, _tds__SetNetworkDefaultGateway **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetNetworkDefaultGateway
#define soap_read_PointerTo_tds__SetNetworkDefaultGateway(soap, data) ( ((data) ? (soap_default_PointerTo_tds__SetNetworkDefaultGateway(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetNetworkDefaultGateway(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetNetworkDefaultGateway
#define SOAP_TYPE_PointerTo_tds__GetNetworkDefaultGateway (1757)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetNetworkDefaultGateway(struct soap*, _tds__GetNetworkDefaultGateway *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetNetworkDefaultGateway(struct soap*, const char *, int, _tds__GetNetworkDefaultGateway *const*, const char *);
SOAP_FMAC3 _tds__GetNetworkDefaultGateway ** SOAP_FMAC4 soap_in_PointerTo_tds__GetNetworkDefaultGateway(struct soap*, const char*, _tds__GetNetworkDefaultGateway **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetNetworkDefaultGateway(struct soap*, _tds__GetNetworkDefaultGateway *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetNetworkDefaultGateway
#define soap_write_PointerTo_tds__GetNetworkDefaultGateway(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetNetworkDefaultGateway(soap, data), 0) || soap_put_PointerTo_tds__GetNetworkDefaultGateway(soap, data, "tds:GetNetworkDefaultGateway", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetNetworkDefaultGateway ** SOAP_FMAC4 soap_get_PointerTo_tds__GetNetworkDefaultGateway(struct soap*, _tds__GetNetworkDefaultGateway **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetNetworkDefaultGateway
#define soap_read_PointerTo_tds__GetNetworkDefaultGateway(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetNetworkDefaultGateway(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetNetworkDefaultGateway(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetNetworkProtocols
#define SOAP_TYPE_PointerTo_tds__SetNetworkProtocols (1753)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetNetworkProtocols(struct soap*, _tds__SetNetworkProtocols *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetNetworkProtocols(struct soap*, const char *, int, _tds__SetNetworkProtocols *const*, const char *);
SOAP_FMAC3 _tds__SetNetworkProtocols ** SOAP_FMAC4 soap_in_PointerTo_tds__SetNetworkProtocols(struct soap*, const char*, _tds__SetNetworkProtocols **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetNetworkProtocols(struct soap*, _tds__SetNetworkProtocols *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetNetworkProtocols
#define soap_write_PointerTo_tds__SetNetworkProtocols(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetNetworkProtocols(soap, data), 0) || soap_put_PointerTo_tds__SetNetworkProtocols(soap, data, "tds:SetNetworkProtocols", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetNetworkProtocols ** SOAP_FMAC4 soap_get_PointerTo_tds__SetNetworkProtocols(struct soap*, _tds__SetNetworkProtocols **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetNetworkProtocols
#define soap_read_PointerTo_tds__SetNetworkProtocols(soap, data) ( ((data) ? (soap_default_PointerTo_tds__SetNetworkProtocols(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetNetworkProtocols(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetNetworkProtocols
#define SOAP_TYPE_PointerTo_tds__GetNetworkProtocols (1749)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetNetworkProtocols(struct soap*, _tds__GetNetworkProtocols *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetNetworkProtocols(struct soap*, const char *, int, _tds__GetNetworkProtocols *const*, const char *);
SOAP_FMAC3 _tds__GetNetworkProtocols ** SOAP_FMAC4 soap_in_PointerTo_tds__GetNetworkProtocols(struct soap*, const char*, _tds__GetNetworkProtocols **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetNetworkProtocols(struct soap*, _tds__GetNetworkProtocols *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetNetworkProtocols
#define soap_write_PointerTo_tds__GetNetworkProtocols(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetNetworkProtocols(soap, data), 0) || soap_put_PointerTo_tds__GetNetworkProtocols(soap, data, "tds:GetNetworkProtocols", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetNetworkProtocols ** SOAP_FMAC4 soap_get_PointerTo_tds__GetNetworkProtocols(struct soap*, _tds__GetNetworkProtocols **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetNetworkProtocols
#define soap_read_PointerTo_tds__GetNetworkProtocols(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetNetworkProtocols(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetNetworkProtocols(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetNetworkInterfaces
#define SOAP_TYPE_PointerTo_tds__SetNetworkInterfaces (1745)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetNetworkInterfaces(struct soap*, _tds__SetNetworkInterfaces *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetNetworkInterfaces(struct soap*, const char *, int, _tds__SetNetworkInterfaces *const*, const char *);
SOAP_FMAC3 _tds__SetNetworkInterfaces ** SOAP_FMAC4 soap_in_PointerTo_tds__SetNetworkInterfaces(struct soap*, const char*, _tds__SetNetworkInterfaces **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetNetworkInterfaces(struct soap*, _tds__SetNetworkInterfaces *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetNetworkInterfaces
#define soap_write_PointerTo_tds__SetNetworkInterfaces(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetNetworkInterfaces(soap, data), 0) || soap_put_PointerTo_tds__SetNetworkInterfaces(soap, data, "tds:SetNetworkInterfaces", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetNetworkInterfaces ** SOAP_FMAC4 soap_get_PointerTo_tds__SetNetworkInterfaces(struct soap*, _tds__SetNetworkInterfaces **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetNetworkInterfaces
#define soap_read_PointerTo_tds__SetNetworkInterfaces(soap, data) ( ((data) ? (soap_default_PointerTo_tds__SetNetworkInterfaces(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetNetworkInterfaces(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetNetworkInterfaces
#define SOAP_TYPE_PointerTo_tds__GetNetworkInterfaces (1741)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetNetworkInterfaces(struct soap*, _tds__GetNetworkInterfaces *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetNetworkInterfaces(struct soap*, const char *, int, _tds__GetNetworkInterfaces *const*, const char *);
SOAP_FMAC3 _tds__GetNetworkInterfaces ** SOAP_FMAC4 soap_in_PointerTo_tds__GetNetworkInterfaces(struct soap*, const char*, _tds__GetNetworkInterfaces **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetNetworkInterfaces(struct soap*, _tds__GetNetworkInterfaces *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetNetworkInterfaces
#define soap_write_PointerTo_tds__GetNetworkInterfaces(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetNetworkInterfaces(soap, data), 0) || soap_put_PointerTo_tds__GetNetworkInterfaces(soap, data, "tds:GetNetworkInterfaces", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetNetworkInterfaces ** SOAP_FMAC4 soap_get_PointerTo_tds__GetNetworkInterfaces(struct soap*, _tds__GetNetworkInterfaces **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetNetworkInterfaces
#define soap_read_PointerTo_tds__GetNetworkInterfaces(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetNetworkInterfaces(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetNetworkInterfaces(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetDynamicDNS
#define SOAP_TYPE_PointerTo_tds__SetDynamicDNS (1737)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetDynamicDNS(struct soap*, _tds__SetDynamicDNS *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetDynamicDNS(struct soap*, const char *, int, _tds__SetDynamicDNS *const*, const char *);
SOAP_FMAC3 _tds__SetDynamicDNS ** SOAP_FMAC4 soap_in_PointerTo_tds__SetDynamicDNS(struct soap*, const char*, _tds__SetDynamicDNS **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetDynamicDNS(struct soap*, _tds__SetDynamicDNS *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetDynamicDNS
#define soap_write_PointerTo_tds__SetDynamicDNS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetDynamicDNS(soap, data), 0) || soap_put_PointerTo_tds__SetDynamicDNS(soap, data, "tds:SetDynamicDNS", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDynamicDNS ** SOAP_FMAC4 soap_get_PointerTo_tds__SetDynamicDNS(struct soap*, _tds__SetDynamicDNS **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetDynamicDNS
#define soap_read_PointerTo_tds__SetDynamicDNS(soap, data) ( ((data) ? (soap_default_PointerTo_tds__SetDynamicDNS(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetDynamicDNS(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetDynamicDNS
#define SOAP_TYPE_PointerTo_tds__GetDynamicDNS (1733)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetDynamicDNS(struct soap*, _tds__GetDynamicDNS *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetDynamicDNS(struct soap*, const char *, int, _tds__GetDynamicDNS *const*, const char *);
SOAP_FMAC3 _tds__GetDynamicDNS ** SOAP_FMAC4 soap_in_PointerTo_tds__GetDynamicDNS(struct soap*, const char*, _tds__GetDynamicDNS **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetDynamicDNS(struct soap*, _tds__GetDynamicDNS *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetDynamicDNS
#define soap_write_PointerTo_tds__GetDynamicDNS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetDynamicDNS(soap, data), 0) || soap_put_PointerTo_tds__GetDynamicDNS(soap, data, "tds:GetDynamicDNS", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDynamicDNS ** SOAP_FMAC4 soap_get_PointerTo_tds__GetDynamicDNS(struct soap*, _tds__GetDynamicDNS **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetDynamicDNS
#define soap_read_PointerTo_tds__GetDynamicDNS(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetDynamicDNS(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetDynamicDNS(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetNTP
#define SOAP_TYPE_PointerTo_tds__SetNTP (1729)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetNTP(struct soap*, _tds__SetNTP *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetNTP(struct soap*, const char *, int, _tds__SetNTP *const*, const char *);
SOAP_FMAC3 _tds__SetNTP ** SOAP_FMAC4 soap_in_PointerTo_tds__SetNTP(struct soap*, const char*, _tds__SetNTP **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetNTP(struct soap*, _tds__SetNTP *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetNTP
#define soap_write_PointerTo_tds__SetNTP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetNTP(soap, data), 0) || soap_put_PointerTo_tds__SetNTP(soap, data, "tds:SetNTP", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetNTP ** SOAP_FMAC4 soap_get_PointerTo_tds__SetNTP(struct soap*, _tds__SetNTP **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetNTP
#define soap_read_PointerTo_tds__SetNTP(soap, data) ( ((data) ? (soap_default_PointerTo_tds__SetNTP(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetNTP(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetNTP
#define SOAP_TYPE_PointerTo_tds__GetNTP (1725)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetNTP(struct soap*, _tds__GetNTP *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetNTP(struct soap*, const char *, int, _tds__GetNTP *const*, const char *);
SOAP_FMAC3 _tds__GetNTP ** SOAP_FMAC4 soap_in_PointerTo_tds__GetNTP(struct soap*, const char*, _tds__GetNTP **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetNTP(struct soap*, _tds__GetNTP *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetNTP
#define soap_write_PointerTo_tds__GetNTP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetNTP(soap, data), 0) || soap_put_PointerTo_tds__GetNTP(soap, data, "tds:GetNTP", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetNTP ** SOAP_FMAC4 soap_get_PointerTo_tds__GetNTP(struct soap*, _tds__GetNTP **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetNTP
#define soap_read_PointerTo_tds__GetNTP(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetNTP(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetNTP(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetDNS
#define SOAP_TYPE_PointerTo_tds__SetDNS (1721)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetDNS(struct soap*, _tds__SetDNS *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetDNS(struct soap*, const char *, int, _tds__SetDNS *const*, const char *);
SOAP_FMAC3 _tds__SetDNS ** SOAP_FMAC4 soap_in_PointerTo_tds__SetDNS(struct soap*, const char*, _tds__SetDNS **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetDNS(struct soap*, _tds__SetDNS *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetDNS
#define soap_write_PointerTo_tds__SetDNS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetDNS(soap, data), 0) || soap_put_PointerTo_tds__SetDNS(soap, data, "tds:SetDNS", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDNS ** SOAP_FMAC4 soap_get_PointerTo_tds__SetDNS(struct soap*, _tds__SetDNS **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetDNS
#define soap_read_PointerTo_tds__SetDNS(soap, data) ( ((data) ? (soap_default_PointerTo_tds__SetDNS(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetDNS(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetDNS
#define SOAP_TYPE_PointerTo_tds__GetDNS (1717)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetDNS(struct soap*, _tds__GetDNS *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetDNS(struct soap*, const char *, int, _tds__GetDNS *const*, const char *);
SOAP_FMAC3 _tds__GetDNS ** SOAP_FMAC4 soap_in_PointerTo_tds__GetDNS(struct soap*, const char*, _tds__GetDNS **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetDNS(struct soap*, _tds__GetDNS *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetDNS
#define soap_write_PointerTo_tds__GetDNS(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetDNS(soap, data), 0) || soap_put_PointerTo_tds__GetDNS(soap, data, "tds:GetDNS", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDNS ** SOAP_FMAC4 soap_get_PointerTo_tds__GetDNS(struct soap*, _tds__GetDNS **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetDNS
#define soap_read_PointerTo_tds__GetDNS(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetDNS(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetDNS(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetHostnameFromDHCP
#define SOAP_TYPE_PointerTo_tds__SetHostnameFromDHCP (1713)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetHostnameFromDHCP(struct soap*, _tds__SetHostnameFromDHCP *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetHostnameFromDHCP(struct soap*, const char *, int, _tds__SetHostnameFromDHCP *const*, const char *);
SOAP_FMAC3 _tds__SetHostnameFromDHCP ** SOAP_FMAC4 soap_in_PointerTo_tds__SetHostnameFromDHCP(struct soap*, const char*, _tds__SetHostnameFromDHCP **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetHostnameFromDHCP(struct soap*, _tds__SetHostnameFromDHCP *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetHostnameFromDHCP
#define soap_write_PointerTo_tds__SetHostnameFromDHCP(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetHostnameFromDHCP(soap, data), 0) || soap_put_PointerTo_tds__SetHostnameFromDHCP(soap, data, "tds:SetHostnameFromDHCP", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetHostnameFromDHCP ** SOAP_FMAC4 soap_get_PointerTo_tds__SetHostnameFromDHCP(struct soap*, _tds__SetHostnameFromDHCP **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetHostnameFromDHCP
#define soap_read_PointerTo_tds__SetHostnameFromDHCP(soap, data) ( ((data) ? (soap_default_PointerTo_tds__SetHostnameFromDHCP(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetHostnameFromDHCP(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetHostname
#define SOAP_TYPE_PointerTo_tds__SetHostname (1709)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetHostname(struct soap*, _tds__SetHostname *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetHostname(struct soap*, const char *, int, _tds__SetHostname *const*, const char *);
SOAP_FMAC3 _tds__SetHostname ** SOAP_FMAC4 soap_in_PointerTo_tds__SetHostname(struct soap*, const char*, _tds__SetHostname **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetHostname(struct soap*, _tds__SetHostname *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetHostname
#define soap_write_PointerTo_tds__SetHostname(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetHostname(soap, data), 0) || soap_put_PointerTo_tds__SetHostname(soap, data, "tds:SetHostname", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetHostname ** SOAP_FMAC4 soap_get_PointerTo_tds__SetHostname(struct soap*, _tds__SetHostname **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetHostname
#define soap_read_PointerTo_tds__SetHostname(soap, data) ( ((data) ? (soap_default_PointerTo_tds__SetHostname(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetHostname(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetHostname
#define SOAP_TYPE_PointerTo_tds__GetHostname (1705)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetHostname(struct soap*, _tds__GetHostname *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetHostname(struct soap*, const char *, int, _tds__GetHostname *const*, const char *);
SOAP_FMAC3 _tds__GetHostname ** SOAP_FMAC4 soap_in_PointerTo_tds__GetHostname(struct soap*, const char*, _tds__GetHostname **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetHostname(struct soap*, _tds__GetHostname *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetHostname
#define soap_write_PointerTo_tds__GetHostname(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetHostname(soap, data), 0) || soap_put_PointerTo_tds__GetHostname(soap, data, "tds:GetHostname", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetHostname ** SOAP_FMAC4 soap_get_PointerTo_tds__GetHostname(struct soap*, _tds__GetHostname **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetHostname
#define soap_read_PointerTo_tds__GetHostname(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetHostname(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetHostname(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetDPAddresses
#define SOAP_TYPE_PointerTo_tds__SetDPAddresses (1701)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetDPAddresses(struct soap*, _tds__SetDPAddresses *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetDPAddresses(struct soap*, const char *, int, _tds__SetDPAddresses *const*, const char *);
SOAP_FMAC3 _tds__SetDPAddresses ** SOAP_FMAC4 soap_in_PointerTo_tds__SetDPAddresses(struct soap*, const char*, _tds__SetDPAddresses **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetDPAddresses(struct soap*, _tds__SetDPAddresses *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetDPAddresses
#define soap_write_PointerTo_tds__SetDPAddresses(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetDPAddresses(soap, data), 0) || soap_put_PointerTo_tds__SetDPAddresses(soap, data, "tds:SetDPAddresses", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDPAddresses ** SOAP_FMAC4 soap_get_PointerTo_tds__SetDPAddresses(struct soap*, _tds__SetDPAddresses **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetDPAddresses
#define soap_read_PointerTo_tds__SetDPAddresses(soap, data) ( ((data) ? (soap_default_PointerTo_tds__SetDPAddresses(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetDPAddresses(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetCapabilities
#define SOAP_TYPE_PointerTo_tds__GetCapabilities (1697)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetCapabilities(struct soap*, _tds__GetCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetCapabilities(struct soap*, const char *, int, _tds__GetCapabilities *const*, const char *);
SOAP_FMAC3 _tds__GetCapabilities ** SOAP_FMAC4 soap_in_PointerTo_tds__GetCapabilities(struct soap*, const char*, _tds__GetCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetCapabilities(struct soap*, _tds__GetCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetCapabilities
#define soap_write_PointerTo_tds__GetCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetCapabilities(soap, data), 0) || soap_put_PointerTo_tds__GetCapabilities(soap, data, "tds:GetCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetCapabilities ** SOAP_FMAC4 soap_get_PointerTo_tds__GetCapabilities(struct soap*, _tds__GetCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetCapabilities
#define soap_read_PointerTo_tds__GetCapabilities(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetWsdlUrl
#define SOAP_TYPE_PointerTo_tds__GetWsdlUrl (1693)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetWsdlUrl(struct soap*, _tds__GetWsdlUrl *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetWsdlUrl(struct soap*, const char *, int, _tds__GetWsdlUrl *const*, const char *);
SOAP_FMAC3 _tds__GetWsdlUrl ** SOAP_FMAC4 soap_in_PointerTo_tds__GetWsdlUrl(struct soap*, const char*, _tds__GetWsdlUrl **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetWsdlUrl(struct soap*, _tds__GetWsdlUrl *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetWsdlUrl
#define soap_write_PointerTo_tds__GetWsdlUrl(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetWsdlUrl(soap, data), 0) || soap_put_PointerTo_tds__GetWsdlUrl(soap, data, "tds:GetWsdlUrl", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetWsdlUrl ** SOAP_FMAC4 soap_get_PointerTo_tds__GetWsdlUrl(struct soap*, _tds__GetWsdlUrl **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetWsdlUrl
#define soap_read_PointerTo_tds__GetWsdlUrl(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetWsdlUrl(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetWsdlUrl(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetUser
#define SOAP_TYPE_PointerTo_tds__SetUser (1689)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetUser(struct soap*, _tds__SetUser *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetUser(struct soap*, const char *, int, _tds__SetUser *const*, const char *);
SOAP_FMAC3 _tds__SetUser ** SOAP_FMAC4 soap_in_PointerTo_tds__SetUser(struct soap*, const char*, _tds__SetUser **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetUser(struct soap*, _tds__SetUser *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetUser
#define soap_write_PointerTo_tds__SetUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetUser(soap, data), 0) || soap_put_PointerTo_tds__SetUser(soap, data, "tds:SetUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetUser ** SOAP_FMAC4 soap_get_PointerTo_tds__SetUser(struct soap*, _tds__SetUser **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetUser
#define soap_read_PointerTo_tds__SetUser(soap, data) ( ((data) ? (soap_default_PointerTo_tds__SetUser(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetUser(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__DeleteUsers
#define SOAP_TYPE_PointerTo_tds__DeleteUsers (1685)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__DeleteUsers(struct soap*, _tds__DeleteUsers *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__DeleteUsers(struct soap*, const char *, int, _tds__DeleteUsers *const*, const char *);
SOAP_FMAC3 _tds__DeleteUsers ** SOAP_FMAC4 soap_in_PointerTo_tds__DeleteUsers(struct soap*, const char*, _tds__DeleteUsers **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__DeleteUsers(struct soap*, _tds__DeleteUsers *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__DeleteUsers
#define soap_write_PointerTo_tds__DeleteUsers(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__DeleteUsers(soap, data), 0) || soap_put_PointerTo_tds__DeleteUsers(soap, data, "tds:DeleteUsers", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__DeleteUsers ** SOAP_FMAC4 soap_get_PointerTo_tds__DeleteUsers(struct soap*, _tds__DeleteUsers **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__DeleteUsers
#define soap_read_PointerTo_tds__DeleteUsers(soap, data) ( ((data) ? (soap_default_PointerTo_tds__DeleteUsers(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__DeleteUsers(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__CreateUsers
#define SOAP_TYPE_PointerTo_tds__CreateUsers (1681)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__CreateUsers(struct soap*, _tds__CreateUsers *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__CreateUsers(struct soap*, const char *, int, _tds__CreateUsers *const*, const char *);
SOAP_FMAC3 _tds__CreateUsers ** SOAP_FMAC4 soap_in_PointerTo_tds__CreateUsers(struct soap*, const char*, _tds__CreateUsers **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__CreateUsers(struct soap*, _tds__CreateUsers *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__CreateUsers
#define soap_write_PointerTo_tds__CreateUsers(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__CreateUsers(soap, data), 0) || soap_put_PointerTo_tds__CreateUsers(soap, data, "tds:CreateUsers", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__CreateUsers ** SOAP_FMAC4 soap_get_PointerTo_tds__CreateUsers(struct soap*, _tds__CreateUsers **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__CreateUsers
#define soap_read_PointerTo_tds__CreateUsers(soap, data) ( ((data) ? (soap_default_PointerTo_tds__CreateUsers(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__CreateUsers(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetUsers
#define SOAP_TYPE_PointerTo_tds__GetUsers (1677)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetUsers(struct soap*, _tds__GetUsers *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetUsers(struct soap*, const char *, int, _tds__GetUsers *const*, const char *);
SOAP_FMAC3 _tds__GetUsers ** SOAP_FMAC4 soap_in_PointerTo_tds__GetUsers(struct soap*, const char*, _tds__GetUsers **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetUsers(struct soap*, _tds__GetUsers *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetUsers
#define soap_write_PointerTo_tds__GetUsers(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetUsers(soap, data), 0) || soap_put_PointerTo_tds__GetUsers(soap, data, "tds:GetUsers", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetUsers ** SOAP_FMAC4 soap_get_PointerTo_tds__GetUsers(struct soap*, _tds__GetUsers **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetUsers
#define soap_read_PointerTo_tds__GetUsers(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetUsers(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetUsers(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetRemoteUser
#define SOAP_TYPE_PointerTo_tds__SetRemoteUser (1673)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetRemoteUser(struct soap*, _tds__SetRemoteUser *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetRemoteUser(struct soap*, const char *, int, _tds__SetRemoteUser *const*, const char *);
SOAP_FMAC3 _tds__SetRemoteUser ** SOAP_FMAC4 soap_in_PointerTo_tds__SetRemoteUser(struct soap*, const char*, _tds__SetRemoteUser **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetRemoteUser(struct soap*, _tds__SetRemoteUser *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetRemoteUser
#define soap_write_PointerTo_tds__SetRemoteUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetRemoteUser(soap, data), 0) || soap_put_PointerTo_tds__SetRemoteUser(soap, data, "tds:SetRemoteUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetRemoteUser ** SOAP_FMAC4 soap_get_PointerTo_tds__SetRemoteUser(struct soap*, _tds__SetRemoteUser **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetRemoteUser
#define soap_read_PointerTo_tds__SetRemoteUser(soap, data) ( ((data) ? (soap_default_PointerTo_tds__SetRemoteUser(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetRemoteUser(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetRemoteUser
#define SOAP_TYPE_PointerTo_tds__GetRemoteUser (1669)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetRemoteUser(struct soap*, _tds__GetRemoteUser *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetRemoteUser(struct soap*, const char *, int, _tds__GetRemoteUser *const*, const char *);
SOAP_FMAC3 _tds__GetRemoteUser ** SOAP_FMAC4 soap_in_PointerTo_tds__GetRemoteUser(struct soap*, const char*, _tds__GetRemoteUser **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetRemoteUser(struct soap*, _tds__GetRemoteUser *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetRemoteUser
#define soap_write_PointerTo_tds__GetRemoteUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetRemoteUser(soap, data), 0) || soap_put_PointerTo_tds__GetRemoteUser(soap, data, "tds:GetRemoteUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetRemoteUser ** SOAP_FMAC4 soap_get_PointerTo_tds__GetRemoteUser(struct soap*, _tds__GetRemoteUser **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetRemoteUser
#define soap_read_PointerTo_tds__GetRemoteUser(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetRemoteUser(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetRemoteUser(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetEndpointReference
#define SOAP_TYPE_PointerTo_tds__GetEndpointReference (1665)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetEndpointReference(struct soap*, _tds__GetEndpointReference *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetEndpointReference(struct soap*, const char *, int, _tds__GetEndpointReference *const*, const char *);
SOAP_FMAC3 _tds__GetEndpointReference ** SOAP_FMAC4 soap_in_PointerTo_tds__GetEndpointReference(struct soap*, const char*, _tds__GetEndpointReference **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetEndpointReference(struct soap*, _tds__GetEndpointReference *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetEndpointReference
#define soap_write_PointerTo_tds__GetEndpointReference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetEndpointReference(soap, data), 0) || soap_put_PointerTo_tds__GetEndpointReference(soap, data, "tds:GetEndpointReference", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetEndpointReference ** SOAP_FMAC4 soap_get_PointerTo_tds__GetEndpointReference(struct soap*, _tds__GetEndpointReference **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetEndpointReference
#define soap_read_PointerTo_tds__GetEndpointReference(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetEndpointReference(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetEndpointReference(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetDPAddresses
#define SOAP_TYPE_PointerTo_tds__GetDPAddresses (1661)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetDPAddresses(struct soap*, _tds__GetDPAddresses *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetDPAddresses(struct soap*, const char *, int, _tds__GetDPAddresses *const*, const char *);
SOAP_FMAC3 _tds__GetDPAddresses ** SOAP_FMAC4 soap_in_PointerTo_tds__GetDPAddresses(struct soap*, const char*, _tds__GetDPAddresses **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetDPAddresses(struct soap*, _tds__GetDPAddresses *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetDPAddresses
#define soap_write_PointerTo_tds__GetDPAddresses(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetDPAddresses(soap, data), 0) || soap_put_PointerTo_tds__GetDPAddresses(soap, data, "tds:GetDPAddresses", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDPAddresses ** SOAP_FMAC4 soap_get_PointerTo_tds__GetDPAddresses(struct soap*, _tds__GetDPAddresses **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetDPAddresses
#define soap_read_PointerTo_tds__GetDPAddresses(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetDPAddresses(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetDPAddresses(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetRemoteDiscoveryMode
#define SOAP_TYPE_PointerTo_tds__SetRemoteDiscoveryMode (1657)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetRemoteDiscoveryMode(struct soap*, _tds__SetRemoteDiscoveryMode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetRemoteDiscoveryMode(struct soap*, const char *, int, _tds__SetRemoteDiscoveryMode *const*, const char *);
SOAP_FMAC3 _tds__SetRemoteDiscoveryMode ** SOAP_FMAC4 soap_in_PointerTo_tds__SetRemoteDiscoveryMode(struct soap*, const char*, _tds__SetRemoteDiscoveryMode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetRemoteDiscoveryMode(struct soap*, _tds__SetRemoteDiscoveryMode *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetRemoteDiscoveryMode
#define soap_write_PointerTo_tds__SetRemoteDiscoveryMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetRemoteDiscoveryMode(soap, data), 0) || soap_put_PointerTo_tds__SetRemoteDiscoveryMode(soap, data, "tds:SetRemoteDiscoveryMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetRemoteDiscoveryMode ** SOAP_FMAC4 soap_get_PointerTo_tds__SetRemoteDiscoveryMode(struct soap*, _tds__SetRemoteDiscoveryMode **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetRemoteDiscoveryMode
#define soap_read_PointerTo_tds__SetRemoteDiscoveryMode(soap, data) ( ((data) ? (soap_default_PointerTo_tds__SetRemoteDiscoveryMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetRemoteDiscoveryMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetRemoteDiscoveryMode
#define SOAP_TYPE_PointerTo_tds__GetRemoteDiscoveryMode (1653)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetRemoteDiscoveryMode(struct soap*, _tds__GetRemoteDiscoveryMode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetRemoteDiscoveryMode(struct soap*, const char *, int, _tds__GetRemoteDiscoveryMode *const*, const char *);
SOAP_FMAC3 _tds__GetRemoteDiscoveryMode ** SOAP_FMAC4 soap_in_PointerTo_tds__GetRemoteDiscoveryMode(struct soap*, const char*, _tds__GetRemoteDiscoveryMode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetRemoteDiscoveryMode(struct soap*, _tds__GetRemoteDiscoveryMode *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetRemoteDiscoveryMode
#define soap_write_PointerTo_tds__GetRemoteDiscoveryMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetRemoteDiscoveryMode(soap, data), 0) || soap_put_PointerTo_tds__GetRemoteDiscoveryMode(soap, data, "tds:GetRemoteDiscoveryMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetRemoteDiscoveryMode ** SOAP_FMAC4 soap_get_PointerTo_tds__GetRemoteDiscoveryMode(struct soap*, _tds__GetRemoteDiscoveryMode **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetRemoteDiscoveryMode
#define soap_read_PointerTo_tds__GetRemoteDiscoveryMode(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetRemoteDiscoveryMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetRemoteDiscoveryMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetDiscoveryMode
#define SOAP_TYPE_PointerTo_tds__SetDiscoveryMode (1649)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetDiscoveryMode(struct soap*, _tds__SetDiscoveryMode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetDiscoveryMode(struct soap*, const char *, int, _tds__SetDiscoveryMode *const*, const char *);
SOAP_FMAC3 _tds__SetDiscoveryMode ** SOAP_FMAC4 soap_in_PointerTo_tds__SetDiscoveryMode(struct soap*, const char*, _tds__SetDiscoveryMode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetDiscoveryMode(struct soap*, _tds__SetDiscoveryMode *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetDiscoveryMode
#define soap_write_PointerTo_tds__SetDiscoveryMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetDiscoveryMode(soap, data), 0) || soap_put_PointerTo_tds__SetDiscoveryMode(soap, data, "tds:SetDiscoveryMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetDiscoveryMode ** SOAP_FMAC4 soap_get_PointerTo_tds__SetDiscoveryMode(struct soap*, _tds__SetDiscoveryMode **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetDiscoveryMode
#define soap_read_PointerTo_tds__SetDiscoveryMode(soap, data) ( ((data) ? (soap_default_PointerTo_tds__SetDiscoveryMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetDiscoveryMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetDiscoveryMode
#define SOAP_TYPE_PointerTo_tds__GetDiscoveryMode (1645)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetDiscoveryMode(struct soap*, _tds__GetDiscoveryMode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetDiscoveryMode(struct soap*, const char *, int, _tds__GetDiscoveryMode *const*, const char *);
SOAP_FMAC3 _tds__GetDiscoveryMode ** SOAP_FMAC4 soap_in_PointerTo_tds__GetDiscoveryMode(struct soap*, const char*, _tds__GetDiscoveryMode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetDiscoveryMode(struct soap*, _tds__GetDiscoveryMode *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetDiscoveryMode
#define soap_write_PointerTo_tds__GetDiscoveryMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetDiscoveryMode(soap, data), 0) || soap_put_PointerTo_tds__GetDiscoveryMode(soap, data, "tds:GetDiscoveryMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDiscoveryMode ** SOAP_FMAC4 soap_get_PointerTo_tds__GetDiscoveryMode(struct soap*, _tds__GetDiscoveryMode **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetDiscoveryMode
#define soap_read_PointerTo_tds__GetDiscoveryMode(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetDiscoveryMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetDiscoveryMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__RemoveScopes
#define SOAP_TYPE_PointerTo_tds__RemoveScopes (1641)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__RemoveScopes(struct soap*, _tds__RemoveScopes *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__RemoveScopes(struct soap*, const char *, int, _tds__RemoveScopes *const*, const char *);
SOAP_FMAC3 _tds__RemoveScopes ** SOAP_FMAC4 soap_in_PointerTo_tds__RemoveScopes(struct soap*, const char*, _tds__RemoveScopes **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__RemoveScopes(struct soap*, _tds__RemoveScopes *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__RemoveScopes
#define soap_write_PointerTo_tds__RemoveScopes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__RemoveScopes(soap, data), 0) || soap_put_PointerTo_tds__RemoveScopes(soap, data, "tds:RemoveScopes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__RemoveScopes ** SOAP_FMAC4 soap_get_PointerTo_tds__RemoveScopes(struct soap*, _tds__RemoveScopes **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__RemoveScopes
#define soap_read_PointerTo_tds__RemoveScopes(soap, data) ( ((data) ? (soap_default_PointerTo_tds__RemoveScopes(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__RemoveScopes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__AddScopes
#define SOAP_TYPE_PointerTo_tds__AddScopes (1637)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__AddScopes(struct soap*, _tds__AddScopes *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__AddScopes(struct soap*, const char *, int, _tds__AddScopes *const*, const char *);
SOAP_FMAC3 _tds__AddScopes ** SOAP_FMAC4 soap_in_PointerTo_tds__AddScopes(struct soap*, const char*, _tds__AddScopes **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__AddScopes(struct soap*, _tds__AddScopes *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__AddScopes
#define soap_write_PointerTo_tds__AddScopes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__AddScopes(soap, data), 0) || soap_put_PointerTo_tds__AddScopes(soap, data, "tds:AddScopes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__AddScopes ** SOAP_FMAC4 soap_get_PointerTo_tds__AddScopes(struct soap*, _tds__AddScopes **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__AddScopes
#define soap_read_PointerTo_tds__AddScopes(soap, data) ( ((data) ? (soap_default_PointerTo_tds__AddScopes(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__AddScopes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetScopes
#define SOAP_TYPE_PointerTo_tds__SetScopes (1633)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetScopes(struct soap*, _tds__SetScopes *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetScopes(struct soap*, const char *, int, _tds__SetScopes *const*, const char *);
SOAP_FMAC3 _tds__SetScopes ** SOAP_FMAC4 soap_in_PointerTo_tds__SetScopes(struct soap*, const char*, _tds__SetScopes **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetScopes(struct soap*, _tds__SetScopes *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetScopes
#define soap_write_PointerTo_tds__SetScopes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetScopes(soap, data), 0) || soap_put_PointerTo_tds__SetScopes(soap, data, "tds:SetScopes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetScopes ** SOAP_FMAC4 soap_get_PointerTo_tds__SetScopes(struct soap*, _tds__SetScopes **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetScopes
#define soap_read_PointerTo_tds__SetScopes(soap, data) ( ((data) ? (soap_default_PointerTo_tds__SetScopes(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetScopes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetScopes
#define SOAP_TYPE_PointerTo_tds__GetScopes (1629)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetScopes(struct soap*, _tds__GetScopes *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetScopes(struct soap*, const char *, int, _tds__GetScopes *const*, const char *);
SOAP_FMAC3 _tds__GetScopes ** SOAP_FMAC4 soap_in_PointerTo_tds__GetScopes(struct soap*, const char*, _tds__GetScopes **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetScopes(struct soap*, _tds__GetScopes *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetScopes
#define soap_write_PointerTo_tds__GetScopes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetScopes(soap, data), 0) || soap_put_PointerTo_tds__GetScopes(soap, data, "tds:GetScopes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetScopes ** SOAP_FMAC4 soap_get_PointerTo_tds__GetScopes(struct soap*, _tds__GetScopes **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetScopes
#define soap_read_PointerTo_tds__GetScopes(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetScopes(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetScopes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetSystemSupportInformation
#define SOAP_TYPE_PointerTo_tds__GetSystemSupportInformation (1625)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetSystemSupportInformation(struct soap*, _tds__GetSystemSupportInformation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetSystemSupportInformation(struct soap*, const char *, int, _tds__GetSystemSupportInformation *const*, const char *);
SOAP_FMAC3 _tds__GetSystemSupportInformation ** SOAP_FMAC4 soap_in_PointerTo_tds__GetSystemSupportInformation(struct soap*, const char*, _tds__GetSystemSupportInformation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetSystemSupportInformation(struct soap*, _tds__GetSystemSupportInformation *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetSystemSupportInformation
#define soap_write_PointerTo_tds__GetSystemSupportInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetSystemSupportInformation(soap, data), 0) || soap_put_PointerTo_tds__GetSystemSupportInformation(soap, data, "tds:GetSystemSupportInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemSupportInformation ** SOAP_FMAC4 soap_get_PointerTo_tds__GetSystemSupportInformation(struct soap*, _tds__GetSystemSupportInformation **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetSystemSupportInformation
#define soap_read_PointerTo_tds__GetSystemSupportInformation(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetSystemSupportInformation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetSystemSupportInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetSystemLog
#define SOAP_TYPE_PointerTo_tds__GetSystemLog (1621)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetSystemLog(struct soap*, _tds__GetSystemLog *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetSystemLog(struct soap*, const char *, int, _tds__GetSystemLog *const*, const char *);
SOAP_FMAC3 _tds__GetSystemLog ** SOAP_FMAC4 soap_in_PointerTo_tds__GetSystemLog(struct soap*, const char*, _tds__GetSystemLog **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetSystemLog(struct soap*, _tds__GetSystemLog *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetSystemLog
#define soap_write_PointerTo_tds__GetSystemLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetSystemLog(soap, data), 0) || soap_put_PointerTo_tds__GetSystemLog(soap, data, "tds:GetSystemLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemLog ** SOAP_FMAC4 soap_get_PointerTo_tds__GetSystemLog(struct soap*, _tds__GetSystemLog **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetSystemLog
#define soap_read_PointerTo_tds__GetSystemLog(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetSystemLog(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetSystemLog(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetSystemBackup
#define SOAP_TYPE_PointerTo_tds__GetSystemBackup (1617)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetSystemBackup(struct soap*, _tds__GetSystemBackup *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetSystemBackup(struct soap*, const char *, int, _tds__GetSystemBackup *const*, const char *);
SOAP_FMAC3 _tds__GetSystemBackup ** SOAP_FMAC4 soap_in_PointerTo_tds__GetSystemBackup(struct soap*, const char*, _tds__GetSystemBackup **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetSystemBackup(struct soap*, _tds__GetSystemBackup *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetSystemBackup
#define soap_write_PointerTo_tds__GetSystemBackup(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetSystemBackup(soap, data), 0) || soap_put_PointerTo_tds__GetSystemBackup(soap, data, "tds:GetSystemBackup", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemBackup ** SOAP_FMAC4 soap_get_PointerTo_tds__GetSystemBackup(struct soap*, _tds__GetSystemBackup **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetSystemBackup
#define soap_read_PointerTo_tds__GetSystemBackup(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetSystemBackup(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetSystemBackup(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__RestoreSystem
#define SOAP_TYPE_PointerTo_tds__RestoreSystem (1613)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__RestoreSystem(struct soap*, _tds__RestoreSystem *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__RestoreSystem(struct soap*, const char *, int, _tds__RestoreSystem *const*, const char *);
SOAP_FMAC3 _tds__RestoreSystem ** SOAP_FMAC4 soap_in_PointerTo_tds__RestoreSystem(struct soap*, const char*, _tds__RestoreSystem **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__RestoreSystem(struct soap*, _tds__RestoreSystem *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__RestoreSystem
#define soap_write_PointerTo_tds__RestoreSystem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__RestoreSystem(soap, data), 0) || soap_put_PointerTo_tds__RestoreSystem(soap, data, "tds:RestoreSystem", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__RestoreSystem ** SOAP_FMAC4 soap_get_PointerTo_tds__RestoreSystem(struct soap*, _tds__RestoreSystem **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__RestoreSystem
#define soap_read_PointerTo_tds__RestoreSystem(soap, data) ( ((data) ? (soap_default_PointerTo_tds__RestoreSystem(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__RestoreSystem(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SystemReboot
#define SOAP_TYPE_PointerTo_tds__SystemReboot (1609)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SystemReboot(struct soap*, _tds__SystemReboot *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SystemReboot(struct soap*, const char *, int, _tds__SystemReboot *const*, const char *);
SOAP_FMAC3 _tds__SystemReboot ** SOAP_FMAC4 soap_in_PointerTo_tds__SystemReboot(struct soap*, const char*, _tds__SystemReboot **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SystemReboot(struct soap*, _tds__SystemReboot *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SystemReboot
#define soap_write_PointerTo_tds__SystemReboot(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SystemReboot(soap, data), 0) || soap_put_PointerTo_tds__SystemReboot(soap, data, "tds:SystemReboot", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SystemReboot ** SOAP_FMAC4 soap_get_PointerTo_tds__SystemReboot(struct soap*, _tds__SystemReboot **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SystemReboot
#define soap_read_PointerTo_tds__SystemReboot(soap, data) ( ((data) ? (soap_default_PointerTo_tds__SystemReboot(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__SystemReboot(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__UpgradeSystemFirmware
#define SOAP_TYPE_PointerTo_tds__UpgradeSystemFirmware (1605)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__UpgradeSystemFirmware(struct soap*, _tds__UpgradeSystemFirmware *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__UpgradeSystemFirmware(struct soap*, const char *, int, _tds__UpgradeSystemFirmware *const*, const char *);
SOAP_FMAC3 _tds__UpgradeSystemFirmware ** SOAP_FMAC4 soap_in_PointerTo_tds__UpgradeSystemFirmware(struct soap*, const char*, _tds__UpgradeSystemFirmware **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__UpgradeSystemFirmware(struct soap*, _tds__UpgradeSystemFirmware *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__UpgradeSystemFirmware
#define soap_write_PointerTo_tds__UpgradeSystemFirmware(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__UpgradeSystemFirmware(soap, data), 0) || soap_put_PointerTo_tds__UpgradeSystemFirmware(soap, data, "tds:UpgradeSystemFirmware", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__UpgradeSystemFirmware ** SOAP_FMAC4 soap_get_PointerTo_tds__UpgradeSystemFirmware(struct soap*, _tds__UpgradeSystemFirmware **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__UpgradeSystemFirmware
#define soap_read_PointerTo_tds__UpgradeSystemFirmware(soap, data) ( ((data) ? (soap_default_PointerTo_tds__UpgradeSystemFirmware(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__UpgradeSystemFirmware(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetSystemFactoryDefault
#define SOAP_TYPE_PointerTo_tds__SetSystemFactoryDefault (1601)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetSystemFactoryDefault(struct soap*, _tds__SetSystemFactoryDefault *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetSystemFactoryDefault(struct soap*, const char *, int, _tds__SetSystemFactoryDefault *const*, const char *);
SOAP_FMAC3 _tds__SetSystemFactoryDefault ** SOAP_FMAC4 soap_in_PointerTo_tds__SetSystemFactoryDefault(struct soap*, const char*, _tds__SetSystemFactoryDefault **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetSystemFactoryDefault(struct soap*, _tds__SetSystemFactoryDefault *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetSystemFactoryDefault
#define soap_write_PointerTo_tds__SetSystemFactoryDefault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetSystemFactoryDefault(soap, data), 0) || soap_put_PointerTo_tds__SetSystemFactoryDefault(soap, data, "tds:SetSystemFactoryDefault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetSystemFactoryDefault ** SOAP_FMAC4 soap_get_PointerTo_tds__SetSystemFactoryDefault(struct soap*, _tds__SetSystemFactoryDefault **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetSystemFactoryDefault
#define soap_read_PointerTo_tds__SetSystemFactoryDefault(soap, data) ( ((data) ? (soap_default_PointerTo_tds__SetSystemFactoryDefault(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetSystemFactoryDefault(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetSystemDateAndTime
#define SOAP_TYPE_PointerTo_tds__GetSystemDateAndTime (1597)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetSystemDateAndTime(struct soap*, _tds__GetSystemDateAndTime *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetSystemDateAndTime(struct soap*, const char *, int, _tds__GetSystemDateAndTime *const*, const char *);
SOAP_FMAC3 _tds__GetSystemDateAndTime ** SOAP_FMAC4 soap_in_PointerTo_tds__GetSystemDateAndTime(struct soap*, const char*, _tds__GetSystemDateAndTime **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetSystemDateAndTime(struct soap*, _tds__GetSystemDateAndTime *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetSystemDateAndTime
#define soap_write_PointerTo_tds__GetSystemDateAndTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetSystemDateAndTime(soap, data), 0) || soap_put_PointerTo_tds__GetSystemDateAndTime(soap, data, "tds:GetSystemDateAndTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemDateAndTime ** SOAP_FMAC4 soap_get_PointerTo_tds__GetSystemDateAndTime(struct soap*, _tds__GetSystemDateAndTime **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetSystemDateAndTime
#define soap_read_PointerTo_tds__GetSystemDateAndTime(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetSystemDateAndTime(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetSystemDateAndTime(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__SetSystemDateAndTime
#define SOAP_TYPE_PointerTo_tds__SetSystemDateAndTime (1593)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__SetSystemDateAndTime(struct soap*, _tds__SetSystemDateAndTime *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__SetSystemDateAndTime(struct soap*, const char *, int, _tds__SetSystemDateAndTime *const*, const char *);
SOAP_FMAC3 _tds__SetSystemDateAndTime ** SOAP_FMAC4 soap_in_PointerTo_tds__SetSystemDateAndTime(struct soap*, const char*, _tds__SetSystemDateAndTime **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__SetSystemDateAndTime(struct soap*, _tds__SetSystemDateAndTime *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__SetSystemDateAndTime
#define soap_write_PointerTo_tds__SetSystemDateAndTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__SetSystemDateAndTime(soap, data), 0) || soap_put_PointerTo_tds__SetSystemDateAndTime(soap, data, "tds:SetSystemDateAndTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__SetSystemDateAndTime ** SOAP_FMAC4 soap_get_PointerTo_tds__SetSystemDateAndTime(struct soap*, _tds__SetSystemDateAndTime **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__SetSystemDateAndTime
#define soap_read_PointerTo_tds__SetSystemDateAndTime(soap, data) ( ((data) ? (soap_default_PointerTo_tds__SetSystemDateAndTime(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__SetSystemDateAndTime(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetDeviceInformation
#define SOAP_TYPE_PointerTo_tds__GetDeviceInformation (1589)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetDeviceInformation(struct soap*, const char *, int, _tds__GetDeviceInformation *const*, const char *);
SOAP_FMAC3 _tds__GetDeviceInformation ** SOAP_FMAC4 soap_in_PointerTo_tds__GetDeviceInformation(struct soap*, const char*, _tds__GetDeviceInformation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetDeviceInformation
#define soap_write_PointerTo_tds__GetDeviceInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetDeviceInformation(soap, data), 0) || soap_put_PointerTo_tds__GetDeviceInformation(soap, data, "tds:GetDeviceInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetDeviceInformation ** SOAP_FMAC4 soap_get_PointerTo_tds__GetDeviceInformation(struct soap*, _tds__GetDeviceInformation **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetDeviceInformation
#define soap_read_PointerTo_tds__GetDeviceInformation(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetDeviceInformation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetDeviceInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetServiceCapabilities
#define SOAP_TYPE_PointerTo_tds__GetServiceCapabilities (1585)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetServiceCapabilities(struct soap*, const char *, int, _tds__GetServiceCapabilities *const*, const char *);
SOAP_FMAC3 _tds__GetServiceCapabilities ** SOAP_FMAC4 soap_in_PointerTo_tds__GetServiceCapabilities(struct soap*, const char*, _tds__GetServiceCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetServiceCapabilities
#define soap_write_PointerTo_tds__GetServiceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetServiceCapabilities(soap, data), 0) || soap_put_PointerTo_tds__GetServiceCapabilities(soap, data, "tds:GetServiceCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetServiceCapabilities ** SOAP_FMAC4 soap_get_PointerTo_tds__GetServiceCapabilities(struct soap*, _tds__GetServiceCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetServiceCapabilities
#define soap_read_PointerTo_tds__GetServiceCapabilities(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetServiceCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetServiceCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetServices
#define SOAP_TYPE_PointerTo_tds__GetServices (1581)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetServices(struct soap*, _tds__GetServices *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetServices(struct soap*, const char *, int, _tds__GetServices *const*, const char *);
SOAP_FMAC3 _tds__GetServices ** SOAP_FMAC4 soap_in_PointerTo_tds__GetServices(struct soap*, const char*, _tds__GetServices **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetServices(struct soap*, _tds__GetServices *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetServices
#define soap_write_PointerTo_tds__GetServices(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetServices(soap, data), 0) || soap_put_PointerTo_tds__GetServices(soap, data, "tds:GetServices", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetServices ** SOAP_FMAC4 soap_get_PointerTo_tds__GetServices(struct soap*, _tds__GetServices **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetServices
#define soap_read_PointerTo_tds__GetServices(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetServices(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetServices(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToxsd__NCName
#define SOAP_TYPE_PointerToxsd__NCName (1580)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__NCName(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__NCName(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToxsd__NCName(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__NCName(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerToxsd__NCName
#define soap_write_PointerToxsd__NCName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToxsd__NCName(soap, data), 0) || soap_put_PointerToxsd__NCName(soap, data, "xsd:NCName", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToxsd__NCName(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerToxsd__NCName
#define soap_read_PointerToxsd__NCName(soap, data) ( ((data) ? (soap_default_PointerToxsd__NCName(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerToxsd__NCName(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__vectorTemplateOf_wstop__TopicNamespaceType_Topic
#define SOAP_TYPE_PointerTostd__vectorTemplateOf_wstop__TopicNamespaceType_Topic (1579)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__vectorTemplateOf_wstop__TopicNamespaceType_Topic(struct soap*, std::vector<_wstop__TopicNamespaceType_Topic> *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__vectorTemplateOf_wstop__TopicNamespaceType_Topic(struct soap*, const char *, int, std::vector<_wstop__TopicNamespaceType_Topic> *const*, const char *);
SOAP_FMAC3 std::vector<_wstop__TopicNamespaceType_Topic> ** SOAP_FMAC4 soap_in_PointerTostd__vectorTemplateOf_wstop__TopicNamespaceType_Topic(struct soap*, const char*, std::vector<_wstop__TopicNamespaceType_Topic> **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__vectorTemplateOf_wstop__TopicNamespaceType_Topic(struct soap*, std::vector<_wstop__TopicNamespaceType_Topic> *const*, const char*, const char*);

#ifndef soap_write_PointerTostd__vectorTemplateOf_wstop__TopicNamespaceType_Topic
#define soap_write_PointerTostd__vectorTemplateOf_wstop__TopicNamespaceType_Topic(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__vectorTemplateOf_wstop__TopicNamespaceType_Topic(soap, data), 0) || soap_put_PointerTostd__vectorTemplateOf_wstop__TopicNamespaceType_Topic(soap, data, "", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::vector<_wstop__TopicNamespaceType_Topic> ** SOAP_FMAC4 soap_get_PointerTostd__vectorTemplateOf_wstop__TopicNamespaceType_Topic(struct soap*, std::vector<_wstop__TopicNamespaceType_Topic> **, const char*, const char*);

#ifndef soap_read_PointerTostd__vectorTemplateOf_wstop__TopicNamespaceType_Topic
#define soap_read_PointerTostd__vectorTemplateOf_wstop__TopicNamespaceType_Topic(soap, data) ( ((data) ? (soap_default_PointerTostd__vectorTemplateOf_wstop__TopicNamespaceType_Topic(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTostd__vectorTemplateOf_wstop__TopicNamespaceType_Topic(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowstop__ConcreteTopicExpression
#define SOAP_TYPE_PointerTowstop__ConcreteTopicExpression (1577)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowstop__ConcreteTopicExpression(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowstop__ConcreteTopicExpression(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTowstop__ConcreteTopicExpression(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowstop__ConcreteTopicExpression(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTowstop__ConcreteTopicExpression
#define soap_write_PointerTowstop__ConcreteTopicExpression(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowstop__ConcreteTopicExpression(soap, data), 0) || soap_put_PointerTowstop__ConcreteTopicExpression(soap, data, "wstop:ConcreteTopicExpression", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTowstop__ConcreteTopicExpression(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTowstop__ConcreteTopicExpression
#define soap_read_PointerTowstop__ConcreteTopicExpression(soap, data) ( ((data) ? (soap_default_PointerTowstop__ConcreteTopicExpression(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTowstop__ConcreteTopicExpression(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToxsd__QName
#define SOAP_TYPE_PointerToxsd__QName (1576)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__QName(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__QName(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToxsd__QName(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__QName(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerToxsd__QName
#define soap_write_PointerToxsd__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToxsd__QName(soap, data), 0) || soap_put_PointerToxsd__QName(soap, data, "xsd:QName", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToxsd__QName(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerToxsd__QName
#define soap_read_PointerToxsd__QName(soap, data) ( ((data) ? (soap_default_PointerToxsd__QName(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerToxsd__QName(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowstop__TopicType
#define SOAP_TYPE_PointerTowstop__TopicType (1574)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowstop__TopicType(struct soap*, wstop__TopicType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowstop__TopicType(struct soap*, const char *, int, wstop__TopicType *const*, const char *);
SOAP_FMAC3 wstop__TopicType ** SOAP_FMAC4 soap_in_PointerTowstop__TopicType(struct soap*, const char*, wstop__TopicType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowstop__TopicType(struct soap*, wstop__TopicType *const*, const char*, const char*);

#ifndef soap_write_PointerTowstop__TopicType
#define soap_write_PointerTowstop__TopicType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowstop__TopicType(soap, data), 0) || soap_put_PointerTowstop__TopicType(soap, data, "wstop:TopicType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wstop__TopicType ** SOAP_FMAC4 soap_get_PointerTowstop__TopicType(struct soap*, wstop__TopicType **, const char*, const char*);

#ifndef soap_read_PointerTowstop__TopicType
#define soap_read_PointerTowstop__TopicType(soap, data) ( ((data) ? (soap_default_PointerTowstop__TopicType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTowstop__TopicType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowstop__QueryExpressionType
#define SOAP_TYPE_PointerTowstop__QueryExpressionType (1573)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowstop__QueryExpressionType(struct soap*, wstop__QueryExpressionType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowstop__QueryExpressionType(struct soap*, const char *, int, wstop__QueryExpressionType *const*, const char *);
SOAP_FMAC3 wstop__QueryExpressionType ** SOAP_FMAC4 soap_in_PointerTowstop__QueryExpressionType(struct soap*, const char*, wstop__QueryExpressionType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowstop__QueryExpressionType(struct soap*, wstop__QueryExpressionType *const*, const char*, const char*);

#ifndef soap_write_PointerTowstop__QueryExpressionType
#define soap_write_PointerTowstop__QueryExpressionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowstop__QueryExpressionType(soap, data), 0) || soap_put_PointerTowstop__QueryExpressionType(soap, data, "wstop:QueryExpressionType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wstop__QueryExpressionType ** SOAP_FMAC4 soap_get_PointerTowstop__QueryExpressionType(struct soap*, wstop__QueryExpressionType **, const char*, const char*);

#ifndef soap_read_PointerTowstop__QueryExpressionType
#define soap_read_PointerTowstop__QueryExpressionType(soap, data) ( ((data) ? (soap_default_PointerTowstop__QueryExpressionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTowstop__QueryExpressionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDConfigurationExtension
#define SOAP_TYPE_PointerTott__OSDConfigurationExtension (1570)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDConfigurationExtension(struct soap*, tt__OSDConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDConfigurationExtension(struct soap*, const char *, int, tt__OSDConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__OSDConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__OSDConfigurationExtension(struct soap*, const char*, tt__OSDConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDConfigurationExtension(struct soap*, tt__OSDConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDConfigurationExtension
#define soap_write_PointerTott__OSDConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDConfigurationExtension(soap, data), 0) || soap_put_PointerTott__OSDConfigurationExtension(soap, data, "tt:OSDConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__OSDConfigurationExtension(struct soap*, tt__OSDConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDConfigurationExtension
#define soap_read_PointerTott__OSDConfigurationExtension(soap, data) ( ((data) ? (soap_default_PointerTott__OSDConfigurationExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__OSDConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDImgConfiguration
#define SOAP_TYPE_PointerTott__OSDImgConfiguration (1569)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDImgConfiguration(struct soap*, tt__OSDImgConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDImgConfiguration(struct soap*, const char *, int, tt__OSDImgConfiguration *const*, const char *);
SOAP_FMAC3 tt__OSDImgConfiguration ** SOAP_FMAC4 soap_in_PointerTott__OSDImgConfiguration(struct soap*, const char*, tt__OSDImgConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDImgConfiguration(struct soap*, tt__OSDImgConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDImgConfiguration
#define soap_write_PointerTott__OSDImgConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDImgConfiguration(soap, data), 0) || soap_put_PointerTott__OSDImgConfiguration(soap, data, "tt:OSDImgConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDImgConfiguration ** SOAP_FMAC4 soap_get_PointerTott__OSDImgConfiguration(struct soap*, tt__OSDImgConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDImgConfiguration
#define soap_read_PointerTott__OSDImgConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__OSDImgConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__OSDImgConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDTextConfiguration
#define SOAP_TYPE_PointerTott__OSDTextConfiguration (1568)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDTextConfiguration(struct soap*, tt__OSDTextConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDTextConfiguration(struct soap*, const char *, int, tt__OSDTextConfiguration *const*, const char *);
SOAP_FMAC3 tt__OSDTextConfiguration ** SOAP_FMAC4 soap_in_PointerTott__OSDTextConfiguration(struct soap*, const char*, tt__OSDTextConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDTextConfiguration(struct soap*, tt__OSDTextConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDTextConfiguration
#define soap_write_PointerTott__OSDTextConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDTextConfiguration(soap, data), 0) || soap_put_PointerTott__OSDTextConfiguration(soap, data, "tt:OSDTextConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDTextConfiguration ** SOAP_FMAC4 soap_get_PointerTott__OSDTextConfiguration(struct soap*, tt__OSDTextConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDTextConfiguration
#define soap_read_PointerTott__OSDTextConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__OSDTextConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__OSDTextConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDPosConfiguration
#define SOAP_TYPE_PointerTott__OSDPosConfiguration (1567)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDPosConfiguration(struct soap*, tt__OSDPosConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDPosConfiguration(struct soap*, const char *, int, tt__OSDPosConfiguration *const*, const char *);
SOAP_FMAC3 tt__OSDPosConfiguration ** SOAP_FMAC4 soap_in_PointerTott__OSDPosConfiguration(struct soap*, const char*, tt__OSDPosConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDPosConfiguration(struct soap*, tt__OSDPosConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDPosConfiguration
#define soap_write_PointerTott__OSDPosConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDPosConfiguration(soap, data), 0) || soap_put_PointerTott__OSDPosConfiguration(soap, data, "tt:OSDPosConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDPosConfiguration ** SOAP_FMAC4 soap_get_PointerTott__OSDPosConfiguration(struct soap*, tt__OSDPosConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDPosConfiguration
#define soap_read_PointerTott__OSDPosConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__OSDPosConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__OSDPosConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDReference
#define SOAP_TYPE_PointerTott__OSDReference (1566)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDReference(struct soap*, tt__OSDReference *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDReference(struct soap*, const char *, int, tt__OSDReference *const*, const char *);
SOAP_FMAC3 tt__OSDReference ** SOAP_FMAC4 soap_in_PointerTott__OSDReference(struct soap*, const char*, tt__OSDReference **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDReference(struct soap*, tt__OSDReference *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDReference
#define soap_write_PointerTott__OSDReference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDReference(soap, data), 0) || soap_put_PointerTott__OSDReference(soap, data, "tt:OSDReference", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDReference ** SOAP_FMAC4 soap_get_PointerTott__OSDReference(struct soap*, tt__OSDReference **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDReference
#define soap_read_PointerTott__OSDReference(soap, data) ( ((data) ? (soap_default_PointerTott__OSDReference(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__OSDReference(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MetadataInput
#define SOAP_TYPE_PointerTott__MetadataInput (1565)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MetadataInput(struct soap*, tt__MetadataInput *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MetadataInput(struct soap*, const char *, int, tt__MetadataInput *const*, const char *);
SOAP_FMAC3 tt__MetadataInput ** SOAP_FMAC4 soap_in_PointerTott__MetadataInput(struct soap*, const char*, tt__MetadataInput **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MetadataInput(struct soap*, tt__MetadataInput *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MetadataInput
#define soap_write_PointerTott__MetadataInput(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MetadataInput(soap, data), 0) || soap_put_PointerTott__MetadataInput(soap, data, "tt:MetadataInput", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataInput ** SOAP_FMAC4 soap_get_PointerTott__MetadataInput(struct soap*, tt__MetadataInput **, const char*, const char*);

#ifndef soap_read_PointerTott__MetadataInput
#define soap_read_PointerTott__MetadataInput(soap, data) ( ((data) ? (soap_default_PointerTott__MetadataInput(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__MetadataInput(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SourceIdentification
#define SOAP_TYPE_PointerTott__SourceIdentification (1564)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SourceIdentification(struct soap*, tt__SourceIdentification *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SourceIdentification(struct soap*, const char *, int, tt__SourceIdentification *const*, const char *);
SOAP_FMAC3 tt__SourceIdentification ** SOAP_FMAC4 soap_in_PointerTott__SourceIdentification(struct soap*, const char*, tt__SourceIdentification **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SourceIdentification(struct soap*, tt__SourceIdentification *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SourceIdentification
#define soap_write_PointerTott__SourceIdentification(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SourceIdentification(soap, data), 0) || soap_put_PointerTott__SourceIdentification(soap, data, "tt:SourceIdentification", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SourceIdentification ** SOAP_FMAC4 soap_get_PointerTott__SourceIdentification(struct soap*, tt__SourceIdentification **, const char*, const char*);

#ifndef soap_read_PointerTott__SourceIdentification
#define soap_read_PointerTott__SourceIdentification(soap, data) ( ((data) ? (soap_default_PointerTott__SourceIdentification(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__SourceIdentification(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AnalyticsDeviceEngineConfiguration
#define SOAP_TYPE_PointerTott__AnalyticsDeviceEngineConfiguration (1563)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AnalyticsDeviceEngineConfiguration(struct soap*, tt__AnalyticsDeviceEngineConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AnalyticsDeviceEngineConfiguration(struct soap*, const char *, int, tt__AnalyticsDeviceEngineConfiguration *const*, const char *);
SOAP_FMAC3 tt__AnalyticsDeviceEngineConfiguration ** SOAP_FMAC4 soap_in_PointerTott__AnalyticsDeviceEngineConfiguration(struct soap*, const char*, tt__AnalyticsDeviceEngineConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AnalyticsDeviceEngineConfiguration(struct soap*, tt__AnalyticsDeviceEngineConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AnalyticsDeviceEngineConfiguration
#define soap_write_PointerTott__AnalyticsDeviceEngineConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AnalyticsDeviceEngineConfiguration(soap, data), 0) || soap_put_PointerTott__AnalyticsDeviceEngineConfiguration(soap, data, "tt:AnalyticsDeviceEngineConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsDeviceEngineConfiguration ** SOAP_FMAC4 soap_get_PointerTott__AnalyticsDeviceEngineConfiguration(struct soap*, tt__AnalyticsDeviceEngineConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__AnalyticsDeviceEngineConfiguration
#define soap_read_PointerTott__AnalyticsDeviceEngineConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__AnalyticsDeviceEngineConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__AnalyticsDeviceEngineConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZConfigurationExtension
#define SOAP_TYPE_PointerTott__PTZConfigurationExtension (1562)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZConfigurationExtension(struct soap*, tt__PTZConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZConfigurationExtension(struct soap*, const char *, int, tt__PTZConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__PTZConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__PTZConfigurationExtension(struct soap*, const char*, tt__PTZConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZConfigurationExtension(struct soap*, tt__PTZConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZConfigurationExtension
#define soap_write_PointerTott__PTZConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZConfigurationExtension(soap, data), 0) || soap_put_PointerTott__PTZConfigurationExtension(soap, data, "tt:PTZConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__PTZConfigurationExtension(struct soap*, tt__PTZConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZConfigurationExtension
#define soap_read_PointerTott__PTZConfigurationExtension(soap, data) ( ((data) ? (soap_default_PointerTott__PTZConfigurationExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ZoomLimits
#define SOAP_TYPE_PointerTott__ZoomLimits (1561)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ZoomLimits(struct soap*, tt__ZoomLimits *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ZoomLimits(struct soap*, const char *, int, tt__ZoomLimits *const*, const char *);
SOAP_FMAC3 tt__ZoomLimits ** SOAP_FMAC4 soap_in_PointerTott__ZoomLimits(struct soap*, const char*, tt__ZoomLimits **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ZoomLimits(struct soap*, tt__ZoomLimits *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ZoomLimits
#define soap_write_PointerTott__ZoomLimits(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ZoomLimits(soap, data), 0) || soap_put_PointerTott__ZoomLimits(soap, data, "tt:ZoomLimits", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ZoomLimits ** SOAP_FMAC4 soap_get_PointerTott__ZoomLimits(struct soap*, tt__ZoomLimits **, const char*, const char*);

#ifndef soap_read_PointerTott__ZoomLimits
#define soap_read_PointerTott__ZoomLimits(soap, data) ( ((data) ? (soap_default_PointerTott__ZoomLimits(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ZoomLimits(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PanTiltLimits
#define SOAP_TYPE_PointerTott__PanTiltLimits (1560)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PanTiltLimits(struct soap*, tt__PanTiltLimits *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PanTiltLimits(struct soap*, const char *, int, tt__PanTiltLimits *const*, const char *);
SOAP_FMAC3 tt__PanTiltLimits ** SOAP_FMAC4 soap_in_PointerTott__PanTiltLimits(struct soap*, const char*, tt__PanTiltLimits **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PanTiltLimits(struct soap*, tt__PanTiltLimits *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PanTiltLimits
#define soap_write_PointerTott__PanTiltLimits(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PanTiltLimits(soap, data), 0) || soap_put_PointerTott__PanTiltLimits(soap, data, "tt:PanTiltLimits", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PanTiltLimits ** SOAP_FMAC4 soap_get_PointerTott__PanTiltLimits(struct soap*, tt__PanTiltLimits **, const char*, const char*);

#ifndef soap_read_PointerTott__PanTiltLimits
#define soap_read_PointerTott__PanTiltLimits(soap, data) ( ((data) ? (soap_default_PointerTott__PanTiltLimits(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PanTiltLimits(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZNodeExtension
#define SOAP_TYPE_PointerTott__PTZNodeExtension (1559)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZNodeExtension(struct soap*, tt__PTZNodeExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZNodeExtension(struct soap*, const char *, int, tt__PTZNodeExtension *const*, const char *);
SOAP_FMAC3 tt__PTZNodeExtension ** SOAP_FMAC4 soap_in_PointerTott__PTZNodeExtension(struct soap*, const char*, tt__PTZNodeExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZNodeExtension(struct soap*, tt__PTZNodeExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZNodeExtension
#define soap_write_PointerTott__PTZNodeExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZNodeExtension(soap, data), 0) || soap_put_PointerTott__PTZNodeExtension(soap, data, "tt:PTZNodeExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZNodeExtension ** SOAP_FMAC4 soap_get_PointerTott__PTZNodeExtension(struct soap*, tt__PTZNodeExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZNodeExtension
#define soap_read_PointerTott__PTZNodeExtension(soap, data) ( ((data) ? (soap_default_PointerTott__PTZNodeExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZNodeExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__DigitalIdleState
#define SOAP_TYPE_PointerTott__DigitalIdleState (1558)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__DigitalIdleState(struct soap*, enum tt__DigitalIdleState *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__DigitalIdleState(struct soap*, const char *, int, enum tt__DigitalIdleState *const*, const char *);
SOAP_FMAC3 enum tt__DigitalIdleState ** SOAP_FMAC4 soap_in_PointerTott__DigitalIdleState(struct soap*, const char*, enum tt__DigitalIdleState **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__DigitalIdleState(struct soap*, enum tt__DigitalIdleState *const*, const char*, const char*);

#ifndef soap_write_PointerTott__DigitalIdleState
#define soap_write_PointerTott__DigitalIdleState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__DigitalIdleState(soap, data), 0) || soap_put_PointerTott__DigitalIdleState(soap, data, "tt:DigitalIdleState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__DigitalIdleState ** SOAP_FMAC4 soap_get_PointerTott__DigitalIdleState(struct soap*, enum tt__DigitalIdleState **, const char*, const char*);

#ifndef soap_read_PointerTott__DigitalIdleState
#define soap_read_PointerTott__DigitalIdleState(soap, data) ( ((data) ? (soap_default_PointerTott__DigitalIdleState(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__DigitalIdleState(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkInterfaceExtension
#define SOAP_TYPE_PointerTott__NetworkInterfaceExtension (1557)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkInterfaceExtension(struct soap*, tt__NetworkInterfaceExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkInterfaceExtension(struct soap*, const char *, int, tt__NetworkInterfaceExtension *const*, const char *);
SOAP_FMAC3 tt__NetworkInterfaceExtension ** SOAP_FMAC4 soap_in_PointerTott__NetworkInterfaceExtension(struct soap*, const char*, tt__NetworkInterfaceExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkInterfaceExtension(struct soap*, tt__NetworkInterfaceExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkInterfaceExtension
#define soap_write_PointerTott__NetworkInterfaceExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkInterfaceExtension(soap, data), 0) || soap_put_PointerTott__NetworkInterfaceExtension(soap, data, "tt:NetworkInterfaceExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceExtension ** SOAP_FMAC4 soap_get_PointerTott__NetworkInterfaceExtension(struct soap*, tt__NetworkInterfaceExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkInterfaceExtension
#define soap_read_PointerTott__NetworkInterfaceExtension(soap, data) ( ((data) ? (soap_default_PointerTott__NetworkInterfaceExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__NetworkInterfaceExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IPv6NetworkInterface
#define SOAP_TYPE_PointerTott__IPv6NetworkInterface (1556)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IPv6NetworkInterface(struct soap*, tt__IPv6NetworkInterface *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IPv6NetworkInterface(struct soap*, const char *, int, tt__IPv6NetworkInterface *const*, const char *);
SOAP_FMAC3 tt__IPv6NetworkInterface ** SOAP_FMAC4 soap_in_PointerTott__IPv6NetworkInterface(struct soap*, const char*, tt__IPv6NetworkInterface **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IPv6NetworkInterface(struct soap*, tt__IPv6NetworkInterface *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IPv6NetworkInterface
#define soap_write_PointerTott__IPv6NetworkInterface(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IPv6NetworkInterface(soap, data), 0) || soap_put_PointerTott__IPv6NetworkInterface(soap, data, "tt:IPv6NetworkInterface", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPv6NetworkInterface ** SOAP_FMAC4 soap_get_PointerTott__IPv6NetworkInterface(struct soap*, tt__IPv6NetworkInterface **, const char*, const char*);

#ifndef soap_read_PointerTott__IPv6NetworkInterface
#define soap_read_PointerTott__IPv6NetworkInterface(soap, data) ( ((data) ? (soap_default_PointerTott__IPv6NetworkInterface(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__IPv6NetworkInterface(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IPv4NetworkInterface
#define SOAP_TYPE_PointerTott__IPv4NetworkInterface (1555)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IPv4NetworkInterface(struct soap*, tt__IPv4NetworkInterface *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IPv4NetworkInterface(struct soap*, const char *, int, tt__IPv4NetworkInterface *const*, const char *);
SOAP_FMAC3 tt__IPv4NetworkInterface ** SOAP_FMAC4 soap_in_PointerTott__IPv4NetworkInterface(struct soap*, const char*, tt__IPv4NetworkInterface **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IPv4NetworkInterface(struct soap*, tt__IPv4NetworkInterface *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IPv4NetworkInterface
#define soap_write_PointerTott__IPv4NetworkInterface(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IPv4NetworkInterface(soap, data), 0) || soap_put_PointerTott__IPv4NetworkInterface(soap, data, "tt:IPv4NetworkInterface", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPv4NetworkInterface ** SOAP_FMAC4 soap_get_PointerTott__IPv4NetworkInterface(struct soap*, tt__IPv4NetworkInterface **, const char*, const char*);

#ifndef soap_read_PointerTott__IPv4NetworkInterface
#define soap_read_PointerTott__IPv4NetworkInterface(soap, data) ( ((data) ? (soap_default_PointerTott__IPv4NetworkInterface(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__IPv4NetworkInterface(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkInterfaceLink
#define SOAP_TYPE_PointerTott__NetworkInterfaceLink (1554)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkInterfaceLink(struct soap*, tt__NetworkInterfaceLink *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkInterfaceLink(struct soap*, const char *, int, tt__NetworkInterfaceLink *const*, const char *);
SOAP_FMAC3 tt__NetworkInterfaceLink ** SOAP_FMAC4 soap_in_PointerTott__NetworkInterfaceLink(struct soap*, const char*, tt__NetworkInterfaceLink **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkInterfaceLink(struct soap*, tt__NetworkInterfaceLink *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkInterfaceLink
#define soap_write_PointerTott__NetworkInterfaceLink(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkInterfaceLink(soap, data), 0) || soap_put_PointerTott__NetworkInterfaceLink(soap, data, "tt:NetworkInterfaceLink", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceLink ** SOAP_FMAC4 soap_get_PointerTott__NetworkInterfaceLink(struct soap*, tt__NetworkInterfaceLink **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkInterfaceLink
#define soap_read_PointerTott__NetworkInterfaceLink(soap, data) ( ((data) ? (soap_default_PointerTott__NetworkInterfaceLink(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__NetworkInterfaceLink(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkInterfaceInfo
#define SOAP_TYPE_PointerTott__NetworkInterfaceInfo (1553)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkInterfaceInfo(struct soap*, tt__NetworkInterfaceInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkInterfaceInfo(struct soap*, const char *, int, tt__NetworkInterfaceInfo *const*, const char *);
SOAP_FMAC3 tt__NetworkInterfaceInfo ** SOAP_FMAC4 soap_in_PointerTott__NetworkInterfaceInfo(struct soap*, const char*, tt__NetworkInterfaceInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkInterfaceInfo(struct soap*, tt__NetworkInterfaceInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkInterfaceInfo
#define soap_write_PointerTott__NetworkInterfaceInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkInterfaceInfo(soap, data), 0) || soap_put_PointerTott__NetworkInterfaceInfo(soap, data, "tt:NetworkInterfaceInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceInfo ** SOAP_FMAC4 soap_get_PointerTott__NetworkInterfaceInfo(struct soap*, tt__NetworkInterfaceInfo **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkInterfaceInfo
#define soap_read_PointerTott__NetworkInterfaceInfo(soap, data) ( ((data) ? (soap_default_PointerTott__NetworkInterfaceInfo(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__NetworkInterfaceInfo(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoOutputExtension
#define SOAP_TYPE_PointerTott__VideoOutputExtension (1552)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoOutputExtension(struct soap*, tt__VideoOutputExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoOutputExtension(struct soap*, const char *, int, tt__VideoOutputExtension *const*, const char *);
SOAP_FMAC3 tt__VideoOutputExtension ** SOAP_FMAC4 soap_in_PointerTott__VideoOutputExtension(struct soap*, const char*, tt__VideoOutputExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoOutputExtension(struct soap*, tt__VideoOutputExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoOutputExtension
#define soap_write_PointerTott__VideoOutputExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoOutputExtension(soap, data), 0) || soap_put_PointerTott__VideoOutputExtension(soap, data, "tt:VideoOutputExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoOutputExtension ** SOAP_FMAC4 soap_get_PointerTott__VideoOutputExtension(struct soap*, tt__VideoOutputExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoOutputExtension
#define soap_read_PointerTott__VideoOutputExtension(soap, data) ( ((data) ? (soap_default_PointerTott__VideoOutputExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__VideoOutputExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MetadataConfigurationExtension
#define SOAP_TYPE_PointerTott__MetadataConfigurationExtension (1551)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MetadataConfigurationExtension(struct soap*, tt__MetadataConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MetadataConfigurationExtension(struct soap*, const char *, int, tt__MetadataConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__MetadataConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__MetadataConfigurationExtension(struct soap*, const char*, tt__MetadataConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MetadataConfigurationExtension(struct soap*, tt__MetadataConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MetadataConfigurationExtension
#define soap_write_PointerTott__MetadataConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MetadataConfigurationExtension(soap, data), 0) || soap_put_PointerTott__MetadataConfigurationExtension(soap, data, "tt:MetadataConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__MetadataConfigurationExtension(struct soap*, tt__MetadataConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__MetadataConfigurationExtension
#define soap_read_PointerTott__MetadataConfigurationExtension(soap, data) ( ((data) ? (soap_default_PointerTott__MetadataConfigurationExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__MetadataConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__EventSubscription
#define SOAP_TYPE_PointerTott__EventSubscription (1550)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__EventSubscription(struct soap*, tt__EventSubscription *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__EventSubscription(struct soap*, const char *, int, tt__EventSubscription *const*, const char *);
SOAP_FMAC3 tt__EventSubscription ** SOAP_FMAC4 soap_in_PointerTott__EventSubscription(struct soap*, const char*, tt__EventSubscription **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__EventSubscription(struct soap*, tt__EventSubscription *const*, const char*, const char*);

#ifndef soap_write_PointerTott__EventSubscription
#define soap_write_PointerTott__EventSubscription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__EventSubscription(soap, data), 0) || soap_put_PointerTott__EventSubscription(soap, data, "tt:EventSubscription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EventSubscription ** SOAP_FMAC4 soap_get_PointerTott__EventSubscription(struct soap*, tt__EventSubscription **, const char*, const char*);

#ifndef soap_read_PointerTott__EventSubscription
#define soap_read_PointerTott__EventSubscription(soap, data) ( ((data) ? (soap_default_PointerTott__EventSubscription(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__EventSubscription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZFilter
#define SOAP_TYPE_PointerTott__PTZFilter (1549)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZFilter(struct soap*, tt__PTZFilter *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZFilter(struct soap*, const char *, int, tt__PTZFilter *const*, const char *);
SOAP_FMAC3 tt__PTZFilter ** SOAP_FMAC4 soap_in_PointerTott__PTZFilter(struct soap*, const char*, tt__PTZFilter **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZFilter(struct soap*, tt__PTZFilter *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZFilter
#define soap_write_PointerTott__PTZFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZFilter(soap, data), 0) || soap_put_PointerTott__PTZFilter(soap, data, "tt:PTZFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZFilter ** SOAP_FMAC4 soap_get_PointerTott__PTZFilter(struct soap*, tt__PTZFilter **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZFilter
#define soap_read_PointerTott__PTZFilter(soap, data) ( ((data) ? (soap_default_PointerTott__PTZFilter(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZFilter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RuleEngineConfiguration
#define SOAP_TYPE_PointerTott__RuleEngineConfiguration (1548)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RuleEngineConfiguration(struct soap*, tt__RuleEngineConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RuleEngineConfiguration(struct soap*, const char *, int, tt__RuleEngineConfiguration *const*, const char *);
SOAP_FMAC3 tt__RuleEngineConfiguration ** SOAP_FMAC4 soap_in_PointerTott__RuleEngineConfiguration(struct soap*, const char*, tt__RuleEngineConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RuleEngineConfiguration(struct soap*, tt__RuleEngineConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RuleEngineConfiguration
#define soap_write_PointerTott__RuleEngineConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RuleEngineConfiguration(soap, data), 0) || soap_put_PointerTott__RuleEngineConfiguration(soap, data, "tt:RuleEngineConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RuleEngineConfiguration ** SOAP_FMAC4 soap_get_PointerTott__RuleEngineConfiguration(struct soap*, tt__RuleEngineConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__RuleEngineConfiguration
#define soap_read_PointerTott__RuleEngineConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__RuleEngineConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__RuleEngineConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AnalyticsEngineConfiguration
#define SOAP_TYPE_PointerTott__AnalyticsEngineConfiguration (1547)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AnalyticsEngineConfiguration(struct soap*, tt__AnalyticsEngineConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AnalyticsEngineConfiguration(struct soap*, const char *, int, tt__AnalyticsEngineConfiguration *const*, const char *);
SOAP_FMAC3 tt__AnalyticsEngineConfiguration ** SOAP_FMAC4 soap_in_PointerTott__AnalyticsEngineConfiguration(struct soap*, const char*, tt__AnalyticsEngineConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AnalyticsEngineConfiguration(struct soap*, tt__AnalyticsEngineConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AnalyticsEngineConfiguration
#define soap_write_PointerTott__AnalyticsEngineConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AnalyticsEngineConfiguration(soap, data), 0) || soap_put_PointerTott__AnalyticsEngineConfiguration(soap, data, "tt:AnalyticsEngineConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsEngineConfiguration ** SOAP_FMAC4 soap_get_PointerTott__AnalyticsEngineConfiguration(struct soap*, tt__AnalyticsEngineConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__AnalyticsEngineConfiguration
#define soap_read_PointerTott__AnalyticsEngineConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__AnalyticsEngineConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__AnalyticsEngineConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoRateControl2
#define SOAP_TYPE_PointerTott__VideoRateControl2 (1546)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoRateControl2(struct soap*, tt__VideoRateControl2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoRateControl2(struct soap*, const char *, int, tt__VideoRateControl2 *const*, const char *);
SOAP_FMAC3 tt__VideoRateControl2 ** SOAP_FMAC4 soap_in_PointerTott__VideoRateControl2(struct soap*, const char*, tt__VideoRateControl2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoRateControl2(struct soap*, tt__VideoRateControl2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoRateControl2
#define soap_write_PointerTott__VideoRateControl2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoRateControl2(soap, data), 0) || soap_put_PointerTott__VideoRateControl2(soap, data, "tt:VideoRateControl2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoRateControl2 ** SOAP_FMAC4 soap_get_PointerTott__VideoRateControl2(struct soap*, tt__VideoRateControl2 **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoRateControl2
#define soap_read_PointerTott__VideoRateControl2(soap, data) ( ((data) ? (soap_default_PointerTott__VideoRateControl2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__VideoRateControl2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MulticastConfiguration
#define SOAP_TYPE_PointerTott__MulticastConfiguration (1545)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MulticastConfiguration(struct soap*, tt__MulticastConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MulticastConfiguration(struct soap*, const char *, int, tt__MulticastConfiguration *const*, const char *);
SOAP_FMAC3 tt__MulticastConfiguration ** SOAP_FMAC4 soap_in_PointerTott__MulticastConfiguration(struct soap*, const char*, tt__MulticastConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MulticastConfiguration(struct soap*, tt__MulticastConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MulticastConfiguration
#define soap_write_PointerTott__MulticastConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MulticastConfiguration(soap, data), 0) || soap_put_PointerTott__MulticastConfiguration(soap, data, "tt:MulticastConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MulticastConfiguration ** SOAP_FMAC4 soap_get_PointerTott__MulticastConfiguration(struct soap*, tt__MulticastConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__MulticastConfiguration
#define soap_read_PointerTott__MulticastConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__MulticastConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__MulticastConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__H264Configuration
#define SOAP_TYPE_PointerTott__H264Configuration (1544)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__H264Configuration(struct soap*, tt__H264Configuration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__H264Configuration(struct soap*, const char *, int, tt__H264Configuration *const*, const char *);
SOAP_FMAC3 tt__H264Configuration ** SOAP_FMAC4 soap_in_PointerTott__H264Configuration(struct soap*, const char*, tt__H264Configuration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__H264Configuration(struct soap*, tt__H264Configuration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__H264Configuration
#define soap_write_PointerTott__H264Configuration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__H264Configuration(soap, data), 0) || soap_put_PointerTott__H264Configuration(soap, data, "tt:H264Configuration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__H264Configuration ** SOAP_FMAC4 soap_get_PointerTott__H264Configuration(struct soap*, tt__H264Configuration **, const char*, const char*);

#ifndef soap_read_PointerTott__H264Configuration
#define soap_read_PointerTott__H264Configuration(soap, data) ( ((data) ? (soap_default_PointerTott__H264Configuration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__H264Configuration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Mpeg4Configuration
#define SOAP_TYPE_PointerTott__Mpeg4Configuration (1543)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Mpeg4Configuration(struct soap*, tt__Mpeg4Configuration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Mpeg4Configuration(struct soap*, const char *, int, tt__Mpeg4Configuration *const*, const char *);
SOAP_FMAC3 tt__Mpeg4Configuration ** SOAP_FMAC4 soap_in_PointerTott__Mpeg4Configuration(struct soap*, const char*, tt__Mpeg4Configuration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Mpeg4Configuration(struct soap*, tt__Mpeg4Configuration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Mpeg4Configuration
#define soap_write_PointerTott__Mpeg4Configuration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Mpeg4Configuration(soap, data), 0) || soap_put_PointerTott__Mpeg4Configuration(soap, data, "tt:Mpeg4Configuration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Mpeg4Configuration ** SOAP_FMAC4 soap_get_PointerTott__Mpeg4Configuration(struct soap*, tt__Mpeg4Configuration **, const char*, const char*);

#ifndef soap_read_PointerTott__Mpeg4Configuration
#define soap_read_PointerTott__Mpeg4Configuration(soap, data) ( ((data) ? (soap_default_PointerTott__Mpeg4Configuration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Mpeg4Configuration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoRateControl
#define SOAP_TYPE_PointerTott__VideoRateControl (1542)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoRateControl(struct soap*, tt__VideoRateControl *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoRateControl(struct soap*, const char *, int, tt__VideoRateControl *const*, const char *);
SOAP_FMAC3 tt__VideoRateControl ** SOAP_FMAC4 soap_in_PointerTott__VideoRateControl(struct soap*, const char*, tt__VideoRateControl **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoRateControl(struct soap*, tt__VideoRateControl *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoRateControl
#define soap_write_PointerTott__VideoRateControl(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoRateControl(soap, data), 0) || soap_put_PointerTott__VideoRateControl(soap, data, "tt:VideoRateControl", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoRateControl ** SOAP_FMAC4 soap_get_PointerTott__VideoRateControl(struct soap*, tt__VideoRateControl **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoRateControl
#define soap_read_PointerTott__VideoRateControl(soap, data) ( ((data) ? (soap_default_PointerTott__VideoRateControl(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__VideoRateControl(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoSourceConfigurationExtension
#define SOAP_TYPE_PointerTott__VideoSourceConfigurationExtension (1541)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoSourceConfigurationExtension(struct soap*, tt__VideoSourceConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoSourceConfigurationExtension(struct soap*, const char *, int, tt__VideoSourceConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__VideoSourceConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__VideoSourceConfigurationExtension(struct soap*, const char*, tt__VideoSourceConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoSourceConfigurationExtension(struct soap*, tt__VideoSourceConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoSourceConfigurationExtension
#define soap_write_PointerTott__VideoSourceConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoSourceConfigurationExtension(soap, data), 0) || soap_put_PointerTott__VideoSourceConfigurationExtension(soap, data, "tt:VideoSourceConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__VideoSourceConfigurationExtension(struct soap*, tt__VideoSourceConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoSourceConfigurationExtension
#define soap_read_PointerTott__VideoSourceConfigurationExtension(soap, data) ( ((data) ? (soap_default_PointerTott__VideoSourceConfigurationExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__VideoSourceConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IntRectangle
#define SOAP_TYPE_PointerTott__IntRectangle (1540)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IntRectangle(struct soap*, tt__IntRectangle *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IntRectangle(struct soap*, const char *, int, tt__IntRectangle *const*, const char *);
SOAP_FMAC3 tt__IntRectangle ** SOAP_FMAC4 soap_in_PointerTott__IntRectangle(struct soap*, const char*, tt__IntRectangle **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IntRectangle(struct soap*, tt__IntRectangle *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IntRectangle
#define soap_write_PointerTott__IntRectangle(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IntRectangle(soap, data), 0) || soap_put_PointerTott__IntRectangle(soap, data, "tt:IntRectangle", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IntRectangle ** SOAP_FMAC4 soap_get_PointerTott__IntRectangle(struct soap*, tt__IntRectangle **, const char*, const char*);

#ifndef soap_read_PointerTott__IntRectangle
#define soap_read_PointerTott__IntRectangle(soap, data) ( ((data) ? (soap_default_PointerTott__IntRectangle(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__IntRectangle(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoSourceExtension
#define SOAP_TYPE_PointerTott__VideoSourceExtension (1539)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoSourceExtension(struct soap*, tt__VideoSourceExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoSourceExtension(struct soap*, const char *, int, tt__VideoSourceExtension *const*, const char *);
SOAP_FMAC3 tt__VideoSourceExtension ** SOAP_FMAC4 soap_in_PointerTott__VideoSourceExtension(struct soap*, const char*, tt__VideoSourceExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoSourceExtension(struct soap*, tt__VideoSourceExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoSourceExtension
#define soap_write_PointerTott__VideoSourceExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoSourceExtension(soap, data), 0) || soap_put_PointerTott__VideoSourceExtension(soap, data, "tt:VideoSourceExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceExtension ** SOAP_FMAC4 soap_get_PointerTott__VideoSourceExtension(struct soap*, tt__VideoSourceExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoSourceExtension
#define soap_read_PointerTott__VideoSourceExtension(soap, data) ( ((data) ? (soap_default_PointerTott__VideoSourceExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__VideoSourceExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImagingSettings
#define SOAP_TYPE_PointerTott__ImagingSettings (1538)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImagingSettings(struct soap*, tt__ImagingSettings *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImagingSettings(struct soap*, const char *, int, tt__ImagingSettings *const*, const char *);
SOAP_FMAC3 tt__ImagingSettings ** SOAP_FMAC4 soap_in_PointerTott__ImagingSettings(struct soap*, const char*, tt__ImagingSettings **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImagingSettings(struct soap*, tt__ImagingSettings *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImagingSettings
#define soap_write_PointerTott__ImagingSettings(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImagingSettings(soap, data), 0) || soap_put_PointerTott__ImagingSettings(soap, data, "tt:ImagingSettings", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingSettings ** SOAP_FMAC4 soap_get_PointerTott__ImagingSettings(struct soap*, tt__ImagingSettings **, const char*, const char*);

#ifndef soap_read_PointerTott__ImagingSettings
#define soap_read_PointerTott__ImagingSettings(soap, data) ( ((data) ? (soap_default_PointerTott__ImagingSettings(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ImagingSettings(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PaneConfiguration
#define SOAP_TYPE_PointerTott__PaneConfiguration (1536)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PaneConfiguration(struct soap*, tt__PaneConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PaneConfiguration(struct soap*, const char *, int, tt__PaneConfiguration *const*, const char *);
SOAP_FMAC3 tt__PaneConfiguration ** SOAP_FMAC4 soap_in_PointerTott__PaneConfiguration(struct soap*, const char*, tt__PaneConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PaneConfiguration(struct soap*, tt__PaneConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PaneConfiguration
#define soap_write_PointerTott__PaneConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PaneConfiguration(soap, data), 0) || soap_put_PointerTott__PaneConfiguration(soap, data, "tt:PaneConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PaneConfiguration ** SOAP_FMAC4 soap_get_PointerTott__PaneConfiguration(struct soap*, tt__PaneConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__PaneConfiguration
#define soap_read_PointerTott__PaneConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__PaneConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PaneConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__CodingCapabilities
#define SOAP_TYPE_PointerTott__CodingCapabilities (1535)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__CodingCapabilities(struct soap*, tt__CodingCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__CodingCapabilities(struct soap*, const char *, int, tt__CodingCapabilities *const*, const char *);
SOAP_FMAC3 tt__CodingCapabilities ** SOAP_FMAC4 soap_in_PointerTott__CodingCapabilities(struct soap*, const char*, tt__CodingCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__CodingCapabilities(struct soap*, tt__CodingCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__CodingCapabilities
#define soap_write_PointerTott__CodingCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__CodingCapabilities(soap, data), 0) || soap_put_PointerTott__CodingCapabilities(soap, data, "tt:CodingCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CodingCapabilities ** SOAP_FMAC4 soap_get_PointerTott__CodingCapabilities(struct soap*, tt__CodingCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__CodingCapabilities
#define soap_read_PointerTott__CodingCapabilities(soap, data) ( ((data) ? (soap_default_PointerTott__CodingCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__CodingCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__LayoutOptions
#define SOAP_TYPE_PointerTott__LayoutOptions (1534)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__LayoutOptions(struct soap*, tt__LayoutOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__LayoutOptions(struct soap*, const char *, int, tt__LayoutOptions *const*, const char *);
SOAP_FMAC3 tt__LayoutOptions ** SOAP_FMAC4 soap_in_PointerTott__LayoutOptions(struct soap*, const char*, tt__LayoutOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__LayoutOptions(struct soap*, tt__LayoutOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__LayoutOptions
#define soap_write_PointerTott__LayoutOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__LayoutOptions(soap, data), 0) || soap_put_PointerTott__LayoutOptions(soap, data, "tt:LayoutOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__LayoutOptions ** SOAP_FMAC4 soap_get_PointerTott__LayoutOptions(struct soap*, tt__LayoutOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__LayoutOptions
#define soap_read_PointerTott__LayoutOptions(soap, data) ( ((data) ? (soap_default_PointerTott__LayoutOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__LayoutOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Layout
#define SOAP_TYPE_PointerTott__Layout (1533)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Layout(struct soap*, tt__Layout *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Layout(struct soap*, const char *, int, tt__Layout *const*, const char *);
SOAP_FMAC3 tt__Layout ** SOAP_FMAC4 soap_in_PointerTott__Layout(struct soap*, const char*, tt__Layout **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Layout(struct soap*, tt__Layout *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Layout
#define soap_write_PointerTott__Layout(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Layout(soap, data), 0) || soap_put_PointerTott__Layout(soap, data, "tt:Layout", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Layout ** SOAP_FMAC4 soap_get_PointerTott__Layout(struct soap*, tt__Layout **, const char*, const char*);

#ifndef soap_read_PointerTott__Layout
#define soap_read_PointerTott__Layout(soap, data) ( ((data) ? (soap_default_PointerTott__Layout(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Layout(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotls__Capabilities
#define SOAP_TYPE_PointerTotls__Capabilities (1532)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotls__Capabilities(struct soap*, tls__Capabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotls__Capabilities(struct soap*, const char *, int, tls__Capabilities *const*, const char *);
SOAP_FMAC3 tls__Capabilities ** SOAP_FMAC4 soap_in_PointerTotls__Capabilities(struct soap*, const char*, tls__Capabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotls__Capabilities(struct soap*, tls__Capabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTotls__Capabilities
#define soap_write_PointerTotls__Capabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotls__Capabilities(soap, data), 0) || soap_put_PointerTotls__Capabilities(soap, data, "tls:Capabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tls__Capabilities ** SOAP_FMAC4 soap_get_PointerTotls__Capabilities(struct soap*, tls__Capabilities **, const char*, const char*);

#ifndef soap_read_PointerTotls__Capabilities
#define soap_read_PointerTotls__Capabilities(soap, data) ( ((data) ? (soap_default_PointerTotls__Capabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTotls__Capabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowstop__Documentation
#define SOAP_TYPE_PointerTowstop__Documentation (1531)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowstop__Documentation(struct soap*, wstop__Documentation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowstop__Documentation(struct soap*, const char *, int, wstop__Documentation *const*, const char *);
SOAP_FMAC3 wstop__Documentation ** SOAP_FMAC4 soap_in_PointerTowstop__Documentation(struct soap*, const char*, wstop__Documentation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowstop__Documentation(struct soap*, wstop__Documentation *const*, const char*, const char*);

#ifndef soap_write_PointerTowstop__Documentation
#define soap_write_PointerTowstop__Documentation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowstop__Documentation(soap, data), 0) || soap_put_PointerTowstop__Documentation(soap, data, "wstop:Documentation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wstop__Documentation ** SOAP_FMAC4 soap_get_PointerTowstop__Documentation(struct soap*, wstop__Documentation **, const char*, const char*);

#ifndef soap_read_PointerTowstop__Documentation
#define soap_read_PointerTowstop__Documentation(soap, data) ( ((data) ? (soap_default_PointerTowstop__Documentation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTowstop__Documentation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsrfbf__BaseFaultType_FaultCause
#define SOAP_TYPE_PointerTo_wsrfbf__BaseFaultType_FaultCause (1530)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsrfbf__BaseFaultType_FaultCause(struct soap*, _wsrfbf__BaseFaultType_FaultCause *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsrfbf__BaseFaultType_FaultCause(struct soap*, const char *, int, _wsrfbf__BaseFaultType_FaultCause *const*, const char *);
SOAP_FMAC3 _wsrfbf__BaseFaultType_FaultCause ** SOAP_FMAC4 soap_in_PointerTo_wsrfbf__BaseFaultType_FaultCause(struct soap*, const char*, _wsrfbf__BaseFaultType_FaultCause **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsrfbf__BaseFaultType_FaultCause(struct soap*, _wsrfbf__BaseFaultType_FaultCause *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsrfbf__BaseFaultType_FaultCause
#define soap_write_PointerTo_wsrfbf__BaseFaultType_FaultCause(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_wsrfbf__BaseFaultType_FaultCause(soap, data), 0) || soap_put_PointerTo_wsrfbf__BaseFaultType_FaultCause(soap, data, "wsrfbf:BaseFaultType-FaultCause", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsrfbf__BaseFaultType_FaultCause ** SOAP_FMAC4 soap_get_PointerTo_wsrfbf__BaseFaultType_FaultCause(struct soap*, _wsrfbf__BaseFaultType_FaultCause **, const char*, const char*);

#ifndef soap_read_PointerTo_wsrfbf__BaseFaultType_FaultCause
#define soap_read_PointerTo_wsrfbf__BaseFaultType_FaultCause(soap, data) ( ((data) ? (soap_default_PointerTo_wsrfbf__BaseFaultType_FaultCause(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_wsrfbf__BaseFaultType_FaultCause(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__vectorTemplateOf_wsrfbf__BaseFaultType_Description
#define SOAP_TYPE_PointerTostd__vectorTemplateOf_wsrfbf__BaseFaultType_Description (1528)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__vectorTemplateOf_wsrfbf__BaseFaultType_Description(struct soap*, std::vector<_wsrfbf__BaseFaultType_Description> *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__vectorTemplateOf_wsrfbf__BaseFaultType_Description(struct soap*, const char *, int, std::vector<_wsrfbf__BaseFaultType_Description> *const*, const char *);
SOAP_FMAC3 std::vector<_wsrfbf__BaseFaultType_Description> ** SOAP_FMAC4 soap_in_PointerTostd__vectorTemplateOf_wsrfbf__BaseFaultType_Description(struct soap*, const char*, std::vector<_wsrfbf__BaseFaultType_Description> **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__vectorTemplateOf_wsrfbf__BaseFaultType_Description(struct soap*, std::vector<_wsrfbf__BaseFaultType_Description> *const*, const char*, const char*);

#ifndef soap_write_PointerTostd__vectorTemplateOf_wsrfbf__BaseFaultType_Description
#define soap_write_PointerTostd__vectorTemplateOf_wsrfbf__BaseFaultType_Description(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__vectorTemplateOf_wsrfbf__BaseFaultType_Description(soap, data), 0) || soap_put_PointerTostd__vectorTemplateOf_wsrfbf__BaseFaultType_Description(soap, data, "", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::vector<_wsrfbf__BaseFaultType_Description> ** SOAP_FMAC4 soap_get_PointerTostd__vectorTemplateOf_wsrfbf__BaseFaultType_Description(struct soap*, std::vector<_wsrfbf__BaseFaultType_Description> **, const char*, const char*);

#ifndef soap_read_PointerTostd__vectorTemplateOf_wsrfbf__BaseFaultType_Description
#define soap_read_PointerTostd__vectorTemplateOf_wsrfbf__BaseFaultType_Description(soap, data) ( ((data) ? (soap_default_PointerTostd__vectorTemplateOf_wsrfbf__BaseFaultType_Description(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTostd__vectorTemplateOf_wsrfbf__BaseFaultType_Description(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_xml__lang
#define SOAP_TYPE_PointerTo_xml__lang (1526)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_xml__lang(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_xml__lang(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTo_xml__lang(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_xml__lang(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTo_xml__lang
#define soap_write_PointerTo_xml__lang(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_xml__lang(soap, data), 0) || soap_put_PointerTo_xml__lang(soap, data, "xml:lang", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTo_xml__lang(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTo_xml__lang
#define soap_read_PointerTo_xml__lang(soap, data) ( ((data) ? (soap_default_PointerTo_xml__lang(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_xml__lang(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsrfbf__BaseFaultType_ErrorCode
#define SOAP_TYPE_PointerTo_wsrfbf__BaseFaultType_ErrorCode (1524)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsrfbf__BaseFaultType_ErrorCode(struct soap*, _wsrfbf__BaseFaultType_ErrorCode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsrfbf__BaseFaultType_ErrorCode(struct soap*, const char *, int, _wsrfbf__BaseFaultType_ErrorCode *const*, const char *);
SOAP_FMAC3 _wsrfbf__BaseFaultType_ErrorCode ** SOAP_FMAC4 soap_in_PointerTo_wsrfbf__BaseFaultType_ErrorCode(struct soap*, const char*, _wsrfbf__BaseFaultType_ErrorCode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsrfbf__BaseFaultType_ErrorCode(struct soap*, _wsrfbf__BaseFaultType_ErrorCode *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsrfbf__BaseFaultType_ErrorCode
#define soap_write_PointerTo_wsrfbf__BaseFaultType_ErrorCode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_wsrfbf__BaseFaultType_ErrorCode(soap, data), 0) || soap_put_PointerTo_wsrfbf__BaseFaultType_ErrorCode(soap, data, "wsrfbf:BaseFaultType-ErrorCode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsrfbf__BaseFaultType_ErrorCode ** SOAP_FMAC4 soap_get_PointerTo_wsrfbf__BaseFaultType_ErrorCode(struct soap*, _wsrfbf__BaseFaultType_ErrorCode **, const char*, const char*);

#ifndef soap_read_PointerTo_wsrfbf__BaseFaultType_ErrorCode
#define soap_read_PointerTo_wsrfbf__BaseFaultType_ErrorCode(soap, data) ( ((data) ? (soap_default_PointerTo_wsrfbf__BaseFaultType_ErrorCode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_wsrfbf__BaseFaultType_ErrorCode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToxsd__nonNegativeInteger
#define SOAP_TYPE_PointerToxsd__nonNegativeInteger (1522)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__nonNegativeInteger(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__nonNegativeInteger(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToxsd__nonNegativeInteger(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__nonNegativeInteger(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerToxsd__nonNegativeInteger
#define soap_write_PointerToxsd__nonNegativeInteger(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToxsd__nonNegativeInteger(soap, data), 0) || soap_put_PointerToxsd__nonNegativeInteger(soap, data, "xsd:nonNegativeInteger", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToxsd__nonNegativeInteger(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerToxsd__nonNegativeInteger
#define soap_read_PointerToxsd__nonNegativeInteger(soap, data) ( ((data) ? (soap_default_PointerToxsd__nonNegativeInteger(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerToxsd__nonNegativeInteger(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsnt__Subscribe_SubscriptionPolicy
#define SOAP_TYPE_PointerTo_wsnt__Subscribe_SubscriptionPolicy (1521)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsnt__Subscribe_SubscriptionPolicy(struct soap*, _wsnt__Subscribe_SubscriptionPolicy *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsnt__Subscribe_SubscriptionPolicy(struct soap*, const char *, int, _wsnt__Subscribe_SubscriptionPolicy *const*, const char *);
SOAP_FMAC3 _wsnt__Subscribe_SubscriptionPolicy ** SOAP_FMAC4 soap_in_PointerTo_wsnt__Subscribe_SubscriptionPolicy(struct soap*, const char*, _wsnt__Subscribe_SubscriptionPolicy **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsnt__Subscribe_SubscriptionPolicy(struct soap*, _wsnt__Subscribe_SubscriptionPolicy *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsnt__Subscribe_SubscriptionPolicy
#define soap_write_PointerTo_wsnt__Subscribe_SubscriptionPolicy(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_wsnt__Subscribe_SubscriptionPolicy(soap, data), 0) || soap_put_PointerTo_wsnt__Subscribe_SubscriptionPolicy(soap, data, "wsnt:Subscribe-SubscriptionPolicy", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _wsnt__Subscribe_SubscriptionPolicy ** SOAP_FMAC4 soap_get_PointerTo_wsnt__Subscribe_SubscriptionPolicy(struct soap*, _wsnt__Subscribe_SubscriptionPolicy **, const char*, const char*);

#ifndef soap_read_PointerTo_wsnt__Subscribe_SubscriptionPolicy
#define soap_read_PointerTo_wsnt__Subscribe_SubscriptionPolicy(soap, data) ( ((data) ? (soap_default_PointerTo_wsnt__Subscribe_SubscriptionPolicy(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_wsnt__Subscribe_SubscriptionPolicy(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowsnt__AbsoluteOrRelativeTimeType
#define SOAP_TYPE_PointerTowsnt__AbsoluteOrRelativeTimeType (1519)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__AbsoluteOrRelativeTimeType(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__AbsoluteOrRelativeTimeType(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTowsnt__AbsoluteOrRelativeTimeType(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__AbsoluteOrRelativeTimeType(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTowsnt__AbsoluteOrRelativeTimeType
#define soap_write_PointerTowsnt__AbsoluteOrRelativeTimeType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsnt__AbsoluteOrRelativeTimeType(soap, data), 0) || soap_put_PointerTowsnt__AbsoluteOrRelativeTimeType(soap, data, "wsnt:AbsoluteOrRelativeTimeType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTowsnt__AbsoluteOrRelativeTimeType(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTowsnt__AbsoluteOrRelativeTimeType
#define soap_read_PointerTowsnt__AbsoluteOrRelativeTimeType(soap, data) ( ((data) ? (soap_default_PointerTowsnt__AbsoluteOrRelativeTimeType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTowsnt__AbsoluteOrRelativeTimeType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowsnt__SubscriptionPolicyType
#define SOAP_TYPE_PointerTowsnt__SubscriptionPolicyType (1517)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__SubscriptionPolicyType(struct soap*, wsnt__SubscriptionPolicyType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__SubscriptionPolicyType(struct soap*, const char *, int, wsnt__SubscriptionPolicyType *const*, const char *);
SOAP_FMAC3 wsnt__SubscriptionPolicyType ** SOAP_FMAC4 soap_in_PointerTowsnt__SubscriptionPolicyType(struct soap*, const char*, wsnt__SubscriptionPolicyType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__SubscriptionPolicyType(struct soap*, wsnt__SubscriptionPolicyType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsnt__SubscriptionPolicyType
#define soap_write_PointerTowsnt__SubscriptionPolicyType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsnt__SubscriptionPolicyType(soap, data), 0) || soap_put_PointerTowsnt__SubscriptionPolicyType(soap, data, "wsnt:SubscriptionPolicyType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__SubscriptionPolicyType ** SOAP_FMAC4 soap_get_PointerTowsnt__SubscriptionPolicyType(struct soap*, wsnt__SubscriptionPolicyType **, const char*, const char*);

#ifndef soap_read_PointerTowsnt__SubscriptionPolicyType
#define soap_read_PointerTowsnt__SubscriptionPolicyType(soap, data) ( ((data) ? (soap_default_PointerTowsnt__SubscriptionPolicyType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTowsnt__SubscriptionPolicyType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowstop__TopicSetType
#define SOAP_TYPE_PointerTowstop__TopicSetType (1516)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowstop__TopicSetType(struct soap*, wstop__TopicSetType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowstop__TopicSetType(struct soap*, const char *, int, wstop__TopicSetType *const*, const char *);
SOAP_FMAC3 wstop__TopicSetType ** SOAP_FMAC4 soap_in_PointerTowstop__TopicSetType(struct soap*, const char*, wstop__TopicSetType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowstop__TopicSetType(struct soap*, wstop__TopicSetType *const*, const char*, const char*);

#ifndef soap_write_PointerTowstop__TopicSetType
#define soap_write_PointerTowstop__TopicSetType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowstop__TopicSetType(soap, data), 0) || soap_put_PointerTowstop__TopicSetType(soap, data, "wstop:TopicSetType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wstop__TopicSetType ** SOAP_FMAC4 soap_get_PointerTowstop__TopicSetType(struct soap*, wstop__TopicSetType **, const char*, const char*);

#ifndef soap_read_PointerTowstop__TopicSetType
#define soap_read_PointerTowstop__TopicSetType(soap, data) ( ((data) ? (soap_default_PointerTowstop__TopicSetType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTowstop__TopicSetType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowsnt__TopicExpressionType
#define SOAP_TYPE_PointerTowsnt__TopicExpressionType (1513)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__TopicExpressionType(struct soap*, wsnt__TopicExpressionType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__TopicExpressionType(struct soap*, const char *, int, wsnt__TopicExpressionType *const*, const char *);
SOAP_FMAC3 wsnt__TopicExpressionType ** SOAP_FMAC4 soap_in_PointerTowsnt__TopicExpressionType(struct soap*, const char*, wsnt__TopicExpressionType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__TopicExpressionType(struct soap*, wsnt__TopicExpressionType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsnt__TopicExpressionType
#define soap_write_PointerTowsnt__TopicExpressionType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsnt__TopicExpressionType(soap, data), 0) || soap_put_PointerTowsnt__TopicExpressionType(soap, data, "wsnt:TopicExpressionType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__TopicExpressionType ** SOAP_FMAC4 soap_get_PointerTowsnt__TopicExpressionType(struct soap*, wsnt__TopicExpressionType **, const char*, const char*);

#ifndef soap_read_PointerTowsnt__TopicExpressionType
#define soap_read_PointerTowsnt__TopicExpressionType(soap, data) ( ((data) ? (soap_default_PointerTowsnt__TopicExpressionType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTowsnt__TopicExpressionType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowsa5__EndpointReferenceType
#define SOAP_TYPE_PointerTowsa5__EndpointReferenceType (1512)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsa5__EndpointReferenceType(struct soap*, struct wsa5__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsa5__EndpointReferenceType(struct soap*, const char *, int, struct wsa5__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTowsa5__EndpointReferenceType(struct soap*, const char*, struct wsa5__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsa5__EndpointReferenceType(struct soap*, struct wsa5__EndpointReferenceType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsa5__EndpointReferenceType
#define soap_write_PointerTowsa5__EndpointReferenceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsa5__EndpointReferenceType(soap, data), 0) || soap_put_PointerTowsa5__EndpointReferenceType(soap, data, "wsa5:EndpointReferenceType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTowsa5__EndpointReferenceType(struct soap*, struct wsa5__EndpointReferenceType **, const char*, const char*);

#ifndef soap_read_PointerTowsa5__EndpointReferenceType
#define soap_read_PointerTowsa5__EndpointReferenceType(soap, data) ( ((data) ? (soap_default_PointerTowsa5__EndpointReferenceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTowsa5__EndpointReferenceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PropertyOperation
#define SOAP_TYPE_PointerTott__PropertyOperation (1511)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PropertyOperation(struct soap*, enum tt__PropertyOperation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PropertyOperation(struct soap*, const char *, int, enum tt__PropertyOperation *const*, const char *);
SOAP_FMAC3 enum tt__PropertyOperation ** SOAP_FMAC4 soap_in_PointerTott__PropertyOperation(struct soap*, const char*, enum tt__PropertyOperation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PropertyOperation(struct soap*, enum tt__PropertyOperation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PropertyOperation
#define soap_write_PointerTott__PropertyOperation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PropertyOperation(soap, data), 0) || soap_put_PointerTott__PropertyOperation(soap, data, "tt:PropertyOperation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__PropertyOperation ** SOAP_FMAC4 soap_get_PointerTott__PropertyOperation(struct soap*, enum tt__PropertyOperation **, const char*, const char*);

#ifndef soap_read_PointerTott__PropertyOperation
#define soap_read_PointerTott__PropertyOperation(soap, data) ( ((data) ? (soap_default_PointerTott__PropertyOperation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PropertyOperation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MessageExtension
#define SOAP_TYPE_PointerTott__MessageExtension (1510)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MessageExtension(struct soap*, tt__MessageExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MessageExtension(struct soap*, const char *, int, tt__MessageExtension *const*, const char *);
SOAP_FMAC3 tt__MessageExtension ** SOAP_FMAC4 soap_in_PointerTott__MessageExtension(struct soap*, const char*, tt__MessageExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MessageExtension(struct soap*, tt__MessageExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MessageExtension
#define soap_write_PointerTott__MessageExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MessageExtension(soap, data), 0) || soap_put_PointerTott__MessageExtension(soap, data, "tt:MessageExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MessageExtension ** SOAP_FMAC4 soap_get_PointerTott__MessageExtension(struct soap*, tt__MessageExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__MessageExtension
#define soap_read_PointerTott__MessageExtension(soap, data) ( ((data) ? (soap_default_PointerTott__MessageExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__MessageExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__TransformationExtension
#define SOAP_TYPE_PointerTott__TransformationExtension (1509)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__TransformationExtension(struct soap*, tt__TransformationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__TransformationExtension(struct soap*, const char *, int, tt__TransformationExtension *const*, const char *);
SOAP_FMAC3 tt__TransformationExtension ** SOAP_FMAC4 soap_in_PointerTott__TransformationExtension(struct soap*, const char*, tt__TransformationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__TransformationExtension(struct soap*, tt__TransformationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__TransformationExtension
#define soap_write_PointerTott__TransformationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__TransformationExtension(soap, data), 0) || soap_put_PointerTott__TransformationExtension(soap, data, "tt:TransformationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__TransformationExtension ** SOAP_FMAC4 soap_get_PointerTott__TransformationExtension(struct soap*, tt__TransformationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__TransformationExtension
#define soap_read_PointerTott__TransformationExtension(soap, data) ( ((data) ? (soap_default_PointerTott__TransformationExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__TransformationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MoveStatus
#define SOAP_TYPE_PointerTott__MoveStatus (1508)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MoveStatus(struct soap*, enum tt__MoveStatus *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MoveStatus(struct soap*, const char *, int, enum tt__MoveStatus *const*, const char *);
SOAP_FMAC3 enum tt__MoveStatus ** SOAP_FMAC4 soap_in_PointerTott__MoveStatus(struct soap*, const char*, enum tt__MoveStatus **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MoveStatus(struct soap*, enum tt__MoveStatus *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MoveStatus
#define soap_write_PointerTott__MoveStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MoveStatus(soap, data), 0) || soap_put_PointerTott__MoveStatus(soap, data, "tt:MoveStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__MoveStatus ** SOAP_FMAC4 soap_get_PointerTott__MoveStatus(struct soap*, enum tt__MoveStatus **, const char*, const char*);

#ifndef soap_read_PointerTott__MoveStatus
#define soap_read_PointerTott__MoveStatus(soap, data) ( ((data) ? (soap_default_PointerTott__MoveStatus(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__MoveStatus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZMoveStatus
#define SOAP_TYPE_PointerTott__PTZMoveStatus (1507)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZMoveStatus(struct soap*, tt__PTZMoveStatus *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZMoveStatus(struct soap*, const char *, int, tt__PTZMoveStatus *const*, const char *);
SOAP_FMAC3 tt__PTZMoveStatus ** SOAP_FMAC4 soap_in_PointerTott__PTZMoveStatus(struct soap*, const char*, tt__PTZMoveStatus **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZMoveStatus(struct soap*, tt__PTZMoveStatus *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZMoveStatus
#define soap_write_PointerTott__PTZMoveStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZMoveStatus(soap, data), 0) || soap_put_PointerTott__PTZMoveStatus(soap, data, "tt:PTZMoveStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZMoveStatus ** SOAP_FMAC4 soap_get_PointerTott__PTZMoveStatus(struct soap*, tt__PTZMoveStatus **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZMoveStatus
#define soap_read_PointerTott__PTZMoveStatus(soap, data) ( ((data) ? (soap_default_PointerTott__PTZMoveStatus(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZMoveStatus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__StorageReferencePathExtension
#define SOAP_TYPE_PointerTott__StorageReferencePathExtension (1506)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__StorageReferencePathExtension(struct soap*, tt__StorageReferencePathExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__StorageReferencePathExtension(struct soap*, const char *, int, tt__StorageReferencePathExtension *const*, const char *);
SOAP_FMAC3 tt__StorageReferencePathExtension ** SOAP_FMAC4 soap_in_PointerTott__StorageReferencePathExtension(struct soap*, const char*, tt__StorageReferencePathExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__StorageReferencePathExtension(struct soap*, tt__StorageReferencePathExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__StorageReferencePathExtension
#define soap_write_PointerTott__StorageReferencePathExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__StorageReferencePathExtension(soap, data), 0) || soap_put_PointerTott__StorageReferencePathExtension(soap, data, "tt:StorageReferencePathExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__StorageReferencePathExtension ** SOAP_FMAC4 soap_get_PointerTott__StorageReferencePathExtension(struct soap*, tt__StorageReferencePathExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__StorageReferencePathExtension
#define soap_read_PointerTott__StorageReferencePathExtension(soap, data) ( ((data) ? (soap_default_PointerTott__StorageReferencePathExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__StorageReferencePathExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ArrayOfFileProgressExtension
#define SOAP_TYPE_PointerTott__ArrayOfFileProgressExtension (1505)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ArrayOfFileProgressExtension(struct soap*, tt__ArrayOfFileProgressExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ArrayOfFileProgressExtension(struct soap*, const char *, int, tt__ArrayOfFileProgressExtension *const*, const char *);
SOAP_FMAC3 tt__ArrayOfFileProgressExtension ** SOAP_FMAC4 soap_in_PointerTott__ArrayOfFileProgressExtension(struct soap*, const char*, tt__ArrayOfFileProgressExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ArrayOfFileProgressExtension(struct soap*, tt__ArrayOfFileProgressExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ArrayOfFileProgressExtension
#define soap_write_PointerTott__ArrayOfFileProgressExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ArrayOfFileProgressExtension(soap, data), 0) || soap_put_PointerTott__ArrayOfFileProgressExtension(soap, data, "tt:ArrayOfFileProgressExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ArrayOfFileProgressExtension ** SOAP_FMAC4 soap_get_PointerTott__ArrayOfFileProgressExtension(struct soap*, tt__ArrayOfFileProgressExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__ArrayOfFileProgressExtension
#define soap_read_PointerTott__ArrayOfFileProgressExtension(soap, data) ( ((data) ? (soap_default_PointerTott__ArrayOfFileProgressExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ArrayOfFileProgressExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FileProgress
#define SOAP_TYPE_PointerTott__FileProgress (1503)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FileProgress(struct soap*, tt__FileProgress *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FileProgress(struct soap*, const char *, int, tt__FileProgress *const*, const char *);
SOAP_FMAC3 tt__FileProgress ** SOAP_FMAC4 soap_in_PointerTott__FileProgress(struct soap*, const char*, tt__FileProgress **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FileProgress(struct soap*, tt__FileProgress *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FileProgress
#define soap_write_PointerTott__FileProgress(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FileProgress(soap, data), 0) || soap_put_PointerTott__FileProgress(soap, data, "tt:FileProgress", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FileProgress ** SOAP_FMAC4 soap_get_PointerTott__FileProgress(struct soap*, tt__FileProgress **, const char*, const char*);

#ifndef soap_read_PointerTott__FileProgress
#define soap_read_PointerTott__FileProgress(soap, data) ( ((data) ? (soap_default_PointerTott__FileProgress(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__FileProgress(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDConfigurationOptionsExtension
#define SOAP_TYPE_PointerTott__OSDConfigurationOptionsExtension (1502)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDConfigurationOptionsExtension(struct soap*, tt__OSDConfigurationOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDConfigurationOptionsExtension(struct soap*, const char *, int, tt__OSDConfigurationOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__OSDConfigurationOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__OSDConfigurationOptionsExtension(struct soap*, const char*, tt__OSDConfigurationOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDConfigurationOptionsExtension(struct soap*, tt__OSDConfigurationOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDConfigurationOptionsExtension
#define soap_write_PointerTott__OSDConfigurationOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDConfigurationOptionsExtension(soap, data), 0) || soap_put_PointerTott__OSDConfigurationOptionsExtension(soap, data, "tt:OSDConfigurationOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDConfigurationOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__OSDConfigurationOptionsExtension(struct soap*, tt__OSDConfigurationOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDConfigurationOptionsExtension
#define soap_read_PointerTott__OSDConfigurationOptionsExtension(soap, data) ( ((data) ? (soap_default_PointerTott__OSDConfigurationOptionsExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__OSDConfigurationOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDImgOptions
#define SOAP_TYPE_PointerTott__OSDImgOptions (1501)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDImgOptions(struct soap*, tt__OSDImgOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDImgOptions(struct soap*, const char *, int, tt__OSDImgOptions *const*, const char *);
SOAP_FMAC3 tt__OSDImgOptions ** SOAP_FMAC4 soap_in_PointerTott__OSDImgOptions(struct soap*, const char*, tt__OSDImgOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDImgOptions(struct soap*, tt__OSDImgOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDImgOptions
#define soap_write_PointerTott__OSDImgOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDImgOptions(soap, data), 0) || soap_put_PointerTott__OSDImgOptions(soap, data, "tt:OSDImgOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDImgOptions ** SOAP_FMAC4 soap_get_PointerTott__OSDImgOptions(struct soap*, tt__OSDImgOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDImgOptions
#define soap_read_PointerTott__OSDImgOptions(soap, data) ( ((data) ? (soap_default_PointerTott__OSDImgOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__OSDImgOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDTextOptions
#define SOAP_TYPE_PointerTott__OSDTextOptions (1500)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDTextOptions(struct soap*, tt__OSDTextOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDTextOptions(struct soap*, const char *, int, tt__OSDTextOptions *const*, const char *);
SOAP_FMAC3 tt__OSDTextOptions ** SOAP_FMAC4 soap_in_PointerTott__OSDTextOptions(struct soap*, const char*, tt__OSDTextOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDTextOptions(struct soap*, tt__OSDTextOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDTextOptions
#define soap_write_PointerTott__OSDTextOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDTextOptions(soap, data), 0) || soap_put_PointerTott__OSDTextOptions(soap, data, "tt:OSDTextOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDTextOptions ** SOAP_FMAC4 soap_get_PointerTott__OSDTextOptions(struct soap*, tt__OSDTextOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDTextOptions
#define soap_read_PointerTott__OSDTextOptions(soap, data) ( ((data) ? (soap_default_PointerTott__OSDTextOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__OSDTextOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MaximumNumberOfOSDs
#define SOAP_TYPE_PointerTott__MaximumNumberOfOSDs (1498)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MaximumNumberOfOSDs(struct soap*, tt__MaximumNumberOfOSDs *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MaximumNumberOfOSDs(struct soap*, const char *, int, tt__MaximumNumberOfOSDs *const*, const char *);
SOAP_FMAC3 tt__MaximumNumberOfOSDs ** SOAP_FMAC4 soap_in_PointerTott__MaximumNumberOfOSDs(struct soap*, const char*, tt__MaximumNumberOfOSDs **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MaximumNumberOfOSDs(struct soap*, tt__MaximumNumberOfOSDs *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MaximumNumberOfOSDs
#define soap_write_PointerTott__MaximumNumberOfOSDs(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MaximumNumberOfOSDs(soap, data), 0) || soap_put_PointerTott__MaximumNumberOfOSDs(soap, data, "tt:MaximumNumberOfOSDs", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MaximumNumberOfOSDs ** SOAP_FMAC4 soap_get_PointerTott__MaximumNumberOfOSDs(struct soap*, tt__MaximumNumberOfOSDs **, const char*, const char*);

#ifndef soap_read_PointerTott__MaximumNumberOfOSDs
#define soap_read_PointerTott__MaximumNumberOfOSDs(soap, data) ( ((data) ? (soap_default_PointerTott__MaximumNumberOfOSDs(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__MaximumNumberOfOSDs(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDImgOptionsExtension
#define SOAP_TYPE_PointerTott__OSDImgOptionsExtension (1497)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDImgOptionsExtension(struct soap*, tt__OSDImgOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDImgOptionsExtension(struct soap*, const char *, int, tt__OSDImgOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__OSDImgOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__OSDImgOptionsExtension(struct soap*, const char*, tt__OSDImgOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDImgOptionsExtension(struct soap*, tt__OSDImgOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDImgOptionsExtension
#define soap_write_PointerTott__OSDImgOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDImgOptionsExtension(soap, data), 0) || soap_put_PointerTott__OSDImgOptionsExtension(soap, data, "tt:OSDImgOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDImgOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__OSDImgOptionsExtension(struct soap*, tt__OSDImgOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDImgOptionsExtension
#define soap_read_PointerTott__OSDImgOptionsExtension(soap, data) ( ((data) ? (soap_default_PointerTott__OSDImgOptionsExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__OSDImgOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDTextOptionsExtension
#define SOAP_TYPE_PointerTott__OSDTextOptionsExtension (1496)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDTextOptionsExtension(struct soap*, tt__OSDTextOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDTextOptionsExtension(struct soap*, const char *, int, tt__OSDTextOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__OSDTextOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__OSDTextOptionsExtension(struct soap*, const char*, tt__OSDTextOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDTextOptionsExtension(struct soap*, tt__OSDTextOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDTextOptionsExtension
#define soap_write_PointerTott__OSDTextOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDTextOptionsExtension(soap, data), 0) || soap_put_PointerTott__OSDTextOptionsExtension(soap, data, "tt:OSDTextOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDTextOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__OSDTextOptionsExtension(struct soap*, tt__OSDTextOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDTextOptionsExtension
#define soap_read_PointerTott__OSDTextOptionsExtension(soap, data) ( ((data) ? (soap_default_PointerTott__OSDTextOptionsExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__OSDTextOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDColorOptions
#define SOAP_TYPE_PointerTott__OSDColorOptions (1495)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDColorOptions(struct soap*, tt__OSDColorOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDColorOptions(struct soap*, const char *, int, tt__OSDColorOptions *const*, const char *);
SOAP_FMAC3 tt__OSDColorOptions ** SOAP_FMAC4 soap_in_PointerTott__OSDColorOptions(struct soap*, const char*, tt__OSDColorOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDColorOptions(struct soap*, tt__OSDColorOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDColorOptions
#define soap_write_PointerTott__OSDColorOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDColorOptions(soap, data), 0) || soap_put_PointerTott__OSDColorOptions(soap, data, "tt:OSDColorOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDColorOptions ** SOAP_FMAC4 soap_get_PointerTott__OSDColorOptions(struct soap*, tt__OSDColorOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDColorOptions
#define soap_read_PointerTott__OSDColorOptions(soap, data) ( ((data) ? (soap_default_PointerTott__OSDColorOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__OSDColorOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDColorOptionsExtension
#define SOAP_TYPE_PointerTott__OSDColorOptionsExtension (1494)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDColorOptionsExtension(struct soap*, tt__OSDColorOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDColorOptionsExtension(struct soap*, const char *, int, tt__OSDColorOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__OSDColorOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__OSDColorOptionsExtension(struct soap*, const char*, tt__OSDColorOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDColorOptionsExtension(struct soap*, tt__OSDColorOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDColorOptionsExtension
#define soap_write_PointerTott__OSDColorOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDColorOptionsExtension(soap, data), 0) || soap_put_PointerTott__OSDColorOptionsExtension(soap, data, "tt:OSDColorOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDColorOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__OSDColorOptionsExtension(struct soap*, tt__OSDColorOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDColorOptionsExtension
#define soap_read_PointerTott__OSDColorOptionsExtension(soap, data) ( ((data) ? (soap_default_PointerTott__OSDColorOptionsExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__OSDColorOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ColorOptions
#define SOAP_TYPE_PointerTott__ColorOptions (1493)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ColorOptions(struct soap*, tt__ColorOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ColorOptions(struct soap*, const char *, int, tt__ColorOptions *const*, const char *);
SOAP_FMAC3 tt__ColorOptions ** SOAP_FMAC4 soap_in_PointerTott__ColorOptions(struct soap*, const char*, tt__ColorOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ColorOptions(struct soap*, tt__ColorOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ColorOptions
#define soap_write_PointerTott__ColorOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ColorOptions(soap, data), 0) || soap_put_PointerTott__ColorOptions(soap, data, "tt:ColorOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ColorOptions ** SOAP_FMAC4 soap_get_PointerTott__ColorOptions(struct soap*, tt__ColorOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__ColorOptions
#define soap_read_PointerTott__ColorOptions(soap, data) ( ((data) ? (soap_default_PointerTott__ColorOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ColorOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__vectorTemplateOfPointerTott__ColorspaceRange
#define SOAP_TYPE_PointerTostd__vectorTemplateOfPointerTott__ColorspaceRange (1491)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__vectorTemplateOfPointerTott__ColorspaceRange(struct soap*, std::vector<tt__ColorspaceRange *> *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__vectorTemplateOfPointerTott__ColorspaceRange(struct soap*, const char *, int, std::vector<tt__ColorspaceRange *> *const*, const char *);
SOAP_FMAC3 std::vector<tt__ColorspaceRange *> ** SOAP_FMAC4 soap_in_PointerTostd__vectorTemplateOfPointerTott__ColorspaceRange(struct soap*, const char*, std::vector<tt__ColorspaceRange *> **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__vectorTemplateOfPointerTott__ColorspaceRange(struct soap*, std::vector<tt__ColorspaceRange *> *const*, const char*, const char*);

#ifndef soap_write_PointerTostd__vectorTemplateOfPointerTott__ColorspaceRange
#define soap_write_PointerTostd__vectorTemplateOfPointerTott__ColorspaceRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__vectorTemplateOfPointerTott__ColorspaceRange(soap, data), 0) || soap_put_PointerTostd__vectorTemplateOfPointerTott__ColorspaceRange(soap, data, "", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::vector<tt__ColorspaceRange *> ** SOAP_FMAC4 soap_get_PointerTostd__vectorTemplateOfPointerTott__ColorspaceRange(struct soap*, std::vector<tt__ColorspaceRange *> **, const char*, const char*);

#ifndef soap_read_PointerTostd__vectorTemplateOfPointerTott__ColorspaceRange
#define soap_read_PointerTostd__vectorTemplateOfPointerTott__ColorspaceRange(soap, data) ( ((data) ? (soap_default_PointerTostd__vectorTemplateOfPointerTott__ColorspaceRange(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTostd__vectorTemplateOfPointerTott__ColorspaceRange(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ColorspaceRange
#define SOAP_TYPE_PointerTott__ColorspaceRange (1489)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ColorspaceRange(struct soap*, tt__ColorspaceRange *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ColorspaceRange(struct soap*, const char *, int, tt__ColorspaceRange *const*, const char *);
SOAP_FMAC3 tt__ColorspaceRange ** SOAP_FMAC4 soap_in_PointerTott__ColorspaceRange(struct soap*, const char*, tt__ColorspaceRange **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ColorspaceRange(struct soap*, tt__ColorspaceRange *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ColorspaceRange
#define soap_write_PointerTott__ColorspaceRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ColorspaceRange(soap, data), 0) || soap_put_PointerTott__ColorspaceRange(soap, data, "tt:ColorspaceRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ColorspaceRange ** SOAP_FMAC4 soap_get_PointerTott__ColorspaceRange(struct soap*, tt__ColorspaceRange **, const char*, const char*);

#ifndef soap_read_PointerTott__ColorspaceRange
#define soap_read_PointerTott__ColorspaceRange(soap, data) ( ((data) ? (soap_default_PointerTott__ColorspaceRange(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ColorspaceRange(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__vectorTemplateOfPointerTott__Color
#define SOAP_TYPE_PointerTostd__vectorTemplateOfPointerTott__Color (1488)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__vectorTemplateOfPointerTott__Color(struct soap*, std::vector<tt__Color *> *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__vectorTemplateOfPointerTott__Color(struct soap*, const char *, int, std::vector<tt__Color *> *const*, const char *);
SOAP_FMAC3 std::vector<tt__Color *> ** SOAP_FMAC4 soap_in_PointerTostd__vectorTemplateOfPointerTott__Color(struct soap*, const char*, std::vector<tt__Color *> **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__vectorTemplateOfPointerTott__Color(struct soap*, std::vector<tt__Color *> *const*, const char*, const char*);

#ifndef soap_write_PointerTostd__vectorTemplateOfPointerTott__Color
#define soap_write_PointerTostd__vectorTemplateOfPointerTott__Color(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__vectorTemplateOfPointerTott__Color(soap, data), 0) || soap_put_PointerTostd__vectorTemplateOfPointerTott__Color(soap, data, "", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::vector<tt__Color *> ** SOAP_FMAC4 soap_get_PointerTostd__vectorTemplateOfPointerTott__Color(struct soap*, std::vector<tt__Color *> **, const char*, const char*);

#ifndef soap_read_PointerTostd__vectorTemplateOfPointerTott__Color
#define soap_read_PointerTostd__vectorTemplateOfPointerTott__Color(soap, data) ( ((data) ? (soap_default_PointerTostd__vectorTemplateOfPointerTott__Color(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTostd__vectorTemplateOfPointerTott__Color(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDImgConfigurationExtension
#define SOAP_TYPE_PointerTott__OSDImgConfigurationExtension (1486)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDImgConfigurationExtension(struct soap*, tt__OSDImgConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDImgConfigurationExtension(struct soap*, const char *, int, tt__OSDImgConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__OSDImgConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__OSDImgConfigurationExtension(struct soap*, const char*, tt__OSDImgConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDImgConfigurationExtension(struct soap*, tt__OSDImgConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDImgConfigurationExtension
#define soap_write_PointerTott__OSDImgConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDImgConfigurationExtension(soap, data), 0) || soap_put_PointerTott__OSDImgConfigurationExtension(soap, data, "tt:OSDImgConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDImgConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__OSDImgConfigurationExtension(struct soap*, tt__OSDImgConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDImgConfigurationExtension
#define soap_read_PointerTott__OSDImgConfigurationExtension(soap, data) ( ((data) ? (soap_default_PointerTott__OSDImgConfigurationExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__OSDImgConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDTextConfigurationExtension
#define SOAP_TYPE_PointerTott__OSDTextConfigurationExtension (1485)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDTextConfigurationExtension(struct soap*, tt__OSDTextConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDTextConfigurationExtension(struct soap*, const char *, int, tt__OSDTextConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__OSDTextConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__OSDTextConfigurationExtension(struct soap*, const char*, tt__OSDTextConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDTextConfigurationExtension(struct soap*, tt__OSDTextConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDTextConfigurationExtension
#define soap_write_PointerTott__OSDTextConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDTextConfigurationExtension(soap, data), 0) || soap_put_PointerTott__OSDTextConfigurationExtension(soap, data, "tt:OSDTextConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDTextConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__OSDTextConfigurationExtension(struct soap*, tt__OSDTextConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDTextConfigurationExtension
#define soap_read_PointerTott__OSDTextConfigurationExtension(soap, data) ( ((data) ? (soap_default_PointerTott__OSDTextConfigurationExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__OSDTextConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDColor
#define SOAP_TYPE_PointerTott__OSDColor (1484)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDColor(struct soap*, tt__OSDColor *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDColor(struct soap*, const char *, int, tt__OSDColor *const*, const char *);
SOAP_FMAC3 tt__OSDColor ** SOAP_FMAC4 soap_in_PointerTott__OSDColor(struct soap*, const char*, tt__OSDColor **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDColor(struct soap*, tt__OSDColor *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDColor
#define soap_write_PointerTott__OSDColor(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDColor(soap, data), 0) || soap_put_PointerTott__OSDColor(soap, data, "tt:OSDColor", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDColor ** SOAP_FMAC4 soap_get_PointerTott__OSDColor(struct soap*, tt__OSDColor **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDColor
#define soap_read_PointerTott__OSDColor(soap, data) ( ((data) ? (soap_default_PointerTott__OSDColor(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__OSDColor(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Color
#define SOAP_TYPE_PointerTott__Color (1483)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Color(struct soap*, tt__Color *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Color(struct soap*, const char *, int, tt__Color *const*, const char *);
SOAP_FMAC3 tt__Color ** SOAP_FMAC4 soap_in_PointerTott__Color(struct soap*, const char*, tt__Color **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Color(struct soap*, tt__Color *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Color
#define soap_write_PointerTott__Color(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Color(soap, data), 0) || soap_put_PointerTott__Color(soap, data, "tt:Color", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Color ** SOAP_FMAC4 soap_get_PointerTott__Color(struct soap*, tt__Color **, const char*, const char*);

#ifndef soap_read_PointerTott__Color
#define soap_read_PointerTott__Color(soap, data) ( ((data) ? (soap_default_PointerTott__Color(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Color(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OSDPosConfigurationExtension
#define SOAP_TYPE_PointerTott__OSDPosConfigurationExtension (1482)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OSDPosConfigurationExtension(struct soap*, tt__OSDPosConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OSDPosConfigurationExtension(struct soap*, const char *, int, tt__OSDPosConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__OSDPosConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__OSDPosConfigurationExtension(struct soap*, const char*, tt__OSDPosConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OSDPosConfigurationExtension(struct soap*, tt__OSDPosConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OSDPosConfigurationExtension
#define soap_write_PointerTott__OSDPosConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OSDPosConfigurationExtension(soap, data), 0) || soap_put_PointerTott__OSDPosConfigurationExtension(soap, data, "tt:OSDPosConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OSDPosConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__OSDPosConfigurationExtension(struct soap*, tt__OSDPosConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__OSDPosConfigurationExtension
#define soap_read_PointerTott__OSDPosConfigurationExtension(soap, data) ( ((data) ? (soap_default_PointerTott__OSDPosConfigurationExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__OSDPosConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ProfileStatusExtension
#define SOAP_TYPE_PointerTott__ProfileStatusExtension (1481)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ProfileStatusExtension(struct soap*, tt__ProfileStatusExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ProfileStatusExtension(struct soap*, const char *, int, tt__ProfileStatusExtension *const*, const char *);
SOAP_FMAC3 tt__ProfileStatusExtension ** SOAP_FMAC4 soap_in_PointerTott__ProfileStatusExtension(struct soap*, const char*, tt__ProfileStatusExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ProfileStatusExtension(struct soap*, tt__ProfileStatusExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ProfileStatusExtension
#define soap_write_PointerTott__ProfileStatusExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ProfileStatusExtension(soap, data), 0) || soap_put_PointerTott__ProfileStatusExtension(soap, data, "tt:ProfileStatusExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ProfileStatusExtension ** SOAP_FMAC4 soap_get_PointerTott__ProfileStatusExtension(struct soap*, tt__ProfileStatusExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__ProfileStatusExtension
#define soap_read_PointerTott__ProfileStatusExtension(soap, data) ( ((data) ? (soap_default_PointerTott__ProfileStatusExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ProfileStatusExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ActiveConnection
#define SOAP_TYPE_PointerTott__ActiveConnection (1479)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ActiveConnection(struct soap*, tt__ActiveConnection *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ActiveConnection(struct soap*, const char *, int, tt__ActiveConnection *const*, const char *);
SOAP_FMAC3 tt__ActiveConnection ** SOAP_FMAC4 soap_in_PointerTott__ActiveConnection(struct soap*, const char*, tt__ActiveConnection **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ActiveConnection(struct soap*, tt__ActiveConnection *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ActiveConnection
#define soap_write_PointerTott__ActiveConnection(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ActiveConnection(soap, data), 0) || soap_put_PointerTott__ActiveConnection(soap, data, "tt:ActiveConnection", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ActiveConnection ** SOAP_FMAC4 soap_get_PointerTott__ActiveConnection(struct soap*, tt__ActiveConnection **, const char*, const char*);

#ifndef soap_read_PointerTott__ActiveConnection
#define soap_read_PointerTott__ActiveConnection(soap, data) ( ((data) ? (soap_default_PointerTott__ActiveConnection(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ActiveConnection(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AudioClassDescriptorExtension
#define SOAP_TYPE_PointerTott__AudioClassDescriptorExtension (1478)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AudioClassDescriptorExtension(struct soap*, tt__AudioClassDescriptorExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AudioClassDescriptorExtension(struct soap*, const char *, int, tt__AudioClassDescriptorExtension *const*, const char *);
SOAP_FMAC3 tt__AudioClassDescriptorExtension ** SOAP_FMAC4 soap_in_PointerTott__AudioClassDescriptorExtension(struct soap*, const char*, tt__AudioClassDescriptorExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AudioClassDescriptorExtension(struct soap*, tt__AudioClassDescriptorExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AudioClassDescriptorExtension
#define soap_write_PointerTott__AudioClassDescriptorExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AudioClassDescriptorExtension(soap, data), 0) || soap_put_PointerTott__AudioClassDescriptorExtension(soap, data, "tt:AudioClassDescriptorExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioClassDescriptorExtension ** SOAP_FMAC4 soap_get_PointerTott__AudioClassDescriptorExtension(struct soap*, tt__AudioClassDescriptorExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__AudioClassDescriptorExtension
#define soap_read_PointerTott__AudioClassDescriptorExtension(soap, data) ( ((data) ? (soap_default_PointerTott__AudioClassDescriptorExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__AudioClassDescriptorExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AudioClassCandidate
#define SOAP_TYPE_PointerTott__AudioClassCandidate (1476)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AudioClassCandidate(struct soap*, tt__AudioClassCandidate *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AudioClassCandidate(struct soap*, const char *, int, tt__AudioClassCandidate *const*, const char *);
SOAP_FMAC3 tt__AudioClassCandidate ** SOAP_FMAC4 soap_in_PointerTott__AudioClassCandidate(struct soap*, const char*, tt__AudioClassCandidate **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AudioClassCandidate(struct soap*, tt__AudioClassCandidate *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AudioClassCandidate
#define soap_write_PointerTott__AudioClassCandidate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AudioClassCandidate(soap, data), 0) || soap_put_PointerTott__AudioClassCandidate(soap, data, "tt:AudioClassCandidate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioClassCandidate ** SOAP_FMAC4 soap_get_PointerTott__AudioClassCandidate(struct soap*, tt__AudioClassCandidate **, const char*, const char*);

#ifndef soap_read_PointerTott__AudioClassCandidate
#define soap_read_PointerTott__AudioClassCandidate(soap, data) ( ((data) ? (soap_default_PointerTott__AudioClassCandidate(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__AudioClassCandidate(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ActionEngineEventPayloadExtension
#define SOAP_TYPE_PointerTott__ActionEngineEventPayloadExtension (1475)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ActionEngineEventPayloadExtension(struct soap*, tt__ActionEngineEventPayloadExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ActionEngineEventPayloadExtension(struct soap*, const char *, int, tt__ActionEngineEventPayloadExtension *const*, const char *);
SOAP_FMAC3 tt__ActionEngineEventPayloadExtension ** SOAP_FMAC4 soap_in_PointerTott__ActionEngineEventPayloadExtension(struct soap*, const char*, tt__ActionEngineEventPayloadExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ActionEngineEventPayloadExtension(struct soap*, tt__ActionEngineEventPayloadExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ActionEngineEventPayloadExtension
#define soap_write_PointerTott__ActionEngineEventPayloadExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ActionEngineEventPayloadExtension(soap, data), 0) || soap_put_PointerTott__ActionEngineEventPayloadExtension(soap, data, "tt:ActionEngineEventPayloadExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ActionEngineEventPayloadExtension ** SOAP_FMAC4 soap_get_PointerTott__ActionEngineEventPayloadExtension(struct soap*, tt__ActionEngineEventPayloadExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__ActionEngineEventPayloadExtension
#define soap_read_PointerTott__ActionEngineEventPayloadExtension(soap, data) ( ((data) ? (soap_default_PointerTott__ActionEngineEventPayloadExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ActionEngineEventPayloadExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Fault
#define SOAP_TYPE_PointerToSOAP_ENV__Fault (1474)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Fault(struct soap*, const char *, int, struct SOAP_ENV__Fault *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Fault ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Fault
#define soap_write_PointerToSOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Fault(soap, data), 0) || soap_put_PointerToSOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Fault
#define soap_read_PointerToSOAP_ENV__Fault(soap, data) ( ((data) ? (soap_default_PointerToSOAP_ENV__Fault(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Fault(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Envelope
#define SOAP_TYPE_PointerToSOAP_ENV__Envelope (1473)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Envelope(struct soap*, struct SOAP_ENV__Envelope *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Envelope(struct soap*, const char *, int, struct SOAP_ENV__Envelope *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Envelope ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Envelope(struct soap*, const char*, struct SOAP_ENV__Envelope **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Envelope(struct soap*, struct SOAP_ENV__Envelope *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Envelope
#define soap_write_PointerToSOAP_ENV__Envelope(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Envelope(soap, data), 0) || soap_put_PointerToSOAP_ENV__Envelope(soap, data, "SOAP-ENV:Envelope", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Envelope ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Envelope(struct soap*, struct SOAP_ENV__Envelope **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Envelope
#define soap_read_PointerToSOAP_ENV__Envelope(soap, data) ( ((data) ? (soap_default_PointerToSOAP_ENV__Envelope(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Envelope(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AnalyticsState
#define SOAP_TYPE_PointerTott__AnalyticsState (1472)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AnalyticsState(struct soap*, tt__AnalyticsState *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AnalyticsState(struct soap*, const char *, int, tt__AnalyticsState *const*, const char *);
SOAP_FMAC3 tt__AnalyticsState ** SOAP_FMAC4 soap_in_PointerTott__AnalyticsState(struct soap*, const char*, tt__AnalyticsState **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AnalyticsState(struct soap*, tt__AnalyticsState *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AnalyticsState
#define soap_write_PointerTott__AnalyticsState(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AnalyticsState(soap, data), 0) || soap_put_PointerTott__AnalyticsState(soap, data, "tt:AnalyticsState", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsState ** SOAP_FMAC4 soap_get_PointerTott__AnalyticsState(struct soap*, tt__AnalyticsState **, const char*, const char*);

#ifndef soap_read_PointerTott__AnalyticsState
#define soap_read_PointerTott__AnalyticsState(soap, data) ( ((data) ? (soap_default_PointerTott__AnalyticsState(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__AnalyticsState(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MetadataInputExtension
#define SOAP_TYPE_PointerTott__MetadataInputExtension (1471)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MetadataInputExtension(struct soap*, tt__MetadataInputExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MetadataInputExtension(struct soap*, const char *, int, tt__MetadataInputExtension *const*, const char *);
SOAP_FMAC3 tt__MetadataInputExtension ** SOAP_FMAC4 soap_in_PointerTott__MetadataInputExtension(struct soap*, const char*, tt__MetadataInputExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MetadataInputExtension(struct soap*, tt__MetadataInputExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MetadataInputExtension
#define soap_write_PointerTott__MetadataInputExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MetadataInputExtension(soap, data), 0) || soap_put_PointerTott__MetadataInputExtension(soap, data, "tt:MetadataInputExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataInputExtension ** SOAP_FMAC4 soap_get_PointerTott__MetadataInputExtension(struct soap*, tt__MetadataInputExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__MetadataInputExtension
#define soap_read_PointerTott__MetadataInputExtension(soap, data) ( ((data) ? (soap_default_PointerTott__MetadataInputExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__MetadataInputExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SourceIdentificationExtension
#define SOAP_TYPE_PointerTott__SourceIdentificationExtension (1470)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SourceIdentificationExtension(struct soap*, tt__SourceIdentificationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SourceIdentificationExtension(struct soap*, const char *, int, tt__SourceIdentificationExtension *const*, const char *);
SOAP_FMAC3 tt__SourceIdentificationExtension ** SOAP_FMAC4 soap_in_PointerTott__SourceIdentificationExtension(struct soap*, const char*, tt__SourceIdentificationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SourceIdentificationExtension(struct soap*, tt__SourceIdentificationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SourceIdentificationExtension
#define soap_write_PointerTott__SourceIdentificationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SourceIdentificationExtension(soap, data), 0) || soap_put_PointerTott__SourceIdentificationExtension(soap, data, "tt:SourceIdentificationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SourceIdentificationExtension ** SOAP_FMAC4 soap_get_PointerTott__SourceIdentificationExtension(struct soap*, tt__SourceIdentificationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__SourceIdentificationExtension
#define soap_read_PointerTott__SourceIdentificationExtension(soap, data) ( ((data) ? (soap_default_PointerTott__SourceIdentificationExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__SourceIdentificationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AnalyticsEngineInputInfoExtension
#define SOAP_TYPE_PointerTott__AnalyticsEngineInputInfoExtension (1469)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AnalyticsEngineInputInfoExtension(struct soap*, tt__AnalyticsEngineInputInfoExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AnalyticsEngineInputInfoExtension(struct soap*, const char *, int, tt__AnalyticsEngineInputInfoExtension *const*, const char *);
SOAP_FMAC3 tt__AnalyticsEngineInputInfoExtension ** SOAP_FMAC4 soap_in_PointerTott__AnalyticsEngineInputInfoExtension(struct soap*, const char*, tt__AnalyticsEngineInputInfoExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AnalyticsEngineInputInfoExtension(struct soap*, tt__AnalyticsEngineInputInfoExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AnalyticsEngineInputInfoExtension
#define soap_write_PointerTott__AnalyticsEngineInputInfoExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AnalyticsEngineInputInfoExtension(soap, data), 0) || soap_put_PointerTott__AnalyticsEngineInputInfoExtension(soap, data, "tt:AnalyticsEngineInputInfoExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsEngineInputInfoExtension ** SOAP_FMAC4 soap_get_PointerTott__AnalyticsEngineInputInfoExtension(struct soap*, tt__AnalyticsEngineInputInfoExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__AnalyticsEngineInputInfoExtension
#define soap_read_PointerTott__AnalyticsEngineInputInfoExtension(soap, data) ( ((data) ? (soap_default_PointerTott__AnalyticsEngineInputInfoExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__AnalyticsEngineInputInfoExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AnalyticsEngineInputInfo
#define SOAP_TYPE_PointerTott__AnalyticsEngineInputInfo (1468)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AnalyticsEngineInputInfo(struct soap*, tt__AnalyticsEngineInputInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AnalyticsEngineInputInfo(struct soap*, const char *, int, tt__AnalyticsEngineInputInfo *const*, const char *);
SOAP_FMAC3 tt__AnalyticsEngineInputInfo ** SOAP_FMAC4 soap_in_PointerTott__AnalyticsEngineInputInfo(struct soap*, const char*, tt__AnalyticsEngineInputInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AnalyticsEngineInputInfo(struct soap*, tt__AnalyticsEngineInputInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AnalyticsEngineInputInfo
#define soap_write_PointerTott__AnalyticsEngineInputInfo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AnalyticsEngineInputInfo(soap, data), 0) || soap_put_PointerTott__AnalyticsEngineInputInfo(soap, data, "tt:AnalyticsEngineInputInfo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsEngineInputInfo ** SOAP_FMAC4 soap_get_PointerTott__AnalyticsEngineInputInfo(struct soap*, tt__AnalyticsEngineInputInfo **, const char*, const char*);

#ifndef soap_read_PointerTott__AnalyticsEngineInputInfo
#define soap_read_PointerTott__AnalyticsEngineInputInfo(soap, data) ( ((data) ? (soap_default_PointerTott__AnalyticsEngineInputInfo(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__AnalyticsEngineInputInfo(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AnalyticsDeviceEngineConfigurationExtension
#define SOAP_TYPE_PointerTott__AnalyticsDeviceEngineConfigurationExtension (1467)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AnalyticsDeviceEngineConfigurationExtension(struct soap*, tt__AnalyticsDeviceEngineConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AnalyticsDeviceEngineConfigurationExtension(struct soap*, const char *, int, tt__AnalyticsDeviceEngineConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__AnalyticsDeviceEngineConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__AnalyticsDeviceEngineConfigurationExtension(struct soap*, const char*, tt__AnalyticsDeviceEngineConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AnalyticsDeviceEngineConfigurationExtension(struct soap*, tt__AnalyticsDeviceEngineConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AnalyticsDeviceEngineConfigurationExtension
#define soap_write_PointerTott__AnalyticsDeviceEngineConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AnalyticsDeviceEngineConfigurationExtension(soap, data), 0) || soap_put_PointerTott__AnalyticsDeviceEngineConfigurationExtension(soap, data, "tt:AnalyticsDeviceEngineConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsDeviceEngineConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__AnalyticsDeviceEngineConfigurationExtension(struct soap*, tt__AnalyticsDeviceEngineConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__AnalyticsDeviceEngineConfigurationExtension
#define soap_read_PointerTott__AnalyticsDeviceEngineConfigurationExtension(soap, data) ( ((data) ? (soap_default_PointerTott__AnalyticsDeviceEngineConfigurationExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__AnalyticsDeviceEngineConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__EngineConfiguration
#define SOAP_TYPE_PointerTott__EngineConfiguration (1465)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__EngineConfiguration(struct soap*, tt__EngineConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__EngineConfiguration(struct soap*, const char *, int, tt__EngineConfiguration *const*, const char *);
SOAP_FMAC3 tt__EngineConfiguration ** SOAP_FMAC4 soap_in_PointerTott__EngineConfiguration(struct soap*, const char*, tt__EngineConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__EngineConfiguration(struct soap*, tt__EngineConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__EngineConfiguration
#define soap_write_PointerTott__EngineConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__EngineConfiguration(soap, data), 0) || soap_put_PointerTott__EngineConfiguration(soap, data, "tt:EngineConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EngineConfiguration ** SOAP_FMAC4 soap_get_PointerTott__EngineConfiguration(struct soap*, tt__EngineConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__EngineConfiguration
#define soap_read_PointerTott__EngineConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__EngineConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__EngineConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RecordingJobConfiguration
#define SOAP_TYPE_PointerTott__RecordingJobConfiguration (1464)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RecordingJobConfiguration(struct soap*, tt__RecordingJobConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RecordingJobConfiguration(struct soap*, const char *, int, tt__RecordingJobConfiguration *const*, const char *);
SOAP_FMAC3 tt__RecordingJobConfiguration ** SOAP_FMAC4 soap_in_PointerTott__RecordingJobConfiguration(struct soap*, const char*, tt__RecordingJobConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RecordingJobConfiguration(struct soap*, tt__RecordingJobConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RecordingJobConfiguration
#define soap_write_PointerTott__RecordingJobConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RecordingJobConfiguration(soap, data), 0) || soap_put_PointerTott__RecordingJobConfiguration(soap, data, "tt:RecordingJobConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobConfiguration ** SOAP_FMAC4 soap_get_PointerTott__RecordingJobConfiguration(struct soap*, tt__RecordingJobConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__RecordingJobConfiguration
#define soap_read_PointerTott__RecordingJobConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__RecordingJobConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__RecordingJobConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RecordingJobStateTrack
#define SOAP_TYPE_PointerTott__RecordingJobStateTrack (1462)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RecordingJobStateTrack(struct soap*, tt__RecordingJobStateTrack *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RecordingJobStateTrack(struct soap*, const char *, int, tt__RecordingJobStateTrack *const*, const char *);
SOAP_FMAC3 tt__RecordingJobStateTrack ** SOAP_FMAC4 soap_in_PointerTott__RecordingJobStateTrack(struct soap*, const char*, tt__RecordingJobStateTrack **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RecordingJobStateTrack(struct soap*, tt__RecordingJobStateTrack *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RecordingJobStateTrack
#define soap_write_PointerTott__RecordingJobStateTrack(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RecordingJobStateTrack(soap, data), 0) || soap_put_PointerTott__RecordingJobStateTrack(soap, data, "tt:RecordingJobStateTrack", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobStateTrack ** SOAP_FMAC4 soap_get_PointerTott__RecordingJobStateTrack(struct soap*, tt__RecordingJobStateTrack **, const char*, const char*);

#ifndef soap_read_PointerTott__RecordingJobStateTrack
#define soap_read_PointerTott__RecordingJobStateTrack(soap, data) ( ((data) ? (soap_default_PointerTott__RecordingJobStateTrack(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__RecordingJobStateTrack(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RecordingJobStateTracks
#define SOAP_TYPE_PointerTott__RecordingJobStateTracks (1461)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RecordingJobStateTracks(struct soap*, tt__RecordingJobStateTracks *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RecordingJobStateTracks(struct soap*, const char *, int, tt__RecordingJobStateTracks *const*, const char *);
SOAP_FMAC3 tt__RecordingJobStateTracks ** SOAP_FMAC4 soap_in_PointerTott__RecordingJobStateTracks(struct soap*, const char*, tt__RecordingJobStateTracks **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RecordingJobStateTracks(struct soap*, tt__RecordingJobStateTracks *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RecordingJobStateTracks
#define soap_write_PointerTott__RecordingJobStateTracks(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RecordingJobStateTracks(soap, data), 0) || soap_put_PointerTott__RecordingJobStateTracks(soap, data, "tt:RecordingJobStateTracks", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobStateTracks ** SOAP_FMAC4 soap_get_PointerTott__RecordingJobStateTracks(struct soap*, tt__RecordingJobStateTracks **, const char*, const char*);

#ifndef soap_read_PointerTott__RecordingJobStateTracks
#define soap_read_PointerTott__RecordingJobStateTracks(soap, data) ( ((data) ? (soap_default_PointerTott__RecordingJobStateTracks(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__RecordingJobStateTracks(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RecordingJobStateInformationExtension
#define SOAP_TYPE_PointerTott__RecordingJobStateInformationExtension (1460)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RecordingJobStateInformationExtension(struct soap*, tt__RecordingJobStateInformationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RecordingJobStateInformationExtension(struct soap*, const char *, int, tt__RecordingJobStateInformationExtension *const*, const char *);
SOAP_FMAC3 tt__RecordingJobStateInformationExtension ** SOAP_FMAC4 soap_in_PointerTott__RecordingJobStateInformationExtension(struct soap*, const char*, tt__RecordingJobStateInformationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RecordingJobStateInformationExtension(struct soap*, tt__RecordingJobStateInformationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RecordingJobStateInformationExtension
#define soap_write_PointerTott__RecordingJobStateInformationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RecordingJobStateInformationExtension(soap, data), 0) || soap_put_PointerTott__RecordingJobStateInformationExtension(soap, data, "tt:RecordingJobStateInformationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobStateInformationExtension ** SOAP_FMAC4 soap_get_PointerTott__RecordingJobStateInformationExtension(struct soap*, tt__RecordingJobStateInformationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__RecordingJobStateInformationExtension
#define soap_read_PointerTott__RecordingJobStateInformationExtension(soap, data) ( ((data) ? (soap_default_PointerTott__RecordingJobStateInformationExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__RecordingJobStateInformationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RecordingJobStateSource
#define SOAP_TYPE_PointerTott__RecordingJobStateSource (1458)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RecordingJobStateSource(struct soap*, tt__RecordingJobStateSource *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RecordingJobStateSource(struct soap*, const char *, int, tt__RecordingJobStateSource *const*, const char *);
SOAP_FMAC3 tt__RecordingJobStateSource ** SOAP_FMAC4 soap_in_PointerTott__RecordingJobStateSource(struct soap*, const char*, tt__RecordingJobStateSource **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RecordingJobStateSource(struct soap*, tt__RecordingJobStateSource *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RecordingJobStateSource
#define soap_write_PointerTott__RecordingJobStateSource(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RecordingJobStateSource(soap, data), 0) || soap_put_PointerTott__RecordingJobStateSource(soap, data, "tt:RecordingJobStateSource", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobStateSource ** SOAP_FMAC4 soap_get_PointerTott__RecordingJobStateSource(struct soap*, tt__RecordingJobStateSource **, const char*, const char*);

#ifndef soap_read_PointerTott__RecordingJobStateSource
#define soap_read_PointerTott__RecordingJobStateSource(soap, data) ( ((data) ? (soap_default_PointerTott__RecordingJobStateSource(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__RecordingJobStateSource(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RecordingJobSourceExtension
#define SOAP_TYPE_PointerTott__RecordingJobSourceExtension (1457)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RecordingJobSourceExtension(struct soap*, tt__RecordingJobSourceExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RecordingJobSourceExtension(struct soap*, const char *, int, tt__RecordingJobSourceExtension *const*, const char *);
SOAP_FMAC3 tt__RecordingJobSourceExtension ** SOAP_FMAC4 soap_in_PointerTott__RecordingJobSourceExtension(struct soap*, const char*, tt__RecordingJobSourceExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RecordingJobSourceExtension(struct soap*, tt__RecordingJobSourceExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RecordingJobSourceExtension
#define soap_write_PointerTott__RecordingJobSourceExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RecordingJobSourceExtension(soap, data), 0) || soap_put_PointerTott__RecordingJobSourceExtension(soap, data, "tt:RecordingJobSourceExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobSourceExtension ** SOAP_FMAC4 soap_get_PointerTott__RecordingJobSourceExtension(struct soap*, tt__RecordingJobSourceExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__RecordingJobSourceExtension
#define soap_read_PointerTott__RecordingJobSourceExtension(soap, data) ( ((data) ? (soap_default_PointerTott__RecordingJobSourceExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__RecordingJobSourceExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RecordingJobTrack
#define SOAP_TYPE_PointerTott__RecordingJobTrack (1455)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RecordingJobTrack(struct soap*, tt__RecordingJobTrack *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RecordingJobTrack(struct soap*, const char *, int, tt__RecordingJobTrack *const*, const char *);
SOAP_FMAC3 tt__RecordingJobTrack ** SOAP_FMAC4 soap_in_PointerTott__RecordingJobTrack(struct soap*, const char*, tt__RecordingJobTrack **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RecordingJobTrack(struct soap*, tt__RecordingJobTrack *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RecordingJobTrack
#define soap_write_PointerTott__RecordingJobTrack(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RecordingJobTrack(soap, data), 0) || soap_put_PointerTott__RecordingJobTrack(soap, data, "tt:RecordingJobTrack", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobTrack ** SOAP_FMAC4 soap_get_PointerTott__RecordingJobTrack(struct soap*, tt__RecordingJobTrack **, const char*, const char*);

#ifndef soap_read_PointerTott__RecordingJobTrack
#define soap_read_PointerTott__RecordingJobTrack(soap, data) ( ((data) ? (soap_default_PointerTott__RecordingJobTrack(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__RecordingJobTrack(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RecordingJobConfigurationExtension
#define SOAP_TYPE_PointerTott__RecordingJobConfigurationExtension (1454)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RecordingJobConfigurationExtension(struct soap*, tt__RecordingJobConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RecordingJobConfigurationExtension(struct soap*, const char *, int, tt__RecordingJobConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__RecordingJobConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__RecordingJobConfigurationExtension(struct soap*, const char*, tt__RecordingJobConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RecordingJobConfigurationExtension(struct soap*, tt__RecordingJobConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RecordingJobConfigurationExtension
#define soap_write_PointerTott__RecordingJobConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RecordingJobConfigurationExtension(soap, data), 0) || soap_put_PointerTott__RecordingJobConfigurationExtension(soap, data, "tt:RecordingJobConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__RecordingJobConfigurationExtension(struct soap*, tt__RecordingJobConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__RecordingJobConfigurationExtension
#define soap_read_PointerTott__RecordingJobConfigurationExtension(soap, data) ( ((data) ? (soap_default_PointerTott__RecordingJobConfigurationExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__RecordingJobConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RecordingJobSource
#define SOAP_TYPE_PointerTott__RecordingJobSource (1452)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RecordingJobSource(struct soap*, tt__RecordingJobSource *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RecordingJobSource(struct soap*, const char *, int, tt__RecordingJobSource *const*, const char *);
SOAP_FMAC3 tt__RecordingJobSource ** SOAP_FMAC4 soap_in_PointerTott__RecordingJobSource(struct soap*, const char*, tt__RecordingJobSource **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RecordingJobSource(struct soap*, tt__RecordingJobSource *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RecordingJobSource
#define soap_write_PointerTott__RecordingJobSource(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RecordingJobSource(soap, data), 0) || soap_put_PointerTott__RecordingJobSource(soap, data, "tt:RecordingJobSource", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingJobSource ** SOAP_FMAC4 soap_get_PointerTott__RecordingJobSource(struct soap*, tt__RecordingJobSource **, const char*, const char*);

#ifndef soap_read_PointerTott__RecordingJobSource
#define soap_read_PointerTott__RecordingJobSource(soap, data) ( ((data) ? (soap_default_PointerTott__RecordingJobSource(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__RecordingJobSource(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__TrackConfiguration
#define SOAP_TYPE_PointerTott__TrackConfiguration (1451)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__TrackConfiguration(struct soap*, tt__TrackConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__TrackConfiguration(struct soap*, const char *, int, tt__TrackConfiguration *const*, const char *);
SOAP_FMAC3 tt__TrackConfiguration ** SOAP_FMAC4 soap_in_PointerTott__TrackConfiguration(struct soap*, const char*, tt__TrackConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__TrackConfiguration(struct soap*, tt__TrackConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__TrackConfiguration
#define soap_write_PointerTott__TrackConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__TrackConfiguration(soap, data), 0) || soap_put_PointerTott__TrackConfiguration(soap, data, "tt:TrackConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__TrackConfiguration ** SOAP_FMAC4 soap_get_PointerTott__TrackConfiguration(struct soap*, tt__TrackConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__TrackConfiguration
#define soap_read_PointerTott__TrackConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__TrackConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__TrackConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__GetTracksResponseItem
#define SOAP_TYPE_PointerTott__GetTracksResponseItem (1449)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__GetTracksResponseItem(struct soap*, tt__GetTracksResponseItem *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__GetTracksResponseItem(struct soap*, const char *, int, tt__GetTracksResponseItem *const*, const char *);
SOAP_FMAC3 tt__GetTracksResponseItem ** SOAP_FMAC4 soap_in_PointerTott__GetTracksResponseItem(struct soap*, const char*, tt__GetTracksResponseItem **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__GetTracksResponseItem(struct soap*, tt__GetTracksResponseItem *const*, const char*, const char*);

#ifndef soap_write_PointerTott__GetTracksResponseItem
#define soap_write_PointerTott__GetTracksResponseItem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__GetTracksResponseItem(soap, data), 0) || soap_put_PointerTott__GetTracksResponseItem(soap, data, "tt:GetTracksResponseItem", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__GetTracksResponseItem ** SOAP_FMAC4 soap_get_PointerTott__GetTracksResponseItem(struct soap*, tt__GetTracksResponseItem **, const char*, const char*);

#ifndef soap_read_PointerTott__GetTracksResponseItem
#define soap_read_PointerTott__GetTracksResponseItem(soap, data) ( ((data) ? (soap_default_PointerTott__GetTracksResponseItem(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__GetTracksResponseItem(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__GetTracksResponseList
#define SOAP_TYPE_PointerTott__GetTracksResponseList (1448)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__GetTracksResponseList(struct soap*, tt__GetTracksResponseList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__GetTracksResponseList(struct soap*, const char *, int, tt__GetTracksResponseList *const*, const char *);
SOAP_FMAC3 tt__GetTracksResponseList ** SOAP_FMAC4 soap_in_PointerTott__GetTracksResponseList(struct soap*, const char*, tt__GetTracksResponseList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__GetTracksResponseList(struct soap*, tt__GetTracksResponseList *const*, const char*, const char*);

#ifndef soap_write_PointerTott__GetTracksResponseList
#define soap_write_PointerTott__GetTracksResponseList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__GetTracksResponseList(soap, data), 0) || soap_put_PointerTott__GetTracksResponseList(soap, data, "tt:GetTracksResponseList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__GetTracksResponseList ** SOAP_FMAC4 soap_get_PointerTott__GetTracksResponseList(struct soap*, tt__GetTracksResponseList **, const char*, const char*);

#ifndef soap_read_PointerTott__GetTracksResponseList
#define soap_read_PointerTott__GetTracksResponseList(soap, data) ( ((data) ? (soap_default_PointerTott__GetTracksResponseList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__GetTracksResponseList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RecordingConfiguration
#define SOAP_TYPE_PointerTott__RecordingConfiguration (1447)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RecordingConfiguration(struct soap*, tt__RecordingConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RecordingConfiguration(struct soap*, const char *, int, tt__RecordingConfiguration *const*, const char *);
SOAP_FMAC3 tt__RecordingConfiguration ** SOAP_FMAC4 soap_in_PointerTott__RecordingConfiguration(struct soap*, const char*, tt__RecordingConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RecordingConfiguration(struct soap*, tt__RecordingConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RecordingConfiguration
#define soap_write_PointerTott__RecordingConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RecordingConfiguration(soap, data), 0) || soap_put_PointerTott__RecordingConfiguration(soap, data, "tt:RecordingConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingConfiguration ** SOAP_FMAC4 soap_get_PointerTott__RecordingConfiguration(struct soap*, tt__RecordingConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__RecordingConfiguration
#define soap_read_PointerTott__RecordingConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__RecordingConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__RecordingConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__TrackAttributesExtension
#define SOAP_TYPE_PointerTott__TrackAttributesExtension (1446)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__TrackAttributesExtension(struct soap*, tt__TrackAttributesExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__TrackAttributesExtension(struct soap*, const char *, int, tt__TrackAttributesExtension *const*, const char *);
SOAP_FMAC3 tt__TrackAttributesExtension ** SOAP_FMAC4 soap_in_PointerTott__TrackAttributesExtension(struct soap*, const char*, tt__TrackAttributesExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__TrackAttributesExtension(struct soap*, tt__TrackAttributesExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__TrackAttributesExtension
#define soap_write_PointerTott__TrackAttributesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__TrackAttributesExtension(soap, data), 0) || soap_put_PointerTott__TrackAttributesExtension(soap, data, "tt:TrackAttributesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__TrackAttributesExtension ** SOAP_FMAC4 soap_get_PointerTott__TrackAttributesExtension(struct soap*, tt__TrackAttributesExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__TrackAttributesExtension
#define soap_read_PointerTott__TrackAttributesExtension(soap, data) ( ((data) ? (soap_default_PointerTott__TrackAttributesExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__TrackAttributesExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MetadataAttributes
#define SOAP_TYPE_PointerTott__MetadataAttributes (1445)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MetadataAttributes(struct soap*, tt__MetadataAttributes *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MetadataAttributes(struct soap*, const char *, int, tt__MetadataAttributes *const*, const char *);
SOAP_FMAC3 tt__MetadataAttributes ** SOAP_FMAC4 soap_in_PointerTott__MetadataAttributes(struct soap*, const char*, tt__MetadataAttributes **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MetadataAttributes(struct soap*, tt__MetadataAttributes *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MetadataAttributes
#define soap_write_PointerTott__MetadataAttributes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MetadataAttributes(soap, data), 0) || soap_put_PointerTott__MetadataAttributes(soap, data, "tt:MetadataAttributes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataAttributes ** SOAP_FMAC4 soap_get_PointerTott__MetadataAttributes(struct soap*, tt__MetadataAttributes **, const char*, const char*);

#ifndef soap_read_PointerTott__MetadataAttributes
#define soap_read_PointerTott__MetadataAttributes(soap, data) ( ((data) ? (soap_default_PointerTott__MetadataAttributes(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__MetadataAttributes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AudioAttributes
#define SOAP_TYPE_PointerTott__AudioAttributes (1444)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AudioAttributes(struct soap*, tt__AudioAttributes *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AudioAttributes(struct soap*, const char *, int, tt__AudioAttributes *const*, const char *);
SOAP_FMAC3 tt__AudioAttributes ** SOAP_FMAC4 soap_in_PointerTott__AudioAttributes(struct soap*, const char*, tt__AudioAttributes **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AudioAttributes(struct soap*, tt__AudioAttributes *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AudioAttributes
#define soap_write_PointerTott__AudioAttributes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AudioAttributes(soap, data), 0) || soap_put_PointerTott__AudioAttributes(soap, data, "tt:AudioAttributes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioAttributes ** SOAP_FMAC4 soap_get_PointerTott__AudioAttributes(struct soap*, tt__AudioAttributes **, const char*, const char*);

#ifndef soap_read_PointerTott__AudioAttributes
#define soap_read_PointerTott__AudioAttributes(soap, data) ( ((data) ? (soap_default_PointerTott__AudioAttributes(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__AudioAttributes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoAttributes
#define SOAP_TYPE_PointerTott__VideoAttributes (1443)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoAttributes(struct soap*, tt__VideoAttributes *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoAttributes(struct soap*, const char *, int, tt__VideoAttributes *const*, const char *);
SOAP_FMAC3 tt__VideoAttributes ** SOAP_FMAC4 soap_in_PointerTott__VideoAttributes(struct soap*, const char*, tt__VideoAttributes **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoAttributes(struct soap*, tt__VideoAttributes *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoAttributes
#define soap_write_PointerTott__VideoAttributes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoAttributes(soap, data), 0) || soap_put_PointerTott__VideoAttributes(soap, data, "tt:VideoAttributes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoAttributes ** SOAP_FMAC4 soap_get_PointerTott__VideoAttributes(struct soap*, tt__VideoAttributes **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoAttributes
#define soap_read_PointerTott__VideoAttributes(soap, data) ( ((data) ? (soap_default_PointerTott__VideoAttributes(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__VideoAttributes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__TrackAttributes
#define SOAP_TYPE_PointerTott__TrackAttributes (1441)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__TrackAttributes(struct soap*, tt__TrackAttributes *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__TrackAttributes(struct soap*, const char *, int, tt__TrackAttributes *const*, const char *);
SOAP_FMAC3 tt__TrackAttributes ** SOAP_FMAC4 soap_in_PointerTott__TrackAttributes(struct soap*, const char*, tt__TrackAttributes **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__TrackAttributes(struct soap*, tt__TrackAttributes *const*, const char*, const char*);

#ifndef soap_write_PointerTott__TrackAttributes
#define soap_write_PointerTott__TrackAttributes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__TrackAttributes(soap, data), 0) || soap_put_PointerTott__TrackAttributes(soap, data, "tt:TrackAttributes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__TrackAttributes ** SOAP_FMAC4 soap_get_PointerTott__TrackAttributes(struct soap*, tt__TrackAttributes **, const char*, const char*);

#ifndef soap_read_PointerTott__TrackAttributes
#define soap_read_PointerTott__TrackAttributes(soap, data) ( ((data) ? (soap_default_PointerTott__TrackAttributes(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__TrackAttributes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__TrackInformation
#define SOAP_TYPE_PointerTott__TrackInformation (1439)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__TrackInformation(struct soap*, tt__TrackInformation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__TrackInformation(struct soap*, const char *, int, tt__TrackInformation *const*, const char *);
SOAP_FMAC3 tt__TrackInformation ** SOAP_FMAC4 soap_in_PointerTott__TrackInformation(struct soap*, const char*, tt__TrackInformation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__TrackInformation(struct soap*, tt__TrackInformation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__TrackInformation
#define soap_write_PointerTott__TrackInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__TrackInformation(soap, data), 0) || soap_put_PointerTott__TrackInformation(soap, data, "tt:TrackInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__TrackInformation ** SOAP_FMAC4 soap_get_PointerTott__TrackInformation(struct soap*, tt__TrackInformation **, const char*, const char*);

#ifndef soap_read_PointerTott__TrackInformation
#define soap_read_PointerTott__TrackInformation(soap, data) ( ((data) ? (soap_default_PointerTott__TrackInformation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__TrackInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RecordingSourceInformation
#define SOAP_TYPE_PointerTott__RecordingSourceInformation (1438)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RecordingSourceInformation(struct soap*, tt__RecordingSourceInformation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RecordingSourceInformation(struct soap*, const char *, int, tt__RecordingSourceInformation *const*, const char *);
SOAP_FMAC3 tt__RecordingSourceInformation ** SOAP_FMAC4 soap_in_PointerTott__RecordingSourceInformation(struct soap*, const char*, tt__RecordingSourceInformation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RecordingSourceInformation(struct soap*, tt__RecordingSourceInformation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RecordingSourceInformation
#define soap_write_PointerTott__RecordingSourceInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RecordingSourceInformation(soap, data), 0) || soap_put_PointerTott__RecordingSourceInformation(soap, data, "tt:RecordingSourceInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingSourceInformation ** SOAP_FMAC4 soap_get_PointerTott__RecordingSourceInformation(struct soap*, tt__RecordingSourceInformation **, const char*, const char*);

#ifndef soap_read_PointerTott__RecordingSourceInformation
#define soap_read_PointerTott__RecordingSourceInformation(soap, data) ( ((data) ? (soap_default_PointerTott__RecordingSourceInformation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__RecordingSourceInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FindMetadataResult
#define SOAP_TYPE_PointerTott__FindMetadataResult (1436)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FindMetadataResult(struct soap*, tt__FindMetadataResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FindMetadataResult(struct soap*, const char *, int, tt__FindMetadataResult *const*, const char *);
SOAP_FMAC3 tt__FindMetadataResult ** SOAP_FMAC4 soap_in_PointerTott__FindMetadataResult(struct soap*, const char*, tt__FindMetadataResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FindMetadataResult(struct soap*, tt__FindMetadataResult *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FindMetadataResult
#define soap_write_PointerTott__FindMetadataResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FindMetadataResult(soap, data), 0) || soap_put_PointerTott__FindMetadataResult(soap, data, "tt:FindMetadataResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FindMetadataResult ** SOAP_FMAC4 soap_get_PointerTott__FindMetadataResult(struct soap*, tt__FindMetadataResult **, const char*, const char*);

#ifndef soap_read_PointerTott__FindMetadataResult
#define soap_read_PointerTott__FindMetadataResult(soap, data) ( ((data) ? (soap_default_PointerTott__FindMetadataResult(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__FindMetadataResult(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FindPTZPositionResult
#define SOAP_TYPE_PointerTott__FindPTZPositionResult (1434)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FindPTZPositionResult(struct soap*, tt__FindPTZPositionResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FindPTZPositionResult(struct soap*, const char *, int, tt__FindPTZPositionResult *const*, const char *);
SOAP_FMAC3 tt__FindPTZPositionResult ** SOAP_FMAC4 soap_in_PointerTott__FindPTZPositionResult(struct soap*, const char*, tt__FindPTZPositionResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FindPTZPositionResult(struct soap*, tt__FindPTZPositionResult *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FindPTZPositionResult
#define soap_write_PointerTott__FindPTZPositionResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FindPTZPositionResult(soap, data), 0) || soap_put_PointerTott__FindPTZPositionResult(soap, data, "tt:FindPTZPositionResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FindPTZPositionResult ** SOAP_FMAC4 soap_get_PointerTott__FindPTZPositionResult(struct soap*, tt__FindPTZPositionResult **, const char*, const char*);

#ifndef soap_read_PointerTott__FindPTZPositionResult
#define soap_read_PointerTott__FindPTZPositionResult(soap, data) ( ((data) ? (soap_default_PointerTott__FindPTZPositionResult(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__FindPTZPositionResult(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowsnt__NotificationMessageHolderType
#define SOAP_TYPE_PointerTowsnt__NotificationMessageHolderType (1433)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__NotificationMessageHolderType(struct soap*, wsnt__NotificationMessageHolderType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__NotificationMessageHolderType(struct soap*, const char *, int, wsnt__NotificationMessageHolderType *const*, const char *);
SOAP_FMAC3 wsnt__NotificationMessageHolderType ** SOAP_FMAC4 soap_in_PointerTowsnt__NotificationMessageHolderType(struct soap*, const char*, wsnt__NotificationMessageHolderType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__NotificationMessageHolderType(struct soap*, wsnt__NotificationMessageHolderType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsnt__NotificationMessageHolderType
#define soap_write_PointerTowsnt__NotificationMessageHolderType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsnt__NotificationMessageHolderType(soap, data), 0) || soap_put_PointerTowsnt__NotificationMessageHolderType(soap, data, "wsnt:NotificationMessageHolderType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__NotificationMessageHolderType ** SOAP_FMAC4 soap_get_PointerTowsnt__NotificationMessageHolderType(struct soap*, wsnt__NotificationMessageHolderType **, const char*, const char*);

#ifndef soap_read_PointerTowsnt__NotificationMessageHolderType
#define soap_read_PointerTowsnt__NotificationMessageHolderType(soap, data) ( ((data) ? (soap_default_PointerTowsnt__NotificationMessageHolderType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTowsnt__NotificationMessageHolderType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FindEventResult
#define SOAP_TYPE_PointerTott__FindEventResult (1431)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FindEventResult(struct soap*, tt__FindEventResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FindEventResult(struct soap*, const char *, int, tt__FindEventResult *const*, const char *);
SOAP_FMAC3 tt__FindEventResult ** SOAP_FMAC4 soap_in_PointerTott__FindEventResult(struct soap*, const char*, tt__FindEventResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FindEventResult(struct soap*, tt__FindEventResult *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FindEventResult
#define soap_write_PointerTott__FindEventResult(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FindEventResult(soap, data), 0) || soap_put_PointerTott__FindEventResult(soap, data, "tt:FindEventResult", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FindEventResult ** SOAP_FMAC4 soap_get_PointerTott__FindEventResult(struct soap*, tt__FindEventResult **, const char*, const char*);

#ifndef soap_read_PointerTott__FindEventResult
#define soap_read_PointerTott__FindEventResult(soap, data) ( ((data) ? (soap_default_PointerTott__FindEventResult(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__FindEventResult(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RecordingInformation
#define SOAP_TYPE_PointerTott__RecordingInformation (1429)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RecordingInformation(struct soap*, tt__RecordingInformation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RecordingInformation(struct soap*, const char *, int, tt__RecordingInformation *const*, const char *);
SOAP_FMAC3 tt__RecordingInformation ** SOAP_FMAC4 soap_in_PointerTott__RecordingInformation(struct soap*, const char*, tt__RecordingInformation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RecordingInformation(struct soap*, tt__RecordingInformation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RecordingInformation
#define soap_write_PointerTott__RecordingInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RecordingInformation(soap, data), 0) || soap_put_PointerTott__RecordingInformation(soap, data, "tt:RecordingInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingInformation ** SOAP_FMAC4 soap_get_PointerTott__RecordingInformation(struct soap*, tt__RecordingInformation **, const char*, const char*);

#ifndef soap_read_PointerTott__RecordingInformation
#define soap_read_PointerTott__RecordingInformation(soap, data) ( ((data) ? (soap_default_PointerTott__RecordingInformation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__RecordingInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SearchScopeExtension
#define SOAP_TYPE_PointerTott__SearchScopeExtension (1428)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SearchScopeExtension(struct soap*, tt__SearchScopeExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SearchScopeExtension(struct soap*, const char *, int, tt__SearchScopeExtension *const*, const char *);
SOAP_FMAC3 tt__SearchScopeExtension ** SOAP_FMAC4 soap_in_PointerTott__SearchScopeExtension(struct soap*, const char*, tt__SearchScopeExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SearchScopeExtension(struct soap*, tt__SearchScopeExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SearchScopeExtension
#define soap_write_PointerTott__SearchScopeExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SearchScopeExtension(soap, data), 0) || soap_put_PointerTott__SearchScopeExtension(soap, data, "tt:SearchScopeExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SearchScopeExtension ** SOAP_FMAC4 soap_get_PointerTott__SearchScopeExtension(struct soap*, tt__SearchScopeExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__SearchScopeExtension
#define soap_read_PointerTott__SearchScopeExtension(soap, data) ( ((data) ? (soap_default_PointerTott__SearchScopeExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__SearchScopeExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__XPathExpression
#define SOAP_TYPE_PointerTott__XPathExpression (1427)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__XPathExpression(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__XPathExpression(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTott__XPathExpression(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__XPathExpression(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTott__XPathExpression
#define soap_write_PointerTott__XPathExpression(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__XPathExpression(soap, data), 0) || soap_put_PointerTott__XPathExpression(soap, data, "tt:XPathExpression", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTott__XPathExpression(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTott__XPathExpression
#define soap_read_PointerTott__XPathExpression(soap, data) ( ((data) ? (soap_default_PointerTott__XPathExpression(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__XPathExpression(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SourceReference
#define SOAP_TYPE_PointerTott__SourceReference (1424)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SourceReference(struct soap*, tt__SourceReference *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SourceReference(struct soap*, const char *, int, tt__SourceReference *const*, const char *);
SOAP_FMAC3 tt__SourceReference ** SOAP_FMAC4 soap_in_PointerTott__SourceReference(struct soap*, const char*, tt__SourceReference **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SourceReference(struct soap*, tt__SourceReference *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SourceReference
#define soap_write_PointerTott__SourceReference(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SourceReference(soap, data), 0) || soap_put_PointerTott__SourceReference(soap, data, "tt:SourceReference", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SourceReference ** SOAP_FMAC4 soap_get_PointerTott__SourceReference(struct soap*, tt__SourceReference **, const char*, const char*);

#ifndef soap_read_PointerTott__SourceReference
#define soap_read_PointerTott__SourceReference(soap, data) ( ((data) ? (soap_default_PointerTott__SourceReference(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__SourceReference(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__StreamSetup
#define SOAP_TYPE_PointerTott__StreamSetup (1423)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__StreamSetup(struct soap*, tt__StreamSetup *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__StreamSetup(struct soap*, const char *, int, tt__StreamSetup *const*, const char *);
SOAP_FMAC3 tt__StreamSetup ** SOAP_FMAC4 soap_in_PointerTott__StreamSetup(struct soap*, const char*, tt__StreamSetup **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__StreamSetup(struct soap*, tt__StreamSetup *const*, const char*, const char*);

#ifndef soap_write_PointerTott__StreamSetup
#define soap_write_PointerTott__StreamSetup(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__StreamSetup(soap, data), 0) || soap_put_PointerTott__StreamSetup(soap, data, "tt:StreamSetup", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__StreamSetup ** SOAP_FMAC4 soap_get_PointerTott__StreamSetup(struct soap*, tt__StreamSetup **, const char*, const char*);

#ifndef soap_read_PointerTott__StreamSetup
#define soap_read_PointerTott__StreamSetup(soap, data) ( ((data) ? (soap_default_PointerTott__StreamSetup(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__StreamSetup(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ReceiverConfiguration
#define SOAP_TYPE_PointerTott__ReceiverConfiguration (1422)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ReceiverConfiguration(struct soap*, tt__ReceiverConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ReceiverConfiguration(struct soap*, const char *, int, tt__ReceiverConfiguration *const*, const char *);
SOAP_FMAC3 tt__ReceiverConfiguration ** SOAP_FMAC4 soap_in_PointerTott__ReceiverConfiguration(struct soap*, const char*, tt__ReceiverConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ReceiverConfiguration(struct soap*, tt__ReceiverConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ReceiverConfiguration
#define soap_write_PointerTott__ReceiverConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ReceiverConfiguration(soap, data), 0) || soap_put_PointerTott__ReceiverConfiguration(soap, data, "tt:ReceiverConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ReceiverConfiguration ** SOAP_FMAC4 soap_get_PointerTott__ReceiverConfiguration(struct soap*, tt__ReceiverConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__ReceiverConfiguration
#define soap_read_PointerTott__ReceiverConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__ReceiverConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ReceiverConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PaneOptionExtension
#define SOAP_TYPE_PointerTott__PaneOptionExtension (1421)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PaneOptionExtension(struct soap*, tt__PaneOptionExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PaneOptionExtension(struct soap*, const char *, int, tt__PaneOptionExtension *const*, const char *);
SOAP_FMAC3 tt__PaneOptionExtension ** SOAP_FMAC4 soap_in_PointerTott__PaneOptionExtension(struct soap*, const char*, tt__PaneOptionExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PaneOptionExtension(struct soap*, tt__PaneOptionExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PaneOptionExtension
#define soap_write_PointerTott__PaneOptionExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PaneOptionExtension(soap, data), 0) || soap_put_PointerTott__PaneOptionExtension(soap, data, "tt:PaneOptionExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PaneOptionExtension ** SOAP_FMAC4 soap_get_PointerTott__PaneOptionExtension(struct soap*, tt__PaneOptionExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PaneOptionExtension
#define soap_read_PointerTott__PaneOptionExtension(soap, data) ( ((data) ? (soap_default_PointerTott__PaneOptionExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PaneOptionExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__LayoutOptionsExtension
#define SOAP_TYPE_PointerTott__LayoutOptionsExtension (1419)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__LayoutOptionsExtension(struct soap*, tt__LayoutOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__LayoutOptionsExtension(struct soap*, const char *, int, tt__LayoutOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__LayoutOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__LayoutOptionsExtension(struct soap*, const char*, tt__LayoutOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__LayoutOptionsExtension(struct soap*, tt__LayoutOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__LayoutOptionsExtension
#define soap_write_PointerTott__LayoutOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__LayoutOptionsExtension(soap, data), 0) || soap_put_PointerTott__LayoutOptionsExtension(soap, data, "tt:LayoutOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__LayoutOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__LayoutOptionsExtension(struct soap*, tt__LayoutOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__LayoutOptionsExtension
#define soap_read_PointerTott__LayoutOptionsExtension(soap, data) ( ((data) ? (soap_default_PointerTott__LayoutOptionsExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__LayoutOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PaneLayoutOptions
#define SOAP_TYPE_PointerTott__PaneLayoutOptions (1417)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PaneLayoutOptions(struct soap*, tt__PaneLayoutOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PaneLayoutOptions(struct soap*, const char *, int, tt__PaneLayoutOptions *const*, const char *);
SOAP_FMAC3 tt__PaneLayoutOptions ** SOAP_FMAC4 soap_in_PointerTott__PaneLayoutOptions(struct soap*, const char*, tt__PaneLayoutOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PaneLayoutOptions(struct soap*, tt__PaneLayoutOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PaneLayoutOptions
#define soap_write_PointerTott__PaneLayoutOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PaneLayoutOptions(soap, data), 0) || soap_put_PointerTott__PaneLayoutOptions(soap, data, "tt:PaneLayoutOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PaneLayoutOptions ** SOAP_FMAC4 soap_get_PointerTott__PaneLayoutOptions(struct soap*, tt__PaneLayoutOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__PaneLayoutOptions
#define soap_read_PointerTott__PaneLayoutOptions(soap, data) ( ((data) ? (soap_default_PointerTott__PaneLayoutOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PaneLayoutOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoDecoderConfigurationOptions
#define SOAP_TYPE_PointerTott__VideoDecoderConfigurationOptions (1416)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoDecoderConfigurationOptions(struct soap*, tt__VideoDecoderConfigurationOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoDecoderConfigurationOptions(struct soap*, const char *, int, tt__VideoDecoderConfigurationOptions *const*, const char *);
SOAP_FMAC3 tt__VideoDecoderConfigurationOptions ** SOAP_FMAC4 soap_in_PointerTott__VideoDecoderConfigurationOptions(struct soap*, const char*, tt__VideoDecoderConfigurationOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoDecoderConfigurationOptions(struct soap*, tt__VideoDecoderConfigurationOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoDecoderConfigurationOptions
#define soap_write_PointerTott__VideoDecoderConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoDecoderConfigurationOptions(soap, data), 0) || soap_put_PointerTott__VideoDecoderConfigurationOptions(soap, data, "tt:VideoDecoderConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoDecoderConfigurationOptions ** SOAP_FMAC4 soap_get_PointerTott__VideoDecoderConfigurationOptions(struct soap*, tt__VideoDecoderConfigurationOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoDecoderConfigurationOptions
#define soap_read_PointerTott__VideoDecoderConfigurationOptions(soap, data) ( ((data) ? (soap_default_PointerTott__VideoDecoderConfigurationOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__VideoDecoderConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AudioDecoderConfigurationOptions
#define SOAP_TYPE_PointerTott__AudioDecoderConfigurationOptions (1415)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AudioDecoderConfigurationOptions(struct soap*, tt__AudioDecoderConfigurationOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AudioDecoderConfigurationOptions(struct soap*, const char *, int, tt__AudioDecoderConfigurationOptions *const*, const char *);
SOAP_FMAC3 tt__AudioDecoderConfigurationOptions ** SOAP_FMAC4 soap_in_PointerTott__AudioDecoderConfigurationOptions(struct soap*, const char*, tt__AudioDecoderConfigurationOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AudioDecoderConfigurationOptions(struct soap*, tt__AudioDecoderConfigurationOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AudioDecoderConfigurationOptions
#define soap_write_PointerTott__AudioDecoderConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AudioDecoderConfigurationOptions(soap, data), 0) || soap_put_PointerTott__AudioDecoderConfigurationOptions(soap, data, "tt:AudioDecoderConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioDecoderConfigurationOptions ** SOAP_FMAC4 soap_get_PointerTott__AudioDecoderConfigurationOptions(struct soap*, tt__AudioDecoderConfigurationOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__AudioDecoderConfigurationOptions
#define soap_read_PointerTott__AudioDecoderConfigurationOptions(soap, data) ( ((data) ? (soap_default_PointerTott__AudioDecoderConfigurationOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__AudioDecoderConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AudioEncoderConfigurationOptions
#define SOAP_TYPE_PointerTott__AudioEncoderConfigurationOptions (1414)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AudioEncoderConfigurationOptions(struct soap*, tt__AudioEncoderConfigurationOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AudioEncoderConfigurationOptions(struct soap*, const char *, int, tt__AudioEncoderConfigurationOptions *const*, const char *);
SOAP_FMAC3 tt__AudioEncoderConfigurationOptions ** SOAP_FMAC4 soap_in_PointerTott__AudioEncoderConfigurationOptions(struct soap*, const char*, tt__AudioEncoderConfigurationOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AudioEncoderConfigurationOptions(struct soap*, tt__AudioEncoderConfigurationOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AudioEncoderConfigurationOptions
#define soap_write_PointerTott__AudioEncoderConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AudioEncoderConfigurationOptions(soap, data), 0) || soap_put_PointerTott__AudioEncoderConfigurationOptions(soap, data, "tt:AudioEncoderConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioEncoderConfigurationOptions ** SOAP_FMAC4 soap_get_PointerTott__AudioEncoderConfigurationOptions(struct soap*, tt__AudioEncoderConfigurationOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__AudioEncoderConfigurationOptions
#define soap_read_PointerTott__AudioEncoderConfigurationOptions(soap, data) ( ((data) ? (soap_default_PointerTott__AudioEncoderConfigurationOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__AudioEncoderConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__LayoutExtension
#define SOAP_TYPE_PointerTott__LayoutExtension (1413)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__LayoutExtension(struct soap*, tt__LayoutExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__LayoutExtension(struct soap*, const char *, int, tt__LayoutExtension *const*, const char *);
SOAP_FMAC3 tt__LayoutExtension ** SOAP_FMAC4 soap_in_PointerTott__LayoutExtension(struct soap*, const char*, tt__LayoutExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__LayoutExtension(struct soap*, tt__LayoutExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__LayoutExtension
#define soap_write_PointerTott__LayoutExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__LayoutExtension(soap, data), 0) || soap_put_PointerTott__LayoutExtension(soap, data, "tt:LayoutExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__LayoutExtension ** SOAP_FMAC4 soap_get_PointerTott__LayoutExtension(struct soap*, tt__LayoutExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__LayoutExtension
#define soap_read_PointerTott__LayoutExtension(soap, data) ( ((data) ? (soap_default_PointerTott__LayoutExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__LayoutExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PaneLayout
#define SOAP_TYPE_PointerTott__PaneLayout (1411)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PaneLayout(struct soap*, tt__PaneLayout *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PaneLayout(struct soap*, const char *, int, tt__PaneLayout *const*, const char *);
SOAP_FMAC3 tt__PaneLayout ** SOAP_FMAC4 soap_in_PointerTott__PaneLayout(struct soap*, const char*, tt__PaneLayout **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PaneLayout(struct soap*, tt__PaneLayout *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PaneLayout
#define soap_write_PointerTott__PaneLayout(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PaneLayout(soap, data), 0) || soap_put_PointerTott__PaneLayout(soap, data, "tt:PaneLayout", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PaneLayout ** SOAP_FMAC4 soap_get_PointerTott__PaneLayout(struct soap*, tt__PaneLayout **, const char*, const char*);

#ifndef soap_read_PointerTott__PaneLayout
#define soap_read_PointerTott__PaneLayout(soap, data) ( ((data) ? (soap_default_PointerTott__PaneLayout(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PaneLayout(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Transformation
#define SOAP_TYPE_PointerTott__Transformation (1410)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Transformation(struct soap*, tt__Transformation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Transformation(struct soap*, const char *, int, tt__Transformation *const*, const char *);
SOAP_FMAC3 tt__Transformation ** SOAP_FMAC4 soap_in_PointerTott__Transformation(struct soap*, const char*, tt__Transformation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Transformation(struct soap*, tt__Transformation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Transformation
#define soap_write_PointerTott__Transformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Transformation(soap, data), 0) || soap_put_PointerTott__Transformation(soap, data, "tt:Transformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Transformation ** SOAP_FMAC4 soap_get_PointerTott__Transformation(struct soap*, tt__Transformation **, const char*, const char*);

#ifndef soap_read_PointerTott__Transformation
#define soap_read_PointerTott__Transformation(soap, data) ( ((data) ? (soap_default_PointerTott__Transformation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Transformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MotionExpression
#define SOAP_TYPE_PointerTott__MotionExpression (1409)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MotionExpression(struct soap*, tt__MotionExpression *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MotionExpression(struct soap*, const char *, int, tt__MotionExpression *const*, const char *);
SOAP_FMAC3 tt__MotionExpression ** SOAP_FMAC4 soap_in_PointerTott__MotionExpression(struct soap*, const char*, tt__MotionExpression **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MotionExpression(struct soap*, tt__MotionExpression *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MotionExpression
#define soap_write_PointerTott__MotionExpression(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MotionExpression(soap, data), 0) || soap_put_PointerTott__MotionExpression(soap, data, "tt:MotionExpression", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MotionExpression ** SOAP_FMAC4 soap_get_PointerTott__MotionExpression(struct soap*, tt__MotionExpression **, const char*, const char*);

#ifndef soap_read_PointerTott__MotionExpression
#define soap_read_PointerTott__MotionExpression(soap, data) ( ((data) ? (soap_default_PointerTott__MotionExpression(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__MotionExpression(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PolylineArray
#define SOAP_TYPE_PointerTott__PolylineArray (1408)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PolylineArray(struct soap*, tt__PolylineArray *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PolylineArray(struct soap*, const char *, int, tt__PolylineArray *const*, const char *);
SOAP_FMAC3 tt__PolylineArray ** SOAP_FMAC4 soap_in_PointerTott__PolylineArray(struct soap*, const char*, tt__PolylineArray **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PolylineArray(struct soap*, tt__PolylineArray *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PolylineArray
#define soap_write_PointerTott__PolylineArray(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PolylineArray(soap, data), 0) || soap_put_PointerTott__PolylineArray(soap, data, "tt:PolylineArray", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PolylineArray ** SOAP_FMAC4 soap_get_PointerTott__PolylineArray(struct soap*, tt__PolylineArray **, const char*, const char*);

#ifndef soap_read_PointerTott__PolylineArray
#define soap_read_PointerTott__PolylineArray(soap, data) ( ((data) ? (soap_default_PointerTott__PolylineArray(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PolylineArray(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PolylineArrayExtension
#define SOAP_TYPE_PointerTott__PolylineArrayExtension (1407)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PolylineArrayExtension(struct soap*, tt__PolylineArrayExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PolylineArrayExtension(struct soap*, const char *, int, tt__PolylineArrayExtension *const*, const char *);
SOAP_FMAC3 tt__PolylineArrayExtension ** SOAP_FMAC4 soap_in_PointerTott__PolylineArrayExtension(struct soap*, const char*, tt__PolylineArrayExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PolylineArrayExtension(struct soap*, tt__PolylineArrayExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PolylineArrayExtension
#define soap_write_PointerTott__PolylineArrayExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PolylineArrayExtension(soap, data), 0) || soap_put_PointerTott__PolylineArrayExtension(soap, data, "tt:PolylineArrayExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PolylineArrayExtension ** SOAP_FMAC4 soap_get_PointerTott__PolylineArrayExtension(struct soap*, tt__PolylineArrayExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PolylineArrayExtension
#define soap_read_PointerTott__PolylineArrayExtension(soap, data) ( ((data) ? (soap_default_PointerTott__PolylineArrayExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PolylineArrayExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Polyline
#define SOAP_TYPE_PointerTott__Polyline (1405)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Polyline(struct soap*, tt__Polyline *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Polyline(struct soap*, const char *, int, tt__Polyline *const*, const char *);
SOAP_FMAC3 tt__Polyline ** SOAP_FMAC4 soap_in_PointerTott__Polyline(struct soap*, const char*, tt__Polyline **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Polyline(struct soap*, tt__Polyline *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Polyline
#define soap_write_PointerTott__Polyline(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Polyline(soap, data), 0) || soap_put_PointerTott__Polyline(soap, data, "tt:Polyline", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Polyline ** SOAP_FMAC4 soap_get_PointerTott__Polyline(struct soap*, tt__Polyline **, const char*, const char*);

#ifndef soap_read_PointerTott__Polyline
#define soap_read_PointerTott__Polyline(soap, data) ( ((data) ? (soap_default_PointerTott__Polyline(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Polyline(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Polygon
#define SOAP_TYPE_PointerTott__Polygon (1404)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Polygon(struct soap*, tt__Polygon *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Polygon(struct soap*, const char *, int, tt__Polygon *const*, const char *);
SOAP_FMAC3 tt__Polygon ** SOAP_FMAC4 soap_in_PointerTott__Polygon(struct soap*, const char*, tt__Polygon **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Polygon(struct soap*, tt__Polygon *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Polygon
#define soap_write_PointerTott__Polygon(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Polygon(soap, data), 0) || soap_put_PointerTott__Polygon(soap, data, "tt:Polygon", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Polygon ** SOAP_FMAC4 soap_get_PointerTott__Polygon(struct soap*, tt__Polygon **, const char*, const char*);

#ifndef soap_read_PointerTott__Polygon
#define soap_read_PointerTott__Polygon(soap, data) ( ((data) ? (soap_default_PointerTott__Polygon(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Polygon(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SupportedAnalyticsModulesExtension
#define SOAP_TYPE_PointerTott__SupportedAnalyticsModulesExtension (1403)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SupportedAnalyticsModulesExtension(struct soap*, tt__SupportedAnalyticsModulesExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SupportedAnalyticsModulesExtension(struct soap*, const char *, int, tt__SupportedAnalyticsModulesExtension *const*, const char *);
SOAP_FMAC3 tt__SupportedAnalyticsModulesExtension ** SOAP_FMAC4 soap_in_PointerTott__SupportedAnalyticsModulesExtension(struct soap*, const char*, tt__SupportedAnalyticsModulesExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SupportedAnalyticsModulesExtension(struct soap*, tt__SupportedAnalyticsModulesExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SupportedAnalyticsModulesExtension
#define soap_write_PointerTott__SupportedAnalyticsModulesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SupportedAnalyticsModulesExtension(soap, data), 0) || soap_put_PointerTott__SupportedAnalyticsModulesExtension(soap, data, "tt:SupportedAnalyticsModulesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SupportedAnalyticsModulesExtension ** SOAP_FMAC4 soap_get_PointerTott__SupportedAnalyticsModulesExtension(struct soap*, tt__SupportedAnalyticsModulesExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__SupportedAnalyticsModulesExtension
#define soap_read_PointerTott__SupportedAnalyticsModulesExtension(soap, data) ( ((data) ? (soap_default_PointerTott__SupportedAnalyticsModulesExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__SupportedAnalyticsModulesExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SupportedRulesExtension
#define SOAP_TYPE_PointerTott__SupportedRulesExtension (1402)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SupportedRulesExtension(struct soap*, tt__SupportedRulesExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SupportedRulesExtension(struct soap*, const char *, int, tt__SupportedRulesExtension *const*, const char *);
SOAP_FMAC3 tt__SupportedRulesExtension ** SOAP_FMAC4 soap_in_PointerTott__SupportedRulesExtension(struct soap*, const char*, tt__SupportedRulesExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SupportedRulesExtension(struct soap*, tt__SupportedRulesExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SupportedRulesExtension
#define soap_write_PointerTott__SupportedRulesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SupportedRulesExtension(soap, data), 0) || soap_put_PointerTott__SupportedRulesExtension(soap, data, "tt:SupportedRulesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SupportedRulesExtension ** SOAP_FMAC4 soap_get_PointerTott__SupportedRulesExtension(struct soap*, tt__SupportedRulesExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__SupportedRulesExtension
#define soap_read_PointerTott__SupportedRulesExtension(soap, data) ( ((data) ? (soap_default_PointerTott__SupportedRulesExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__SupportedRulesExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ConfigDescription
#define SOAP_TYPE_PointerTott__ConfigDescription (1400)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ConfigDescription(struct soap*, tt__ConfigDescription *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ConfigDescription(struct soap*, const char *, int, tt__ConfigDescription *const*, const char *);
SOAP_FMAC3 tt__ConfigDescription ** SOAP_FMAC4 soap_in_PointerTott__ConfigDescription(struct soap*, const char*, tt__ConfigDescription **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ConfigDescription(struct soap*, tt__ConfigDescription *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ConfigDescription
#define soap_write_PointerTott__ConfigDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ConfigDescription(soap, data), 0) || soap_put_PointerTott__ConfigDescription(soap, data, "tt:ConfigDescription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ConfigDescription ** SOAP_FMAC4 soap_get_PointerTott__ConfigDescription(struct soap*, tt__ConfigDescription **, const char*, const char*);

#ifndef soap_read_PointerTott__ConfigDescription
#define soap_read_PointerTott__ConfigDescription(soap, data) ( ((data) ? (soap_default_PointerTott__ConfigDescription(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ConfigDescription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ConfigDescriptionExtension
#define SOAP_TYPE_PointerTott__ConfigDescriptionExtension (1399)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ConfigDescriptionExtension(struct soap*, tt__ConfigDescriptionExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ConfigDescriptionExtension(struct soap*, const char *, int, tt__ConfigDescriptionExtension *const*, const char *);
SOAP_FMAC3 tt__ConfigDescriptionExtension ** SOAP_FMAC4 soap_in_PointerTott__ConfigDescriptionExtension(struct soap*, const char*, tt__ConfigDescriptionExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ConfigDescriptionExtension(struct soap*, tt__ConfigDescriptionExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ConfigDescriptionExtension
#define soap_write_PointerTott__ConfigDescriptionExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ConfigDescriptionExtension(soap, data), 0) || soap_put_PointerTott__ConfigDescriptionExtension(soap, data, "tt:ConfigDescriptionExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ConfigDescriptionExtension ** SOAP_FMAC4 soap_get_PointerTott__ConfigDescriptionExtension(struct soap*, tt__ConfigDescriptionExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__ConfigDescriptionExtension
#define soap_read_PointerTott__ConfigDescriptionExtension(soap, data) ( ((data) ? (soap_default_PointerTott__ConfigDescriptionExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ConfigDescriptionExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__vectorTemplateOf_tt__ConfigDescription_Messages
#define SOAP_TYPE_PointerTostd__vectorTemplateOf_tt__ConfigDescription_Messages (1398)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__vectorTemplateOf_tt__ConfigDescription_Messages(struct soap*, std::vector<_tt__ConfigDescription_Messages> *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__vectorTemplateOf_tt__ConfigDescription_Messages(struct soap*, const char *, int, std::vector<_tt__ConfigDescription_Messages> *const*, const char *);
SOAP_FMAC3 std::vector<_tt__ConfigDescription_Messages> ** SOAP_FMAC4 soap_in_PointerTostd__vectorTemplateOf_tt__ConfigDescription_Messages(struct soap*, const char*, std::vector<_tt__ConfigDescription_Messages> **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__vectorTemplateOf_tt__ConfigDescription_Messages(struct soap*, std::vector<_tt__ConfigDescription_Messages> *const*, const char*, const char*);

#ifndef soap_write_PointerTostd__vectorTemplateOf_tt__ConfigDescription_Messages
#define soap_write_PointerTostd__vectorTemplateOf_tt__ConfigDescription_Messages(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__vectorTemplateOf_tt__ConfigDescription_Messages(soap, data), 0) || soap_put_PointerTostd__vectorTemplateOf_tt__ConfigDescription_Messages(soap, data, "", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::vector<_tt__ConfigDescription_Messages> ** SOAP_FMAC4 soap_get_PointerTostd__vectorTemplateOf_tt__ConfigDescription_Messages(struct soap*, std::vector<_tt__ConfigDescription_Messages> **, const char*, const char*);

#ifndef soap_read_PointerTostd__vectorTemplateOf_tt__ConfigDescription_Messages
#define soap_read_PointerTostd__vectorTemplateOf_tt__ConfigDescription_Messages(soap, data) ( ((data) ? (soap_default_PointerTostd__vectorTemplateOf_tt__ConfigDescription_Messages(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTostd__vectorTemplateOf_tt__ConfigDescription_Messages(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ItemList
#define SOAP_TYPE_PointerTott__ItemList (1395)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ItemList(struct soap*, tt__ItemList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ItemList(struct soap*, const char *, int, tt__ItemList *const*, const char *);
SOAP_FMAC3 tt__ItemList ** SOAP_FMAC4 soap_in_PointerTott__ItemList(struct soap*, const char*, tt__ItemList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ItemList(struct soap*, tt__ItemList *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ItemList
#define soap_write_PointerTott__ItemList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ItemList(soap, data), 0) || soap_put_PointerTott__ItemList(soap, data, "tt:ItemList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ItemList ** SOAP_FMAC4 soap_get_PointerTott__ItemList(struct soap*, tt__ItemList **, const char*, const char*);

#ifndef soap_read_PointerTott__ItemList
#define soap_read_PointerTott__ItemList(soap, data) ( ((data) ? (soap_default_PointerTott__ItemList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ItemList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RuleEngineConfigurationExtension
#define SOAP_TYPE_PointerTott__RuleEngineConfigurationExtension (1394)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RuleEngineConfigurationExtension(struct soap*, tt__RuleEngineConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RuleEngineConfigurationExtension(struct soap*, const char *, int, tt__RuleEngineConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__RuleEngineConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__RuleEngineConfigurationExtension(struct soap*, const char*, tt__RuleEngineConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RuleEngineConfigurationExtension(struct soap*, tt__RuleEngineConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RuleEngineConfigurationExtension
#define soap_write_PointerTott__RuleEngineConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RuleEngineConfigurationExtension(soap, data), 0) || soap_put_PointerTott__RuleEngineConfigurationExtension(soap, data, "tt:RuleEngineConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RuleEngineConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__RuleEngineConfigurationExtension(struct soap*, tt__RuleEngineConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__RuleEngineConfigurationExtension
#define soap_read_PointerTott__RuleEngineConfigurationExtension(soap, data) ( ((data) ? (soap_default_PointerTott__RuleEngineConfigurationExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__RuleEngineConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AnalyticsEngineConfigurationExtension
#define SOAP_TYPE_PointerTott__AnalyticsEngineConfigurationExtension (1393)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AnalyticsEngineConfigurationExtension(struct soap*, tt__AnalyticsEngineConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AnalyticsEngineConfigurationExtension(struct soap*, const char *, int, tt__AnalyticsEngineConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__AnalyticsEngineConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__AnalyticsEngineConfigurationExtension(struct soap*, const char*, tt__AnalyticsEngineConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AnalyticsEngineConfigurationExtension(struct soap*, tt__AnalyticsEngineConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AnalyticsEngineConfigurationExtension
#define soap_write_PointerTott__AnalyticsEngineConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AnalyticsEngineConfigurationExtension(soap, data), 0) || soap_put_PointerTott__AnalyticsEngineConfigurationExtension(soap, data, "tt:AnalyticsEngineConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsEngineConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__AnalyticsEngineConfigurationExtension(struct soap*, tt__AnalyticsEngineConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__AnalyticsEngineConfigurationExtension
#define soap_read_PointerTott__AnalyticsEngineConfigurationExtension(soap, data) ( ((data) ? (soap_default_PointerTott__AnalyticsEngineConfigurationExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__AnalyticsEngineConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Config
#define SOAP_TYPE_PointerTott__Config (1391)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Config(struct soap*, tt__Config *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Config(struct soap*, const char *, int, tt__Config *const*, const char *);
SOAP_FMAC3 tt__Config ** SOAP_FMAC4 soap_in_PointerTott__Config(struct soap*, const char*, tt__Config **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Config(struct soap*, tt__Config *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Config
#define soap_write_PointerTott__Config(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Config(soap, data), 0) || soap_put_PointerTott__Config(soap, data, "tt:Config", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Config ** SOAP_FMAC4 soap_get_PointerTott__Config(struct soap*, tt__Config **, const char*, const char*);

#ifndef soap_read_PointerTott__Config
#define soap_read_PointerTott__Config(soap, data) ( ((data) ? (soap_default_PointerTott__Config(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Config(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Vector
#define SOAP_TYPE_PointerTott__Vector (1389)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Vector(struct soap*, tt__Vector *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Vector(struct soap*, const char *, int, tt__Vector *const*, const char *);
SOAP_FMAC3 tt__Vector ** SOAP_FMAC4 soap_in_PointerTott__Vector(struct soap*, const char*, tt__Vector **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Vector(struct soap*, tt__Vector *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Vector
#define soap_write_PointerTott__Vector(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Vector(soap, data), 0) || soap_put_PointerTott__Vector(soap, data, "tt:Vector", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Vector ** SOAP_FMAC4 soap_get_PointerTott__Vector(struct soap*, tt__Vector **, const char*, const char*);

#ifndef soap_read_PointerTott__Vector
#define soap_read_PointerTott__Vector(soap, data) ( ((data) ? (soap_default_PointerTott__Vector(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Vector(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ItemListDescriptionExtension
#define SOAP_TYPE_PointerTott__ItemListDescriptionExtension (1388)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ItemListDescriptionExtension(struct soap*, tt__ItemListDescriptionExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ItemListDescriptionExtension(struct soap*, const char *, int, tt__ItemListDescriptionExtension *const*, const char *);
SOAP_FMAC3 tt__ItemListDescriptionExtension ** SOAP_FMAC4 soap_in_PointerTott__ItemListDescriptionExtension(struct soap*, const char*, tt__ItemListDescriptionExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ItemListDescriptionExtension(struct soap*, tt__ItemListDescriptionExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ItemListDescriptionExtension
#define soap_write_PointerTott__ItemListDescriptionExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ItemListDescriptionExtension(soap, data), 0) || soap_put_PointerTott__ItemListDescriptionExtension(soap, data, "tt:ItemListDescriptionExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ItemListDescriptionExtension ** SOAP_FMAC4 soap_get_PointerTott__ItemListDescriptionExtension(struct soap*, tt__ItemListDescriptionExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__ItemListDescriptionExtension
#define soap_read_PointerTott__ItemListDescriptionExtension(soap, data) ( ((data) ? (soap_default_PointerTott__ItemListDescriptionExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ItemListDescriptionExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription
#define SOAP_TYPE_PointerTostd__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription (1387)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(struct soap*, std::vector<_tt__ItemListDescription_ElementItemDescription> *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(struct soap*, const char *, int, std::vector<_tt__ItemListDescription_ElementItemDescription> *const*, const char *);
SOAP_FMAC3 std::vector<_tt__ItemListDescription_ElementItemDescription> ** SOAP_FMAC4 soap_in_PointerTostd__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(struct soap*, const char*, std::vector<_tt__ItemListDescription_ElementItemDescription> **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(struct soap*, std::vector<_tt__ItemListDescription_ElementItemDescription> *const*, const char*, const char*);

#ifndef soap_write_PointerTostd__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription
#define soap_write_PointerTostd__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(soap, data), 0) || soap_put_PointerTostd__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(soap, data, "", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::vector<_tt__ItemListDescription_ElementItemDescription> ** SOAP_FMAC4 soap_get_PointerTostd__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(struct soap*, std::vector<_tt__ItemListDescription_ElementItemDescription> **, const char*, const char*);

#ifndef soap_read_PointerTostd__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription
#define soap_read_PointerTostd__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(soap, data) ( ((data) ? (soap_default_PointerTostd__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTostd__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription
#define SOAP_TYPE_PointerTostd__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription (1384)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(struct soap*, std::vector<_tt__ItemListDescription_SimpleItemDescription> *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(struct soap*, const char *, int, std::vector<_tt__ItemListDescription_SimpleItemDescription> *const*, const char *);
SOAP_FMAC3 std::vector<_tt__ItemListDescription_SimpleItemDescription> ** SOAP_FMAC4 soap_in_PointerTostd__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(struct soap*, const char*, std::vector<_tt__ItemListDescription_SimpleItemDescription> **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(struct soap*, std::vector<_tt__ItemListDescription_SimpleItemDescription> *const*, const char*, const char*);

#ifndef soap_write_PointerTostd__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription
#define soap_write_PointerTostd__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(soap, data), 0) || soap_put_PointerTostd__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(soap, data, "", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::vector<_tt__ItemListDescription_SimpleItemDescription> ** SOAP_FMAC4 soap_get_PointerTostd__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(struct soap*, std::vector<_tt__ItemListDescription_SimpleItemDescription> **, const char*, const char*);

#ifndef soap_read_PointerTostd__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription
#define soap_read_PointerTostd__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(soap, data) ( ((data) ? (soap_default_PointerTostd__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTostd__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MessageDescriptionExtension
#define SOAP_TYPE_PointerTott__MessageDescriptionExtension (1381)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MessageDescriptionExtension(struct soap*, tt__MessageDescriptionExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MessageDescriptionExtension(struct soap*, const char *, int, tt__MessageDescriptionExtension *const*, const char *);
SOAP_FMAC3 tt__MessageDescriptionExtension ** SOAP_FMAC4 soap_in_PointerTott__MessageDescriptionExtension(struct soap*, const char*, tt__MessageDescriptionExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MessageDescriptionExtension(struct soap*, tt__MessageDescriptionExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MessageDescriptionExtension
#define soap_write_PointerTott__MessageDescriptionExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MessageDescriptionExtension(soap, data), 0) || soap_put_PointerTott__MessageDescriptionExtension(soap, data, "tt:MessageDescriptionExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MessageDescriptionExtension ** SOAP_FMAC4 soap_get_PointerTott__MessageDescriptionExtension(struct soap*, tt__MessageDescriptionExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__MessageDescriptionExtension
#define soap_read_PointerTott__MessageDescriptionExtension(soap, data) ( ((data) ? (soap_default_PointerTott__MessageDescriptionExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__MessageDescriptionExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ItemListDescription
#define SOAP_TYPE_PointerTott__ItemListDescription (1380)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ItemListDescription(struct soap*, tt__ItemListDescription *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ItemListDescription(struct soap*, const char *, int, tt__ItemListDescription *const*, const char *);
SOAP_FMAC3 tt__ItemListDescription ** SOAP_FMAC4 soap_in_PointerTott__ItemListDescription(struct soap*, const char*, tt__ItemListDescription **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ItemListDescription(struct soap*, tt__ItemListDescription *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ItemListDescription
#define soap_write_PointerTott__ItemListDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ItemListDescription(soap, data), 0) || soap_put_PointerTott__ItemListDescription(soap, data, "tt:ItemListDescription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ItemListDescription ** SOAP_FMAC4 soap_get_PointerTott__ItemListDescription(struct soap*, tt__ItemListDescription **, const char*, const char*);

#ifndef soap_read_PointerTott__ItemListDescription
#define soap_read_PointerTott__ItemListDescription(soap, data) ( ((data) ? (soap_default_PointerTott__ItemListDescription(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ItemListDescription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ItemListExtension
#define SOAP_TYPE_PointerTott__ItemListExtension (1379)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ItemListExtension(struct soap*, tt__ItemListExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ItemListExtension(struct soap*, const char *, int, tt__ItemListExtension *const*, const char *);
SOAP_FMAC3 tt__ItemListExtension ** SOAP_FMAC4 soap_in_PointerTott__ItemListExtension(struct soap*, const char*, tt__ItemListExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ItemListExtension(struct soap*, tt__ItemListExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ItemListExtension
#define soap_write_PointerTott__ItemListExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ItemListExtension(soap, data), 0) || soap_put_PointerTott__ItemListExtension(soap, data, "tt:ItemListExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ItemListExtension ** SOAP_FMAC4 soap_get_PointerTott__ItemListExtension(struct soap*, tt__ItemListExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__ItemListExtension
#define soap_read_PointerTott__ItemListExtension(soap, data) ( ((data) ? (soap_default_PointerTott__ItemListExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ItemListExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__vectorTemplateOf_tt__ItemList_ElementItem
#define SOAP_TYPE_PointerTostd__vectorTemplateOf_tt__ItemList_ElementItem (1378)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__vectorTemplateOf_tt__ItemList_ElementItem(struct soap*, std::vector<_tt__ItemList_ElementItem> *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__vectorTemplateOf_tt__ItemList_ElementItem(struct soap*, const char *, int, std::vector<_tt__ItemList_ElementItem> *const*, const char *);
SOAP_FMAC3 std::vector<_tt__ItemList_ElementItem> ** SOAP_FMAC4 soap_in_PointerTostd__vectorTemplateOf_tt__ItemList_ElementItem(struct soap*, const char*, std::vector<_tt__ItemList_ElementItem> **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__vectorTemplateOf_tt__ItemList_ElementItem(struct soap*, std::vector<_tt__ItemList_ElementItem> *const*, const char*, const char*);

#ifndef soap_write_PointerTostd__vectorTemplateOf_tt__ItemList_ElementItem
#define soap_write_PointerTostd__vectorTemplateOf_tt__ItemList_ElementItem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__vectorTemplateOf_tt__ItemList_ElementItem(soap, data), 0) || soap_put_PointerTostd__vectorTemplateOf_tt__ItemList_ElementItem(soap, data, "", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::vector<_tt__ItemList_ElementItem> ** SOAP_FMAC4 soap_get_PointerTostd__vectorTemplateOf_tt__ItemList_ElementItem(struct soap*, std::vector<_tt__ItemList_ElementItem> **, const char*, const char*);

#ifndef soap_read_PointerTostd__vectorTemplateOf_tt__ItemList_ElementItem
#define soap_read_PointerTostd__vectorTemplateOf_tt__ItemList_ElementItem(soap, data) ( ((data) ? (soap_default_PointerTostd__vectorTemplateOf_tt__ItemList_ElementItem(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTostd__vectorTemplateOf_tt__ItemList_ElementItem(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__vectorTemplateOf_tt__ItemList_SimpleItem
#define SOAP_TYPE_PointerTostd__vectorTemplateOf_tt__ItemList_SimpleItem (1375)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__vectorTemplateOf_tt__ItemList_SimpleItem(struct soap*, std::vector<_tt__ItemList_SimpleItem> *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__vectorTemplateOf_tt__ItemList_SimpleItem(struct soap*, const char *, int, std::vector<_tt__ItemList_SimpleItem> *const*, const char *);
SOAP_FMAC3 std::vector<_tt__ItemList_SimpleItem> ** SOAP_FMAC4 soap_in_PointerTostd__vectorTemplateOf_tt__ItemList_SimpleItem(struct soap*, const char*, std::vector<_tt__ItemList_SimpleItem> **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__vectorTemplateOf_tt__ItemList_SimpleItem(struct soap*, std::vector<_tt__ItemList_SimpleItem> *const*, const char*, const char*);

#ifndef soap_write_PointerTostd__vectorTemplateOf_tt__ItemList_SimpleItem
#define soap_write_PointerTostd__vectorTemplateOf_tt__ItemList_SimpleItem(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__vectorTemplateOf_tt__ItemList_SimpleItem(soap, data), 0) || soap_put_PointerTostd__vectorTemplateOf_tt__ItemList_SimpleItem(soap, data, "", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::vector<_tt__ItemList_SimpleItem> ** SOAP_FMAC4 soap_get_PointerTostd__vectorTemplateOf_tt__ItemList_SimpleItem(struct soap*, std::vector<_tt__ItemList_SimpleItem> **, const char*, const char*);

#ifndef soap_read_PointerTostd__vectorTemplateOf_tt__ItemList_SimpleItem
#define soap_read_PointerTostd__vectorTemplateOf_tt__ItemList_SimpleItem(soap, data) ( ((data) ? (soap_default_PointerTostd__vectorTemplateOf_tt__ItemList_SimpleItem(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTostd__vectorTemplateOf_tt__ItemList_SimpleItem(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FocusOptions20Extension
#define SOAP_TYPE_PointerTott__FocusOptions20Extension (1372)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FocusOptions20Extension(struct soap*, tt__FocusOptions20Extension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FocusOptions20Extension(struct soap*, const char *, int, tt__FocusOptions20Extension *const*, const char *);
SOAP_FMAC3 tt__FocusOptions20Extension ** SOAP_FMAC4 soap_in_PointerTott__FocusOptions20Extension(struct soap*, const char*, tt__FocusOptions20Extension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FocusOptions20Extension(struct soap*, tt__FocusOptions20Extension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FocusOptions20Extension
#define soap_write_PointerTott__FocusOptions20Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FocusOptions20Extension(soap, data), 0) || soap_put_PointerTott__FocusOptions20Extension(soap, data, "tt:FocusOptions20Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusOptions20Extension ** SOAP_FMAC4 soap_get_PointerTott__FocusOptions20Extension(struct soap*, tt__FocusOptions20Extension **, const char*, const char*);

#ifndef soap_read_PointerTott__FocusOptions20Extension
#define soap_read_PointerTott__FocusOptions20Extension(soap, data) ( ((data) ? (soap_default_PointerTott__FocusOptions20Extension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__FocusOptions20Extension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__WhiteBalanceOptions20Extension
#define SOAP_TYPE_PointerTott__WhiteBalanceOptions20Extension (1371)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__WhiteBalanceOptions20Extension(struct soap*, tt__WhiteBalanceOptions20Extension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__WhiteBalanceOptions20Extension(struct soap*, const char *, int, tt__WhiteBalanceOptions20Extension *const*, const char *);
SOAP_FMAC3 tt__WhiteBalanceOptions20Extension ** SOAP_FMAC4 soap_in_PointerTott__WhiteBalanceOptions20Extension(struct soap*, const char*, tt__WhiteBalanceOptions20Extension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__WhiteBalanceOptions20Extension(struct soap*, tt__WhiteBalanceOptions20Extension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__WhiteBalanceOptions20Extension
#define soap_write_PointerTott__WhiteBalanceOptions20Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__WhiteBalanceOptions20Extension(soap, data), 0) || soap_put_PointerTott__WhiteBalanceOptions20Extension(soap, data, "tt:WhiteBalanceOptions20Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WhiteBalanceOptions20Extension ** SOAP_FMAC4 soap_get_PointerTott__WhiteBalanceOptions20Extension(struct soap*, tt__WhiteBalanceOptions20Extension **, const char*, const char*);

#ifndef soap_read_PointerTott__WhiteBalanceOptions20Extension
#define soap_read_PointerTott__WhiteBalanceOptions20Extension(soap, data) ( ((data) ? (soap_default_PointerTott__WhiteBalanceOptions20Extension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__WhiteBalanceOptions20Extension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FocusConfiguration20Extension
#define SOAP_TYPE_PointerTott__FocusConfiguration20Extension (1370)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FocusConfiguration20Extension(struct soap*, tt__FocusConfiguration20Extension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FocusConfiguration20Extension(struct soap*, const char *, int, tt__FocusConfiguration20Extension *const*, const char *);
SOAP_FMAC3 tt__FocusConfiguration20Extension ** SOAP_FMAC4 soap_in_PointerTott__FocusConfiguration20Extension(struct soap*, const char*, tt__FocusConfiguration20Extension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FocusConfiguration20Extension(struct soap*, tt__FocusConfiguration20Extension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FocusConfiguration20Extension
#define soap_write_PointerTott__FocusConfiguration20Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FocusConfiguration20Extension(soap, data), 0) || soap_put_PointerTott__FocusConfiguration20Extension(soap, data, "tt:FocusConfiguration20Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusConfiguration20Extension ** SOAP_FMAC4 soap_get_PointerTott__FocusConfiguration20Extension(struct soap*, tt__FocusConfiguration20Extension **, const char*, const char*);

#ifndef soap_read_PointerTott__FocusConfiguration20Extension
#define soap_read_PointerTott__FocusConfiguration20Extension(soap, data) ( ((data) ? (soap_default_PointerTott__FocusConfiguration20Extension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__FocusConfiguration20Extension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__WhiteBalance20Extension
#define SOAP_TYPE_PointerTott__WhiteBalance20Extension (1369)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__WhiteBalance20Extension(struct soap*, tt__WhiteBalance20Extension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__WhiteBalance20Extension(struct soap*, const char *, int, tt__WhiteBalance20Extension *const*, const char *);
SOAP_FMAC3 tt__WhiteBalance20Extension ** SOAP_FMAC4 soap_in_PointerTott__WhiteBalance20Extension(struct soap*, const char*, tt__WhiteBalance20Extension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__WhiteBalance20Extension(struct soap*, tt__WhiteBalance20Extension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__WhiteBalance20Extension
#define soap_write_PointerTott__WhiteBalance20Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__WhiteBalance20Extension(soap, data), 0) || soap_put_PointerTott__WhiteBalance20Extension(soap, data, "tt:WhiteBalance20Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WhiteBalance20Extension ** SOAP_FMAC4 soap_get_PointerTott__WhiteBalance20Extension(struct soap*, tt__WhiteBalance20Extension **, const char*, const char*);

#ifndef soap_read_PointerTott__WhiteBalance20Extension
#define soap_read_PointerTott__WhiteBalance20Extension(soap, data) ( ((data) ? (soap_default_PointerTott__WhiteBalance20Extension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__WhiteBalance20Extension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RelativeFocusOptions20
#define SOAP_TYPE_PointerTott__RelativeFocusOptions20 (1368)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RelativeFocusOptions20(struct soap*, tt__RelativeFocusOptions20 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RelativeFocusOptions20(struct soap*, const char *, int, tt__RelativeFocusOptions20 *const*, const char *);
SOAP_FMAC3 tt__RelativeFocusOptions20 ** SOAP_FMAC4 soap_in_PointerTott__RelativeFocusOptions20(struct soap*, const char*, tt__RelativeFocusOptions20 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RelativeFocusOptions20(struct soap*, tt__RelativeFocusOptions20 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RelativeFocusOptions20
#define soap_write_PointerTott__RelativeFocusOptions20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RelativeFocusOptions20(soap, data), 0) || soap_put_PointerTott__RelativeFocusOptions20(soap, data, "tt:RelativeFocusOptions20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RelativeFocusOptions20 ** SOAP_FMAC4 soap_get_PointerTott__RelativeFocusOptions20(struct soap*, tt__RelativeFocusOptions20 **, const char*, const char*);

#ifndef soap_read_PointerTott__RelativeFocusOptions20
#define soap_read_PointerTott__RelativeFocusOptions20(soap, data) ( ((data) ? (soap_default_PointerTott__RelativeFocusOptions20(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__RelativeFocusOptions20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IrCutFilterAutoAdjustmentOptionsExtension
#define SOAP_TYPE_PointerTott__IrCutFilterAutoAdjustmentOptionsExtension (1366)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IrCutFilterAutoAdjustmentOptionsExtension(struct soap*, tt__IrCutFilterAutoAdjustmentOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IrCutFilterAutoAdjustmentOptionsExtension(struct soap*, const char *, int, tt__IrCutFilterAutoAdjustmentOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__IrCutFilterAutoAdjustmentOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__IrCutFilterAutoAdjustmentOptionsExtension(struct soap*, const char*, tt__IrCutFilterAutoAdjustmentOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IrCutFilterAutoAdjustmentOptionsExtension(struct soap*, tt__IrCutFilterAutoAdjustmentOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IrCutFilterAutoAdjustmentOptionsExtension
#define soap_write_PointerTott__IrCutFilterAutoAdjustmentOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IrCutFilterAutoAdjustmentOptionsExtension(soap, data), 0) || soap_put_PointerTott__IrCutFilterAutoAdjustmentOptionsExtension(soap, data, "tt:IrCutFilterAutoAdjustmentOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IrCutFilterAutoAdjustmentOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__IrCutFilterAutoAdjustmentOptionsExtension(struct soap*, tt__IrCutFilterAutoAdjustmentOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__IrCutFilterAutoAdjustmentOptionsExtension
#define soap_read_PointerTott__IrCutFilterAutoAdjustmentOptionsExtension(soap, data) ( ((data) ? (soap_default_PointerTott__IrCutFilterAutoAdjustmentOptionsExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__IrCutFilterAutoAdjustmentOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImageStabilizationOptionsExtension
#define SOAP_TYPE_PointerTott__ImageStabilizationOptionsExtension (1365)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImageStabilizationOptionsExtension(struct soap*, tt__ImageStabilizationOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImageStabilizationOptionsExtension(struct soap*, const char *, int, tt__ImageStabilizationOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__ImageStabilizationOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__ImageStabilizationOptionsExtension(struct soap*, const char*, tt__ImageStabilizationOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImageStabilizationOptionsExtension(struct soap*, tt__ImageStabilizationOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImageStabilizationOptionsExtension
#define soap_write_PointerTott__ImageStabilizationOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImageStabilizationOptionsExtension(soap, data), 0) || soap_put_PointerTott__ImageStabilizationOptionsExtension(soap, data, "tt:ImageStabilizationOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImageStabilizationOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__ImageStabilizationOptionsExtension(struct soap*, tt__ImageStabilizationOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__ImageStabilizationOptionsExtension
#define soap_read_PointerTott__ImageStabilizationOptionsExtension(soap, data) ( ((data) ? (soap_default_PointerTott__ImageStabilizationOptionsExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ImageStabilizationOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImagingOptions20Extension4
#define SOAP_TYPE_PointerTott__ImagingOptions20Extension4 (1363)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImagingOptions20Extension4(struct soap*, tt__ImagingOptions20Extension4 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImagingOptions20Extension4(struct soap*, const char *, int, tt__ImagingOptions20Extension4 *const*, const char *);
SOAP_FMAC3 tt__ImagingOptions20Extension4 ** SOAP_FMAC4 soap_in_PointerTott__ImagingOptions20Extension4(struct soap*, const char*, tt__ImagingOptions20Extension4 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImagingOptions20Extension4(struct soap*, tt__ImagingOptions20Extension4 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImagingOptions20Extension4
#define soap_write_PointerTott__ImagingOptions20Extension4(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImagingOptions20Extension4(soap, data), 0) || soap_put_PointerTott__ImagingOptions20Extension4(soap, data, "tt:ImagingOptions20Extension4", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingOptions20Extension4 ** SOAP_FMAC4 soap_get_PointerTott__ImagingOptions20Extension4(struct soap*, tt__ImagingOptions20Extension4 **, const char*, const char*);

#ifndef soap_read_PointerTott__ImagingOptions20Extension4
#define soap_read_PointerTott__ImagingOptions20Extension4(soap, data) ( ((data) ? (soap_default_PointerTott__ImagingOptions20Extension4(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ImagingOptions20Extension4(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NoiseReductionOptions
#define SOAP_TYPE_PointerTott__NoiseReductionOptions (1362)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NoiseReductionOptions(struct soap*, tt__NoiseReductionOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NoiseReductionOptions(struct soap*, const char *, int, tt__NoiseReductionOptions *const*, const char *);
SOAP_FMAC3 tt__NoiseReductionOptions ** SOAP_FMAC4 soap_in_PointerTott__NoiseReductionOptions(struct soap*, const char*, tt__NoiseReductionOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NoiseReductionOptions(struct soap*, tt__NoiseReductionOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NoiseReductionOptions
#define soap_write_PointerTott__NoiseReductionOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NoiseReductionOptions(soap, data), 0) || soap_put_PointerTott__NoiseReductionOptions(soap, data, "tt:NoiseReductionOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NoiseReductionOptions ** SOAP_FMAC4 soap_get_PointerTott__NoiseReductionOptions(struct soap*, tt__NoiseReductionOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__NoiseReductionOptions
#define soap_read_PointerTott__NoiseReductionOptions(soap, data) ( ((data) ? (soap_default_PointerTott__NoiseReductionOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__NoiseReductionOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__DefoggingOptions
#define SOAP_TYPE_PointerTott__DefoggingOptions (1361)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__DefoggingOptions(struct soap*, tt__DefoggingOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__DefoggingOptions(struct soap*, const char *, int, tt__DefoggingOptions *const*, const char *);
SOAP_FMAC3 tt__DefoggingOptions ** SOAP_FMAC4 soap_in_PointerTott__DefoggingOptions(struct soap*, const char*, tt__DefoggingOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__DefoggingOptions(struct soap*, tt__DefoggingOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__DefoggingOptions
#define soap_write_PointerTott__DefoggingOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__DefoggingOptions(soap, data), 0) || soap_put_PointerTott__DefoggingOptions(soap, data, "tt:DefoggingOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DefoggingOptions ** SOAP_FMAC4 soap_get_PointerTott__DefoggingOptions(struct soap*, tt__DefoggingOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__DefoggingOptions
#define soap_read_PointerTott__DefoggingOptions(soap, data) ( ((data) ? (soap_default_PointerTott__DefoggingOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__DefoggingOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ToneCompensationOptions
#define SOAP_TYPE_PointerTott__ToneCompensationOptions (1360)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ToneCompensationOptions(struct soap*, tt__ToneCompensationOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ToneCompensationOptions(struct soap*, const char *, int, tt__ToneCompensationOptions *const*, const char *);
SOAP_FMAC3 tt__ToneCompensationOptions ** SOAP_FMAC4 soap_in_PointerTott__ToneCompensationOptions(struct soap*, const char*, tt__ToneCompensationOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ToneCompensationOptions(struct soap*, tt__ToneCompensationOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ToneCompensationOptions
#define soap_write_PointerTott__ToneCompensationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ToneCompensationOptions(soap, data), 0) || soap_put_PointerTott__ToneCompensationOptions(soap, data, "tt:ToneCompensationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ToneCompensationOptions ** SOAP_FMAC4 soap_get_PointerTott__ToneCompensationOptions(struct soap*, tt__ToneCompensationOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__ToneCompensationOptions
#define soap_read_PointerTott__ToneCompensationOptions(soap, data) ( ((data) ? (soap_default_PointerTott__ToneCompensationOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ToneCompensationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImagingOptions20Extension3
#define SOAP_TYPE_PointerTott__ImagingOptions20Extension3 (1359)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImagingOptions20Extension3(struct soap*, tt__ImagingOptions20Extension3 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImagingOptions20Extension3(struct soap*, const char *, int, tt__ImagingOptions20Extension3 *const*, const char *);
SOAP_FMAC3 tt__ImagingOptions20Extension3 ** SOAP_FMAC4 soap_in_PointerTott__ImagingOptions20Extension3(struct soap*, const char*, tt__ImagingOptions20Extension3 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImagingOptions20Extension3(struct soap*, tt__ImagingOptions20Extension3 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImagingOptions20Extension3
#define soap_write_PointerTott__ImagingOptions20Extension3(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImagingOptions20Extension3(soap, data), 0) || soap_put_PointerTott__ImagingOptions20Extension3(soap, data, "tt:ImagingOptions20Extension3", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingOptions20Extension3 ** SOAP_FMAC4 soap_get_PointerTott__ImagingOptions20Extension3(struct soap*, tt__ImagingOptions20Extension3 **, const char*, const char*);

#ifndef soap_read_PointerTott__ImagingOptions20Extension3
#define soap_read_PointerTott__ImagingOptions20Extension3(soap, data) ( ((data) ? (soap_default_PointerTott__ImagingOptions20Extension3(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ImagingOptions20Extension3(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IrCutFilterAutoAdjustmentOptions
#define SOAP_TYPE_PointerTott__IrCutFilterAutoAdjustmentOptions (1358)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IrCutFilterAutoAdjustmentOptions(struct soap*, tt__IrCutFilterAutoAdjustmentOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IrCutFilterAutoAdjustmentOptions(struct soap*, const char *, int, tt__IrCutFilterAutoAdjustmentOptions *const*, const char *);
SOAP_FMAC3 tt__IrCutFilterAutoAdjustmentOptions ** SOAP_FMAC4 soap_in_PointerTott__IrCutFilterAutoAdjustmentOptions(struct soap*, const char*, tt__IrCutFilterAutoAdjustmentOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IrCutFilterAutoAdjustmentOptions(struct soap*, tt__IrCutFilterAutoAdjustmentOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IrCutFilterAutoAdjustmentOptions
#define soap_write_PointerTott__IrCutFilterAutoAdjustmentOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IrCutFilterAutoAdjustmentOptions(soap, data), 0) || soap_put_PointerTott__IrCutFilterAutoAdjustmentOptions(soap, data, "tt:IrCutFilterAutoAdjustmentOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IrCutFilterAutoAdjustmentOptions ** SOAP_FMAC4 soap_get_PointerTott__IrCutFilterAutoAdjustmentOptions(struct soap*, tt__IrCutFilterAutoAdjustmentOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__IrCutFilterAutoAdjustmentOptions
#define soap_read_PointerTott__IrCutFilterAutoAdjustmentOptions(soap, data) ( ((data) ? (soap_default_PointerTott__IrCutFilterAutoAdjustmentOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__IrCutFilterAutoAdjustmentOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImagingOptions20Extension2
#define SOAP_TYPE_PointerTott__ImagingOptions20Extension2 (1357)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImagingOptions20Extension2(struct soap*, tt__ImagingOptions20Extension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImagingOptions20Extension2(struct soap*, const char *, int, tt__ImagingOptions20Extension2 *const*, const char *);
SOAP_FMAC3 tt__ImagingOptions20Extension2 ** SOAP_FMAC4 soap_in_PointerTott__ImagingOptions20Extension2(struct soap*, const char*, tt__ImagingOptions20Extension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImagingOptions20Extension2(struct soap*, tt__ImagingOptions20Extension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImagingOptions20Extension2
#define soap_write_PointerTott__ImagingOptions20Extension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImagingOptions20Extension2(soap, data), 0) || soap_put_PointerTott__ImagingOptions20Extension2(soap, data, "tt:ImagingOptions20Extension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingOptions20Extension2 ** SOAP_FMAC4 soap_get_PointerTott__ImagingOptions20Extension2(struct soap*, tt__ImagingOptions20Extension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__ImagingOptions20Extension2
#define soap_read_PointerTott__ImagingOptions20Extension2(soap, data) ( ((data) ? (soap_default_PointerTott__ImagingOptions20Extension2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ImagingOptions20Extension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImageStabilizationOptions
#define SOAP_TYPE_PointerTott__ImageStabilizationOptions (1356)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImageStabilizationOptions(struct soap*, tt__ImageStabilizationOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImageStabilizationOptions(struct soap*, const char *, int, tt__ImageStabilizationOptions *const*, const char *);
SOAP_FMAC3 tt__ImageStabilizationOptions ** SOAP_FMAC4 soap_in_PointerTott__ImageStabilizationOptions(struct soap*, const char*, tt__ImageStabilizationOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImageStabilizationOptions(struct soap*, tt__ImageStabilizationOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImageStabilizationOptions
#define soap_write_PointerTott__ImageStabilizationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImageStabilizationOptions(soap, data), 0) || soap_put_PointerTott__ImageStabilizationOptions(soap, data, "tt:ImageStabilizationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImageStabilizationOptions ** SOAP_FMAC4 soap_get_PointerTott__ImageStabilizationOptions(struct soap*, tt__ImageStabilizationOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__ImageStabilizationOptions
#define soap_read_PointerTott__ImageStabilizationOptions(soap, data) ( ((data) ? (soap_default_PointerTott__ImageStabilizationOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ImageStabilizationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImagingOptions20Extension
#define SOAP_TYPE_PointerTott__ImagingOptions20Extension (1355)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImagingOptions20Extension(struct soap*, tt__ImagingOptions20Extension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImagingOptions20Extension(struct soap*, const char *, int, tt__ImagingOptions20Extension *const*, const char *);
SOAP_FMAC3 tt__ImagingOptions20Extension ** SOAP_FMAC4 soap_in_PointerTott__ImagingOptions20Extension(struct soap*, const char*, tt__ImagingOptions20Extension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImagingOptions20Extension(struct soap*, tt__ImagingOptions20Extension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImagingOptions20Extension
#define soap_write_PointerTott__ImagingOptions20Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImagingOptions20Extension(soap, data), 0) || soap_put_PointerTott__ImagingOptions20Extension(soap, data, "tt:ImagingOptions20Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingOptions20Extension ** SOAP_FMAC4 soap_get_PointerTott__ImagingOptions20Extension(struct soap*, tt__ImagingOptions20Extension **, const char*, const char*);

#ifndef soap_read_PointerTott__ImagingOptions20Extension
#define soap_read_PointerTott__ImagingOptions20Extension(soap, data) ( ((data) ? (soap_default_PointerTott__ImagingOptions20Extension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ImagingOptions20Extension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__WhiteBalanceOptions20
#define SOAP_TYPE_PointerTott__WhiteBalanceOptions20 (1354)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__WhiteBalanceOptions20(struct soap*, tt__WhiteBalanceOptions20 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__WhiteBalanceOptions20(struct soap*, const char *, int, tt__WhiteBalanceOptions20 *const*, const char *);
SOAP_FMAC3 tt__WhiteBalanceOptions20 ** SOAP_FMAC4 soap_in_PointerTott__WhiteBalanceOptions20(struct soap*, const char*, tt__WhiteBalanceOptions20 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__WhiteBalanceOptions20(struct soap*, tt__WhiteBalanceOptions20 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__WhiteBalanceOptions20
#define soap_write_PointerTott__WhiteBalanceOptions20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__WhiteBalanceOptions20(soap, data), 0) || soap_put_PointerTott__WhiteBalanceOptions20(soap, data, "tt:WhiteBalanceOptions20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WhiteBalanceOptions20 ** SOAP_FMAC4 soap_get_PointerTott__WhiteBalanceOptions20(struct soap*, tt__WhiteBalanceOptions20 **, const char*, const char*);

#ifndef soap_read_PointerTott__WhiteBalanceOptions20
#define soap_read_PointerTott__WhiteBalanceOptions20(soap, data) ( ((data) ? (soap_default_PointerTott__WhiteBalanceOptions20(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__WhiteBalanceOptions20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__WideDynamicRangeOptions20
#define SOAP_TYPE_PointerTott__WideDynamicRangeOptions20 (1353)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__WideDynamicRangeOptions20(struct soap*, tt__WideDynamicRangeOptions20 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__WideDynamicRangeOptions20(struct soap*, const char *, int, tt__WideDynamicRangeOptions20 *const*, const char *);
SOAP_FMAC3 tt__WideDynamicRangeOptions20 ** SOAP_FMAC4 soap_in_PointerTott__WideDynamicRangeOptions20(struct soap*, const char*, tt__WideDynamicRangeOptions20 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__WideDynamicRangeOptions20(struct soap*, tt__WideDynamicRangeOptions20 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__WideDynamicRangeOptions20
#define soap_write_PointerTott__WideDynamicRangeOptions20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__WideDynamicRangeOptions20(soap, data), 0) || soap_put_PointerTott__WideDynamicRangeOptions20(soap, data, "tt:WideDynamicRangeOptions20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WideDynamicRangeOptions20 ** SOAP_FMAC4 soap_get_PointerTott__WideDynamicRangeOptions20(struct soap*, tt__WideDynamicRangeOptions20 **, const char*, const char*);

#ifndef soap_read_PointerTott__WideDynamicRangeOptions20
#define soap_read_PointerTott__WideDynamicRangeOptions20(soap, data) ( ((data) ? (soap_default_PointerTott__WideDynamicRangeOptions20(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__WideDynamicRangeOptions20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FocusOptions20
#define SOAP_TYPE_PointerTott__FocusOptions20 (1352)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FocusOptions20(struct soap*, tt__FocusOptions20 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FocusOptions20(struct soap*, const char *, int, tt__FocusOptions20 *const*, const char *);
SOAP_FMAC3 tt__FocusOptions20 ** SOAP_FMAC4 soap_in_PointerTott__FocusOptions20(struct soap*, const char*, tt__FocusOptions20 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FocusOptions20(struct soap*, tt__FocusOptions20 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FocusOptions20
#define soap_write_PointerTott__FocusOptions20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FocusOptions20(soap, data), 0) || soap_put_PointerTott__FocusOptions20(soap, data, "tt:FocusOptions20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusOptions20 ** SOAP_FMAC4 soap_get_PointerTott__FocusOptions20(struct soap*, tt__FocusOptions20 **, const char*, const char*);

#ifndef soap_read_PointerTott__FocusOptions20
#define soap_read_PointerTott__FocusOptions20(soap, data) ( ((data) ? (soap_default_PointerTott__FocusOptions20(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__FocusOptions20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ExposureOptions20
#define SOAP_TYPE_PointerTott__ExposureOptions20 (1351)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ExposureOptions20(struct soap*, tt__ExposureOptions20 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ExposureOptions20(struct soap*, const char *, int, tt__ExposureOptions20 *const*, const char *);
SOAP_FMAC3 tt__ExposureOptions20 ** SOAP_FMAC4 soap_in_PointerTott__ExposureOptions20(struct soap*, const char*, tt__ExposureOptions20 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ExposureOptions20(struct soap*, tt__ExposureOptions20 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ExposureOptions20
#define soap_write_PointerTott__ExposureOptions20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ExposureOptions20(soap, data), 0) || soap_put_PointerTott__ExposureOptions20(soap, data, "tt:ExposureOptions20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ExposureOptions20 ** SOAP_FMAC4 soap_get_PointerTott__ExposureOptions20(struct soap*, tt__ExposureOptions20 **, const char*, const char*);

#ifndef soap_read_PointerTott__ExposureOptions20
#define soap_read_PointerTott__ExposureOptions20(soap, data) ( ((data) ? (soap_default_PointerTott__ExposureOptions20(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ExposureOptions20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__BacklightCompensationOptions20
#define SOAP_TYPE_PointerTott__BacklightCompensationOptions20 (1350)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__BacklightCompensationOptions20(struct soap*, tt__BacklightCompensationOptions20 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__BacklightCompensationOptions20(struct soap*, const char *, int, tt__BacklightCompensationOptions20 *const*, const char *);
SOAP_FMAC3 tt__BacklightCompensationOptions20 ** SOAP_FMAC4 soap_in_PointerTott__BacklightCompensationOptions20(struct soap*, const char*, tt__BacklightCompensationOptions20 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__BacklightCompensationOptions20(struct soap*, tt__BacklightCompensationOptions20 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__BacklightCompensationOptions20
#define soap_write_PointerTott__BacklightCompensationOptions20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__BacklightCompensationOptions20(soap, data), 0) || soap_put_PointerTott__BacklightCompensationOptions20(soap, data, "tt:BacklightCompensationOptions20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__BacklightCompensationOptions20 ** SOAP_FMAC4 soap_get_PointerTott__BacklightCompensationOptions20(struct soap*, tt__BacklightCompensationOptions20 **, const char*, const char*);

#ifndef soap_read_PointerTott__BacklightCompensationOptions20
#define soap_read_PointerTott__BacklightCompensationOptions20(soap, data) ( ((data) ? (soap_default_PointerTott__BacklightCompensationOptions20(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__BacklightCompensationOptions20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__DefoggingExtension
#define SOAP_TYPE_PointerTott__DefoggingExtension (1349)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__DefoggingExtension(struct soap*, tt__DefoggingExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__DefoggingExtension(struct soap*, const char *, int, tt__DefoggingExtension *const*, const char *);
SOAP_FMAC3 tt__DefoggingExtension ** SOAP_FMAC4 soap_in_PointerTott__DefoggingExtension(struct soap*, const char*, tt__DefoggingExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__DefoggingExtension(struct soap*, tt__DefoggingExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__DefoggingExtension
#define soap_write_PointerTott__DefoggingExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__DefoggingExtension(soap, data), 0) || soap_put_PointerTott__DefoggingExtension(soap, data, "tt:DefoggingExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DefoggingExtension ** SOAP_FMAC4 soap_get_PointerTott__DefoggingExtension(struct soap*, tt__DefoggingExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__DefoggingExtension
#define soap_read_PointerTott__DefoggingExtension(soap, data) ( ((data) ? (soap_default_PointerTott__DefoggingExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__DefoggingExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ToneCompensationExtension
#define SOAP_TYPE_PointerTott__ToneCompensationExtension (1348)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ToneCompensationExtension(struct soap*, tt__ToneCompensationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ToneCompensationExtension(struct soap*, const char *, int, tt__ToneCompensationExtension *const*, const char *);
SOAP_FMAC3 tt__ToneCompensationExtension ** SOAP_FMAC4 soap_in_PointerTott__ToneCompensationExtension(struct soap*, const char*, tt__ToneCompensationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ToneCompensationExtension(struct soap*, tt__ToneCompensationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ToneCompensationExtension
#define soap_write_PointerTott__ToneCompensationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ToneCompensationExtension(soap, data), 0) || soap_put_PointerTott__ToneCompensationExtension(soap, data, "tt:ToneCompensationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ToneCompensationExtension ** SOAP_FMAC4 soap_get_PointerTott__ToneCompensationExtension(struct soap*, tt__ToneCompensationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__ToneCompensationExtension
#define soap_read_PointerTott__ToneCompensationExtension(soap, data) ( ((data) ? (soap_default_PointerTott__ToneCompensationExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ToneCompensationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ExposurePriority
#define SOAP_TYPE_PointerTott__ExposurePriority (1347)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ExposurePriority(struct soap*, enum tt__ExposurePriority *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ExposurePriority(struct soap*, const char *, int, enum tt__ExposurePriority *const*, const char *);
SOAP_FMAC3 enum tt__ExposurePriority ** SOAP_FMAC4 soap_in_PointerTott__ExposurePriority(struct soap*, const char*, enum tt__ExposurePriority **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ExposurePriority(struct soap*, enum tt__ExposurePriority *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ExposurePriority
#define soap_write_PointerTott__ExposurePriority(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ExposurePriority(soap, data), 0) || soap_put_PointerTott__ExposurePriority(soap, data, "tt:ExposurePriority", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__ExposurePriority ** SOAP_FMAC4 soap_get_PointerTott__ExposurePriority(struct soap*, enum tt__ExposurePriority **, const char*, const char*);

#ifndef soap_read_PointerTott__ExposurePriority
#define soap_read_PointerTott__ExposurePriority(soap, data) ( ((data) ? (soap_default_PointerTott__ExposurePriority(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ExposurePriority(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IrCutFilterAutoAdjustmentExtension
#define SOAP_TYPE_PointerTott__IrCutFilterAutoAdjustmentExtension (1346)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IrCutFilterAutoAdjustmentExtension(struct soap*, tt__IrCutFilterAutoAdjustmentExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IrCutFilterAutoAdjustmentExtension(struct soap*, const char *, int, tt__IrCutFilterAutoAdjustmentExtension *const*, const char *);
SOAP_FMAC3 tt__IrCutFilterAutoAdjustmentExtension ** SOAP_FMAC4 soap_in_PointerTott__IrCutFilterAutoAdjustmentExtension(struct soap*, const char*, tt__IrCutFilterAutoAdjustmentExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IrCutFilterAutoAdjustmentExtension(struct soap*, tt__IrCutFilterAutoAdjustmentExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IrCutFilterAutoAdjustmentExtension
#define soap_write_PointerTott__IrCutFilterAutoAdjustmentExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IrCutFilterAutoAdjustmentExtension(soap, data), 0) || soap_put_PointerTott__IrCutFilterAutoAdjustmentExtension(soap, data, "tt:IrCutFilterAutoAdjustmentExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IrCutFilterAutoAdjustmentExtension ** SOAP_FMAC4 soap_get_PointerTott__IrCutFilterAutoAdjustmentExtension(struct soap*, tt__IrCutFilterAutoAdjustmentExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__IrCutFilterAutoAdjustmentExtension
#define soap_read_PointerTott__IrCutFilterAutoAdjustmentExtension(soap, data) ( ((data) ? (soap_default_PointerTott__IrCutFilterAutoAdjustmentExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__IrCutFilterAutoAdjustmentExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImageStabilizationExtension
#define SOAP_TYPE_PointerTott__ImageStabilizationExtension (1345)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImageStabilizationExtension(struct soap*, tt__ImageStabilizationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImageStabilizationExtension(struct soap*, const char *, int, tt__ImageStabilizationExtension *const*, const char *);
SOAP_FMAC3 tt__ImageStabilizationExtension ** SOAP_FMAC4 soap_in_PointerTott__ImageStabilizationExtension(struct soap*, const char*, tt__ImageStabilizationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImageStabilizationExtension(struct soap*, tt__ImageStabilizationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImageStabilizationExtension
#define soap_write_PointerTott__ImageStabilizationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImageStabilizationExtension(soap, data), 0) || soap_put_PointerTott__ImageStabilizationExtension(soap, data, "tt:ImageStabilizationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImageStabilizationExtension ** SOAP_FMAC4 soap_get_PointerTott__ImageStabilizationExtension(struct soap*, tt__ImageStabilizationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__ImageStabilizationExtension
#define soap_read_PointerTott__ImageStabilizationExtension(soap, data) ( ((data) ? (soap_default_PointerTott__ImageStabilizationExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ImageStabilizationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImagingSettingsExtension204
#define SOAP_TYPE_PointerTott__ImagingSettingsExtension204 (1344)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImagingSettingsExtension204(struct soap*, tt__ImagingSettingsExtension204 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImagingSettingsExtension204(struct soap*, const char *, int, tt__ImagingSettingsExtension204 *const*, const char *);
SOAP_FMAC3 tt__ImagingSettingsExtension204 ** SOAP_FMAC4 soap_in_PointerTott__ImagingSettingsExtension204(struct soap*, const char*, tt__ImagingSettingsExtension204 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImagingSettingsExtension204(struct soap*, tt__ImagingSettingsExtension204 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImagingSettingsExtension204
#define soap_write_PointerTott__ImagingSettingsExtension204(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImagingSettingsExtension204(soap, data), 0) || soap_put_PointerTott__ImagingSettingsExtension204(soap, data, "tt:ImagingSettingsExtension204", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingSettingsExtension204 ** SOAP_FMAC4 soap_get_PointerTott__ImagingSettingsExtension204(struct soap*, tt__ImagingSettingsExtension204 **, const char*, const char*);

#ifndef soap_read_PointerTott__ImagingSettingsExtension204
#define soap_read_PointerTott__ImagingSettingsExtension204(soap, data) ( ((data) ? (soap_default_PointerTott__ImagingSettingsExtension204(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ImagingSettingsExtension204(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NoiseReduction
#define SOAP_TYPE_PointerTott__NoiseReduction (1343)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NoiseReduction(struct soap*, tt__NoiseReduction *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NoiseReduction(struct soap*, const char *, int, tt__NoiseReduction *const*, const char *);
SOAP_FMAC3 tt__NoiseReduction ** SOAP_FMAC4 soap_in_PointerTott__NoiseReduction(struct soap*, const char*, tt__NoiseReduction **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NoiseReduction(struct soap*, tt__NoiseReduction *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NoiseReduction
#define soap_write_PointerTott__NoiseReduction(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NoiseReduction(soap, data), 0) || soap_put_PointerTott__NoiseReduction(soap, data, "tt:NoiseReduction", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NoiseReduction ** SOAP_FMAC4 soap_get_PointerTott__NoiseReduction(struct soap*, tt__NoiseReduction **, const char*, const char*);

#ifndef soap_read_PointerTott__NoiseReduction
#define soap_read_PointerTott__NoiseReduction(soap, data) ( ((data) ? (soap_default_PointerTott__NoiseReduction(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__NoiseReduction(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Defogging
#define SOAP_TYPE_PointerTott__Defogging (1342)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Defogging(struct soap*, tt__Defogging *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Defogging(struct soap*, const char *, int, tt__Defogging *const*, const char *);
SOAP_FMAC3 tt__Defogging ** SOAP_FMAC4 soap_in_PointerTott__Defogging(struct soap*, const char*, tt__Defogging **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Defogging(struct soap*, tt__Defogging *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Defogging
#define soap_write_PointerTott__Defogging(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Defogging(soap, data), 0) || soap_put_PointerTott__Defogging(soap, data, "tt:Defogging", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Defogging ** SOAP_FMAC4 soap_get_PointerTott__Defogging(struct soap*, tt__Defogging **, const char*, const char*);

#ifndef soap_read_PointerTott__Defogging
#define soap_read_PointerTott__Defogging(soap, data) ( ((data) ? (soap_default_PointerTott__Defogging(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Defogging(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ToneCompensation
#define SOAP_TYPE_PointerTott__ToneCompensation (1341)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ToneCompensation(struct soap*, tt__ToneCompensation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ToneCompensation(struct soap*, const char *, int, tt__ToneCompensation *const*, const char *);
SOAP_FMAC3 tt__ToneCompensation ** SOAP_FMAC4 soap_in_PointerTott__ToneCompensation(struct soap*, const char*, tt__ToneCompensation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ToneCompensation(struct soap*, tt__ToneCompensation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ToneCompensation
#define soap_write_PointerTott__ToneCompensation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ToneCompensation(soap, data), 0) || soap_put_PointerTott__ToneCompensation(soap, data, "tt:ToneCompensation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ToneCompensation ** SOAP_FMAC4 soap_get_PointerTott__ToneCompensation(struct soap*, tt__ToneCompensation **, const char*, const char*);

#ifndef soap_read_PointerTott__ToneCompensation
#define soap_read_PointerTott__ToneCompensation(soap, data) ( ((data) ? (soap_default_PointerTott__ToneCompensation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ToneCompensation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImagingSettingsExtension203
#define SOAP_TYPE_PointerTott__ImagingSettingsExtension203 (1340)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImagingSettingsExtension203(struct soap*, tt__ImagingSettingsExtension203 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImagingSettingsExtension203(struct soap*, const char *, int, tt__ImagingSettingsExtension203 *const*, const char *);
SOAP_FMAC3 tt__ImagingSettingsExtension203 ** SOAP_FMAC4 soap_in_PointerTott__ImagingSettingsExtension203(struct soap*, const char*, tt__ImagingSettingsExtension203 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImagingSettingsExtension203(struct soap*, tt__ImagingSettingsExtension203 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImagingSettingsExtension203
#define soap_write_PointerTott__ImagingSettingsExtension203(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImagingSettingsExtension203(soap, data), 0) || soap_put_PointerTott__ImagingSettingsExtension203(soap, data, "tt:ImagingSettingsExtension203", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingSettingsExtension203 ** SOAP_FMAC4 soap_get_PointerTott__ImagingSettingsExtension203(struct soap*, tt__ImagingSettingsExtension203 **, const char*, const char*);

#ifndef soap_read_PointerTott__ImagingSettingsExtension203
#define soap_read_PointerTott__ImagingSettingsExtension203(soap, data) ( ((data) ? (soap_default_PointerTott__ImagingSettingsExtension203(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ImagingSettingsExtension203(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IrCutFilterAutoAdjustment
#define SOAP_TYPE_PointerTott__IrCutFilterAutoAdjustment (1338)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IrCutFilterAutoAdjustment(struct soap*, tt__IrCutFilterAutoAdjustment *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IrCutFilterAutoAdjustment(struct soap*, const char *, int, tt__IrCutFilterAutoAdjustment *const*, const char *);
SOAP_FMAC3 tt__IrCutFilterAutoAdjustment ** SOAP_FMAC4 soap_in_PointerTott__IrCutFilterAutoAdjustment(struct soap*, const char*, tt__IrCutFilterAutoAdjustment **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IrCutFilterAutoAdjustment(struct soap*, tt__IrCutFilterAutoAdjustment *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IrCutFilterAutoAdjustment
#define soap_write_PointerTott__IrCutFilterAutoAdjustment(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IrCutFilterAutoAdjustment(soap, data), 0) || soap_put_PointerTott__IrCutFilterAutoAdjustment(soap, data, "tt:IrCutFilterAutoAdjustment", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IrCutFilterAutoAdjustment ** SOAP_FMAC4 soap_get_PointerTott__IrCutFilterAutoAdjustment(struct soap*, tt__IrCutFilterAutoAdjustment **, const char*, const char*);

#ifndef soap_read_PointerTott__IrCutFilterAutoAdjustment
#define soap_read_PointerTott__IrCutFilterAutoAdjustment(soap, data) ( ((data) ? (soap_default_PointerTott__IrCutFilterAutoAdjustment(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__IrCutFilterAutoAdjustment(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImagingSettingsExtension202
#define SOAP_TYPE_PointerTott__ImagingSettingsExtension202 (1337)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImagingSettingsExtension202(struct soap*, tt__ImagingSettingsExtension202 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImagingSettingsExtension202(struct soap*, const char *, int, tt__ImagingSettingsExtension202 *const*, const char *);
SOAP_FMAC3 tt__ImagingSettingsExtension202 ** SOAP_FMAC4 soap_in_PointerTott__ImagingSettingsExtension202(struct soap*, const char*, tt__ImagingSettingsExtension202 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImagingSettingsExtension202(struct soap*, tt__ImagingSettingsExtension202 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImagingSettingsExtension202
#define soap_write_PointerTott__ImagingSettingsExtension202(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImagingSettingsExtension202(soap, data), 0) || soap_put_PointerTott__ImagingSettingsExtension202(soap, data, "tt:ImagingSettingsExtension202", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingSettingsExtension202 ** SOAP_FMAC4 soap_get_PointerTott__ImagingSettingsExtension202(struct soap*, tt__ImagingSettingsExtension202 **, const char*, const char*);

#ifndef soap_read_PointerTott__ImagingSettingsExtension202
#define soap_read_PointerTott__ImagingSettingsExtension202(soap, data) ( ((data) ? (soap_default_PointerTott__ImagingSettingsExtension202(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ImagingSettingsExtension202(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImageStabilization
#define SOAP_TYPE_PointerTott__ImageStabilization (1336)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImageStabilization(struct soap*, tt__ImageStabilization *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImageStabilization(struct soap*, const char *, int, tt__ImageStabilization *const*, const char *);
SOAP_FMAC3 tt__ImageStabilization ** SOAP_FMAC4 soap_in_PointerTott__ImageStabilization(struct soap*, const char*, tt__ImageStabilization **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImageStabilization(struct soap*, tt__ImageStabilization *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImageStabilization
#define soap_write_PointerTott__ImageStabilization(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImageStabilization(soap, data), 0) || soap_put_PointerTott__ImageStabilization(soap, data, "tt:ImageStabilization", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImageStabilization ** SOAP_FMAC4 soap_get_PointerTott__ImageStabilization(struct soap*, tt__ImageStabilization **, const char*, const char*);

#ifndef soap_read_PointerTott__ImageStabilization
#define soap_read_PointerTott__ImageStabilization(soap, data) ( ((data) ? (soap_default_PointerTott__ImageStabilization(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ImageStabilization(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImagingSettingsExtension20
#define SOAP_TYPE_PointerTott__ImagingSettingsExtension20 (1335)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImagingSettingsExtension20(struct soap*, tt__ImagingSettingsExtension20 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImagingSettingsExtension20(struct soap*, const char *, int, tt__ImagingSettingsExtension20 *const*, const char *);
SOAP_FMAC3 tt__ImagingSettingsExtension20 ** SOAP_FMAC4 soap_in_PointerTott__ImagingSettingsExtension20(struct soap*, const char*, tt__ImagingSettingsExtension20 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImagingSettingsExtension20(struct soap*, tt__ImagingSettingsExtension20 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImagingSettingsExtension20
#define soap_write_PointerTott__ImagingSettingsExtension20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImagingSettingsExtension20(soap, data), 0) || soap_put_PointerTott__ImagingSettingsExtension20(soap, data, "tt:ImagingSettingsExtension20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingSettingsExtension20 ** SOAP_FMAC4 soap_get_PointerTott__ImagingSettingsExtension20(struct soap*, tt__ImagingSettingsExtension20 **, const char*, const char*);

#ifndef soap_read_PointerTott__ImagingSettingsExtension20
#define soap_read_PointerTott__ImagingSettingsExtension20(soap, data) ( ((data) ? (soap_default_PointerTott__ImagingSettingsExtension20(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ImagingSettingsExtension20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__WhiteBalance20
#define SOAP_TYPE_PointerTott__WhiteBalance20 (1334)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__WhiteBalance20(struct soap*, tt__WhiteBalance20 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__WhiteBalance20(struct soap*, const char *, int, tt__WhiteBalance20 *const*, const char *);
SOAP_FMAC3 tt__WhiteBalance20 ** SOAP_FMAC4 soap_in_PointerTott__WhiteBalance20(struct soap*, const char*, tt__WhiteBalance20 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__WhiteBalance20(struct soap*, tt__WhiteBalance20 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__WhiteBalance20
#define soap_write_PointerTott__WhiteBalance20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__WhiteBalance20(soap, data), 0) || soap_put_PointerTott__WhiteBalance20(soap, data, "tt:WhiteBalance20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WhiteBalance20 ** SOAP_FMAC4 soap_get_PointerTott__WhiteBalance20(struct soap*, tt__WhiteBalance20 **, const char*, const char*);

#ifndef soap_read_PointerTott__WhiteBalance20
#define soap_read_PointerTott__WhiteBalance20(soap, data) ( ((data) ? (soap_default_PointerTott__WhiteBalance20(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__WhiteBalance20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__WideDynamicRange20
#define SOAP_TYPE_PointerTott__WideDynamicRange20 (1333)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__WideDynamicRange20(struct soap*, tt__WideDynamicRange20 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__WideDynamicRange20(struct soap*, const char *, int, tt__WideDynamicRange20 *const*, const char *);
SOAP_FMAC3 tt__WideDynamicRange20 ** SOAP_FMAC4 soap_in_PointerTott__WideDynamicRange20(struct soap*, const char*, tt__WideDynamicRange20 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__WideDynamicRange20(struct soap*, tt__WideDynamicRange20 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__WideDynamicRange20
#define soap_write_PointerTott__WideDynamicRange20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__WideDynamicRange20(soap, data), 0) || soap_put_PointerTott__WideDynamicRange20(soap, data, "tt:WideDynamicRange20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WideDynamicRange20 ** SOAP_FMAC4 soap_get_PointerTott__WideDynamicRange20(struct soap*, tt__WideDynamicRange20 **, const char*, const char*);

#ifndef soap_read_PointerTott__WideDynamicRange20
#define soap_read_PointerTott__WideDynamicRange20(soap, data) ( ((data) ? (soap_default_PointerTott__WideDynamicRange20(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__WideDynamicRange20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FocusConfiguration20
#define SOAP_TYPE_PointerTott__FocusConfiguration20 (1332)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FocusConfiguration20(struct soap*, tt__FocusConfiguration20 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FocusConfiguration20(struct soap*, const char *, int, tt__FocusConfiguration20 *const*, const char *);
SOAP_FMAC3 tt__FocusConfiguration20 ** SOAP_FMAC4 soap_in_PointerTott__FocusConfiguration20(struct soap*, const char*, tt__FocusConfiguration20 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FocusConfiguration20(struct soap*, tt__FocusConfiguration20 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FocusConfiguration20
#define soap_write_PointerTott__FocusConfiguration20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FocusConfiguration20(soap, data), 0) || soap_put_PointerTott__FocusConfiguration20(soap, data, "tt:FocusConfiguration20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusConfiguration20 ** SOAP_FMAC4 soap_get_PointerTott__FocusConfiguration20(struct soap*, tt__FocusConfiguration20 **, const char*, const char*);

#ifndef soap_read_PointerTott__FocusConfiguration20
#define soap_read_PointerTott__FocusConfiguration20(soap, data) ( ((data) ? (soap_default_PointerTott__FocusConfiguration20(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__FocusConfiguration20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Exposure20
#define SOAP_TYPE_PointerTott__Exposure20 (1331)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Exposure20(struct soap*, tt__Exposure20 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Exposure20(struct soap*, const char *, int, tt__Exposure20 *const*, const char *);
SOAP_FMAC3 tt__Exposure20 ** SOAP_FMAC4 soap_in_PointerTott__Exposure20(struct soap*, const char*, tt__Exposure20 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Exposure20(struct soap*, tt__Exposure20 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Exposure20
#define soap_write_PointerTott__Exposure20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Exposure20(soap, data), 0) || soap_put_PointerTott__Exposure20(soap, data, "tt:Exposure20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Exposure20 ** SOAP_FMAC4 soap_get_PointerTott__Exposure20(struct soap*, tt__Exposure20 **, const char*, const char*);

#ifndef soap_read_PointerTott__Exposure20
#define soap_read_PointerTott__Exposure20(soap, data) ( ((data) ? (soap_default_PointerTott__Exposure20(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Exposure20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__BacklightCompensation20
#define SOAP_TYPE_PointerTott__BacklightCompensation20 (1330)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__BacklightCompensation20(struct soap*, tt__BacklightCompensation20 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__BacklightCompensation20(struct soap*, const char *, int, tt__BacklightCompensation20 *const*, const char *);
SOAP_FMAC3 tt__BacklightCompensation20 ** SOAP_FMAC4 soap_in_PointerTott__BacklightCompensation20(struct soap*, const char*, tt__BacklightCompensation20 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__BacklightCompensation20(struct soap*, tt__BacklightCompensation20 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__BacklightCompensation20
#define soap_write_PointerTott__BacklightCompensation20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__BacklightCompensation20(soap, data), 0) || soap_put_PointerTott__BacklightCompensation20(soap, data, "tt:BacklightCompensation20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__BacklightCompensation20 ** SOAP_FMAC4 soap_get_PointerTott__BacklightCompensation20(struct soap*, tt__BacklightCompensation20 **, const char*, const char*);

#ifndef soap_read_PointerTott__BacklightCompensation20
#define soap_read_PointerTott__BacklightCompensation20(soap, data) ( ((data) ? (soap_default_PointerTott__BacklightCompensation20(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__BacklightCompensation20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FocusStatus20Extension
#define SOAP_TYPE_PointerTott__FocusStatus20Extension (1329)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FocusStatus20Extension(struct soap*, tt__FocusStatus20Extension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FocusStatus20Extension(struct soap*, const char *, int, tt__FocusStatus20Extension *const*, const char *);
SOAP_FMAC3 tt__FocusStatus20Extension ** SOAP_FMAC4 soap_in_PointerTott__FocusStatus20Extension(struct soap*, const char*, tt__FocusStatus20Extension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FocusStatus20Extension(struct soap*, tt__FocusStatus20Extension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FocusStatus20Extension
#define soap_write_PointerTott__FocusStatus20Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FocusStatus20Extension(soap, data), 0) || soap_put_PointerTott__FocusStatus20Extension(soap, data, "tt:FocusStatus20Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusStatus20Extension ** SOAP_FMAC4 soap_get_PointerTott__FocusStatus20Extension(struct soap*, tt__FocusStatus20Extension **, const char*, const char*);

#ifndef soap_read_PointerTott__FocusStatus20Extension
#define soap_read_PointerTott__FocusStatus20Extension(soap, data) ( ((data) ? (soap_default_PointerTott__FocusStatus20Extension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__FocusStatus20Extension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImagingStatus20Extension
#define SOAP_TYPE_PointerTott__ImagingStatus20Extension (1328)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImagingStatus20Extension(struct soap*, tt__ImagingStatus20Extension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImagingStatus20Extension(struct soap*, const char *, int, tt__ImagingStatus20Extension *const*, const char *);
SOAP_FMAC3 tt__ImagingStatus20Extension ** SOAP_FMAC4 soap_in_PointerTott__ImagingStatus20Extension(struct soap*, const char*, tt__ImagingStatus20Extension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImagingStatus20Extension(struct soap*, tt__ImagingStatus20Extension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImagingStatus20Extension
#define soap_write_PointerTott__ImagingStatus20Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImagingStatus20Extension(soap, data), 0) || soap_put_PointerTott__ImagingStatus20Extension(soap, data, "tt:ImagingStatus20Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingStatus20Extension ** SOAP_FMAC4 soap_get_PointerTott__ImagingStatus20Extension(struct soap*, tt__ImagingStatus20Extension **, const char*, const char*);

#ifndef soap_read_PointerTott__ImagingStatus20Extension
#define soap_read_PointerTott__ImagingStatus20Extension(soap, data) ( ((data) ? (soap_default_PointerTott__ImagingStatus20Extension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ImagingStatus20Extension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FocusStatus20
#define SOAP_TYPE_PointerTott__FocusStatus20 (1327)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FocusStatus20(struct soap*, tt__FocusStatus20 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FocusStatus20(struct soap*, const char *, int, tt__FocusStatus20 *const*, const char *);
SOAP_FMAC3 tt__FocusStatus20 ** SOAP_FMAC4 soap_in_PointerTott__FocusStatus20(struct soap*, const char*, tt__FocusStatus20 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FocusStatus20(struct soap*, tt__FocusStatus20 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FocusStatus20
#define soap_write_PointerTott__FocusStatus20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FocusStatus20(soap, data), 0) || soap_put_PointerTott__FocusStatus20(soap, data, "tt:FocusStatus20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusStatus20 ** SOAP_FMAC4 soap_get_PointerTott__FocusStatus20(struct soap*, tt__FocusStatus20 **, const char*, const char*);

#ifndef soap_read_PointerTott__FocusStatus20
#define soap_read_PointerTott__FocusStatus20(soap, data) ( ((data) ? (soap_default_PointerTott__FocusStatus20(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__FocusStatus20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ContinuousFocusOptions
#define SOAP_TYPE_PointerTott__ContinuousFocusOptions (1326)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ContinuousFocusOptions(struct soap*, tt__ContinuousFocusOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ContinuousFocusOptions(struct soap*, const char *, int, tt__ContinuousFocusOptions *const*, const char *);
SOAP_FMAC3 tt__ContinuousFocusOptions ** SOAP_FMAC4 soap_in_PointerTott__ContinuousFocusOptions(struct soap*, const char*, tt__ContinuousFocusOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ContinuousFocusOptions(struct soap*, tt__ContinuousFocusOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ContinuousFocusOptions
#define soap_write_PointerTott__ContinuousFocusOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ContinuousFocusOptions(soap, data), 0) || soap_put_PointerTott__ContinuousFocusOptions(soap, data, "tt:ContinuousFocusOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ContinuousFocusOptions ** SOAP_FMAC4 soap_get_PointerTott__ContinuousFocusOptions(struct soap*, tt__ContinuousFocusOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__ContinuousFocusOptions
#define soap_read_PointerTott__ContinuousFocusOptions(soap, data) ( ((data) ? (soap_default_PointerTott__ContinuousFocusOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ContinuousFocusOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RelativeFocusOptions
#define SOAP_TYPE_PointerTott__RelativeFocusOptions (1325)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RelativeFocusOptions(struct soap*, tt__RelativeFocusOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RelativeFocusOptions(struct soap*, const char *, int, tt__RelativeFocusOptions *const*, const char *);
SOAP_FMAC3 tt__RelativeFocusOptions ** SOAP_FMAC4 soap_in_PointerTott__RelativeFocusOptions(struct soap*, const char*, tt__RelativeFocusOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RelativeFocusOptions(struct soap*, tt__RelativeFocusOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RelativeFocusOptions
#define soap_write_PointerTott__RelativeFocusOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RelativeFocusOptions(soap, data), 0) || soap_put_PointerTott__RelativeFocusOptions(soap, data, "tt:RelativeFocusOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RelativeFocusOptions ** SOAP_FMAC4 soap_get_PointerTott__RelativeFocusOptions(struct soap*, tt__RelativeFocusOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__RelativeFocusOptions
#define soap_read_PointerTott__RelativeFocusOptions(soap, data) ( ((data) ? (soap_default_PointerTott__RelativeFocusOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__RelativeFocusOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AbsoluteFocusOptions
#define SOAP_TYPE_PointerTott__AbsoluteFocusOptions (1324)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AbsoluteFocusOptions(struct soap*, tt__AbsoluteFocusOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AbsoluteFocusOptions(struct soap*, const char *, int, tt__AbsoluteFocusOptions *const*, const char *);
SOAP_FMAC3 tt__AbsoluteFocusOptions ** SOAP_FMAC4 soap_in_PointerTott__AbsoluteFocusOptions(struct soap*, const char*, tt__AbsoluteFocusOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AbsoluteFocusOptions(struct soap*, tt__AbsoluteFocusOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AbsoluteFocusOptions
#define soap_write_PointerTott__AbsoluteFocusOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AbsoluteFocusOptions(soap, data), 0) || soap_put_PointerTott__AbsoluteFocusOptions(soap, data, "tt:AbsoluteFocusOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AbsoluteFocusOptions ** SOAP_FMAC4 soap_get_PointerTott__AbsoluteFocusOptions(struct soap*, tt__AbsoluteFocusOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__AbsoluteFocusOptions
#define soap_read_PointerTott__AbsoluteFocusOptions(soap, data) ( ((data) ? (soap_default_PointerTott__AbsoluteFocusOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__AbsoluteFocusOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ContinuousFocus
#define SOAP_TYPE_PointerTott__ContinuousFocus (1323)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ContinuousFocus(struct soap*, tt__ContinuousFocus *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ContinuousFocus(struct soap*, const char *, int, tt__ContinuousFocus *const*, const char *);
SOAP_FMAC3 tt__ContinuousFocus ** SOAP_FMAC4 soap_in_PointerTott__ContinuousFocus(struct soap*, const char*, tt__ContinuousFocus **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ContinuousFocus(struct soap*, tt__ContinuousFocus *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ContinuousFocus
#define soap_write_PointerTott__ContinuousFocus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ContinuousFocus(soap, data), 0) || soap_put_PointerTott__ContinuousFocus(soap, data, "tt:ContinuousFocus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ContinuousFocus ** SOAP_FMAC4 soap_get_PointerTott__ContinuousFocus(struct soap*, tt__ContinuousFocus **, const char*, const char*);

#ifndef soap_read_PointerTott__ContinuousFocus
#define soap_read_PointerTott__ContinuousFocus(soap, data) ( ((data) ? (soap_default_PointerTott__ContinuousFocus(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ContinuousFocus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RelativeFocus
#define SOAP_TYPE_PointerTott__RelativeFocus (1322)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RelativeFocus(struct soap*, tt__RelativeFocus *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RelativeFocus(struct soap*, const char *, int, tt__RelativeFocus *const*, const char *);
SOAP_FMAC3 tt__RelativeFocus ** SOAP_FMAC4 soap_in_PointerTott__RelativeFocus(struct soap*, const char*, tt__RelativeFocus **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RelativeFocus(struct soap*, tt__RelativeFocus *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RelativeFocus
#define soap_write_PointerTott__RelativeFocus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RelativeFocus(soap, data), 0) || soap_put_PointerTott__RelativeFocus(soap, data, "tt:RelativeFocus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RelativeFocus ** SOAP_FMAC4 soap_get_PointerTott__RelativeFocus(struct soap*, tt__RelativeFocus **, const char*, const char*);

#ifndef soap_read_PointerTott__RelativeFocus
#define soap_read_PointerTott__RelativeFocus(soap, data) ( ((data) ? (soap_default_PointerTott__RelativeFocus(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__RelativeFocus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AbsoluteFocus
#define SOAP_TYPE_PointerTott__AbsoluteFocus (1321)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AbsoluteFocus(struct soap*, tt__AbsoluteFocus *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AbsoluteFocus(struct soap*, const char *, int, tt__AbsoluteFocus *const*, const char *);
SOAP_FMAC3 tt__AbsoluteFocus ** SOAP_FMAC4 soap_in_PointerTott__AbsoluteFocus(struct soap*, const char*, tt__AbsoluteFocus **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AbsoluteFocus(struct soap*, tt__AbsoluteFocus *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AbsoluteFocus
#define soap_write_PointerTott__AbsoluteFocus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AbsoluteFocus(soap, data), 0) || soap_put_PointerTott__AbsoluteFocus(soap, data, "tt:AbsoluteFocus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AbsoluteFocus ** SOAP_FMAC4 soap_get_PointerTott__AbsoluteFocus(struct soap*, tt__AbsoluteFocus **, const char*, const char*);

#ifndef soap_read_PointerTott__AbsoluteFocus
#define soap_read_PointerTott__AbsoluteFocus(soap, data) ( ((data) ? (soap_default_PointerTott__AbsoluteFocus(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__AbsoluteFocus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__WhiteBalanceOptions
#define SOAP_TYPE_PointerTott__WhiteBalanceOptions (1315)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__WhiteBalanceOptions(struct soap*, tt__WhiteBalanceOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__WhiteBalanceOptions(struct soap*, const char *, int, tt__WhiteBalanceOptions *const*, const char *);
SOAP_FMAC3 tt__WhiteBalanceOptions ** SOAP_FMAC4 soap_in_PointerTott__WhiteBalanceOptions(struct soap*, const char*, tt__WhiteBalanceOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__WhiteBalanceOptions(struct soap*, tt__WhiteBalanceOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__WhiteBalanceOptions
#define soap_write_PointerTott__WhiteBalanceOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__WhiteBalanceOptions(soap, data), 0) || soap_put_PointerTott__WhiteBalanceOptions(soap, data, "tt:WhiteBalanceOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WhiteBalanceOptions ** SOAP_FMAC4 soap_get_PointerTott__WhiteBalanceOptions(struct soap*, tt__WhiteBalanceOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__WhiteBalanceOptions
#define soap_read_PointerTott__WhiteBalanceOptions(soap, data) ( ((data) ? (soap_default_PointerTott__WhiteBalanceOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__WhiteBalanceOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__WideDynamicRangeOptions
#define SOAP_TYPE_PointerTott__WideDynamicRangeOptions (1314)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__WideDynamicRangeOptions(struct soap*, tt__WideDynamicRangeOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__WideDynamicRangeOptions(struct soap*, const char *, int, tt__WideDynamicRangeOptions *const*, const char *);
SOAP_FMAC3 tt__WideDynamicRangeOptions ** SOAP_FMAC4 soap_in_PointerTott__WideDynamicRangeOptions(struct soap*, const char*, tt__WideDynamicRangeOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__WideDynamicRangeOptions(struct soap*, tt__WideDynamicRangeOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__WideDynamicRangeOptions
#define soap_write_PointerTott__WideDynamicRangeOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__WideDynamicRangeOptions(soap, data), 0) || soap_put_PointerTott__WideDynamicRangeOptions(soap, data, "tt:WideDynamicRangeOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WideDynamicRangeOptions ** SOAP_FMAC4 soap_get_PointerTott__WideDynamicRangeOptions(struct soap*, tt__WideDynamicRangeOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__WideDynamicRangeOptions
#define soap_read_PointerTott__WideDynamicRangeOptions(soap, data) ( ((data) ? (soap_default_PointerTott__WideDynamicRangeOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__WideDynamicRangeOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FocusOptions
#define SOAP_TYPE_PointerTott__FocusOptions (1312)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FocusOptions(struct soap*, tt__FocusOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FocusOptions(struct soap*, const char *, int, tt__FocusOptions *const*, const char *);
SOAP_FMAC3 tt__FocusOptions ** SOAP_FMAC4 soap_in_PointerTott__FocusOptions(struct soap*, const char*, tt__FocusOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FocusOptions(struct soap*, tt__FocusOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FocusOptions
#define soap_write_PointerTott__FocusOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FocusOptions(soap, data), 0) || soap_put_PointerTott__FocusOptions(soap, data, "tt:FocusOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusOptions ** SOAP_FMAC4 soap_get_PointerTott__FocusOptions(struct soap*, tt__FocusOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__FocusOptions
#define soap_read_PointerTott__FocusOptions(soap, data) ( ((data) ? (soap_default_PointerTott__FocusOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__FocusOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ExposureOptions
#define SOAP_TYPE_PointerTott__ExposureOptions (1311)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ExposureOptions(struct soap*, tt__ExposureOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ExposureOptions(struct soap*, const char *, int, tt__ExposureOptions *const*, const char *);
SOAP_FMAC3 tt__ExposureOptions ** SOAP_FMAC4 soap_in_PointerTott__ExposureOptions(struct soap*, const char*, tt__ExposureOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ExposureOptions(struct soap*, tt__ExposureOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ExposureOptions
#define soap_write_PointerTott__ExposureOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ExposureOptions(soap, data), 0) || soap_put_PointerTott__ExposureOptions(soap, data, "tt:ExposureOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ExposureOptions ** SOAP_FMAC4 soap_get_PointerTott__ExposureOptions(struct soap*, tt__ExposureOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__ExposureOptions
#define soap_read_PointerTott__ExposureOptions(soap, data) ( ((data) ? (soap_default_PointerTott__ExposureOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ExposureOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__BacklightCompensationOptions
#define SOAP_TYPE_PointerTott__BacklightCompensationOptions (1310)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__BacklightCompensationOptions(struct soap*, tt__BacklightCompensationOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__BacklightCompensationOptions(struct soap*, const char *, int, tt__BacklightCompensationOptions *const*, const char *);
SOAP_FMAC3 tt__BacklightCompensationOptions ** SOAP_FMAC4 soap_in_PointerTott__BacklightCompensationOptions(struct soap*, const char*, tt__BacklightCompensationOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__BacklightCompensationOptions(struct soap*, tt__BacklightCompensationOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__BacklightCompensationOptions
#define soap_write_PointerTott__BacklightCompensationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__BacklightCompensationOptions(soap, data), 0) || soap_put_PointerTott__BacklightCompensationOptions(soap, data, "tt:BacklightCompensationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__BacklightCompensationOptions ** SOAP_FMAC4 soap_get_PointerTott__BacklightCompensationOptions(struct soap*, tt__BacklightCompensationOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__BacklightCompensationOptions
#define soap_read_PointerTott__BacklightCompensationOptions(soap, data) ( ((data) ? (soap_default_PointerTott__BacklightCompensationOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__BacklightCompensationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Rectangle
#define SOAP_TYPE_PointerTott__Rectangle (1309)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Rectangle(struct soap*, tt__Rectangle *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Rectangle(struct soap*, const char *, int, tt__Rectangle *const*, const char *);
SOAP_FMAC3 tt__Rectangle ** SOAP_FMAC4 soap_in_PointerTott__Rectangle(struct soap*, const char*, tt__Rectangle **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Rectangle(struct soap*, tt__Rectangle *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Rectangle
#define soap_write_PointerTott__Rectangle(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Rectangle(soap, data), 0) || soap_put_PointerTott__Rectangle(soap, data, "tt:Rectangle", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Rectangle ** SOAP_FMAC4 soap_get_PointerTott__Rectangle(struct soap*, tt__Rectangle **, const char*, const char*);

#ifndef soap_read_PointerTott__Rectangle
#define soap_read_PointerTott__Rectangle(soap, data) ( ((data) ? (soap_default_PointerTott__Rectangle(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Rectangle(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImagingSettingsExtension
#define SOAP_TYPE_PointerTott__ImagingSettingsExtension (1308)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImagingSettingsExtension(struct soap*, tt__ImagingSettingsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImagingSettingsExtension(struct soap*, const char *, int, tt__ImagingSettingsExtension *const*, const char *);
SOAP_FMAC3 tt__ImagingSettingsExtension ** SOAP_FMAC4 soap_in_PointerTott__ImagingSettingsExtension(struct soap*, const char*, tt__ImagingSettingsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImagingSettingsExtension(struct soap*, tt__ImagingSettingsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImagingSettingsExtension
#define soap_write_PointerTott__ImagingSettingsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImagingSettingsExtension(soap, data), 0) || soap_put_PointerTott__ImagingSettingsExtension(soap, data, "tt:ImagingSettingsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingSettingsExtension ** SOAP_FMAC4 soap_get_PointerTott__ImagingSettingsExtension(struct soap*, tt__ImagingSettingsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__ImagingSettingsExtension
#define soap_read_PointerTott__ImagingSettingsExtension(soap, data) ( ((data) ? (soap_default_PointerTott__ImagingSettingsExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ImagingSettingsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__WhiteBalance
#define SOAP_TYPE_PointerTott__WhiteBalance (1307)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__WhiteBalance(struct soap*, tt__WhiteBalance *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__WhiteBalance(struct soap*, const char *, int, tt__WhiteBalance *const*, const char *);
SOAP_FMAC3 tt__WhiteBalance ** SOAP_FMAC4 soap_in_PointerTott__WhiteBalance(struct soap*, const char*, tt__WhiteBalance **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__WhiteBalance(struct soap*, tt__WhiteBalance *const*, const char*, const char*);

#ifndef soap_write_PointerTott__WhiteBalance
#define soap_write_PointerTott__WhiteBalance(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__WhiteBalance(soap, data), 0) || soap_put_PointerTott__WhiteBalance(soap, data, "tt:WhiteBalance", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WhiteBalance ** SOAP_FMAC4 soap_get_PointerTott__WhiteBalance(struct soap*, tt__WhiteBalance **, const char*, const char*);

#ifndef soap_read_PointerTott__WhiteBalance
#define soap_read_PointerTott__WhiteBalance(soap, data) ( ((data) ? (soap_default_PointerTott__WhiteBalance(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__WhiteBalance(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__WideDynamicRange
#define SOAP_TYPE_PointerTott__WideDynamicRange (1306)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__WideDynamicRange(struct soap*, tt__WideDynamicRange *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__WideDynamicRange(struct soap*, const char *, int, tt__WideDynamicRange *const*, const char *);
SOAP_FMAC3 tt__WideDynamicRange ** SOAP_FMAC4 soap_in_PointerTott__WideDynamicRange(struct soap*, const char*, tt__WideDynamicRange **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__WideDynamicRange(struct soap*, tt__WideDynamicRange *const*, const char*, const char*);

#ifndef soap_write_PointerTott__WideDynamicRange
#define soap_write_PointerTott__WideDynamicRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__WideDynamicRange(soap, data), 0) || soap_put_PointerTott__WideDynamicRange(soap, data, "tt:WideDynamicRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__WideDynamicRange ** SOAP_FMAC4 soap_get_PointerTott__WideDynamicRange(struct soap*, tt__WideDynamicRange **, const char*, const char*);

#ifndef soap_read_PointerTott__WideDynamicRange
#define soap_read_PointerTott__WideDynamicRange(soap, data) ( ((data) ? (soap_default_PointerTott__WideDynamicRange(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__WideDynamicRange(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IrCutFilterMode
#define SOAP_TYPE_PointerTott__IrCutFilterMode (1305)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IrCutFilterMode(struct soap*, enum tt__IrCutFilterMode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IrCutFilterMode(struct soap*, const char *, int, enum tt__IrCutFilterMode *const*, const char *);
SOAP_FMAC3 enum tt__IrCutFilterMode ** SOAP_FMAC4 soap_in_PointerTott__IrCutFilterMode(struct soap*, const char*, enum tt__IrCutFilterMode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IrCutFilterMode(struct soap*, enum tt__IrCutFilterMode *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IrCutFilterMode
#define soap_write_PointerTott__IrCutFilterMode(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IrCutFilterMode(soap, data), 0) || soap_put_PointerTott__IrCutFilterMode(soap, data, "tt:IrCutFilterMode", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__IrCutFilterMode ** SOAP_FMAC4 soap_get_PointerTott__IrCutFilterMode(struct soap*, enum tt__IrCutFilterMode **, const char*, const char*);

#ifndef soap_read_PointerTott__IrCutFilterMode
#define soap_read_PointerTott__IrCutFilterMode(soap, data) ( ((data) ? (soap_default_PointerTott__IrCutFilterMode(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__IrCutFilterMode(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FocusConfiguration
#define SOAP_TYPE_PointerTott__FocusConfiguration (1304)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FocusConfiguration(struct soap*, tt__FocusConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FocusConfiguration(struct soap*, const char *, int, tt__FocusConfiguration *const*, const char *);
SOAP_FMAC3 tt__FocusConfiguration ** SOAP_FMAC4 soap_in_PointerTott__FocusConfiguration(struct soap*, const char*, tt__FocusConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FocusConfiguration(struct soap*, tt__FocusConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FocusConfiguration
#define soap_write_PointerTott__FocusConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FocusConfiguration(soap, data), 0) || soap_put_PointerTott__FocusConfiguration(soap, data, "tt:FocusConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusConfiguration ** SOAP_FMAC4 soap_get_PointerTott__FocusConfiguration(struct soap*, tt__FocusConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__FocusConfiguration
#define soap_read_PointerTott__FocusConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__FocusConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__FocusConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Exposure
#define SOAP_TYPE_PointerTott__Exposure (1303)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Exposure(struct soap*, tt__Exposure *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Exposure(struct soap*, const char *, int, tt__Exposure *const*, const char *);
SOAP_FMAC3 tt__Exposure ** SOAP_FMAC4 soap_in_PointerTott__Exposure(struct soap*, const char*, tt__Exposure **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Exposure(struct soap*, tt__Exposure *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Exposure
#define soap_write_PointerTott__Exposure(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Exposure(soap, data), 0) || soap_put_PointerTott__Exposure(soap, data, "tt:Exposure", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Exposure ** SOAP_FMAC4 soap_get_PointerTott__Exposure(struct soap*, tt__Exposure **, const char*, const char*);

#ifndef soap_read_PointerTott__Exposure
#define soap_read_PointerTott__Exposure(soap, data) ( ((data) ? (soap_default_PointerTott__Exposure(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Exposure(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__BacklightCompensation
#define SOAP_TYPE_PointerTott__BacklightCompensation (1302)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__BacklightCompensation(struct soap*, tt__BacklightCompensation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__BacklightCompensation(struct soap*, const char *, int, tt__BacklightCompensation *const*, const char *);
SOAP_FMAC3 tt__BacklightCompensation ** SOAP_FMAC4 soap_in_PointerTott__BacklightCompensation(struct soap*, const char*, tt__BacklightCompensation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__BacklightCompensation(struct soap*, tt__BacklightCompensation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__BacklightCompensation
#define soap_write_PointerTott__BacklightCompensation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__BacklightCompensation(soap, data), 0) || soap_put_PointerTott__BacklightCompensation(soap, data, "tt:BacklightCompensation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__BacklightCompensation ** SOAP_FMAC4 soap_get_PointerTott__BacklightCompensation(struct soap*, tt__BacklightCompensation **, const char*, const char*);

#ifndef soap_read_PointerTott__BacklightCompensation
#define soap_read_PointerTott__BacklightCompensation(soap, data) ( ((data) ? (soap_default_PointerTott__BacklightCompensation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__BacklightCompensation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FocusStatus
#define SOAP_TYPE_PointerTott__FocusStatus (1301)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FocusStatus(struct soap*, tt__FocusStatus *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FocusStatus(struct soap*, const char *, int, tt__FocusStatus *const*, const char *);
SOAP_FMAC3 tt__FocusStatus ** SOAP_FMAC4 soap_in_PointerTott__FocusStatus(struct soap*, const char*, tt__FocusStatus **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FocusStatus(struct soap*, tt__FocusStatus *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FocusStatus
#define soap_write_PointerTott__FocusStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FocusStatus(soap, data), 0) || soap_put_PointerTott__FocusStatus(soap, data, "tt:FocusStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FocusStatus ** SOAP_FMAC4 soap_get_PointerTott__FocusStatus(struct soap*, tt__FocusStatus **, const char*, const char*);

#ifndef soap_read_PointerTott__FocusStatus
#define soap_read_PointerTott__FocusStatus(soap, data) ( ((data) ? (soap_default_PointerTott__FocusStatus(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__FocusStatus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourStartingConditionOptionsExtension
#define SOAP_TYPE_PointerTott__PTZPresetTourStartingConditionOptionsExtension (1300)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourStartingConditionOptionsExtension(struct soap*, tt__PTZPresetTourStartingConditionOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourStartingConditionOptionsExtension(struct soap*, const char *, int, tt__PTZPresetTourStartingConditionOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourStartingConditionOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourStartingConditionOptionsExtension(struct soap*, const char*, tt__PTZPresetTourStartingConditionOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourStartingConditionOptionsExtension(struct soap*, tt__PTZPresetTourStartingConditionOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourStartingConditionOptionsExtension
#define soap_write_PointerTott__PTZPresetTourStartingConditionOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourStartingConditionOptionsExtension(soap, data), 0) || soap_put_PointerTott__PTZPresetTourStartingConditionOptionsExtension(soap, data, "tt:PTZPresetTourStartingConditionOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourStartingConditionOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourStartingConditionOptionsExtension(struct soap*, tt__PTZPresetTourStartingConditionOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourStartingConditionOptionsExtension
#define soap_read_PointerTott__PTZPresetTourStartingConditionOptionsExtension(soap, data) ( ((data) ? (soap_default_PointerTott__PTZPresetTourStartingConditionOptionsExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourStartingConditionOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourPresetDetailOptionsExtension
#define SOAP_TYPE_PointerTott__PTZPresetTourPresetDetailOptionsExtension (1298)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourPresetDetailOptionsExtension(struct soap*, tt__PTZPresetTourPresetDetailOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourPresetDetailOptionsExtension(struct soap*, const char *, int, tt__PTZPresetTourPresetDetailOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourPresetDetailOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourPresetDetailOptionsExtension(struct soap*, const char*, tt__PTZPresetTourPresetDetailOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourPresetDetailOptionsExtension(struct soap*, tt__PTZPresetTourPresetDetailOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourPresetDetailOptionsExtension
#define soap_write_PointerTott__PTZPresetTourPresetDetailOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourPresetDetailOptionsExtension(soap, data), 0) || soap_put_PointerTott__PTZPresetTourPresetDetailOptionsExtension(soap, data, "tt:PTZPresetTourPresetDetailOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourPresetDetailOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourPresetDetailOptionsExtension(struct soap*, tt__PTZPresetTourPresetDetailOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourPresetDetailOptionsExtension
#define soap_read_PointerTott__PTZPresetTourPresetDetailOptionsExtension(soap, data) ( ((data) ? (soap_default_PointerTott__PTZPresetTourPresetDetailOptionsExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourPresetDetailOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourPresetDetailOptions
#define SOAP_TYPE_PointerTott__PTZPresetTourPresetDetailOptions (1297)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourPresetDetailOptions(struct soap*, tt__PTZPresetTourPresetDetailOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourPresetDetailOptions(struct soap*, const char *, int, tt__PTZPresetTourPresetDetailOptions *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourPresetDetailOptions ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourPresetDetailOptions(struct soap*, const char*, tt__PTZPresetTourPresetDetailOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourPresetDetailOptions(struct soap*, tt__PTZPresetTourPresetDetailOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourPresetDetailOptions
#define soap_write_PointerTott__PTZPresetTourPresetDetailOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourPresetDetailOptions(soap, data), 0) || soap_put_PointerTott__PTZPresetTourPresetDetailOptions(soap, data, "tt:PTZPresetTourPresetDetailOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourPresetDetailOptions ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourPresetDetailOptions(struct soap*, tt__PTZPresetTourPresetDetailOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourPresetDetailOptions
#define soap_read_PointerTott__PTZPresetTourPresetDetailOptions(soap, data) ( ((data) ? (soap_default_PointerTott__PTZPresetTourPresetDetailOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourPresetDetailOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourSpotOptions
#define SOAP_TYPE_PointerTott__PTZPresetTourSpotOptions (1296)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourSpotOptions(struct soap*, tt__PTZPresetTourSpotOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourSpotOptions(struct soap*, const char *, int, tt__PTZPresetTourSpotOptions *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourSpotOptions ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourSpotOptions(struct soap*, const char*, tt__PTZPresetTourSpotOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourSpotOptions(struct soap*, tt__PTZPresetTourSpotOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourSpotOptions
#define soap_write_PointerTott__PTZPresetTourSpotOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourSpotOptions(soap, data), 0) || soap_put_PointerTott__PTZPresetTourSpotOptions(soap, data, "tt:PTZPresetTourSpotOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourSpotOptions ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourSpotOptions(struct soap*, tt__PTZPresetTourSpotOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourSpotOptions
#define soap_read_PointerTott__PTZPresetTourSpotOptions(soap, data) ( ((data) ? (soap_default_PointerTott__PTZPresetTourSpotOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourSpotOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourStartingConditionOptions
#define SOAP_TYPE_PointerTott__PTZPresetTourStartingConditionOptions (1295)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourStartingConditionOptions(struct soap*, tt__PTZPresetTourStartingConditionOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourStartingConditionOptions(struct soap*, const char *, int, tt__PTZPresetTourStartingConditionOptions *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourStartingConditionOptions ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourStartingConditionOptions(struct soap*, const char*, tt__PTZPresetTourStartingConditionOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourStartingConditionOptions(struct soap*, tt__PTZPresetTourStartingConditionOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourStartingConditionOptions
#define soap_write_PointerTott__PTZPresetTourStartingConditionOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourStartingConditionOptions(soap, data), 0) || soap_put_PointerTott__PTZPresetTourStartingConditionOptions(soap, data, "tt:PTZPresetTourStartingConditionOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourStartingConditionOptions ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourStartingConditionOptions(struct soap*, tt__PTZPresetTourStartingConditionOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourStartingConditionOptions
#define soap_read_PointerTott__PTZPresetTourStartingConditionOptions(soap, data) ( ((data) ? (soap_default_PointerTott__PTZPresetTourStartingConditionOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourStartingConditionOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourStartingConditionExtension
#define SOAP_TYPE_PointerTott__PTZPresetTourStartingConditionExtension (1294)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourStartingConditionExtension(struct soap*, tt__PTZPresetTourStartingConditionExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourStartingConditionExtension(struct soap*, const char *, int, tt__PTZPresetTourStartingConditionExtension *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourStartingConditionExtension ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourStartingConditionExtension(struct soap*, const char*, tt__PTZPresetTourStartingConditionExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourStartingConditionExtension(struct soap*, tt__PTZPresetTourStartingConditionExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourStartingConditionExtension
#define soap_write_PointerTott__PTZPresetTourStartingConditionExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourStartingConditionExtension(soap, data), 0) || soap_put_PointerTott__PTZPresetTourStartingConditionExtension(soap, data, "tt:PTZPresetTourStartingConditionExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourStartingConditionExtension ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourStartingConditionExtension(struct soap*, tt__PTZPresetTourStartingConditionExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourStartingConditionExtension
#define soap_read_PointerTott__PTZPresetTourStartingConditionExtension(soap, data) ( ((data) ? (soap_default_PointerTott__PTZPresetTourStartingConditionExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourStartingConditionExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourDirection
#define SOAP_TYPE_PointerTott__PTZPresetTourDirection (1293)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourDirection(struct soap*, enum tt__PTZPresetTourDirection *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourDirection(struct soap*, const char *, int, enum tt__PTZPresetTourDirection *const*, const char *);
SOAP_FMAC3 enum tt__PTZPresetTourDirection ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourDirection(struct soap*, const char*, enum tt__PTZPresetTourDirection **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourDirection(struct soap*, enum tt__PTZPresetTourDirection *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourDirection
#define soap_write_PointerTott__PTZPresetTourDirection(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourDirection(soap, data), 0) || soap_put_PointerTott__PTZPresetTourDirection(soap, data, "tt:PTZPresetTourDirection", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__PTZPresetTourDirection ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourDirection(struct soap*, enum tt__PTZPresetTourDirection **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourDirection
#define soap_read_PointerTott__PTZPresetTourDirection(soap, data) ( ((data) ? (soap_default_PointerTott__PTZPresetTourDirection(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourDirection(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourStatusExtension
#define SOAP_TYPE_PointerTott__PTZPresetTourStatusExtension (1292)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourStatusExtension(struct soap*, tt__PTZPresetTourStatusExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourStatusExtension(struct soap*, const char *, int, tt__PTZPresetTourStatusExtension *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourStatusExtension ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourStatusExtension(struct soap*, const char*, tt__PTZPresetTourStatusExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourStatusExtension(struct soap*, tt__PTZPresetTourStatusExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourStatusExtension
#define soap_write_PointerTott__PTZPresetTourStatusExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourStatusExtension(soap, data), 0) || soap_put_PointerTott__PTZPresetTourStatusExtension(soap, data, "tt:PTZPresetTourStatusExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourStatusExtension ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourStatusExtension(struct soap*, tt__PTZPresetTourStatusExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourStatusExtension
#define soap_read_PointerTott__PTZPresetTourStatusExtension(soap, data) ( ((data) ? (soap_default_PointerTott__PTZPresetTourStatusExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourStatusExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourTypeExtension
#define SOAP_TYPE_PointerTott__PTZPresetTourTypeExtension (1290)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourTypeExtension(struct soap*, tt__PTZPresetTourTypeExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourTypeExtension(struct soap*, const char *, int, tt__PTZPresetTourTypeExtension *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourTypeExtension ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourTypeExtension(struct soap*, const char*, tt__PTZPresetTourTypeExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourTypeExtension(struct soap*, tt__PTZPresetTourTypeExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourTypeExtension
#define soap_write_PointerTott__PTZPresetTourTypeExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourTypeExtension(soap, data), 0) || soap_put_PointerTott__PTZPresetTourTypeExtension(soap, data, "tt:PTZPresetTourTypeExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourTypeExtension ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourTypeExtension(struct soap*, tt__PTZPresetTourTypeExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourTypeExtension
#define soap_read_PointerTott__PTZPresetTourTypeExtension(soap, data) ( ((data) ? (soap_default_PointerTott__PTZPresetTourTypeExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourTypeExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourSpotExtension
#define SOAP_TYPE_PointerTott__PTZPresetTourSpotExtension (1289)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourSpotExtension(struct soap*, tt__PTZPresetTourSpotExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourSpotExtension(struct soap*, const char *, int, tt__PTZPresetTourSpotExtension *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourSpotExtension ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourSpotExtension(struct soap*, const char*, tt__PTZPresetTourSpotExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourSpotExtension(struct soap*, tt__PTZPresetTourSpotExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourSpotExtension
#define soap_write_PointerTott__PTZPresetTourSpotExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourSpotExtension(soap, data), 0) || soap_put_PointerTott__PTZPresetTourSpotExtension(soap, data, "tt:PTZPresetTourSpotExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourSpotExtension ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourSpotExtension(struct soap*, tt__PTZPresetTourSpotExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourSpotExtension
#define soap_read_PointerTott__PTZPresetTourSpotExtension(soap, data) ( ((data) ? (soap_default_PointerTott__PTZPresetTourSpotExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourSpotExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZSpeed
#define SOAP_TYPE_PointerTott__PTZSpeed (1288)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZSpeed(struct soap*, tt__PTZSpeed *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZSpeed(struct soap*, const char *, int, tt__PTZSpeed *const*, const char *);
SOAP_FMAC3 tt__PTZSpeed ** SOAP_FMAC4 soap_in_PointerTott__PTZSpeed(struct soap*, const char*, tt__PTZSpeed **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZSpeed(struct soap*, tt__PTZSpeed *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZSpeed
#define soap_write_PointerTott__PTZSpeed(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZSpeed(soap, data), 0) || soap_put_PointerTott__PTZSpeed(soap, data, "tt:PTZSpeed", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZSpeed ** SOAP_FMAC4 soap_get_PointerTott__PTZSpeed(struct soap*, tt__PTZSpeed **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZSpeed
#define soap_read_PointerTott__PTZSpeed(soap, data) ( ((data) ? (soap_default_PointerTott__PTZSpeed(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZSpeed(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourPresetDetail
#define SOAP_TYPE_PointerTott__PTZPresetTourPresetDetail (1287)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourPresetDetail(struct soap*, tt__PTZPresetTourPresetDetail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourPresetDetail(struct soap*, const char *, int, tt__PTZPresetTourPresetDetail *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourPresetDetail ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourPresetDetail(struct soap*, const char*, tt__PTZPresetTourPresetDetail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourPresetDetail(struct soap*, tt__PTZPresetTourPresetDetail *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourPresetDetail
#define soap_write_PointerTott__PTZPresetTourPresetDetail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourPresetDetail(soap, data), 0) || soap_put_PointerTott__PTZPresetTourPresetDetail(soap, data, "tt:PTZPresetTourPresetDetail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourPresetDetail ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourPresetDetail(struct soap*, tt__PTZPresetTourPresetDetail **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourPresetDetail
#define soap_read_PointerTott__PTZPresetTourPresetDetail(soap, data) ( ((data) ? (soap_default_PointerTott__PTZPresetTourPresetDetail(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourPresetDetail(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourExtension
#define SOAP_TYPE_PointerTott__PTZPresetTourExtension (1286)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourExtension(struct soap*, tt__PTZPresetTourExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourExtension(struct soap*, const char *, int, tt__PTZPresetTourExtension *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourExtension ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourExtension(struct soap*, const char*, tt__PTZPresetTourExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourExtension(struct soap*, tt__PTZPresetTourExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourExtension
#define soap_write_PointerTott__PTZPresetTourExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourExtension(soap, data), 0) || soap_put_PointerTott__PTZPresetTourExtension(soap, data, "tt:PTZPresetTourExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourExtension ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourExtension(struct soap*, tt__PTZPresetTourExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourExtension
#define soap_read_PointerTott__PTZPresetTourExtension(soap, data) ( ((data) ? (soap_default_PointerTott__PTZPresetTourExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourSpot
#define SOAP_TYPE_PointerTott__PTZPresetTourSpot (1284)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourSpot(struct soap*, tt__PTZPresetTourSpot *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourSpot(struct soap*, const char *, int, tt__PTZPresetTourSpot *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourSpot ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourSpot(struct soap*, const char*, tt__PTZPresetTourSpot **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourSpot(struct soap*, tt__PTZPresetTourSpot *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourSpot
#define soap_write_PointerTott__PTZPresetTourSpot(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourSpot(soap, data), 0) || soap_put_PointerTott__PTZPresetTourSpot(soap, data, "tt:PTZPresetTourSpot", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourSpot ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourSpot(struct soap*, tt__PTZPresetTourSpot **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourSpot
#define soap_read_PointerTott__PTZPresetTourSpot(soap, data) ( ((data) ? (soap_default_PointerTott__PTZPresetTourSpot(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourSpot(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourStartingCondition
#define SOAP_TYPE_PointerTott__PTZPresetTourStartingCondition (1283)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourStartingCondition(struct soap*, tt__PTZPresetTourStartingCondition *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourStartingCondition(struct soap*, const char *, int, tt__PTZPresetTourStartingCondition *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourStartingCondition ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourStartingCondition(struct soap*, const char*, tt__PTZPresetTourStartingCondition **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourStartingCondition(struct soap*, tt__PTZPresetTourStartingCondition *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourStartingCondition
#define soap_write_PointerTott__PTZPresetTourStartingCondition(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourStartingCondition(soap, data), 0) || soap_put_PointerTott__PTZPresetTourStartingCondition(soap, data, "tt:PTZPresetTourStartingCondition", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourStartingCondition ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourStartingCondition(struct soap*, tt__PTZPresetTourStartingCondition **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourStartingCondition
#define soap_read_PointerTott__PTZPresetTourStartingCondition(soap, data) ( ((data) ? (soap_default_PointerTott__PTZPresetTourStartingCondition(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourStartingCondition(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourStatus
#define SOAP_TYPE_PointerTott__PTZPresetTourStatus (1282)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourStatus(struct soap*, tt__PTZPresetTourStatus *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourStatus(struct soap*, const char *, int, tt__PTZPresetTourStatus *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourStatus ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourStatus(struct soap*, const char*, tt__PTZPresetTourStatus **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourStatus(struct soap*, tt__PTZPresetTourStatus *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourStatus
#define soap_write_PointerTott__PTZPresetTourStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourStatus(soap, data), 0) || soap_put_PointerTott__PTZPresetTourStatus(soap, data, "tt:PTZPresetTourStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourStatus ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourStatus(struct soap*, tt__PTZPresetTourStatus **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourStatus
#define soap_read_PointerTott__PTZPresetTourStatus(soap, data) ( ((data) ? (soap_default_PointerTott__PTZPresetTourStatus(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourStatus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZVector
#define SOAP_TYPE_PointerTott__PTZVector (1281)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZVector(struct soap*, tt__PTZVector *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZVector(struct soap*, const char *, int, tt__PTZVector *const*, const char *);
SOAP_FMAC3 tt__PTZVector ** SOAP_FMAC4 soap_in_PointerTott__PTZVector(struct soap*, const char*, tt__PTZVector **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZVector(struct soap*, tt__PTZVector *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZVector
#define soap_write_PointerTott__PTZVector(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZVector(soap, data), 0) || soap_put_PointerTott__PTZVector(soap, data, "tt:PTZVector", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZVector ** SOAP_FMAC4 soap_get_PointerTott__PTZVector(struct soap*, tt__PTZVector **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZVector
#define soap_read_PointerTott__PTZVector(soap, data) ( ((data) ? (soap_default_PointerTott__PTZVector(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZVector(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Name
#define SOAP_TYPE_PointerTott__Name (1280)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Name(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Name(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTott__Name(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Name(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Name
#define soap_write_PointerTott__Name(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Name(soap, data), 0) || soap_put_PointerTott__Name(soap, data, "tt:Name", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTott__Name(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTott__Name
#define soap_read_PointerTott__Name(soap, data) ( ((data) ? (soap_default_PointerTott__Name(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Name(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Vector1D
#define SOAP_TYPE_PointerTott__Vector1D (1279)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Vector1D(struct soap*, tt__Vector1D *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Vector1D(struct soap*, const char *, int, tt__Vector1D *const*, const char *);
SOAP_FMAC3 tt__Vector1D ** SOAP_FMAC4 soap_in_PointerTott__Vector1D(struct soap*, const char*, tt__Vector1D **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Vector1D(struct soap*, tt__Vector1D *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Vector1D
#define soap_write_PointerTott__Vector1D(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Vector1D(soap, data), 0) || soap_put_PointerTott__Vector1D(soap, data, "tt:Vector1D", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Vector1D ** SOAP_FMAC4 soap_get_PointerTott__Vector1D(struct soap*, tt__Vector1D **, const char*, const char*);

#ifndef soap_read_PointerTott__Vector1D
#define soap_read_PointerTott__Vector1D(soap, data) ( ((data) ? (soap_default_PointerTott__Vector1D(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Vector1D(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Vector2D
#define SOAP_TYPE_PointerTott__Vector2D (1278)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Vector2D(struct soap*, tt__Vector2D *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Vector2D(struct soap*, const char *, int, tt__Vector2D *const*, const char *);
SOAP_FMAC3 tt__Vector2D ** SOAP_FMAC4 soap_in_PointerTott__Vector2D(struct soap*, const char*, tt__Vector2D **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Vector2D(struct soap*, tt__Vector2D *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Vector2D
#define soap_write_PointerTott__Vector2D(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Vector2D(soap, data), 0) || soap_put_PointerTott__Vector2D(soap, data, "tt:Vector2D", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Vector2D ** SOAP_FMAC4 soap_get_PointerTott__Vector2D(struct soap*, tt__Vector2D **, const char*, const char*);

#ifndef soap_read_PointerTott__Vector2D
#define soap_read_PointerTott__Vector2D(soap, data) ( ((data) ? (soap_default_PointerTott__Vector2D(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Vector2D(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZSpacesExtension
#define SOAP_TYPE_PointerTott__PTZSpacesExtension (1277)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZSpacesExtension(struct soap*, tt__PTZSpacesExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZSpacesExtension(struct soap*, const char *, int, tt__PTZSpacesExtension *const*, const char *);
SOAP_FMAC3 tt__PTZSpacesExtension ** SOAP_FMAC4 soap_in_PointerTott__PTZSpacesExtension(struct soap*, const char*, tt__PTZSpacesExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZSpacesExtension(struct soap*, tt__PTZSpacesExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZSpacesExtension
#define soap_write_PointerTott__PTZSpacesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZSpacesExtension(soap, data), 0) || soap_put_PointerTott__PTZSpacesExtension(soap, data, "tt:PTZSpacesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZSpacesExtension ** SOAP_FMAC4 soap_get_PointerTott__PTZSpacesExtension(struct soap*, tt__PTZSpacesExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZSpacesExtension
#define soap_read_PointerTott__PTZSpacesExtension(soap, data) ( ((data) ? (soap_default_PointerTott__PTZSpacesExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZSpacesExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Space1DDescription
#define SOAP_TYPE_PointerTott__Space1DDescription (1274)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Space1DDescription(struct soap*, tt__Space1DDescription *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Space1DDescription(struct soap*, const char *, int, tt__Space1DDescription *const*, const char *);
SOAP_FMAC3 tt__Space1DDescription ** SOAP_FMAC4 soap_in_PointerTott__Space1DDescription(struct soap*, const char*, tt__Space1DDescription **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Space1DDescription(struct soap*, tt__Space1DDescription *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Space1DDescription
#define soap_write_PointerTott__Space1DDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Space1DDescription(soap, data), 0) || soap_put_PointerTott__Space1DDescription(soap, data, "tt:Space1DDescription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Space1DDescription ** SOAP_FMAC4 soap_get_PointerTott__Space1DDescription(struct soap*, tt__Space1DDescription **, const char*, const char*);

#ifndef soap_read_PointerTott__Space1DDescription
#define soap_read_PointerTott__Space1DDescription(soap, data) ( ((data) ? (soap_default_PointerTott__Space1DDescription(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Space1DDescription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Space2DDescription
#define SOAP_TYPE_PointerTott__Space2DDescription (1273)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Space2DDescription(struct soap*, tt__Space2DDescription *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Space2DDescription(struct soap*, const char *, int, tt__Space2DDescription *const*, const char *);
SOAP_FMAC3 tt__Space2DDescription ** SOAP_FMAC4 soap_in_PointerTott__Space2DDescription(struct soap*, const char*, tt__Space2DDescription **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Space2DDescription(struct soap*, tt__Space2DDescription *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Space2DDescription
#define soap_write_PointerTott__Space2DDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Space2DDescription(soap, data), 0) || soap_put_PointerTott__Space2DDescription(soap, data, "tt:Space2DDescription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Space2DDescription ** SOAP_FMAC4 soap_get_PointerTott__Space2DDescription(struct soap*, tt__Space2DDescription **, const char*, const char*);

#ifndef soap_read_PointerTott__Space2DDescription
#define soap_read_PointerTott__Space2DDescription(soap, data) ( ((data) ? (soap_default_PointerTott__Space2DDescription(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Space2DDescription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ReverseOptionsExtension
#define SOAP_TYPE_PointerTott__ReverseOptionsExtension (1272)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ReverseOptionsExtension(struct soap*, tt__ReverseOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ReverseOptionsExtension(struct soap*, const char *, int, tt__ReverseOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__ReverseOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__ReverseOptionsExtension(struct soap*, const char*, tt__ReverseOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ReverseOptionsExtension(struct soap*, tt__ReverseOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ReverseOptionsExtension
#define soap_write_PointerTott__ReverseOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ReverseOptionsExtension(soap, data), 0) || soap_put_PointerTott__ReverseOptionsExtension(soap, data, "tt:ReverseOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ReverseOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__ReverseOptionsExtension(struct soap*, tt__ReverseOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__ReverseOptionsExtension
#define soap_read_PointerTott__ReverseOptionsExtension(soap, data) ( ((data) ? (soap_default_PointerTott__ReverseOptionsExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ReverseOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__EFlipOptionsExtension
#define SOAP_TYPE_PointerTott__EFlipOptionsExtension (1270)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__EFlipOptionsExtension(struct soap*, tt__EFlipOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__EFlipOptionsExtension(struct soap*, const char *, int, tt__EFlipOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__EFlipOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__EFlipOptionsExtension(struct soap*, const char*, tt__EFlipOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__EFlipOptionsExtension(struct soap*, tt__EFlipOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__EFlipOptionsExtension
#define soap_write_PointerTott__EFlipOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__EFlipOptionsExtension(soap, data), 0) || soap_put_PointerTott__EFlipOptionsExtension(soap, data, "tt:EFlipOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EFlipOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__EFlipOptionsExtension(struct soap*, tt__EFlipOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__EFlipOptionsExtension
#define soap_read_PointerTott__EFlipOptionsExtension(soap, data) ( ((data) ? (soap_default_PointerTott__EFlipOptionsExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__EFlipOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTControlDirectionOptionsExtension
#define SOAP_TYPE_PointerTott__PTControlDirectionOptionsExtension (1268)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTControlDirectionOptionsExtension(struct soap*, tt__PTControlDirectionOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTControlDirectionOptionsExtension(struct soap*, const char *, int, tt__PTControlDirectionOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__PTControlDirectionOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__PTControlDirectionOptionsExtension(struct soap*, const char*, tt__PTControlDirectionOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTControlDirectionOptionsExtension(struct soap*, tt__PTControlDirectionOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTControlDirectionOptionsExtension
#define soap_write_PointerTott__PTControlDirectionOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTControlDirectionOptionsExtension(soap, data), 0) || soap_put_PointerTott__PTControlDirectionOptionsExtension(soap, data, "tt:PTControlDirectionOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTControlDirectionOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__PTControlDirectionOptionsExtension(struct soap*, tt__PTControlDirectionOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PTControlDirectionOptionsExtension
#define soap_read_PointerTott__PTControlDirectionOptionsExtension(soap, data) ( ((data) ? (soap_default_PointerTott__PTControlDirectionOptionsExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTControlDirectionOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ReverseOptions
#define SOAP_TYPE_PointerTott__ReverseOptions (1267)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ReverseOptions(struct soap*, tt__ReverseOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ReverseOptions(struct soap*, const char *, int, tt__ReverseOptions *const*, const char *);
SOAP_FMAC3 tt__ReverseOptions ** SOAP_FMAC4 soap_in_PointerTott__ReverseOptions(struct soap*, const char*, tt__ReverseOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ReverseOptions(struct soap*, tt__ReverseOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ReverseOptions
#define soap_write_PointerTott__ReverseOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ReverseOptions(soap, data), 0) || soap_put_PointerTott__ReverseOptions(soap, data, "tt:ReverseOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ReverseOptions ** SOAP_FMAC4 soap_get_PointerTott__ReverseOptions(struct soap*, tt__ReverseOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__ReverseOptions
#define soap_read_PointerTott__ReverseOptions(soap, data) ( ((data) ? (soap_default_PointerTott__ReverseOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ReverseOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__EFlipOptions
#define SOAP_TYPE_PointerTott__EFlipOptions (1266)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__EFlipOptions(struct soap*, tt__EFlipOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__EFlipOptions(struct soap*, const char *, int, tt__EFlipOptions *const*, const char *);
SOAP_FMAC3 tt__EFlipOptions ** SOAP_FMAC4 soap_in_PointerTott__EFlipOptions(struct soap*, const char*, tt__EFlipOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__EFlipOptions(struct soap*, tt__EFlipOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__EFlipOptions
#define soap_write_PointerTott__EFlipOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__EFlipOptions(soap, data), 0) || soap_put_PointerTott__EFlipOptions(soap, data, "tt:EFlipOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EFlipOptions ** SOAP_FMAC4 soap_get_PointerTott__EFlipOptions(struct soap*, tt__EFlipOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__EFlipOptions
#define soap_read_PointerTott__EFlipOptions(soap, data) ( ((data) ? (soap_default_PointerTott__EFlipOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__EFlipOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZConfigurationOptions2
#define SOAP_TYPE_PointerTott__PTZConfigurationOptions2 (1265)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZConfigurationOptions2(struct soap*, tt__PTZConfigurationOptions2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZConfigurationOptions2(struct soap*, const char *, int, tt__PTZConfigurationOptions2 *const*, const char *);
SOAP_FMAC3 tt__PTZConfigurationOptions2 ** SOAP_FMAC4 soap_in_PointerTott__PTZConfigurationOptions2(struct soap*, const char*, tt__PTZConfigurationOptions2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZConfigurationOptions2(struct soap*, tt__PTZConfigurationOptions2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZConfigurationOptions2
#define soap_write_PointerTott__PTZConfigurationOptions2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZConfigurationOptions2(soap, data), 0) || soap_put_PointerTott__PTZConfigurationOptions2(soap, data, "tt:PTZConfigurationOptions2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZConfigurationOptions2 ** SOAP_FMAC4 soap_get_PointerTott__PTZConfigurationOptions2(struct soap*, tt__PTZConfigurationOptions2 **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZConfigurationOptions2
#define soap_read_PointerTott__PTZConfigurationOptions2(soap, data) ( ((data) ? (soap_default_PointerTott__PTZConfigurationOptions2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZConfigurationOptions2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTControlDirectionOptions
#define SOAP_TYPE_PointerTott__PTControlDirectionOptions (1264)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTControlDirectionOptions(struct soap*, tt__PTControlDirectionOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTControlDirectionOptions(struct soap*, const char *, int, tt__PTControlDirectionOptions *const*, const char *);
SOAP_FMAC3 tt__PTControlDirectionOptions ** SOAP_FMAC4 soap_in_PointerTott__PTControlDirectionOptions(struct soap*, const char*, tt__PTControlDirectionOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTControlDirectionOptions(struct soap*, tt__PTControlDirectionOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTControlDirectionOptions
#define soap_write_PointerTott__PTControlDirectionOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTControlDirectionOptions(soap, data), 0) || soap_put_PointerTott__PTControlDirectionOptions(soap, data, "tt:PTControlDirectionOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTControlDirectionOptions ** SOAP_FMAC4 soap_get_PointerTott__PTControlDirectionOptions(struct soap*, tt__PTControlDirectionOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__PTControlDirectionOptions
#define soap_read_PointerTott__PTControlDirectionOptions(soap, data) ( ((data) ? (soap_default_PointerTott__PTControlDirectionOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTControlDirectionOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__DurationRange
#define SOAP_TYPE_PointerTott__DurationRange (1263)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__DurationRange(struct soap*, tt__DurationRange *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__DurationRange(struct soap*, const char *, int, tt__DurationRange *const*, const char *);
SOAP_FMAC3 tt__DurationRange ** SOAP_FMAC4 soap_in_PointerTott__DurationRange(struct soap*, const char*, tt__DurationRange **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__DurationRange(struct soap*, tt__DurationRange *const*, const char*, const char*);

#ifndef soap_write_PointerTott__DurationRange
#define soap_write_PointerTott__DurationRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__DurationRange(soap, data), 0) || soap_put_PointerTott__DurationRange(soap, data, "tt:DurationRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DurationRange ** SOAP_FMAC4 soap_get_PointerTott__DurationRange(struct soap*, tt__DurationRange **, const char*, const char*);

#ifndef soap_read_PointerTott__DurationRange
#define soap_read_PointerTott__DurationRange(soap, data) ( ((data) ? (soap_default_PointerTott__DurationRange(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__DurationRange(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZSpaces
#define SOAP_TYPE_PointerTott__PTZSpaces (1262)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZSpaces(struct soap*, tt__PTZSpaces *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZSpaces(struct soap*, const char *, int, tt__PTZSpaces *const*, const char *);
SOAP_FMAC3 tt__PTZSpaces ** SOAP_FMAC4 soap_in_PointerTott__PTZSpaces(struct soap*, const char*, tt__PTZSpaces **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZSpaces(struct soap*, tt__PTZSpaces *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZSpaces
#define soap_write_PointerTott__PTZSpaces(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZSpaces(soap, data), 0) || soap_put_PointerTott__PTZSpaces(soap, data, "tt:PTZSpaces", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZSpaces ** SOAP_FMAC4 soap_get_PointerTott__PTZSpaces(struct soap*, tt__PTZSpaces **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZSpaces
#define soap_read_PointerTott__PTZSpaces(soap, data) ( ((data) ? (soap_default_PointerTott__PTZSpaces(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZSpaces(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTControlDirectionExtension
#define SOAP_TYPE_PointerTott__PTControlDirectionExtension (1261)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTControlDirectionExtension(struct soap*, tt__PTControlDirectionExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTControlDirectionExtension(struct soap*, const char *, int, tt__PTControlDirectionExtension *const*, const char *);
SOAP_FMAC3 tt__PTControlDirectionExtension ** SOAP_FMAC4 soap_in_PointerTott__PTControlDirectionExtension(struct soap*, const char*, tt__PTControlDirectionExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTControlDirectionExtension(struct soap*, tt__PTControlDirectionExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTControlDirectionExtension
#define soap_write_PointerTott__PTControlDirectionExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTControlDirectionExtension(soap, data), 0) || soap_put_PointerTott__PTControlDirectionExtension(soap, data, "tt:PTControlDirectionExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTControlDirectionExtension ** SOAP_FMAC4 soap_get_PointerTott__PTControlDirectionExtension(struct soap*, tt__PTControlDirectionExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PTControlDirectionExtension
#define soap_read_PointerTott__PTControlDirectionExtension(soap, data) ( ((data) ? (soap_default_PointerTott__PTControlDirectionExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTControlDirectionExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Reverse
#define SOAP_TYPE_PointerTott__Reverse (1260)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Reverse(struct soap*, tt__Reverse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Reverse(struct soap*, const char *, int, tt__Reverse *const*, const char *);
SOAP_FMAC3 tt__Reverse ** SOAP_FMAC4 soap_in_PointerTott__Reverse(struct soap*, const char*, tt__Reverse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Reverse(struct soap*, tt__Reverse *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Reverse
#define soap_write_PointerTott__Reverse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Reverse(soap, data), 0) || soap_put_PointerTott__Reverse(soap, data, "tt:Reverse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Reverse ** SOAP_FMAC4 soap_get_PointerTott__Reverse(struct soap*, tt__Reverse **, const char*, const char*);

#ifndef soap_read_PointerTott__Reverse
#define soap_read_PointerTott__Reverse(soap, data) ( ((data) ? (soap_default_PointerTott__Reverse(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Reverse(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__EFlip
#define SOAP_TYPE_PointerTott__EFlip (1259)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__EFlip(struct soap*, tt__EFlip *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__EFlip(struct soap*, const char *, int, tt__EFlip *const*, const char *);
SOAP_FMAC3 tt__EFlip ** SOAP_FMAC4 soap_in_PointerTott__EFlip(struct soap*, const char*, tt__EFlip **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__EFlip(struct soap*, tt__EFlip *const*, const char*, const char*);

#ifndef soap_write_PointerTott__EFlip
#define soap_write_PointerTott__EFlip(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__EFlip(soap, data), 0) || soap_put_PointerTott__EFlip(soap, data, "tt:EFlip", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EFlip ** SOAP_FMAC4 soap_get_PointerTott__EFlip(struct soap*, tt__EFlip **, const char*, const char*);

#ifndef soap_read_PointerTott__EFlip
#define soap_read_PointerTott__EFlip(soap, data) ( ((data) ? (soap_default_PointerTott__EFlip(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__EFlip(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZConfigurationExtension2
#define SOAP_TYPE_PointerTott__PTZConfigurationExtension2 (1258)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZConfigurationExtension2(struct soap*, tt__PTZConfigurationExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZConfigurationExtension2(struct soap*, const char *, int, tt__PTZConfigurationExtension2 *const*, const char *);
SOAP_FMAC3 tt__PTZConfigurationExtension2 ** SOAP_FMAC4 soap_in_PointerTott__PTZConfigurationExtension2(struct soap*, const char*, tt__PTZConfigurationExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZConfigurationExtension2(struct soap*, tt__PTZConfigurationExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZConfigurationExtension2
#define soap_write_PointerTott__PTZConfigurationExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZConfigurationExtension2(soap, data), 0) || soap_put_PointerTott__PTZConfigurationExtension2(soap, data, "tt:PTZConfigurationExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZConfigurationExtension2 ** SOAP_FMAC4 soap_get_PointerTott__PTZConfigurationExtension2(struct soap*, tt__PTZConfigurationExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZConfigurationExtension2
#define soap_read_PointerTott__PTZConfigurationExtension2(soap, data) ( ((data) ? (soap_default_PointerTott__PTZConfigurationExtension2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZConfigurationExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTControlDirection
#define SOAP_TYPE_PointerTott__PTControlDirection (1257)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTControlDirection(struct soap*, tt__PTControlDirection *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTControlDirection(struct soap*, const char *, int, tt__PTControlDirection *const*, const char *);
SOAP_FMAC3 tt__PTControlDirection ** SOAP_FMAC4 soap_in_PointerTott__PTControlDirection(struct soap*, const char*, tt__PTControlDirection **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTControlDirection(struct soap*, tt__PTControlDirection *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTControlDirection
#define soap_write_PointerTott__PTControlDirection(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTControlDirection(soap, data), 0) || soap_put_PointerTott__PTControlDirection(soap, data, "tt:PTControlDirection", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTControlDirection ** SOAP_FMAC4 soap_get_PointerTott__PTControlDirection(struct soap*, tt__PTControlDirection **, const char*, const char*);

#ifndef soap_read_PointerTott__PTControlDirection
#define soap_read_PointerTott__PTControlDirection(soap, data) ( ((data) ? (soap_default_PointerTott__PTControlDirection(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTControlDirection(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourSupportedExtension
#define SOAP_TYPE_PointerTott__PTZPresetTourSupportedExtension (1256)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourSupportedExtension(struct soap*, tt__PTZPresetTourSupportedExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourSupportedExtension(struct soap*, const char *, int, tt__PTZPresetTourSupportedExtension *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourSupportedExtension ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourSupportedExtension(struct soap*, const char*, tt__PTZPresetTourSupportedExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourSupportedExtension(struct soap*, tt__PTZPresetTourSupportedExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourSupportedExtension
#define soap_write_PointerTott__PTZPresetTourSupportedExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourSupportedExtension(soap, data), 0) || soap_put_PointerTott__PTZPresetTourSupportedExtension(soap, data, "tt:PTZPresetTourSupportedExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourSupportedExtension ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourSupportedExtension(struct soap*, tt__PTZPresetTourSupportedExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourSupportedExtension
#define soap_read_PointerTott__PTZPresetTourSupportedExtension(soap, data) ( ((data) ? (soap_default_PointerTott__PTZPresetTourSupportedExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourSupportedExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZNodeExtension2
#define SOAP_TYPE_PointerTott__PTZNodeExtension2 (1254)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZNodeExtension2(struct soap*, tt__PTZNodeExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZNodeExtension2(struct soap*, const char *, int, tt__PTZNodeExtension2 *const*, const char *);
SOAP_FMAC3 tt__PTZNodeExtension2 ** SOAP_FMAC4 soap_in_PointerTott__PTZNodeExtension2(struct soap*, const char*, tt__PTZNodeExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZNodeExtension2(struct soap*, tt__PTZNodeExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZNodeExtension2
#define soap_write_PointerTott__PTZNodeExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZNodeExtension2(soap, data), 0) || soap_put_PointerTott__PTZNodeExtension2(soap, data, "tt:PTZNodeExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZNodeExtension2 ** SOAP_FMAC4 soap_get_PointerTott__PTZNodeExtension2(struct soap*, tt__PTZNodeExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZNodeExtension2
#define soap_read_PointerTott__PTZNodeExtension2(soap, data) ( ((data) ? (soap_default_PointerTott__PTZNodeExtension2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZNodeExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZPresetTourSupported
#define SOAP_TYPE_PointerTott__PTZPresetTourSupported (1253)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZPresetTourSupported(struct soap*, tt__PTZPresetTourSupported *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZPresetTourSupported(struct soap*, const char *, int, tt__PTZPresetTourSupported *const*, const char *);
SOAP_FMAC3 tt__PTZPresetTourSupported ** SOAP_FMAC4 soap_in_PointerTott__PTZPresetTourSupported(struct soap*, const char*, tt__PTZPresetTourSupported **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZPresetTourSupported(struct soap*, tt__PTZPresetTourSupported *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZPresetTourSupported
#define soap_write_PointerTott__PTZPresetTourSupported(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZPresetTourSupported(soap, data), 0) || soap_put_PointerTott__PTZPresetTourSupported(soap, data, "tt:PTZPresetTourSupported", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZPresetTourSupported ** SOAP_FMAC4 soap_get_PointerTott__PTZPresetTourSupported(struct soap*, tt__PTZPresetTourSupported **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZPresetTourSupported
#define soap_read_PointerTott__PTZPresetTourSupported(soap, data) ( ((data) ? (soap_default_PointerTott__PTZPresetTourSupported(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZPresetTourSupported(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__EapMethodExtension
#define SOAP_TYPE_PointerTott__EapMethodExtension (1252)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__EapMethodExtension(struct soap*, tt__EapMethodExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__EapMethodExtension(struct soap*, const char *, int, tt__EapMethodExtension *const*, const char *);
SOAP_FMAC3 tt__EapMethodExtension ** SOAP_FMAC4 soap_in_PointerTott__EapMethodExtension(struct soap*, const char*, tt__EapMethodExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__EapMethodExtension(struct soap*, tt__EapMethodExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__EapMethodExtension
#define soap_write_PointerTott__EapMethodExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__EapMethodExtension(soap, data), 0) || soap_put_PointerTott__EapMethodExtension(soap, data, "tt:EapMethodExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EapMethodExtension ** SOAP_FMAC4 soap_get_PointerTott__EapMethodExtension(struct soap*, tt__EapMethodExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__EapMethodExtension
#define soap_read_PointerTott__EapMethodExtension(soap, data) ( ((data) ? (soap_default_PointerTott__EapMethodExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__EapMethodExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__TLSConfiguration
#define SOAP_TYPE_PointerTott__TLSConfiguration (1251)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__TLSConfiguration(struct soap*, tt__TLSConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__TLSConfiguration(struct soap*, const char *, int, tt__TLSConfiguration *const*, const char *);
SOAP_FMAC3 tt__TLSConfiguration ** SOAP_FMAC4 soap_in_PointerTott__TLSConfiguration(struct soap*, const char*, tt__TLSConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__TLSConfiguration(struct soap*, tt__TLSConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__TLSConfiguration
#define soap_write_PointerTott__TLSConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__TLSConfiguration(soap, data), 0) || soap_put_PointerTott__TLSConfiguration(soap, data, "tt:TLSConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__TLSConfiguration ** SOAP_FMAC4 soap_get_PointerTott__TLSConfiguration(struct soap*, tt__TLSConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__TLSConfiguration
#define soap_read_PointerTott__TLSConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__TLSConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__TLSConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot1XConfigurationExtension
#define SOAP_TYPE_PointerTott__Dot1XConfigurationExtension (1250)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot1XConfigurationExtension(struct soap*, tt__Dot1XConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot1XConfigurationExtension(struct soap*, const char *, int, tt__Dot1XConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__Dot1XConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__Dot1XConfigurationExtension(struct soap*, const char*, tt__Dot1XConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot1XConfigurationExtension(struct soap*, tt__Dot1XConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot1XConfigurationExtension
#define soap_write_PointerTott__Dot1XConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot1XConfigurationExtension(soap, data), 0) || soap_put_PointerTott__Dot1XConfigurationExtension(soap, data, "tt:Dot1XConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot1XConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__Dot1XConfigurationExtension(struct soap*, tt__Dot1XConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot1XConfigurationExtension
#define soap_read_PointerTott__Dot1XConfigurationExtension(soap, data) ( ((data) ? (soap_default_PointerTott__Dot1XConfigurationExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Dot1XConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__EAPMethodConfiguration
#define SOAP_TYPE_PointerTott__EAPMethodConfiguration (1249)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__EAPMethodConfiguration(struct soap*, tt__EAPMethodConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__EAPMethodConfiguration(struct soap*, const char *, int, tt__EAPMethodConfiguration *const*, const char *);
SOAP_FMAC3 tt__EAPMethodConfiguration ** SOAP_FMAC4 soap_in_PointerTott__EAPMethodConfiguration(struct soap*, const char*, tt__EAPMethodConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__EAPMethodConfiguration(struct soap*, tt__EAPMethodConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__EAPMethodConfiguration
#define soap_write_PointerTott__EAPMethodConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__EAPMethodConfiguration(soap, data), 0) || soap_put_PointerTott__EAPMethodConfiguration(soap, data, "tt:EAPMethodConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EAPMethodConfiguration ** SOAP_FMAC4 soap_get_PointerTott__EAPMethodConfiguration(struct soap*, tt__EAPMethodConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__EAPMethodConfiguration
#define soap_read_PointerTott__EAPMethodConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__EAPMethodConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__EAPMethodConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__CertificateInformationExtension
#define SOAP_TYPE_PointerTott__CertificateInformationExtension (1248)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__CertificateInformationExtension(struct soap*, tt__CertificateInformationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__CertificateInformationExtension(struct soap*, const char *, int, tt__CertificateInformationExtension *const*, const char *);
SOAP_FMAC3 tt__CertificateInformationExtension ** SOAP_FMAC4 soap_in_PointerTott__CertificateInformationExtension(struct soap*, const char*, tt__CertificateInformationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__CertificateInformationExtension(struct soap*, tt__CertificateInformationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__CertificateInformationExtension
#define soap_write_PointerTott__CertificateInformationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__CertificateInformationExtension(soap, data), 0) || soap_put_PointerTott__CertificateInformationExtension(soap, data, "tt:CertificateInformationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CertificateInformationExtension ** SOAP_FMAC4 soap_get_PointerTott__CertificateInformationExtension(struct soap*, tt__CertificateInformationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__CertificateInformationExtension
#define soap_read_PointerTott__CertificateInformationExtension(soap, data) ( ((data) ? (soap_default_PointerTott__CertificateInformationExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__CertificateInformationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__DateTimeRange
#define SOAP_TYPE_PointerTott__DateTimeRange (1247)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__DateTimeRange(struct soap*, tt__DateTimeRange *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__DateTimeRange(struct soap*, const char *, int, tt__DateTimeRange *const*, const char *);
SOAP_FMAC3 tt__DateTimeRange ** SOAP_FMAC4 soap_in_PointerTott__DateTimeRange(struct soap*, const char*, tt__DateTimeRange **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__DateTimeRange(struct soap*, tt__DateTimeRange *const*, const char*, const char*);

#ifndef soap_write_PointerTott__DateTimeRange
#define soap_write_PointerTott__DateTimeRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__DateTimeRange(soap, data), 0) || soap_put_PointerTott__DateTimeRange(soap, data, "tt:DateTimeRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DateTimeRange ** SOAP_FMAC4 soap_get_PointerTott__DateTimeRange(struct soap*, tt__DateTimeRange **, const char*, const char*);

#ifndef soap_read_PointerTott__DateTimeRange
#define soap_read_PointerTott__DateTimeRange(soap, data) ( ((data) ? (soap_default_PointerTott__DateTimeRange(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__DateTimeRange(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__CertificateUsage
#define SOAP_TYPE_PointerTott__CertificateUsage (1246)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__CertificateUsage(struct soap*, tt__CertificateUsage *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__CertificateUsage(struct soap*, const char *, int, tt__CertificateUsage *const*, const char *);
SOAP_FMAC3 tt__CertificateUsage ** SOAP_FMAC4 soap_in_PointerTott__CertificateUsage(struct soap*, const char*, tt__CertificateUsage **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__CertificateUsage(struct soap*, tt__CertificateUsage *const*, const char*, const char*);

#ifndef soap_write_PointerTott__CertificateUsage
#define soap_write_PointerTott__CertificateUsage(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__CertificateUsage(soap, data), 0) || soap_put_PointerTott__CertificateUsage(soap, data, "tt:CertificateUsage", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CertificateUsage ** SOAP_FMAC4 soap_get_PointerTott__CertificateUsage(struct soap*, tt__CertificateUsage **, const char*, const char*);

#ifndef soap_read_PointerTott__CertificateUsage
#define soap_read_PointerTott__CertificateUsage(soap, data) ( ((data) ? (soap_default_PointerTott__CertificateUsage(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__CertificateUsage(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__CertificateGenerationParametersExtension
#define SOAP_TYPE_PointerTott__CertificateGenerationParametersExtension (1245)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__CertificateGenerationParametersExtension(struct soap*, tt__CertificateGenerationParametersExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__CertificateGenerationParametersExtension(struct soap*, const char *, int, tt__CertificateGenerationParametersExtension *const*, const char *);
SOAP_FMAC3 tt__CertificateGenerationParametersExtension ** SOAP_FMAC4 soap_in_PointerTott__CertificateGenerationParametersExtension(struct soap*, const char*, tt__CertificateGenerationParametersExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__CertificateGenerationParametersExtension(struct soap*, tt__CertificateGenerationParametersExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__CertificateGenerationParametersExtension
#define soap_write_PointerTott__CertificateGenerationParametersExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__CertificateGenerationParametersExtension(soap, data), 0) || soap_put_PointerTott__CertificateGenerationParametersExtension(soap, data, "tt:CertificateGenerationParametersExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CertificateGenerationParametersExtension ** SOAP_FMAC4 soap_get_PointerTott__CertificateGenerationParametersExtension(struct soap*, tt__CertificateGenerationParametersExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__CertificateGenerationParametersExtension
#define soap_read_PointerTott__CertificateGenerationParametersExtension(soap, data) ( ((data) ? (soap_default_PointerTott__CertificateGenerationParametersExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__CertificateGenerationParametersExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__UserExtension
#define SOAP_TYPE_PointerTott__UserExtension (1244)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__UserExtension(struct soap*, tt__UserExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__UserExtension(struct soap*, const char *, int, tt__UserExtension *const*, const char *);
SOAP_FMAC3 tt__UserExtension ** SOAP_FMAC4 soap_in_PointerTott__UserExtension(struct soap*, const char*, tt__UserExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__UserExtension(struct soap*, tt__UserExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__UserExtension
#define soap_write_PointerTott__UserExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__UserExtension(soap, data), 0) || soap_put_PointerTott__UserExtension(soap, data, "tt:UserExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__UserExtension ** SOAP_FMAC4 soap_get_PointerTott__UserExtension(struct soap*, tt__UserExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__UserExtension
#define soap_read_PointerTott__UserExtension(soap, data) ( ((data) ? (soap_default_PointerTott__UserExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__UserExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__LocalOrientation
#define SOAP_TYPE_PointerTott__LocalOrientation (1243)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__LocalOrientation(struct soap*, tt__LocalOrientation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__LocalOrientation(struct soap*, const char *, int, tt__LocalOrientation *const*, const char *);
SOAP_FMAC3 tt__LocalOrientation ** SOAP_FMAC4 soap_in_PointerTott__LocalOrientation(struct soap*, const char*, tt__LocalOrientation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__LocalOrientation(struct soap*, tt__LocalOrientation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__LocalOrientation
#define soap_write_PointerTott__LocalOrientation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__LocalOrientation(soap, data), 0) || soap_put_PointerTott__LocalOrientation(soap, data, "tt:LocalOrientation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__LocalOrientation ** SOAP_FMAC4 soap_get_PointerTott__LocalOrientation(struct soap*, tt__LocalOrientation **, const char*, const char*);

#ifndef soap_read_PointerTott__LocalOrientation
#define soap_read_PointerTott__LocalOrientation(soap, data) ( ((data) ? (soap_default_PointerTott__LocalOrientation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__LocalOrientation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__LocalLocation
#define SOAP_TYPE_PointerTott__LocalLocation (1242)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__LocalLocation(struct soap*, tt__LocalLocation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__LocalLocation(struct soap*, const char *, int, tt__LocalLocation *const*, const char *);
SOAP_FMAC3 tt__LocalLocation ** SOAP_FMAC4 soap_in_PointerTott__LocalLocation(struct soap*, const char*, tt__LocalLocation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__LocalLocation(struct soap*, tt__LocalLocation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__LocalLocation
#define soap_write_PointerTott__LocalLocation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__LocalLocation(soap, data), 0) || soap_put_PointerTott__LocalLocation(soap, data, "tt:LocalLocation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__LocalLocation ** SOAP_FMAC4 soap_get_PointerTott__LocalLocation(struct soap*, tt__LocalLocation **, const char*, const char*);

#ifndef soap_read_PointerTott__LocalLocation
#define soap_read_PointerTott__LocalLocation(soap, data) ( ((data) ? (soap_default_PointerTott__LocalLocation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__LocalLocation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__GeoOrientation
#define SOAP_TYPE_PointerTott__GeoOrientation (1241)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__GeoOrientation(struct soap*, tt__GeoOrientation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__GeoOrientation(struct soap*, const char *, int, tt__GeoOrientation *const*, const char *);
SOAP_FMAC3 tt__GeoOrientation ** SOAP_FMAC4 soap_in_PointerTott__GeoOrientation(struct soap*, const char*, tt__GeoOrientation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__GeoOrientation(struct soap*, tt__GeoOrientation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__GeoOrientation
#define soap_write_PointerTott__GeoOrientation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__GeoOrientation(soap, data), 0) || soap_put_PointerTott__GeoOrientation(soap, data, "tt:GeoOrientation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__GeoOrientation ** SOAP_FMAC4 soap_get_PointerTott__GeoOrientation(struct soap*, tt__GeoOrientation **, const char*, const char*);

#ifndef soap_read_PointerTott__GeoOrientation
#define soap_read_PointerTott__GeoOrientation(soap, data) ( ((data) ? (soap_default_PointerTott__GeoOrientation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__GeoOrientation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__GeoLocation
#define SOAP_TYPE_PointerTott__GeoLocation (1240)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__GeoLocation(struct soap*, tt__GeoLocation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__GeoLocation(struct soap*, const char *, int, tt__GeoLocation *const*, const char *);
SOAP_FMAC3 tt__GeoLocation ** SOAP_FMAC4 soap_in_PointerTott__GeoLocation(struct soap*, const char*, tt__GeoLocation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__GeoLocation(struct soap*, tt__GeoLocation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__GeoLocation
#define soap_write_PointerTott__GeoLocation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__GeoLocation(soap, data), 0) || soap_put_PointerTott__GeoLocation(soap, data, "tt:GeoLocation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__GeoLocation ** SOAP_FMAC4 soap_get_PointerTott__GeoLocation(struct soap*, tt__GeoLocation **, const char*, const char*);

#ifndef soap_read_PointerTott__GeoLocation
#define soap_read_PointerTott__GeoLocation(soap, data) ( ((data) ? (soap_default_PointerTott__GeoLocation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__GeoLocation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTodouble
#define SOAP_TYPE_PointerTodouble (1239)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTodouble(struct soap*, double *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTodouble(struct soap*, const char *, int, double *const*, const char *);
SOAP_FMAC3 double ** SOAP_FMAC4 soap_in_PointerTodouble(struct soap*, const char*, double **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTodouble(struct soap*, double *const*, const char*, const char*);

#ifndef soap_write_PointerTodouble
#define soap_write_PointerTodouble(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTodouble(soap, data), 0) || soap_put_PointerTodouble(soap, data, "double", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 double ** SOAP_FMAC4 soap_get_PointerTodouble(struct soap*, double **, const char*, const char*);

#ifndef soap_read_PointerTodouble
#define soap_read_PointerTodouble(soap, data) ( ((data) ? (soap_default_PointerTodouble(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTodouble(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Date
#define SOAP_TYPE_PointerTott__Date (1237)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Date(struct soap*, tt__Date *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Date(struct soap*, const char *, int, tt__Date *const*, const char *);
SOAP_FMAC3 tt__Date ** SOAP_FMAC4 soap_in_PointerTott__Date(struct soap*, const char*, tt__Date **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Date(struct soap*, tt__Date *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Date
#define soap_write_PointerTott__Date(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Date(soap, data), 0) || soap_put_PointerTott__Date(soap, data, "tt:Date", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Date ** SOAP_FMAC4 soap_get_PointerTott__Date(struct soap*, tt__Date **, const char*, const char*);

#ifndef soap_read_PointerTott__Date
#define soap_read_PointerTott__Date(soap, data) ( ((data) ? (soap_default_PointerTott__Date(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Date(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Time
#define SOAP_TYPE_PointerTott__Time (1236)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Time(struct soap*, tt__Time *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Time(struct soap*, const char *, int, tt__Time *const*, const char *);
SOAP_FMAC3 tt__Time ** SOAP_FMAC4 soap_in_PointerTott__Time(struct soap*, const char*, tt__Time **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Time(struct soap*, tt__Time *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Time
#define soap_write_PointerTott__Time(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Time(soap, data), 0) || soap_put_PointerTott__Time(soap, data, "tt:Time", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Time ** SOAP_FMAC4 soap_get_PointerTott__Time(struct soap*, tt__Time **, const char*, const char*);

#ifndef soap_read_PointerTott__Time
#define soap_read_PointerTott__Time(soap, data) ( ((data) ? (soap_default_PointerTott__Time(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Time(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SystemDateTimeExtension
#define SOAP_TYPE_PointerTott__SystemDateTimeExtension (1235)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SystemDateTimeExtension(struct soap*, tt__SystemDateTimeExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SystemDateTimeExtension(struct soap*, const char *, int, tt__SystemDateTimeExtension *const*, const char *);
SOAP_FMAC3 tt__SystemDateTimeExtension ** SOAP_FMAC4 soap_in_PointerTott__SystemDateTimeExtension(struct soap*, const char*, tt__SystemDateTimeExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SystemDateTimeExtension(struct soap*, tt__SystemDateTimeExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SystemDateTimeExtension
#define soap_write_PointerTott__SystemDateTimeExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SystemDateTimeExtension(soap, data), 0) || soap_put_PointerTott__SystemDateTimeExtension(soap, data, "tt:SystemDateTimeExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemDateTimeExtension ** SOAP_FMAC4 soap_get_PointerTott__SystemDateTimeExtension(struct soap*, tt__SystemDateTimeExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__SystemDateTimeExtension
#define soap_read_PointerTott__SystemDateTimeExtension(soap, data) ( ((data) ? (soap_default_PointerTott__SystemDateTimeExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__SystemDateTimeExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SystemLogUri
#define SOAP_TYPE_PointerTott__SystemLogUri (1233)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SystemLogUri(struct soap*, tt__SystemLogUri *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SystemLogUri(struct soap*, const char *, int, tt__SystemLogUri *const*, const char *);
SOAP_FMAC3 tt__SystemLogUri ** SOAP_FMAC4 soap_in_PointerTott__SystemLogUri(struct soap*, const char*, tt__SystemLogUri **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SystemLogUri(struct soap*, tt__SystemLogUri *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SystemLogUri
#define soap_write_PointerTott__SystemLogUri(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SystemLogUri(soap, data), 0) || soap_put_PointerTott__SystemLogUri(soap, data, "tt:SystemLogUri", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemLogUri ** SOAP_FMAC4 soap_get_PointerTott__SystemLogUri(struct soap*, tt__SystemLogUri **, const char*, const char*);

#ifndef soap_read_PointerTott__SystemLogUri
#define soap_read_PointerTott__SystemLogUri(soap, data) ( ((data) ? (soap_default_PointerTott__SystemLogUri(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__SystemLogUri(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AnalyticsDeviceExtension
#define SOAP_TYPE_PointerTott__AnalyticsDeviceExtension (1232)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AnalyticsDeviceExtension(struct soap*, tt__AnalyticsDeviceExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AnalyticsDeviceExtension(struct soap*, const char *, int, tt__AnalyticsDeviceExtension *const*, const char *);
SOAP_FMAC3 tt__AnalyticsDeviceExtension ** SOAP_FMAC4 soap_in_PointerTott__AnalyticsDeviceExtension(struct soap*, const char*, tt__AnalyticsDeviceExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AnalyticsDeviceExtension(struct soap*, tt__AnalyticsDeviceExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AnalyticsDeviceExtension
#define soap_write_PointerTott__AnalyticsDeviceExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AnalyticsDeviceExtension(soap, data), 0) || soap_put_PointerTott__AnalyticsDeviceExtension(soap, data, "tt:AnalyticsDeviceExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsDeviceExtension ** SOAP_FMAC4 soap_get_PointerTott__AnalyticsDeviceExtension(struct soap*, tt__AnalyticsDeviceExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__AnalyticsDeviceExtension
#define soap_read_PointerTott__AnalyticsDeviceExtension(soap, data) ( ((data) ? (soap_default_PointerTott__AnalyticsDeviceExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__AnalyticsDeviceExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SystemCapabilitiesExtension2
#define SOAP_TYPE_PointerTott__SystemCapabilitiesExtension2 (1231)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SystemCapabilitiesExtension2(struct soap*, tt__SystemCapabilitiesExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SystemCapabilitiesExtension2(struct soap*, const char *, int, tt__SystemCapabilitiesExtension2 *const*, const char *);
SOAP_FMAC3 tt__SystemCapabilitiesExtension2 ** SOAP_FMAC4 soap_in_PointerTott__SystemCapabilitiesExtension2(struct soap*, const char*, tt__SystemCapabilitiesExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SystemCapabilitiesExtension2(struct soap*, tt__SystemCapabilitiesExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SystemCapabilitiesExtension2
#define soap_write_PointerTott__SystemCapabilitiesExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SystemCapabilitiesExtension2(soap, data), 0) || soap_put_PointerTott__SystemCapabilitiesExtension2(soap, data, "tt:SystemCapabilitiesExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemCapabilitiesExtension2 ** SOAP_FMAC4 soap_get_PointerTott__SystemCapabilitiesExtension2(struct soap*, tt__SystemCapabilitiesExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__SystemCapabilitiesExtension2
#define soap_read_PointerTott__SystemCapabilitiesExtension2(soap, data) ( ((data) ? (soap_default_PointerTott__SystemCapabilitiesExtension2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__SystemCapabilitiesExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SystemCapabilitiesExtension
#define SOAP_TYPE_PointerTott__SystemCapabilitiesExtension (1230)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SystemCapabilitiesExtension(struct soap*, tt__SystemCapabilitiesExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SystemCapabilitiesExtension(struct soap*, const char *, int, tt__SystemCapabilitiesExtension *const*, const char *);
SOAP_FMAC3 tt__SystemCapabilitiesExtension ** SOAP_FMAC4 soap_in_PointerTott__SystemCapabilitiesExtension(struct soap*, const char*, tt__SystemCapabilitiesExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SystemCapabilitiesExtension(struct soap*, tt__SystemCapabilitiesExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SystemCapabilitiesExtension
#define soap_write_PointerTott__SystemCapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SystemCapabilitiesExtension(soap, data), 0) || soap_put_PointerTott__SystemCapabilitiesExtension(soap, data, "tt:SystemCapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemCapabilitiesExtension ** SOAP_FMAC4 soap_get_PointerTott__SystemCapabilitiesExtension(struct soap*, tt__SystemCapabilitiesExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__SystemCapabilitiesExtension
#define soap_read_PointerTott__SystemCapabilitiesExtension(soap, data) ( ((data) ? (soap_default_PointerTott__SystemCapabilitiesExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__SystemCapabilitiesExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SecurityCapabilitiesExtension2
#define SOAP_TYPE_PointerTott__SecurityCapabilitiesExtension2 (1228)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SecurityCapabilitiesExtension2(struct soap*, tt__SecurityCapabilitiesExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SecurityCapabilitiesExtension2(struct soap*, const char *, int, tt__SecurityCapabilitiesExtension2 *const*, const char *);
SOAP_FMAC3 tt__SecurityCapabilitiesExtension2 ** SOAP_FMAC4 soap_in_PointerTott__SecurityCapabilitiesExtension2(struct soap*, const char*, tt__SecurityCapabilitiesExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SecurityCapabilitiesExtension2(struct soap*, tt__SecurityCapabilitiesExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SecurityCapabilitiesExtension2
#define soap_write_PointerTott__SecurityCapabilitiesExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SecurityCapabilitiesExtension2(soap, data), 0) || soap_put_PointerTott__SecurityCapabilitiesExtension2(soap, data, "tt:SecurityCapabilitiesExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SecurityCapabilitiesExtension2 ** SOAP_FMAC4 soap_get_PointerTott__SecurityCapabilitiesExtension2(struct soap*, tt__SecurityCapabilitiesExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__SecurityCapabilitiesExtension2
#define soap_read_PointerTott__SecurityCapabilitiesExtension2(soap, data) ( ((data) ? (soap_default_PointerTott__SecurityCapabilitiesExtension2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__SecurityCapabilitiesExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SecurityCapabilitiesExtension
#define SOAP_TYPE_PointerTott__SecurityCapabilitiesExtension (1227)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SecurityCapabilitiesExtension(struct soap*, tt__SecurityCapabilitiesExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SecurityCapabilitiesExtension(struct soap*, const char *, int, tt__SecurityCapabilitiesExtension *const*, const char *);
SOAP_FMAC3 tt__SecurityCapabilitiesExtension ** SOAP_FMAC4 soap_in_PointerTott__SecurityCapabilitiesExtension(struct soap*, const char*, tt__SecurityCapabilitiesExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SecurityCapabilitiesExtension(struct soap*, tt__SecurityCapabilitiesExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SecurityCapabilitiesExtension
#define soap_write_PointerTott__SecurityCapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SecurityCapabilitiesExtension(soap, data), 0) || soap_put_PointerTott__SecurityCapabilitiesExtension(soap, data, "tt:SecurityCapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SecurityCapabilitiesExtension ** SOAP_FMAC4 soap_get_PointerTott__SecurityCapabilitiesExtension(struct soap*, tt__SecurityCapabilitiesExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__SecurityCapabilitiesExtension
#define soap_read_PointerTott__SecurityCapabilitiesExtension(soap, data) ( ((data) ? (soap_default_PointerTott__SecurityCapabilitiesExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__SecurityCapabilitiesExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkCapabilitiesExtension2
#define SOAP_TYPE_PointerTott__NetworkCapabilitiesExtension2 (1226)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkCapabilitiesExtension2(struct soap*, tt__NetworkCapabilitiesExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkCapabilitiesExtension2(struct soap*, const char *, int, tt__NetworkCapabilitiesExtension2 *const*, const char *);
SOAP_FMAC3 tt__NetworkCapabilitiesExtension2 ** SOAP_FMAC4 soap_in_PointerTott__NetworkCapabilitiesExtension2(struct soap*, const char*, tt__NetworkCapabilitiesExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkCapabilitiesExtension2(struct soap*, tt__NetworkCapabilitiesExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkCapabilitiesExtension2
#define soap_write_PointerTott__NetworkCapabilitiesExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkCapabilitiesExtension2(soap, data), 0) || soap_put_PointerTott__NetworkCapabilitiesExtension2(soap, data, "tt:NetworkCapabilitiesExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkCapabilitiesExtension2 ** SOAP_FMAC4 soap_get_PointerTott__NetworkCapabilitiesExtension2(struct soap*, tt__NetworkCapabilitiesExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkCapabilitiesExtension2
#define soap_read_PointerTott__NetworkCapabilitiesExtension2(soap, data) ( ((data) ? (soap_default_PointerTott__NetworkCapabilitiesExtension2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__NetworkCapabilitiesExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkCapabilitiesExtension
#define SOAP_TYPE_PointerTott__NetworkCapabilitiesExtension (1225)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkCapabilitiesExtension(struct soap*, tt__NetworkCapabilitiesExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkCapabilitiesExtension(struct soap*, const char *, int, tt__NetworkCapabilitiesExtension *const*, const char *);
SOAP_FMAC3 tt__NetworkCapabilitiesExtension ** SOAP_FMAC4 soap_in_PointerTott__NetworkCapabilitiesExtension(struct soap*, const char*, tt__NetworkCapabilitiesExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkCapabilitiesExtension(struct soap*, tt__NetworkCapabilitiesExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkCapabilitiesExtension
#define soap_write_PointerTott__NetworkCapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkCapabilitiesExtension(soap, data), 0) || soap_put_PointerTott__NetworkCapabilitiesExtension(soap, data, "tt:NetworkCapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkCapabilitiesExtension ** SOAP_FMAC4 soap_get_PointerTott__NetworkCapabilitiesExtension(struct soap*, tt__NetworkCapabilitiesExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkCapabilitiesExtension
#define soap_read_PointerTott__NetworkCapabilitiesExtension(soap, data) ( ((data) ? (soap_default_PointerTott__NetworkCapabilitiesExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__NetworkCapabilitiesExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RealTimeStreamingCapabilitiesExtension
#define SOAP_TYPE_PointerTott__RealTimeStreamingCapabilitiesExtension (1224)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RealTimeStreamingCapabilitiesExtension(struct soap*, tt__RealTimeStreamingCapabilitiesExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RealTimeStreamingCapabilitiesExtension(struct soap*, const char *, int, tt__RealTimeStreamingCapabilitiesExtension *const*, const char *);
SOAP_FMAC3 tt__RealTimeStreamingCapabilitiesExtension ** SOAP_FMAC4 soap_in_PointerTott__RealTimeStreamingCapabilitiesExtension(struct soap*, const char*, tt__RealTimeStreamingCapabilitiesExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RealTimeStreamingCapabilitiesExtension(struct soap*, tt__RealTimeStreamingCapabilitiesExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RealTimeStreamingCapabilitiesExtension
#define soap_write_PointerTott__RealTimeStreamingCapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RealTimeStreamingCapabilitiesExtension(soap, data), 0) || soap_put_PointerTott__RealTimeStreamingCapabilitiesExtension(soap, data, "tt:RealTimeStreamingCapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RealTimeStreamingCapabilitiesExtension ** SOAP_FMAC4 soap_get_PointerTott__RealTimeStreamingCapabilitiesExtension(struct soap*, tt__RealTimeStreamingCapabilitiesExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__RealTimeStreamingCapabilitiesExtension
#define soap_read_PointerTott__RealTimeStreamingCapabilitiesExtension(soap, data) ( ((data) ? (soap_default_PointerTott__RealTimeStreamingCapabilitiesExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__RealTimeStreamingCapabilitiesExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ProfileCapabilities
#define SOAP_TYPE_PointerTott__ProfileCapabilities (1223)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ProfileCapabilities(struct soap*, tt__ProfileCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ProfileCapabilities(struct soap*, const char *, int, tt__ProfileCapabilities *const*, const char *);
SOAP_FMAC3 tt__ProfileCapabilities ** SOAP_FMAC4 soap_in_PointerTott__ProfileCapabilities(struct soap*, const char*, tt__ProfileCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ProfileCapabilities(struct soap*, tt__ProfileCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ProfileCapabilities
#define soap_write_PointerTott__ProfileCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ProfileCapabilities(soap, data), 0) || soap_put_PointerTott__ProfileCapabilities(soap, data, "tt:ProfileCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ProfileCapabilities ** SOAP_FMAC4 soap_get_PointerTott__ProfileCapabilities(struct soap*, tt__ProfileCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__ProfileCapabilities
#define soap_read_PointerTott__ProfileCapabilities(soap, data) ( ((data) ? (soap_default_PointerTott__ProfileCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ProfileCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MediaCapabilitiesExtension
#define SOAP_TYPE_PointerTott__MediaCapabilitiesExtension (1222)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MediaCapabilitiesExtension(struct soap*, tt__MediaCapabilitiesExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MediaCapabilitiesExtension(struct soap*, const char *, int, tt__MediaCapabilitiesExtension *const*, const char *);
SOAP_FMAC3 tt__MediaCapabilitiesExtension ** SOAP_FMAC4 soap_in_PointerTott__MediaCapabilitiesExtension(struct soap*, const char*, tt__MediaCapabilitiesExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MediaCapabilitiesExtension(struct soap*, tt__MediaCapabilitiesExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MediaCapabilitiesExtension
#define soap_write_PointerTott__MediaCapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MediaCapabilitiesExtension(soap, data), 0) || soap_put_PointerTott__MediaCapabilitiesExtension(soap, data, "tt:MediaCapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MediaCapabilitiesExtension ** SOAP_FMAC4 soap_get_PointerTott__MediaCapabilitiesExtension(struct soap*, tt__MediaCapabilitiesExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__MediaCapabilitiesExtension
#define soap_read_PointerTott__MediaCapabilitiesExtension(soap, data) ( ((data) ? (soap_default_PointerTott__MediaCapabilitiesExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__MediaCapabilitiesExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RealTimeStreamingCapabilities
#define SOAP_TYPE_PointerTott__RealTimeStreamingCapabilities (1221)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RealTimeStreamingCapabilities(struct soap*, tt__RealTimeStreamingCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RealTimeStreamingCapabilities(struct soap*, const char *, int, tt__RealTimeStreamingCapabilities *const*, const char *);
SOAP_FMAC3 tt__RealTimeStreamingCapabilities ** SOAP_FMAC4 soap_in_PointerTott__RealTimeStreamingCapabilities(struct soap*, const char*, tt__RealTimeStreamingCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RealTimeStreamingCapabilities(struct soap*, tt__RealTimeStreamingCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RealTimeStreamingCapabilities
#define soap_write_PointerTott__RealTimeStreamingCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RealTimeStreamingCapabilities(soap, data), 0) || soap_put_PointerTott__RealTimeStreamingCapabilities(soap, data, "tt:RealTimeStreamingCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RealTimeStreamingCapabilities ** SOAP_FMAC4 soap_get_PointerTott__RealTimeStreamingCapabilities(struct soap*, tt__RealTimeStreamingCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__RealTimeStreamingCapabilities
#define soap_read_PointerTott__RealTimeStreamingCapabilities(soap, data) ( ((data) ? (soap_default_PointerTott__RealTimeStreamingCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__RealTimeStreamingCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IOCapabilitiesExtension2
#define SOAP_TYPE_PointerTott__IOCapabilitiesExtension2 (1220)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IOCapabilitiesExtension2(struct soap*, tt__IOCapabilitiesExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IOCapabilitiesExtension2(struct soap*, const char *, int, tt__IOCapabilitiesExtension2 *const*, const char *);
SOAP_FMAC3 tt__IOCapabilitiesExtension2 ** SOAP_FMAC4 soap_in_PointerTott__IOCapabilitiesExtension2(struct soap*, const char*, tt__IOCapabilitiesExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IOCapabilitiesExtension2(struct soap*, tt__IOCapabilitiesExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IOCapabilitiesExtension2
#define soap_write_PointerTott__IOCapabilitiesExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IOCapabilitiesExtension2(soap, data), 0) || soap_put_PointerTott__IOCapabilitiesExtension2(soap, data, "tt:IOCapabilitiesExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IOCapabilitiesExtension2 ** SOAP_FMAC4 soap_get_PointerTott__IOCapabilitiesExtension2(struct soap*, tt__IOCapabilitiesExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__IOCapabilitiesExtension2
#define soap_read_PointerTott__IOCapabilitiesExtension2(soap, data) ( ((data) ? (soap_default_PointerTott__IOCapabilitiesExtension2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__IOCapabilitiesExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IOCapabilitiesExtension
#define SOAP_TYPE_PointerTott__IOCapabilitiesExtension (1218)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IOCapabilitiesExtension(struct soap*, tt__IOCapabilitiesExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IOCapabilitiesExtension(struct soap*, const char *, int, tt__IOCapabilitiesExtension *const*, const char *);
SOAP_FMAC3 tt__IOCapabilitiesExtension ** SOAP_FMAC4 soap_in_PointerTott__IOCapabilitiesExtension(struct soap*, const char*, tt__IOCapabilitiesExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IOCapabilitiesExtension(struct soap*, tt__IOCapabilitiesExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IOCapabilitiesExtension
#define soap_write_PointerTott__IOCapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IOCapabilitiesExtension(soap, data), 0) || soap_put_PointerTott__IOCapabilitiesExtension(soap, data, "tt:IOCapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IOCapabilitiesExtension ** SOAP_FMAC4 soap_get_PointerTott__IOCapabilitiesExtension(struct soap*, tt__IOCapabilitiesExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__IOCapabilitiesExtension
#define soap_read_PointerTott__IOCapabilitiesExtension(soap, data) ( ((data) ? (soap_default_PointerTott__IOCapabilitiesExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__IOCapabilitiesExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__DeviceCapabilitiesExtension
#define SOAP_TYPE_PointerTott__DeviceCapabilitiesExtension (1217)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__DeviceCapabilitiesExtension(struct soap*, tt__DeviceCapabilitiesExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__DeviceCapabilitiesExtension(struct soap*, const char *, int, tt__DeviceCapabilitiesExtension *const*, const char *);
SOAP_FMAC3 tt__DeviceCapabilitiesExtension ** SOAP_FMAC4 soap_in_PointerTott__DeviceCapabilitiesExtension(struct soap*, const char*, tt__DeviceCapabilitiesExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__DeviceCapabilitiesExtension(struct soap*, tt__DeviceCapabilitiesExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__DeviceCapabilitiesExtension
#define soap_write_PointerTott__DeviceCapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__DeviceCapabilitiesExtension(soap, data), 0) || soap_put_PointerTott__DeviceCapabilitiesExtension(soap, data, "tt:DeviceCapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DeviceCapabilitiesExtension ** SOAP_FMAC4 soap_get_PointerTott__DeviceCapabilitiesExtension(struct soap*, tt__DeviceCapabilitiesExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__DeviceCapabilitiesExtension
#define soap_read_PointerTott__DeviceCapabilitiesExtension(soap, data) ( ((data) ? (soap_default_PointerTott__DeviceCapabilitiesExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__DeviceCapabilitiesExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SecurityCapabilities
#define SOAP_TYPE_PointerTott__SecurityCapabilities (1216)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SecurityCapabilities(struct soap*, tt__SecurityCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SecurityCapabilities(struct soap*, const char *, int, tt__SecurityCapabilities *const*, const char *);
SOAP_FMAC3 tt__SecurityCapabilities ** SOAP_FMAC4 soap_in_PointerTott__SecurityCapabilities(struct soap*, const char*, tt__SecurityCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SecurityCapabilities(struct soap*, tt__SecurityCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SecurityCapabilities
#define soap_write_PointerTott__SecurityCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SecurityCapabilities(soap, data), 0) || soap_put_PointerTott__SecurityCapabilities(soap, data, "tt:SecurityCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SecurityCapabilities ** SOAP_FMAC4 soap_get_PointerTott__SecurityCapabilities(struct soap*, tt__SecurityCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__SecurityCapabilities
#define soap_read_PointerTott__SecurityCapabilities(soap, data) ( ((data) ? (soap_default_PointerTott__SecurityCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__SecurityCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IOCapabilities
#define SOAP_TYPE_PointerTott__IOCapabilities (1215)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IOCapabilities(struct soap*, tt__IOCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IOCapabilities(struct soap*, const char *, int, tt__IOCapabilities *const*, const char *);
SOAP_FMAC3 tt__IOCapabilities ** SOAP_FMAC4 soap_in_PointerTott__IOCapabilities(struct soap*, const char*, tt__IOCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IOCapabilities(struct soap*, tt__IOCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IOCapabilities
#define soap_write_PointerTott__IOCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IOCapabilities(soap, data), 0) || soap_put_PointerTott__IOCapabilities(soap, data, "tt:IOCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IOCapabilities ** SOAP_FMAC4 soap_get_PointerTott__IOCapabilities(struct soap*, tt__IOCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__IOCapabilities
#define soap_read_PointerTott__IOCapabilities(soap, data) ( ((data) ? (soap_default_PointerTott__IOCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__IOCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SystemCapabilities
#define SOAP_TYPE_PointerTott__SystemCapabilities (1214)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SystemCapabilities(struct soap*, tt__SystemCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SystemCapabilities(struct soap*, const char *, int, tt__SystemCapabilities *const*, const char *);
SOAP_FMAC3 tt__SystemCapabilities ** SOAP_FMAC4 soap_in_PointerTott__SystemCapabilities(struct soap*, const char*, tt__SystemCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SystemCapabilities(struct soap*, tt__SystemCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SystemCapabilities
#define soap_write_PointerTott__SystemCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SystemCapabilities(soap, data), 0) || soap_put_PointerTott__SystemCapabilities(soap, data, "tt:SystemCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemCapabilities ** SOAP_FMAC4 soap_get_PointerTott__SystemCapabilities(struct soap*, tt__SystemCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__SystemCapabilities
#define soap_read_PointerTott__SystemCapabilities(soap, data) ( ((data) ? (soap_default_PointerTott__SystemCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__SystemCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkCapabilities
#define SOAP_TYPE_PointerTott__NetworkCapabilities (1213)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkCapabilities(struct soap*, tt__NetworkCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkCapabilities(struct soap*, const char *, int, tt__NetworkCapabilities *const*, const char *);
SOAP_FMAC3 tt__NetworkCapabilities ** SOAP_FMAC4 soap_in_PointerTott__NetworkCapabilities(struct soap*, const char*, tt__NetworkCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkCapabilities(struct soap*, tt__NetworkCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkCapabilities
#define soap_write_PointerTott__NetworkCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkCapabilities(soap, data), 0) || soap_put_PointerTott__NetworkCapabilities(soap, data, "tt:NetworkCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkCapabilities ** SOAP_FMAC4 soap_get_PointerTott__NetworkCapabilities(struct soap*, tt__NetworkCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkCapabilities
#define soap_read_PointerTott__NetworkCapabilities(soap, data) ( ((data) ? (soap_default_PointerTott__NetworkCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__NetworkCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__CapabilitiesExtension2
#define SOAP_TYPE_PointerTott__CapabilitiesExtension2 (1212)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__CapabilitiesExtension2(struct soap*, tt__CapabilitiesExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__CapabilitiesExtension2(struct soap*, const char *, int, tt__CapabilitiesExtension2 *const*, const char *);
SOAP_FMAC3 tt__CapabilitiesExtension2 ** SOAP_FMAC4 soap_in_PointerTott__CapabilitiesExtension2(struct soap*, const char*, tt__CapabilitiesExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__CapabilitiesExtension2(struct soap*, tt__CapabilitiesExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__CapabilitiesExtension2
#define soap_write_PointerTott__CapabilitiesExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__CapabilitiesExtension2(soap, data), 0) || soap_put_PointerTott__CapabilitiesExtension2(soap, data, "tt:CapabilitiesExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CapabilitiesExtension2 ** SOAP_FMAC4 soap_get_PointerTott__CapabilitiesExtension2(struct soap*, tt__CapabilitiesExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__CapabilitiesExtension2
#define soap_read_PointerTott__CapabilitiesExtension2(soap, data) ( ((data) ? (soap_default_PointerTott__CapabilitiesExtension2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__CapabilitiesExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AnalyticsDeviceCapabilities
#define SOAP_TYPE_PointerTott__AnalyticsDeviceCapabilities (1211)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AnalyticsDeviceCapabilities(struct soap*, tt__AnalyticsDeviceCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AnalyticsDeviceCapabilities(struct soap*, const char *, int, tt__AnalyticsDeviceCapabilities *const*, const char *);
SOAP_FMAC3 tt__AnalyticsDeviceCapabilities ** SOAP_FMAC4 soap_in_PointerTott__AnalyticsDeviceCapabilities(struct soap*, const char*, tt__AnalyticsDeviceCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AnalyticsDeviceCapabilities(struct soap*, tt__AnalyticsDeviceCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AnalyticsDeviceCapabilities
#define soap_write_PointerTott__AnalyticsDeviceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AnalyticsDeviceCapabilities(soap, data), 0) || soap_put_PointerTott__AnalyticsDeviceCapabilities(soap, data, "tt:AnalyticsDeviceCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsDeviceCapabilities ** SOAP_FMAC4 soap_get_PointerTott__AnalyticsDeviceCapabilities(struct soap*, tt__AnalyticsDeviceCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__AnalyticsDeviceCapabilities
#define soap_read_PointerTott__AnalyticsDeviceCapabilities(soap, data) ( ((data) ? (soap_default_PointerTott__AnalyticsDeviceCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__AnalyticsDeviceCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ReceiverCapabilities
#define SOAP_TYPE_PointerTott__ReceiverCapabilities (1210)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ReceiverCapabilities(struct soap*, tt__ReceiverCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ReceiverCapabilities(struct soap*, const char *, int, tt__ReceiverCapabilities *const*, const char *);
SOAP_FMAC3 tt__ReceiverCapabilities ** SOAP_FMAC4 soap_in_PointerTott__ReceiverCapabilities(struct soap*, const char*, tt__ReceiverCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ReceiverCapabilities(struct soap*, tt__ReceiverCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ReceiverCapabilities
#define soap_write_PointerTott__ReceiverCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ReceiverCapabilities(soap, data), 0) || soap_put_PointerTott__ReceiverCapabilities(soap, data, "tt:ReceiverCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ReceiverCapabilities ** SOAP_FMAC4 soap_get_PointerTott__ReceiverCapabilities(struct soap*, tt__ReceiverCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__ReceiverCapabilities
#define soap_read_PointerTott__ReceiverCapabilities(soap, data) ( ((data) ? (soap_default_PointerTott__ReceiverCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ReceiverCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ReplayCapabilities
#define SOAP_TYPE_PointerTott__ReplayCapabilities (1209)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ReplayCapabilities(struct soap*, tt__ReplayCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ReplayCapabilities(struct soap*, const char *, int, tt__ReplayCapabilities *const*, const char *);
SOAP_FMAC3 tt__ReplayCapabilities ** SOAP_FMAC4 soap_in_PointerTott__ReplayCapabilities(struct soap*, const char*, tt__ReplayCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ReplayCapabilities(struct soap*, tt__ReplayCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ReplayCapabilities
#define soap_write_PointerTott__ReplayCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ReplayCapabilities(soap, data), 0) || soap_put_PointerTott__ReplayCapabilities(soap, data, "tt:ReplayCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ReplayCapabilities ** SOAP_FMAC4 soap_get_PointerTott__ReplayCapabilities(struct soap*, tt__ReplayCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__ReplayCapabilities
#define soap_read_PointerTott__ReplayCapabilities(soap, data) ( ((data) ? (soap_default_PointerTott__ReplayCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ReplayCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SearchCapabilities
#define SOAP_TYPE_PointerTott__SearchCapabilities (1208)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SearchCapabilities(struct soap*, tt__SearchCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SearchCapabilities(struct soap*, const char *, int, tt__SearchCapabilities *const*, const char *);
SOAP_FMAC3 tt__SearchCapabilities ** SOAP_FMAC4 soap_in_PointerTott__SearchCapabilities(struct soap*, const char*, tt__SearchCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SearchCapabilities(struct soap*, tt__SearchCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SearchCapabilities
#define soap_write_PointerTott__SearchCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SearchCapabilities(soap, data), 0) || soap_put_PointerTott__SearchCapabilities(soap, data, "tt:SearchCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SearchCapabilities ** SOAP_FMAC4 soap_get_PointerTott__SearchCapabilities(struct soap*, tt__SearchCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__SearchCapabilities
#define soap_read_PointerTott__SearchCapabilities(soap, data) ( ((data) ? (soap_default_PointerTott__SearchCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__SearchCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RecordingCapabilities
#define SOAP_TYPE_PointerTott__RecordingCapabilities (1207)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RecordingCapabilities(struct soap*, tt__RecordingCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RecordingCapabilities(struct soap*, const char *, int, tt__RecordingCapabilities *const*, const char *);
SOAP_FMAC3 tt__RecordingCapabilities ** SOAP_FMAC4 soap_in_PointerTott__RecordingCapabilities(struct soap*, const char*, tt__RecordingCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RecordingCapabilities(struct soap*, tt__RecordingCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RecordingCapabilities
#define soap_write_PointerTott__RecordingCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RecordingCapabilities(soap, data), 0) || soap_put_PointerTott__RecordingCapabilities(soap, data, "tt:RecordingCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RecordingCapabilities ** SOAP_FMAC4 soap_get_PointerTott__RecordingCapabilities(struct soap*, tt__RecordingCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__RecordingCapabilities
#define soap_read_PointerTott__RecordingCapabilities(soap, data) ( ((data) ? (soap_default_PointerTott__RecordingCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__RecordingCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__DisplayCapabilities
#define SOAP_TYPE_PointerTott__DisplayCapabilities (1206)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__DisplayCapabilities(struct soap*, tt__DisplayCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__DisplayCapabilities(struct soap*, const char *, int, tt__DisplayCapabilities *const*, const char *);
SOAP_FMAC3 tt__DisplayCapabilities ** SOAP_FMAC4 soap_in_PointerTott__DisplayCapabilities(struct soap*, const char*, tt__DisplayCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__DisplayCapabilities(struct soap*, tt__DisplayCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__DisplayCapabilities
#define soap_write_PointerTott__DisplayCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__DisplayCapabilities(soap, data), 0) || soap_put_PointerTott__DisplayCapabilities(soap, data, "tt:DisplayCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DisplayCapabilities ** SOAP_FMAC4 soap_get_PointerTott__DisplayCapabilities(struct soap*, tt__DisplayCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__DisplayCapabilities
#define soap_read_PointerTott__DisplayCapabilities(soap, data) ( ((data) ? (soap_default_PointerTott__DisplayCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__DisplayCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__DeviceIOCapabilities
#define SOAP_TYPE_PointerTott__DeviceIOCapabilities (1205)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__DeviceIOCapabilities(struct soap*, tt__DeviceIOCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__DeviceIOCapabilities(struct soap*, const char *, int, tt__DeviceIOCapabilities *const*, const char *);
SOAP_FMAC3 tt__DeviceIOCapabilities ** SOAP_FMAC4 soap_in_PointerTott__DeviceIOCapabilities(struct soap*, const char*, tt__DeviceIOCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__DeviceIOCapabilities(struct soap*, tt__DeviceIOCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__DeviceIOCapabilities
#define soap_write_PointerTott__DeviceIOCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__DeviceIOCapabilities(soap, data), 0) || soap_put_PointerTott__DeviceIOCapabilities(soap, data, "tt:DeviceIOCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DeviceIOCapabilities ** SOAP_FMAC4 soap_get_PointerTott__DeviceIOCapabilities(struct soap*, tt__DeviceIOCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__DeviceIOCapabilities
#define soap_read_PointerTott__DeviceIOCapabilities(soap, data) ( ((data) ? (soap_default_PointerTott__DeviceIOCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__DeviceIOCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__CapabilitiesExtension
#define SOAP_TYPE_PointerTott__CapabilitiesExtension (1204)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__CapabilitiesExtension(struct soap*, tt__CapabilitiesExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__CapabilitiesExtension(struct soap*, const char *, int, tt__CapabilitiesExtension *const*, const char *);
SOAP_FMAC3 tt__CapabilitiesExtension ** SOAP_FMAC4 soap_in_PointerTott__CapabilitiesExtension(struct soap*, const char*, tt__CapabilitiesExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__CapabilitiesExtension(struct soap*, tt__CapabilitiesExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__CapabilitiesExtension
#define soap_write_PointerTott__CapabilitiesExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__CapabilitiesExtension(soap, data), 0) || soap_put_PointerTott__CapabilitiesExtension(soap, data, "tt:CapabilitiesExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CapabilitiesExtension ** SOAP_FMAC4 soap_get_PointerTott__CapabilitiesExtension(struct soap*, tt__CapabilitiesExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__CapabilitiesExtension
#define soap_read_PointerTott__CapabilitiesExtension(soap, data) ( ((data) ? (soap_default_PointerTott__CapabilitiesExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__CapabilitiesExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZCapabilities
#define SOAP_TYPE_PointerTott__PTZCapabilities (1203)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZCapabilities(struct soap*, tt__PTZCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZCapabilities(struct soap*, const char *, int, tt__PTZCapabilities *const*, const char *);
SOAP_FMAC3 tt__PTZCapabilities ** SOAP_FMAC4 soap_in_PointerTott__PTZCapabilities(struct soap*, const char*, tt__PTZCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZCapabilities(struct soap*, tt__PTZCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZCapabilities
#define soap_write_PointerTott__PTZCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZCapabilities(soap, data), 0) || soap_put_PointerTott__PTZCapabilities(soap, data, "tt:PTZCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZCapabilities ** SOAP_FMAC4 soap_get_PointerTott__PTZCapabilities(struct soap*, tt__PTZCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZCapabilities
#define soap_read_PointerTott__PTZCapabilities(soap, data) ( ((data) ? (soap_default_PointerTott__PTZCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MediaCapabilities
#define SOAP_TYPE_PointerTott__MediaCapabilities (1202)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MediaCapabilities(struct soap*, tt__MediaCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MediaCapabilities(struct soap*, const char *, int, tt__MediaCapabilities *const*, const char *);
SOAP_FMAC3 tt__MediaCapabilities ** SOAP_FMAC4 soap_in_PointerTott__MediaCapabilities(struct soap*, const char*, tt__MediaCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MediaCapabilities(struct soap*, tt__MediaCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MediaCapabilities
#define soap_write_PointerTott__MediaCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MediaCapabilities(soap, data), 0) || soap_put_PointerTott__MediaCapabilities(soap, data, "tt:MediaCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MediaCapabilities ** SOAP_FMAC4 soap_get_PointerTott__MediaCapabilities(struct soap*, tt__MediaCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__MediaCapabilities
#define soap_read_PointerTott__MediaCapabilities(soap, data) ( ((data) ? (soap_default_PointerTott__MediaCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__MediaCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImagingCapabilities
#define SOAP_TYPE_PointerTott__ImagingCapabilities (1201)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImagingCapabilities(struct soap*, tt__ImagingCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImagingCapabilities(struct soap*, const char *, int, tt__ImagingCapabilities *const*, const char *);
SOAP_FMAC3 tt__ImagingCapabilities ** SOAP_FMAC4 soap_in_PointerTott__ImagingCapabilities(struct soap*, const char*, tt__ImagingCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImagingCapabilities(struct soap*, tt__ImagingCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImagingCapabilities
#define soap_write_PointerTott__ImagingCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImagingCapabilities(soap, data), 0) || soap_put_PointerTott__ImagingCapabilities(soap, data, "tt:ImagingCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingCapabilities ** SOAP_FMAC4 soap_get_PointerTott__ImagingCapabilities(struct soap*, tt__ImagingCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__ImagingCapabilities
#define soap_read_PointerTott__ImagingCapabilities(soap, data) ( ((data) ? (soap_default_PointerTott__ImagingCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ImagingCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__EventCapabilities
#define SOAP_TYPE_PointerTott__EventCapabilities (1200)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__EventCapabilities(struct soap*, tt__EventCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__EventCapabilities(struct soap*, const char *, int, tt__EventCapabilities *const*, const char *);
SOAP_FMAC3 tt__EventCapabilities ** SOAP_FMAC4 soap_in_PointerTott__EventCapabilities(struct soap*, const char*, tt__EventCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__EventCapabilities(struct soap*, tt__EventCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__EventCapabilities
#define soap_write_PointerTott__EventCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__EventCapabilities(soap, data), 0) || soap_put_PointerTott__EventCapabilities(soap, data, "tt:EventCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__EventCapabilities ** SOAP_FMAC4 soap_get_PointerTott__EventCapabilities(struct soap*, tt__EventCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__EventCapabilities
#define soap_read_PointerTott__EventCapabilities(soap, data) ( ((data) ? (soap_default_PointerTott__EventCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__EventCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__DeviceCapabilities
#define SOAP_TYPE_PointerTott__DeviceCapabilities (1199)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__DeviceCapabilities(struct soap*, tt__DeviceCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__DeviceCapabilities(struct soap*, const char *, int, tt__DeviceCapabilities *const*, const char *);
SOAP_FMAC3 tt__DeviceCapabilities ** SOAP_FMAC4 soap_in_PointerTott__DeviceCapabilities(struct soap*, const char*, tt__DeviceCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__DeviceCapabilities(struct soap*, tt__DeviceCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__DeviceCapabilities
#define soap_write_PointerTott__DeviceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__DeviceCapabilities(soap, data), 0) || soap_put_PointerTott__DeviceCapabilities(soap, data, "tt:DeviceCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DeviceCapabilities ** SOAP_FMAC4 soap_get_PointerTott__DeviceCapabilities(struct soap*, tt__DeviceCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__DeviceCapabilities
#define soap_read_PointerTott__DeviceCapabilities(soap, data) ( ((data) ? (soap_default_PointerTott__DeviceCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__DeviceCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AnalyticsCapabilities
#define SOAP_TYPE_PointerTott__AnalyticsCapabilities (1198)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AnalyticsCapabilities(struct soap*, tt__AnalyticsCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AnalyticsCapabilities(struct soap*, const char *, int, tt__AnalyticsCapabilities *const*, const char *);
SOAP_FMAC3 tt__AnalyticsCapabilities ** SOAP_FMAC4 soap_in_PointerTott__AnalyticsCapabilities(struct soap*, const char*, tt__AnalyticsCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AnalyticsCapabilities(struct soap*, tt__AnalyticsCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AnalyticsCapabilities
#define soap_write_PointerTott__AnalyticsCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AnalyticsCapabilities(soap, data), 0) || soap_put_PointerTott__AnalyticsCapabilities(soap, data, "tt:AnalyticsCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AnalyticsCapabilities ** SOAP_FMAC4 soap_get_PointerTott__AnalyticsCapabilities(struct soap*, tt__AnalyticsCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__AnalyticsCapabilities
#define soap_read_PointerTott__AnalyticsCapabilities(soap, data) ( ((data) ? (soap_default_PointerTott__AnalyticsCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__AnalyticsCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot11AvailableNetworksExtension
#define SOAP_TYPE_PointerTott__Dot11AvailableNetworksExtension (1197)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot11AvailableNetworksExtension(struct soap*, tt__Dot11AvailableNetworksExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot11AvailableNetworksExtension(struct soap*, const char *, int, tt__Dot11AvailableNetworksExtension *const*, const char *);
SOAP_FMAC3 tt__Dot11AvailableNetworksExtension ** SOAP_FMAC4 soap_in_PointerTott__Dot11AvailableNetworksExtension(struct soap*, const char*, tt__Dot11AvailableNetworksExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot11AvailableNetworksExtension(struct soap*, tt__Dot11AvailableNetworksExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot11AvailableNetworksExtension
#define soap_write_PointerTott__Dot11AvailableNetworksExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot11AvailableNetworksExtension(soap, data), 0) || soap_put_PointerTott__Dot11AvailableNetworksExtension(soap, data, "tt:Dot11AvailableNetworksExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11AvailableNetworksExtension ** SOAP_FMAC4 soap_get_PointerTott__Dot11AvailableNetworksExtension(struct soap*, tt__Dot11AvailableNetworksExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot11AvailableNetworksExtension
#define soap_read_PointerTott__Dot11AvailableNetworksExtension(soap, data) ( ((data) ? (soap_default_PointerTott__Dot11AvailableNetworksExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Dot11AvailableNetworksExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot11SignalStrength
#define SOAP_TYPE_PointerTott__Dot11SignalStrength (1194)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot11SignalStrength(struct soap*, enum tt__Dot11SignalStrength *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot11SignalStrength(struct soap*, const char *, int, enum tt__Dot11SignalStrength *const*, const char *);
SOAP_FMAC3 enum tt__Dot11SignalStrength ** SOAP_FMAC4 soap_in_PointerTott__Dot11SignalStrength(struct soap*, const char*, enum tt__Dot11SignalStrength **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot11SignalStrength(struct soap*, enum tt__Dot11SignalStrength *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot11SignalStrength
#define soap_write_PointerTott__Dot11SignalStrength(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot11SignalStrength(soap, data), 0) || soap_put_PointerTott__Dot11SignalStrength(soap, data, "tt:Dot11SignalStrength", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__Dot11SignalStrength ** SOAP_FMAC4 soap_get_PointerTott__Dot11SignalStrength(struct soap*, enum tt__Dot11SignalStrength **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot11SignalStrength
#define soap_read_PointerTott__Dot11SignalStrength(soap, data) ( ((data) ? (soap_default_PointerTott__Dot11SignalStrength(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Dot11SignalStrength(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot11PSKSetExtension
#define SOAP_TYPE_PointerTott__Dot11PSKSetExtension (1193)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot11PSKSetExtension(struct soap*, tt__Dot11PSKSetExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot11PSKSetExtension(struct soap*, const char *, int, tt__Dot11PSKSetExtension *const*, const char *);
SOAP_FMAC3 tt__Dot11PSKSetExtension ** SOAP_FMAC4 soap_in_PointerTott__Dot11PSKSetExtension(struct soap*, const char*, tt__Dot11PSKSetExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot11PSKSetExtension(struct soap*, tt__Dot11PSKSetExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot11PSKSetExtension
#define soap_write_PointerTott__Dot11PSKSetExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot11PSKSetExtension(soap, data), 0) || soap_put_PointerTott__Dot11PSKSetExtension(soap, data, "tt:Dot11PSKSetExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11PSKSetExtension ** SOAP_FMAC4 soap_get_PointerTott__Dot11PSKSetExtension(struct soap*, tt__Dot11PSKSetExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot11PSKSetExtension
#define soap_read_PointerTott__Dot11PSKSetExtension(soap, data) ( ((data) ? (soap_default_PointerTott__Dot11PSKSetExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Dot11PSKSetExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot11PSKPassphrase
#define SOAP_TYPE_PointerTott__Dot11PSKPassphrase (1192)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot11PSKPassphrase(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot11PSKPassphrase(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTott__Dot11PSKPassphrase(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot11PSKPassphrase(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot11PSKPassphrase
#define soap_write_PointerTott__Dot11PSKPassphrase(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot11PSKPassphrase(soap, data), 0) || soap_put_PointerTott__Dot11PSKPassphrase(soap, data, "tt:Dot11PSKPassphrase", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTott__Dot11PSKPassphrase(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot11PSKPassphrase
#define soap_read_PointerTott__Dot11PSKPassphrase(soap, data) ( ((data) ? (soap_default_PointerTott__Dot11PSKPassphrase(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Dot11PSKPassphrase(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot11PSK
#define SOAP_TYPE_PointerTott__Dot11PSK (1191)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot11PSK(struct soap*, xsd__hexBinary *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot11PSK(struct soap*, const char *, int, xsd__hexBinary *const*, const char *);
SOAP_FMAC3 xsd__hexBinary ** SOAP_FMAC4 soap_in_PointerTott__Dot11PSK(struct soap*, const char*, xsd__hexBinary **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot11PSK(struct soap*, xsd__hexBinary *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot11PSK
#define soap_write_PointerTott__Dot11PSK(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot11PSK(soap, data), 0) || soap_put_PointerTott__Dot11PSK(soap, data, "tt:Dot11PSK", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__hexBinary ** SOAP_FMAC4 soap_get_PointerTott__Dot11PSK(struct soap*, xsd__hexBinary **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot11PSK
#define soap_read_PointerTott__Dot11PSK(soap, data) ( ((data) ? (soap_default_PointerTott__Dot11PSK(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Dot11PSK(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot11SecurityConfigurationExtension
#define SOAP_TYPE_PointerTott__Dot11SecurityConfigurationExtension (1190)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot11SecurityConfigurationExtension(struct soap*, tt__Dot11SecurityConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot11SecurityConfigurationExtension(struct soap*, const char *, int, tt__Dot11SecurityConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__Dot11SecurityConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__Dot11SecurityConfigurationExtension(struct soap*, const char*, tt__Dot11SecurityConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot11SecurityConfigurationExtension(struct soap*, tt__Dot11SecurityConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot11SecurityConfigurationExtension
#define soap_write_PointerTott__Dot11SecurityConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot11SecurityConfigurationExtension(soap, data), 0) || soap_put_PointerTott__Dot11SecurityConfigurationExtension(soap, data, "tt:Dot11SecurityConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11SecurityConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__Dot11SecurityConfigurationExtension(struct soap*, tt__Dot11SecurityConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot11SecurityConfigurationExtension
#define soap_read_PointerTott__Dot11SecurityConfigurationExtension(soap, data) ( ((data) ? (soap_default_PointerTott__Dot11SecurityConfigurationExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Dot11SecurityConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot11PSKSet
#define SOAP_TYPE_PointerTott__Dot11PSKSet (1189)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot11PSKSet(struct soap*, tt__Dot11PSKSet *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot11PSKSet(struct soap*, const char *, int, tt__Dot11PSKSet *const*, const char *);
SOAP_FMAC3 tt__Dot11PSKSet ** SOAP_FMAC4 soap_in_PointerTott__Dot11PSKSet(struct soap*, const char*, tt__Dot11PSKSet **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot11PSKSet(struct soap*, tt__Dot11PSKSet *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot11PSKSet
#define soap_write_PointerTott__Dot11PSKSet(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot11PSKSet(soap, data), 0) || soap_put_PointerTott__Dot11PSKSet(soap, data, "tt:Dot11PSKSet", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11PSKSet ** SOAP_FMAC4 soap_get_PointerTott__Dot11PSKSet(struct soap*, tt__Dot11PSKSet **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot11PSKSet
#define soap_read_PointerTott__Dot11PSKSet(soap, data) ( ((data) ? (soap_default_PointerTott__Dot11PSKSet(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Dot11PSKSet(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot11Cipher
#define SOAP_TYPE_PointerTott__Dot11Cipher (1188)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot11Cipher(struct soap*, enum tt__Dot11Cipher *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot11Cipher(struct soap*, const char *, int, enum tt__Dot11Cipher *const*, const char *);
SOAP_FMAC3 enum tt__Dot11Cipher ** SOAP_FMAC4 soap_in_PointerTott__Dot11Cipher(struct soap*, const char*, enum tt__Dot11Cipher **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot11Cipher(struct soap*, enum tt__Dot11Cipher *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot11Cipher
#define soap_write_PointerTott__Dot11Cipher(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot11Cipher(soap, data), 0) || soap_put_PointerTott__Dot11Cipher(soap, data, "tt:Dot11Cipher", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__Dot11Cipher ** SOAP_FMAC4 soap_get_PointerTott__Dot11Cipher(struct soap*, enum tt__Dot11Cipher **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot11Cipher
#define soap_read_PointerTott__Dot11Cipher(soap, data) ( ((data) ? (soap_default_PointerTott__Dot11Cipher(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Dot11Cipher(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot11SecurityConfiguration
#define SOAP_TYPE_PointerTott__Dot11SecurityConfiguration (1187)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot11SecurityConfiguration(struct soap*, tt__Dot11SecurityConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot11SecurityConfiguration(struct soap*, const char *, int, tt__Dot11SecurityConfiguration *const*, const char *);
SOAP_FMAC3 tt__Dot11SecurityConfiguration ** SOAP_FMAC4 soap_in_PointerTott__Dot11SecurityConfiguration(struct soap*, const char*, tt__Dot11SecurityConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot11SecurityConfiguration(struct soap*, tt__Dot11SecurityConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot11SecurityConfiguration
#define soap_write_PointerTott__Dot11SecurityConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot11SecurityConfiguration(soap, data), 0) || soap_put_PointerTott__Dot11SecurityConfiguration(soap, data, "tt:Dot11SecurityConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11SecurityConfiguration ** SOAP_FMAC4 soap_get_PointerTott__Dot11SecurityConfiguration(struct soap*, tt__Dot11SecurityConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot11SecurityConfiguration
#define soap_read_PointerTott__Dot11SecurityConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__Dot11SecurityConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Dot11SecurityConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IPAddressFilterExtension
#define SOAP_TYPE_PointerTott__IPAddressFilterExtension (1186)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IPAddressFilterExtension(struct soap*, tt__IPAddressFilterExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IPAddressFilterExtension(struct soap*, const char *, int, tt__IPAddressFilterExtension *const*, const char *);
SOAP_FMAC3 tt__IPAddressFilterExtension ** SOAP_FMAC4 soap_in_PointerTott__IPAddressFilterExtension(struct soap*, const char*, tt__IPAddressFilterExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IPAddressFilterExtension(struct soap*, tt__IPAddressFilterExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IPAddressFilterExtension
#define soap_write_PointerTott__IPAddressFilterExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IPAddressFilterExtension(soap, data), 0) || soap_put_PointerTott__IPAddressFilterExtension(soap, data, "tt:IPAddressFilterExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPAddressFilterExtension ** SOAP_FMAC4 soap_get_PointerTott__IPAddressFilterExtension(struct soap*, tt__IPAddressFilterExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__IPAddressFilterExtension
#define soap_read_PointerTott__IPAddressFilterExtension(soap, data) ( ((data) ? (soap_default_PointerTott__IPAddressFilterExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__IPAddressFilterExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkZeroConfigurationExtension2
#define SOAP_TYPE_PointerTott__NetworkZeroConfigurationExtension2 (1185)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkZeroConfigurationExtension2(struct soap*, tt__NetworkZeroConfigurationExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkZeroConfigurationExtension2(struct soap*, const char *, int, tt__NetworkZeroConfigurationExtension2 *const*, const char *);
SOAP_FMAC3 tt__NetworkZeroConfigurationExtension2 ** SOAP_FMAC4 soap_in_PointerTott__NetworkZeroConfigurationExtension2(struct soap*, const char*, tt__NetworkZeroConfigurationExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkZeroConfigurationExtension2(struct soap*, tt__NetworkZeroConfigurationExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkZeroConfigurationExtension2
#define soap_write_PointerTott__NetworkZeroConfigurationExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkZeroConfigurationExtension2(soap, data), 0) || soap_put_PointerTott__NetworkZeroConfigurationExtension2(soap, data, "tt:NetworkZeroConfigurationExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkZeroConfigurationExtension2 ** SOAP_FMAC4 soap_get_PointerTott__NetworkZeroConfigurationExtension2(struct soap*, tt__NetworkZeroConfigurationExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkZeroConfigurationExtension2
#define soap_read_PointerTott__NetworkZeroConfigurationExtension2(soap, data) ( ((data) ? (soap_default_PointerTott__NetworkZeroConfigurationExtension2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__NetworkZeroConfigurationExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkZeroConfigurationExtension
#define SOAP_TYPE_PointerTott__NetworkZeroConfigurationExtension (1183)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkZeroConfigurationExtension(struct soap*, tt__NetworkZeroConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkZeroConfigurationExtension(struct soap*, const char *, int, tt__NetworkZeroConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__NetworkZeroConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__NetworkZeroConfigurationExtension(struct soap*, const char*, tt__NetworkZeroConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkZeroConfigurationExtension(struct soap*, tt__NetworkZeroConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkZeroConfigurationExtension
#define soap_write_PointerTott__NetworkZeroConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkZeroConfigurationExtension(soap, data), 0) || soap_put_PointerTott__NetworkZeroConfigurationExtension(soap, data, "tt:NetworkZeroConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkZeroConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__NetworkZeroConfigurationExtension(struct soap*, tt__NetworkZeroConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkZeroConfigurationExtension
#define soap_read_PointerTott__NetworkZeroConfigurationExtension(soap, data) ( ((data) ? (soap_default_PointerTott__NetworkZeroConfigurationExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__NetworkZeroConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IPv6DHCPConfiguration
#define SOAP_TYPE_PointerTott__IPv6DHCPConfiguration (1182)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IPv6DHCPConfiguration(struct soap*, enum tt__IPv6DHCPConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IPv6DHCPConfiguration(struct soap*, const char *, int, enum tt__IPv6DHCPConfiguration *const*, const char *);
SOAP_FMAC3 enum tt__IPv6DHCPConfiguration ** SOAP_FMAC4 soap_in_PointerTott__IPv6DHCPConfiguration(struct soap*, const char*, enum tt__IPv6DHCPConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IPv6DHCPConfiguration(struct soap*, enum tt__IPv6DHCPConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IPv6DHCPConfiguration
#define soap_write_PointerTott__IPv6DHCPConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IPv6DHCPConfiguration(soap, data), 0) || soap_put_PointerTott__IPv6DHCPConfiguration(soap, data, "tt:IPv6DHCPConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 enum tt__IPv6DHCPConfiguration ** SOAP_FMAC4 soap_get_PointerTott__IPv6DHCPConfiguration(struct soap*, enum tt__IPv6DHCPConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__IPv6DHCPConfiguration
#define soap_read_PointerTott__IPv6DHCPConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__IPv6DHCPConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__IPv6DHCPConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkInterfaceSetConfigurationExtension2
#define SOAP_TYPE_PointerTott__NetworkInterfaceSetConfigurationExtension2 (1181)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkInterfaceSetConfigurationExtension2(struct soap*, tt__NetworkInterfaceSetConfigurationExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkInterfaceSetConfigurationExtension2(struct soap*, const char *, int, tt__NetworkInterfaceSetConfigurationExtension2 *const*, const char *);
SOAP_FMAC3 tt__NetworkInterfaceSetConfigurationExtension2 ** SOAP_FMAC4 soap_in_PointerTott__NetworkInterfaceSetConfigurationExtension2(struct soap*, const char*, tt__NetworkInterfaceSetConfigurationExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkInterfaceSetConfigurationExtension2(struct soap*, tt__NetworkInterfaceSetConfigurationExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkInterfaceSetConfigurationExtension2
#define soap_write_PointerTott__NetworkInterfaceSetConfigurationExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkInterfaceSetConfigurationExtension2(soap, data), 0) || soap_put_PointerTott__NetworkInterfaceSetConfigurationExtension2(soap, data, "tt:NetworkInterfaceSetConfigurationExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceSetConfigurationExtension2 ** SOAP_FMAC4 soap_get_PointerTott__NetworkInterfaceSetConfigurationExtension2(struct soap*, tt__NetworkInterfaceSetConfigurationExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkInterfaceSetConfigurationExtension2
#define soap_read_PointerTott__NetworkInterfaceSetConfigurationExtension2(soap, data) ( ((data) ? (soap_default_PointerTott__NetworkInterfaceSetConfigurationExtension2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__NetworkInterfaceSetConfigurationExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkInterfaceSetConfigurationExtension
#define SOAP_TYPE_PointerTott__NetworkInterfaceSetConfigurationExtension (1180)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkInterfaceSetConfigurationExtension(struct soap*, tt__NetworkInterfaceSetConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkInterfaceSetConfigurationExtension(struct soap*, const char *, int, tt__NetworkInterfaceSetConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__NetworkInterfaceSetConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__NetworkInterfaceSetConfigurationExtension(struct soap*, const char*, tt__NetworkInterfaceSetConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkInterfaceSetConfigurationExtension(struct soap*, tt__NetworkInterfaceSetConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkInterfaceSetConfigurationExtension
#define soap_write_PointerTott__NetworkInterfaceSetConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkInterfaceSetConfigurationExtension(soap, data), 0) || soap_put_PointerTott__NetworkInterfaceSetConfigurationExtension(soap, data, "tt:NetworkInterfaceSetConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceSetConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__NetworkInterfaceSetConfigurationExtension(struct soap*, tt__NetworkInterfaceSetConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkInterfaceSetConfigurationExtension
#define soap_read_PointerTott__NetworkInterfaceSetConfigurationExtension(soap, data) ( ((data) ? (soap_default_PointerTott__NetworkInterfaceSetConfigurationExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__NetworkInterfaceSetConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IPv6NetworkInterfaceSetConfiguration
#define SOAP_TYPE_PointerTott__IPv6NetworkInterfaceSetConfiguration (1179)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IPv6NetworkInterfaceSetConfiguration(struct soap*, tt__IPv6NetworkInterfaceSetConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IPv6NetworkInterfaceSetConfiguration(struct soap*, const char *, int, tt__IPv6NetworkInterfaceSetConfiguration *const*, const char *);
SOAP_FMAC3 tt__IPv6NetworkInterfaceSetConfiguration ** SOAP_FMAC4 soap_in_PointerTott__IPv6NetworkInterfaceSetConfiguration(struct soap*, const char*, tt__IPv6NetworkInterfaceSetConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IPv6NetworkInterfaceSetConfiguration(struct soap*, tt__IPv6NetworkInterfaceSetConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IPv6NetworkInterfaceSetConfiguration
#define soap_write_PointerTott__IPv6NetworkInterfaceSetConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IPv6NetworkInterfaceSetConfiguration(soap, data), 0) || soap_put_PointerTott__IPv6NetworkInterfaceSetConfiguration(soap, data, "tt:IPv6NetworkInterfaceSetConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPv6NetworkInterfaceSetConfiguration ** SOAP_FMAC4 soap_get_PointerTott__IPv6NetworkInterfaceSetConfiguration(struct soap*, tt__IPv6NetworkInterfaceSetConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__IPv6NetworkInterfaceSetConfiguration
#define soap_read_PointerTott__IPv6NetworkInterfaceSetConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__IPv6NetworkInterfaceSetConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__IPv6NetworkInterfaceSetConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IPv4NetworkInterfaceSetConfiguration
#define SOAP_TYPE_PointerTott__IPv4NetworkInterfaceSetConfiguration (1178)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IPv4NetworkInterfaceSetConfiguration(struct soap*, tt__IPv4NetworkInterfaceSetConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IPv4NetworkInterfaceSetConfiguration(struct soap*, const char *, int, tt__IPv4NetworkInterfaceSetConfiguration *const*, const char *);
SOAP_FMAC3 tt__IPv4NetworkInterfaceSetConfiguration ** SOAP_FMAC4 soap_in_PointerTott__IPv4NetworkInterfaceSetConfiguration(struct soap*, const char*, tt__IPv4NetworkInterfaceSetConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IPv4NetworkInterfaceSetConfiguration(struct soap*, tt__IPv4NetworkInterfaceSetConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IPv4NetworkInterfaceSetConfiguration
#define soap_write_PointerTott__IPv4NetworkInterfaceSetConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IPv4NetworkInterfaceSetConfiguration(soap, data), 0) || soap_put_PointerTott__IPv4NetworkInterfaceSetConfiguration(soap, data, "tt:IPv4NetworkInterfaceSetConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPv4NetworkInterfaceSetConfiguration ** SOAP_FMAC4 soap_get_PointerTott__IPv4NetworkInterfaceSetConfiguration(struct soap*, tt__IPv4NetworkInterfaceSetConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__IPv4NetworkInterfaceSetConfiguration
#define soap_read_PointerTott__IPv4NetworkInterfaceSetConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__IPv4NetworkInterfaceSetConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__IPv4NetworkInterfaceSetConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__DynamicDNSInformationExtension
#define SOAP_TYPE_PointerTott__DynamicDNSInformationExtension (1177)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__DynamicDNSInformationExtension(struct soap*, tt__DynamicDNSInformationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__DynamicDNSInformationExtension(struct soap*, const char *, int, tt__DynamicDNSInformationExtension *const*, const char *);
SOAP_FMAC3 tt__DynamicDNSInformationExtension ** SOAP_FMAC4 soap_in_PointerTott__DynamicDNSInformationExtension(struct soap*, const char*, tt__DynamicDNSInformationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__DynamicDNSInformationExtension(struct soap*, tt__DynamicDNSInformationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__DynamicDNSInformationExtension
#define soap_write_PointerTott__DynamicDNSInformationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__DynamicDNSInformationExtension(soap, data), 0) || soap_put_PointerTott__DynamicDNSInformationExtension(soap, data, "tt:DynamicDNSInformationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DynamicDNSInformationExtension ** SOAP_FMAC4 soap_get_PointerTott__DynamicDNSInformationExtension(struct soap*, tt__DynamicDNSInformationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__DynamicDNSInformationExtension
#define soap_read_PointerTott__DynamicDNSInformationExtension(soap, data) ( ((data) ? (soap_default_PointerTott__DynamicDNSInformationExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__DynamicDNSInformationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NTPInformationExtension
#define SOAP_TYPE_PointerTott__NTPInformationExtension (1176)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NTPInformationExtension(struct soap*, tt__NTPInformationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NTPInformationExtension(struct soap*, const char *, int, tt__NTPInformationExtension *const*, const char *);
SOAP_FMAC3 tt__NTPInformationExtension ** SOAP_FMAC4 soap_in_PointerTott__NTPInformationExtension(struct soap*, const char*, tt__NTPInformationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NTPInformationExtension(struct soap*, tt__NTPInformationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NTPInformationExtension
#define soap_write_PointerTott__NTPInformationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NTPInformationExtension(soap, data), 0) || soap_put_PointerTott__NTPInformationExtension(soap, data, "tt:NTPInformationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NTPInformationExtension ** SOAP_FMAC4 soap_get_PointerTott__NTPInformationExtension(struct soap*, tt__NTPInformationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__NTPInformationExtension
#define soap_read_PointerTott__NTPInformationExtension(soap, data) ( ((data) ? (soap_default_PointerTott__NTPInformationExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__NTPInformationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__DNSInformationExtension
#define SOAP_TYPE_PointerTott__DNSInformationExtension (1175)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__DNSInformationExtension(struct soap*, tt__DNSInformationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__DNSInformationExtension(struct soap*, const char *, int, tt__DNSInformationExtension *const*, const char *);
SOAP_FMAC3 tt__DNSInformationExtension ** SOAP_FMAC4 soap_in_PointerTott__DNSInformationExtension(struct soap*, const char*, tt__DNSInformationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__DNSInformationExtension(struct soap*, tt__DNSInformationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__DNSInformationExtension
#define soap_write_PointerTott__DNSInformationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__DNSInformationExtension(soap, data), 0) || soap_put_PointerTott__DNSInformationExtension(soap, data, "tt:DNSInformationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DNSInformationExtension ** SOAP_FMAC4 soap_get_PointerTott__DNSInformationExtension(struct soap*, tt__DNSInformationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__DNSInformationExtension
#define soap_read_PointerTott__DNSInformationExtension(soap, data) ( ((data) ? (soap_default_PointerTott__DNSInformationExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__DNSInformationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__HostnameInformationExtension
#define SOAP_TYPE_PointerTott__HostnameInformationExtension (1174)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__HostnameInformationExtension(struct soap*, tt__HostnameInformationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__HostnameInformationExtension(struct soap*, const char *, int, tt__HostnameInformationExtension *const*, const char *);
SOAP_FMAC3 tt__HostnameInformationExtension ** SOAP_FMAC4 soap_in_PointerTott__HostnameInformationExtension(struct soap*, const char*, tt__HostnameInformationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__HostnameInformationExtension(struct soap*, tt__HostnameInformationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__HostnameInformationExtension
#define soap_write_PointerTott__HostnameInformationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__HostnameInformationExtension(soap, data), 0) || soap_put_PointerTott__HostnameInformationExtension(soap, data, "tt:HostnameInformationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__HostnameInformationExtension ** SOAP_FMAC4 soap_get_PointerTott__HostnameInformationExtension(struct soap*, tt__HostnameInformationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__HostnameInformationExtension
#define soap_read_PointerTott__HostnameInformationExtension(soap, data) ( ((data) ? (soap_default_PointerTott__HostnameInformationExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__HostnameInformationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkHostExtension
#define SOAP_TYPE_PointerTott__NetworkHostExtension (1173)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkHostExtension(struct soap*, tt__NetworkHostExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkHostExtension(struct soap*, const char *, int, tt__NetworkHostExtension *const*, const char *);
SOAP_FMAC3 tt__NetworkHostExtension ** SOAP_FMAC4 soap_in_PointerTott__NetworkHostExtension(struct soap*, const char*, tt__NetworkHostExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkHostExtension(struct soap*, tt__NetworkHostExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkHostExtension
#define soap_write_PointerTott__NetworkHostExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkHostExtension(soap, data), 0) || soap_put_PointerTott__NetworkHostExtension(soap, data, "tt:NetworkHostExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkHostExtension ** SOAP_FMAC4 soap_get_PointerTott__NetworkHostExtension(struct soap*, tt__NetworkHostExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkHostExtension
#define soap_read_PointerTott__NetworkHostExtension(soap, data) ( ((data) ? (soap_default_PointerTott__NetworkHostExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__NetworkHostExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IPv6Address
#define SOAP_TYPE_PointerTott__IPv6Address (1172)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IPv6Address(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IPv6Address(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTott__IPv6Address(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IPv6Address(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IPv6Address
#define soap_write_PointerTott__IPv6Address(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IPv6Address(soap, data), 0) || soap_put_PointerTott__IPv6Address(soap, data, "tt:IPv6Address", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTott__IPv6Address(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTott__IPv6Address
#define soap_read_PointerTott__IPv6Address(soap, data) ( ((data) ? (soap_default_PointerTott__IPv6Address(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__IPv6Address(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IPv4Address
#define SOAP_TYPE_PointerTott__IPv4Address (1171)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IPv4Address(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IPv4Address(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTott__IPv4Address(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IPv4Address(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IPv4Address
#define soap_write_PointerTott__IPv4Address(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IPv4Address(soap, data), 0) || soap_put_PointerTott__IPv4Address(soap, data, "tt:IPv4Address", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTott__IPv4Address(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTott__IPv4Address
#define soap_read_PointerTott__IPv4Address(soap, data) ( ((data) ? (soap_default_PointerTott__IPv4Address(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__IPv4Address(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkProtocolExtension
#define SOAP_TYPE_PointerTott__NetworkProtocolExtension (1170)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkProtocolExtension(struct soap*, tt__NetworkProtocolExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkProtocolExtension(struct soap*, const char *, int, tt__NetworkProtocolExtension *const*, const char *);
SOAP_FMAC3 tt__NetworkProtocolExtension ** SOAP_FMAC4 soap_in_PointerTott__NetworkProtocolExtension(struct soap*, const char*, tt__NetworkProtocolExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkProtocolExtension(struct soap*, tt__NetworkProtocolExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkProtocolExtension
#define soap_write_PointerTott__NetworkProtocolExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkProtocolExtension(soap, data), 0) || soap_put_PointerTott__NetworkProtocolExtension(soap, data, "tt:NetworkProtocolExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkProtocolExtension ** SOAP_FMAC4 soap_get_PointerTott__NetworkProtocolExtension(struct soap*, tt__NetworkProtocolExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkProtocolExtension
#define soap_read_PointerTott__NetworkProtocolExtension(soap, data) ( ((data) ? (soap_default_PointerTott__NetworkProtocolExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__NetworkProtocolExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IPv6ConfigurationExtension
#define SOAP_TYPE_PointerTott__IPv6ConfigurationExtension (1169)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IPv6ConfigurationExtension(struct soap*, tt__IPv6ConfigurationExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IPv6ConfigurationExtension(struct soap*, const char *, int, tt__IPv6ConfigurationExtension *const*, const char *);
SOAP_FMAC3 tt__IPv6ConfigurationExtension ** SOAP_FMAC4 soap_in_PointerTott__IPv6ConfigurationExtension(struct soap*, const char*, tt__IPv6ConfigurationExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IPv6ConfigurationExtension(struct soap*, tt__IPv6ConfigurationExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IPv6ConfigurationExtension
#define soap_write_PointerTott__IPv6ConfigurationExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IPv6ConfigurationExtension(soap, data), 0) || soap_put_PointerTott__IPv6ConfigurationExtension(soap, data, "tt:IPv6ConfigurationExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPv6ConfigurationExtension ** SOAP_FMAC4 soap_get_PointerTott__IPv6ConfigurationExtension(struct soap*, tt__IPv6ConfigurationExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__IPv6ConfigurationExtension
#define soap_read_PointerTott__IPv6ConfigurationExtension(soap, data) ( ((data) ? (soap_default_PointerTott__IPv6ConfigurationExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__IPv6ConfigurationExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PrefixedIPv6Address
#define SOAP_TYPE_PointerTott__PrefixedIPv6Address (1167)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PrefixedIPv6Address(struct soap*, tt__PrefixedIPv6Address *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PrefixedIPv6Address(struct soap*, const char *, int, tt__PrefixedIPv6Address *const*, const char *);
SOAP_FMAC3 tt__PrefixedIPv6Address ** SOAP_FMAC4 soap_in_PointerTott__PrefixedIPv6Address(struct soap*, const char*, tt__PrefixedIPv6Address **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PrefixedIPv6Address(struct soap*, tt__PrefixedIPv6Address *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PrefixedIPv6Address
#define soap_write_PointerTott__PrefixedIPv6Address(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PrefixedIPv6Address(soap, data), 0) || soap_put_PointerTott__PrefixedIPv6Address(soap, data, "tt:PrefixedIPv6Address", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PrefixedIPv6Address ** SOAP_FMAC4 soap_get_PointerTott__PrefixedIPv6Address(struct soap*, tt__PrefixedIPv6Address **, const char*, const char*);

#ifndef soap_read_PointerTott__PrefixedIPv6Address
#define soap_read_PointerTott__PrefixedIPv6Address(soap, data) ( ((data) ? (soap_default_PointerTott__PrefixedIPv6Address(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PrefixedIPv6Address(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PrefixedIPv4Address
#define SOAP_TYPE_PointerTott__PrefixedIPv4Address (1165)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PrefixedIPv4Address(struct soap*, tt__PrefixedIPv4Address *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PrefixedIPv4Address(struct soap*, const char *, int, tt__PrefixedIPv4Address *const*, const char *);
SOAP_FMAC3 tt__PrefixedIPv4Address ** SOAP_FMAC4 soap_in_PointerTott__PrefixedIPv4Address(struct soap*, const char*, tt__PrefixedIPv4Address **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PrefixedIPv4Address(struct soap*, tt__PrefixedIPv4Address *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PrefixedIPv4Address
#define soap_write_PointerTott__PrefixedIPv4Address(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PrefixedIPv4Address(soap, data), 0) || soap_put_PointerTott__PrefixedIPv4Address(soap, data, "tt:PrefixedIPv4Address", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PrefixedIPv4Address ** SOAP_FMAC4 soap_get_PointerTott__PrefixedIPv4Address(struct soap*, tt__PrefixedIPv4Address **, const char*, const char*);

#ifndef soap_read_PointerTott__PrefixedIPv4Address
#define soap_read_PointerTott__PrefixedIPv4Address(soap, data) ( ((data) ? (soap_default_PointerTott__PrefixedIPv4Address(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PrefixedIPv4Address(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IPv4Configuration
#define SOAP_TYPE_PointerTott__IPv4Configuration (1164)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IPv4Configuration(struct soap*, tt__IPv4Configuration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IPv4Configuration(struct soap*, const char *, int, tt__IPv4Configuration *const*, const char *);
SOAP_FMAC3 tt__IPv4Configuration ** SOAP_FMAC4 soap_in_PointerTott__IPv4Configuration(struct soap*, const char*, tt__IPv4Configuration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IPv4Configuration(struct soap*, tt__IPv4Configuration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IPv4Configuration
#define soap_write_PointerTott__IPv4Configuration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IPv4Configuration(soap, data), 0) || soap_put_PointerTott__IPv4Configuration(soap, data, "tt:IPv4Configuration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPv4Configuration ** SOAP_FMAC4 soap_get_PointerTott__IPv4Configuration(struct soap*, tt__IPv4Configuration **, const char*, const char*);

#ifndef soap_read_PointerTott__IPv4Configuration
#define soap_read_PointerTott__IPv4Configuration(soap, data) ( ((data) ? (soap_default_PointerTott__IPv4Configuration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__IPv4Configuration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IPv6Configuration
#define SOAP_TYPE_PointerTott__IPv6Configuration (1163)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IPv6Configuration(struct soap*, tt__IPv6Configuration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IPv6Configuration(struct soap*, const char *, int, tt__IPv6Configuration *const*, const char *);
SOAP_FMAC3 tt__IPv6Configuration ** SOAP_FMAC4 soap_in_PointerTott__IPv6Configuration(struct soap*, const char*, tt__IPv6Configuration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IPv6Configuration(struct soap*, tt__IPv6Configuration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IPv6Configuration
#define soap_write_PointerTott__IPv6Configuration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IPv6Configuration(soap, data), 0) || soap_put_PointerTott__IPv6Configuration(soap, data, "tt:IPv6Configuration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPv6Configuration ** SOAP_FMAC4 soap_get_PointerTott__IPv6Configuration(struct soap*, tt__IPv6Configuration **, const char*, const char*);

#ifndef soap_read_PointerTott__IPv6Configuration
#define soap_read_PointerTott__IPv6Configuration(soap, data) ( ((data) ? (soap_default_PointerTott__IPv6Configuration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__IPv6Configuration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkInterfaceConnectionSetting
#define SOAP_TYPE_PointerTott__NetworkInterfaceConnectionSetting (1162)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkInterfaceConnectionSetting(struct soap*, tt__NetworkInterfaceConnectionSetting *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkInterfaceConnectionSetting(struct soap*, const char *, int, tt__NetworkInterfaceConnectionSetting *const*, const char *);
SOAP_FMAC3 tt__NetworkInterfaceConnectionSetting ** SOAP_FMAC4 soap_in_PointerTott__NetworkInterfaceConnectionSetting(struct soap*, const char*, tt__NetworkInterfaceConnectionSetting **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkInterfaceConnectionSetting(struct soap*, tt__NetworkInterfaceConnectionSetting *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkInterfaceConnectionSetting
#define soap_write_PointerTott__NetworkInterfaceConnectionSetting(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkInterfaceConnectionSetting(soap, data), 0) || soap_put_PointerTott__NetworkInterfaceConnectionSetting(soap, data, "tt:NetworkInterfaceConnectionSetting", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceConnectionSetting ** SOAP_FMAC4 soap_get_PointerTott__NetworkInterfaceConnectionSetting(struct soap*, tt__NetworkInterfaceConnectionSetting **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkInterfaceConnectionSetting
#define soap_read_PointerTott__NetworkInterfaceConnectionSetting(soap, data) ( ((data) ? (soap_default_PointerTott__NetworkInterfaceConnectionSetting(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__NetworkInterfaceConnectionSetting(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkInterfaceExtension2
#define SOAP_TYPE_PointerTott__NetworkInterfaceExtension2 (1161)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkInterfaceExtension2(struct soap*, tt__NetworkInterfaceExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkInterfaceExtension2(struct soap*, const char *, int, tt__NetworkInterfaceExtension2 *const*, const char *);
SOAP_FMAC3 tt__NetworkInterfaceExtension2 ** SOAP_FMAC4 soap_in_PointerTott__NetworkInterfaceExtension2(struct soap*, const char*, tt__NetworkInterfaceExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkInterfaceExtension2(struct soap*, tt__NetworkInterfaceExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkInterfaceExtension2
#define soap_write_PointerTott__NetworkInterfaceExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkInterfaceExtension2(soap, data), 0) || soap_put_PointerTott__NetworkInterfaceExtension2(soap, data, "tt:NetworkInterfaceExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceExtension2 ** SOAP_FMAC4 soap_get_PointerTott__NetworkInterfaceExtension2(struct soap*, tt__NetworkInterfaceExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkInterfaceExtension2
#define soap_read_PointerTott__NetworkInterfaceExtension2(soap, data) ( ((data) ? (soap_default_PointerTott__NetworkInterfaceExtension2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__NetworkInterfaceExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot11Configuration
#define SOAP_TYPE_PointerTott__Dot11Configuration (1159)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot11Configuration(struct soap*, tt__Dot11Configuration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot11Configuration(struct soap*, const char *, int, tt__Dot11Configuration *const*, const char *);
SOAP_FMAC3 tt__Dot11Configuration ** SOAP_FMAC4 soap_in_PointerTott__Dot11Configuration(struct soap*, const char*, tt__Dot11Configuration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot11Configuration(struct soap*, tt__Dot11Configuration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot11Configuration
#define soap_write_PointerTott__Dot11Configuration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot11Configuration(soap, data), 0) || soap_put_PointerTott__Dot11Configuration(soap, data, "tt:Dot11Configuration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11Configuration ** SOAP_FMAC4 soap_get_PointerTott__Dot11Configuration(struct soap*, tt__Dot11Configuration **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot11Configuration
#define soap_read_PointerTott__Dot11Configuration(soap, data) ( ((data) ? (soap_default_PointerTott__Dot11Configuration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Dot11Configuration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot3Configuration
#define SOAP_TYPE_PointerTott__Dot3Configuration (1157)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot3Configuration(struct soap*, tt__Dot3Configuration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot3Configuration(struct soap*, const char *, int, tt__Dot3Configuration *const*, const char *);
SOAP_FMAC3 tt__Dot3Configuration ** SOAP_FMAC4 soap_in_PointerTott__Dot3Configuration(struct soap*, const char*, tt__Dot3Configuration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot3Configuration(struct soap*, tt__Dot3Configuration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot3Configuration
#define soap_write_PointerTott__Dot3Configuration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot3Configuration(soap, data), 0) || soap_put_PointerTott__Dot3Configuration(soap, data, "tt:Dot3Configuration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot3Configuration ** SOAP_FMAC4 soap_get_PointerTott__Dot3Configuration(struct soap*, tt__Dot3Configuration **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot3Configuration
#define soap_read_PointerTott__Dot3Configuration(soap, data) ( ((data) ? (soap_default_PointerTott__Dot3Configuration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Dot3Configuration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Transport
#define SOAP_TYPE_PointerTott__Transport (1156)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Transport(struct soap*, tt__Transport *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Transport(struct soap*, const char *, int, tt__Transport *const*, const char *);
SOAP_FMAC3 tt__Transport ** SOAP_FMAC4 soap_in_PointerTott__Transport(struct soap*, const char*, tt__Transport **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Transport(struct soap*, tt__Transport *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Transport
#define soap_write_PointerTott__Transport(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Transport(soap, data), 0) || soap_put_PointerTott__Transport(soap, data, "tt:Transport", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Transport ** SOAP_FMAC4 soap_get_PointerTott__Transport(struct soap*, tt__Transport **, const char*, const char*);

#ifndef soap_read_PointerTott__Transport
#define soap_read_PointerTott__Transport(soap, data) ( ((data) ? (soap_default_PointerTott__Transport(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Transport(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AudioDecoderConfigurationOptionsExtension
#define SOAP_TYPE_PointerTott__AudioDecoderConfigurationOptionsExtension (1155)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AudioDecoderConfigurationOptionsExtension(struct soap*, tt__AudioDecoderConfigurationOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AudioDecoderConfigurationOptionsExtension(struct soap*, const char *, int, tt__AudioDecoderConfigurationOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__AudioDecoderConfigurationOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__AudioDecoderConfigurationOptionsExtension(struct soap*, const char*, tt__AudioDecoderConfigurationOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AudioDecoderConfigurationOptionsExtension(struct soap*, tt__AudioDecoderConfigurationOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AudioDecoderConfigurationOptionsExtension
#define soap_write_PointerTott__AudioDecoderConfigurationOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AudioDecoderConfigurationOptionsExtension(soap, data), 0) || soap_put_PointerTott__AudioDecoderConfigurationOptionsExtension(soap, data, "tt:AudioDecoderConfigurationOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioDecoderConfigurationOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__AudioDecoderConfigurationOptionsExtension(struct soap*, tt__AudioDecoderConfigurationOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__AudioDecoderConfigurationOptionsExtension
#define soap_read_PointerTott__AudioDecoderConfigurationOptionsExtension(soap, data) ( ((data) ? (soap_default_PointerTott__AudioDecoderConfigurationOptionsExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__AudioDecoderConfigurationOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__G726DecOptions
#define SOAP_TYPE_PointerTott__G726DecOptions (1154)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__G726DecOptions(struct soap*, tt__G726DecOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__G726DecOptions(struct soap*, const char *, int, tt__G726DecOptions *const*, const char *);
SOAP_FMAC3 tt__G726DecOptions ** SOAP_FMAC4 soap_in_PointerTott__G726DecOptions(struct soap*, const char*, tt__G726DecOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__G726DecOptions(struct soap*, tt__G726DecOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__G726DecOptions
#define soap_write_PointerTott__G726DecOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__G726DecOptions(soap, data), 0) || soap_put_PointerTott__G726DecOptions(soap, data, "tt:G726DecOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__G726DecOptions ** SOAP_FMAC4 soap_get_PointerTott__G726DecOptions(struct soap*, tt__G726DecOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__G726DecOptions
#define soap_read_PointerTott__G726DecOptions(soap, data) ( ((data) ? (soap_default_PointerTott__G726DecOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__G726DecOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__G711DecOptions
#define SOAP_TYPE_PointerTott__G711DecOptions (1153)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__G711DecOptions(struct soap*, tt__G711DecOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__G711DecOptions(struct soap*, const char *, int, tt__G711DecOptions *const*, const char *);
SOAP_FMAC3 tt__G711DecOptions ** SOAP_FMAC4 soap_in_PointerTott__G711DecOptions(struct soap*, const char*, tt__G711DecOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__G711DecOptions(struct soap*, tt__G711DecOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__G711DecOptions
#define soap_write_PointerTott__G711DecOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__G711DecOptions(soap, data), 0) || soap_put_PointerTott__G711DecOptions(soap, data, "tt:G711DecOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__G711DecOptions ** SOAP_FMAC4 soap_get_PointerTott__G711DecOptions(struct soap*, tt__G711DecOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__G711DecOptions
#define soap_read_PointerTott__G711DecOptions(soap, data) ( ((data) ? (soap_default_PointerTott__G711DecOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__G711DecOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AACDecOptions
#define SOAP_TYPE_PointerTott__AACDecOptions (1152)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AACDecOptions(struct soap*, tt__AACDecOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AACDecOptions(struct soap*, const char *, int, tt__AACDecOptions *const*, const char *);
SOAP_FMAC3 tt__AACDecOptions ** SOAP_FMAC4 soap_in_PointerTott__AACDecOptions(struct soap*, const char*, tt__AACDecOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AACDecOptions(struct soap*, tt__AACDecOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AACDecOptions
#define soap_write_PointerTott__AACDecOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AACDecOptions(soap, data), 0) || soap_put_PointerTott__AACDecOptions(soap, data, "tt:AACDecOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AACDecOptions ** SOAP_FMAC4 soap_get_PointerTott__AACDecOptions(struct soap*, tt__AACDecOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__AACDecOptions
#define soap_read_PointerTott__AACDecOptions(soap, data) ( ((data) ? (soap_default_PointerTott__AACDecOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__AACDecOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoDecoderConfigurationOptionsExtension
#define SOAP_TYPE_PointerTott__VideoDecoderConfigurationOptionsExtension (1151)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoDecoderConfigurationOptionsExtension(struct soap*, tt__VideoDecoderConfigurationOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoDecoderConfigurationOptionsExtension(struct soap*, const char *, int, tt__VideoDecoderConfigurationOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__VideoDecoderConfigurationOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__VideoDecoderConfigurationOptionsExtension(struct soap*, const char*, tt__VideoDecoderConfigurationOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoDecoderConfigurationOptionsExtension(struct soap*, tt__VideoDecoderConfigurationOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoDecoderConfigurationOptionsExtension
#define soap_write_PointerTott__VideoDecoderConfigurationOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoDecoderConfigurationOptionsExtension(soap, data), 0) || soap_put_PointerTott__VideoDecoderConfigurationOptionsExtension(soap, data, "tt:VideoDecoderConfigurationOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoDecoderConfigurationOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__VideoDecoderConfigurationOptionsExtension(struct soap*, tt__VideoDecoderConfigurationOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoDecoderConfigurationOptionsExtension
#define soap_read_PointerTott__VideoDecoderConfigurationOptionsExtension(soap, data) ( ((data) ? (soap_default_PointerTott__VideoDecoderConfigurationOptionsExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__VideoDecoderConfigurationOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Mpeg4DecOptions
#define SOAP_TYPE_PointerTott__Mpeg4DecOptions (1150)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Mpeg4DecOptions(struct soap*, tt__Mpeg4DecOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Mpeg4DecOptions(struct soap*, const char *, int, tt__Mpeg4DecOptions *const*, const char *);
SOAP_FMAC3 tt__Mpeg4DecOptions ** SOAP_FMAC4 soap_in_PointerTott__Mpeg4DecOptions(struct soap*, const char*, tt__Mpeg4DecOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Mpeg4DecOptions(struct soap*, tt__Mpeg4DecOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Mpeg4DecOptions
#define soap_write_PointerTott__Mpeg4DecOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Mpeg4DecOptions(soap, data), 0) || soap_put_PointerTott__Mpeg4DecOptions(soap, data, "tt:Mpeg4DecOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Mpeg4DecOptions ** SOAP_FMAC4 soap_get_PointerTott__Mpeg4DecOptions(struct soap*, tt__Mpeg4DecOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__Mpeg4DecOptions
#define soap_read_PointerTott__Mpeg4DecOptions(soap, data) ( ((data) ? (soap_default_PointerTott__Mpeg4DecOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Mpeg4DecOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__H264DecOptions
#define SOAP_TYPE_PointerTott__H264DecOptions (1149)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__H264DecOptions(struct soap*, tt__H264DecOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__H264DecOptions(struct soap*, const char *, int, tt__H264DecOptions *const*, const char *);
SOAP_FMAC3 tt__H264DecOptions ** SOAP_FMAC4 soap_in_PointerTott__H264DecOptions(struct soap*, const char*, tt__H264DecOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__H264DecOptions(struct soap*, tt__H264DecOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__H264DecOptions
#define soap_write_PointerTott__H264DecOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__H264DecOptions(soap, data), 0) || soap_put_PointerTott__H264DecOptions(soap, data, "tt:H264DecOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__H264DecOptions ** SOAP_FMAC4 soap_get_PointerTott__H264DecOptions(struct soap*, tt__H264DecOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__H264DecOptions
#define soap_read_PointerTott__H264DecOptions(soap, data) ( ((data) ? (soap_default_PointerTott__H264DecOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__H264DecOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__JpegDecOptions
#define SOAP_TYPE_PointerTott__JpegDecOptions (1148)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__JpegDecOptions(struct soap*, tt__JpegDecOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__JpegDecOptions(struct soap*, const char *, int, tt__JpegDecOptions *const*, const char *);
SOAP_FMAC3 tt__JpegDecOptions ** SOAP_FMAC4 soap_in_PointerTott__JpegDecOptions(struct soap*, const char*, tt__JpegDecOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__JpegDecOptions(struct soap*, tt__JpegDecOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__JpegDecOptions
#define soap_write_PointerTott__JpegDecOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__JpegDecOptions(soap, data), 0) || soap_put_PointerTott__JpegDecOptions(soap, data, "tt:JpegDecOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__JpegDecOptions ** SOAP_FMAC4 soap_get_PointerTott__JpegDecOptions(struct soap*, tt__JpegDecOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__JpegDecOptions
#define soap_read_PointerTott__JpegDecOptions(soap, data) ( ((data) ? (soap_default_PointerTott__JpegDecOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__JpegDecOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZStatusFilterOptionsExtension
#define SOAP_TYPE_PointerTott__PTZStatusFilterOptionsExtension (1147)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZStatusFilterOptionsExtension(struct soap*, tt__PTZStatusFilterOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZStatusFilterOptionsExtension(struct soap*, const char *, int, tt__PTZStatusFilterOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__PTZStatusFilterOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__PTZStatusFilterOptionsExtension(struct soap*, const char*, tt__PTZStatusFilterOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZStatusFilterOptionsExtension(struct soap*, tt__PTZStatusFilterOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZStatusFilterOptionsExtension
#define soap_write_PointerTott__PTZStatusFilterOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZStatusFilterOptionsExtension(soap, data), 0) || soap_put_PointerTott__PTZStatusFilterOptionsExtension(soap, data, "tt:PTZStatusFilterOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZStatusFilterOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__PTZStatusFilterOptionsExtension(struct soap*, tt__PTZStatusFilterOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZStatusFilterOptionsExtension
#define soap_read_PointerTott__PTZStatusFilterOptionsExtension(soap, data) ( ((data) ? (soap_default_PointerTott__PTZStatusFilterOptionsExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZStatusFilterOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MetadataConfigurationOptionsExtension2
#define SOAP_TYPE_PointerTott__MetadataConfigurationOptionsExtension2 (1146)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MetadataConfigurationOptionsExtension2(struct soap*, tt__MetadataConfigurationOptionsExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MetadataConfigurationOptionsExtension2(struct soap*, const char *, int, tt__MetadataConfigurationOptionsExtension2 *const*, const char *);
SOAP_FMAC3 tt__MetadataConfigurationOptionsExtension2 ** SOAP_FMAC4 soap_in_PointerTott__MetadataConfigurationOptionsExtension2(struct soap*, const char*, tt__MetadataConfigurationOptionsExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MetadataConfigurationOptionsExtension2(struct soap*, tt__MetadataConfigurationOptionsExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MetadataConfigurationOptionsExtension2
#define soap_write_PointerTott__MetadataConfigurationOptionsExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MetadataConfigurationOptionsExtension2(soap, data), 0) || soap_put_PointerTott__MetadataConfigurationOptionsExtension2(soap, data, "tt:MetadataConfigurationOptionsExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataConfigurationOptionsExtension2 ** SOAP_FMAC4 soap_get_PointerTott__MetadataConfigurationOptionsExtension2(struct soap*, tt__MetadataConfigurationOptionsExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__MetadataConfigurationOptionsExtension2
#define soap_read_PointerTott__MetadataConfigurationOptionsExtension2(soap, data) ( ((data) ? (soap_default_PointerTott__MetadataConfigurationOptionsExtension2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__MetadataConfigurationOptionsExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MetadataConfigurationOptionsExtension
#define SOAP_TYPE_PointerTott__MetadataConfigurationOptionsExtension (1145)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MetadataConfigurationOptionsExtension(struct soap*, tt__MetadataConfigurationOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MetadataConfigurationOptionsExtension(struct soap*, const char *, int, tt__MetadataConfigurationOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__MetadataConfigurationOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__MetadataConfigurationOptionsExtension(struct soap*, const char*, tt__MetadataConfigurationOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MetadataConfigurationOptionsExtension(struct soap*, tt__MetadataConfigurationOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MetadataConfigurationOptionsExtension
#define soap_write_PointerTott__MetadataConfigurationOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MetadataConfigurationOptionsExtension(soap, data), 0) || soap_put_PointerTott__MetadataConfigurationOptionsExtension(soap, data, "tt:MetadataConfigurationOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataConfigurationOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__MetadataConfigurationOptionsExtension(struct soap*, tt__MetadataConfigurationOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__MetadataConfigurationOptionsExtension
#define soap_read_PointerTott__MetadataConfigurationOptionsExtension(soap, data) ( ((data) ? (soap_default_PointerTott__MetadataConfigurationOptionsExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__MetadataConfigurationOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZStatusFilterOptions
#define SOAP_TYPE_PointerTott__PTZStatusFilterOptions (1144)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZStatusFilterOptions(struct soap*, tt__PTZStatusFilterOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZStatusFilterOptions(struct soap*, const char *, int, tt__PTZStatusFilterOptions *const*, const char *);
SOAP_FMAC3 tt__PTZStatusFilterOptions ** SOAP_FMAC4 soap_in_PointerTott__PTZStatusFilterOptions(struct soap*, const char*, tt__PTZStatusFilterOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZStatusFilterOptions(struct soap*, tt__PTZStatusFilterOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZStatusFilterOptions
#define soap_write_PointerTott__PTZStatusFilterOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZStatusFilterOptions(soap, data), 0) || soap_put_PointerTott__PTZStatusFilterOptions(soap, data, "tt:PTZStatusFilterOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZStatusFilterOptions ** SOAP_FMAC4 soap_get_PointerTott__PTZStatusFilterOptions(struct soap*, tt__PTZStatusFilterOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZStatusFilterOptions
#define soap_read_PointerTott__PTZStatusFilterOptions(soap, data) ( ((data) ? (soap_default_PointerTott__PTZStatusFilterOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZStatusFilterOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tt__EventSubscription_SubscriptionPolicy
#define SOAP_TYPE_PointerTo_tt__EventSubscription_SubscriptionPolicy (1143)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tt__EventSubscription_SubscriptionPolicy(struct soap*, _tt__EventSubscription_SubscriptionPolicy *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tt__EventSubscription_SubscriptionPolicy(struct soap*, const char *, int, _tt__EventSubscription_SubscriptionPolicy *const*, const char *);
SOAP_FMAC3 _tt__EventSubscription_SubscriptionPolicy ** SOAP_FMAC4 soap_in_PointerTo_tt__EventSubscription_SubscriptionPolicy(struct soap*, const char*, _tt__EventSubscription_SubscriptionPolicy **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tt__EventSubscription_SubscriptionPolicy(struct soap*, _tt__EventSubscription_SubscriptionPolicy *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tt__EventSubscription_SubscriptionPolicy
#define soap_write_PointerTo_tt__EventSubscription_SubscriptionPolicy(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tt__EventSubscription_SubscriptionPolicy(soap, data), 0) || soap_put_PointerTo_tt__EventSubscription_SubscriptionPolicy(soap, data, "tt:EventSubscription-SubscriptionPolicy", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tt__EventSubscription_SubscriptionPolicy ** SOAP_FMAC4 soap_get_PointerTo_tt__EventSubscription_SubscriptionPolicy(struct soap*, _tt__EventSubscription_SubscriptionPolicy **, const char*, const char*);

#ifndef soap_read_PointerTo_tt__EventSubscription_SubscriptionPolicy
#define soap_read_PointerTo_tt__EventSubscription_SubscriptionPolicy(soap, data) ( ((data) ? (soap_default_PointerTo_tt__EventSubscription_SubscriptionPolicy(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tt__EventSubscription_SubscriptionPolicy(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowsnt__FilterType
#define SOAP_TYPE_PointerTowsnt__FilterType (1141)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsnt__FilterType(struct soap*, wsnt__FilterType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsnt__FilterType(struct soap*, const char *, int, wsnt__FilterType *const*, const char *);
SOAP_FMAC3 wsnt__FilterType ** SOAP_FMAC4 soap_in_PointerTowsnt__FilterType(struct soap*, const char*, wsnt__FilterType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsnt__FilterType(struct soap*, wsnt__FilterType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsnt__FilterType
#define soap_write_PointerTowsnt__FilterType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsnt__FilterType(soap, data), 0) || soap_put_PointerTowsnt__FilterType(soap, data, "wsnt:FilterType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wsnt__FilterType ** SOAP_FMAC4 soap_get_PointerTowsnt__FilterType(struct soap*, wsnt__FilterType **, const char*, const char*);

#ifndef soap_read_PointerTowsnt__FilterType
#define soap_read_PointerTowsnt__FilterType(soap, data) ( ((data) ? (soap_default_PointerTowsnt__FilterType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTowsnt__FilterType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AudioEncoderConfigurationOption
#define SOAP_TYPE_PointerTott__AudioEncoderConfigurationOption (1139)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AudioEncoderConfigurationOption(struct soap*, tt__AudioEncoderConfigurationOption *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AudioEncoderConfigurationOption(struct soap*, const char *, int, tt__AudioEncoderConfigurationOption *const*, const char *);
SOAP_FMAC3 tt__AudioEncoderConfigurationOption ** SOAP_FMAC4 soap_in_PointerTott__AudioEncoderConfigurationOption(struct soap*, const char*, tt__AudioEncoderConfigurationOption **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AudioEncoderConfigurationOption(struct soap*, tt__AudioEncoderConfigurationOption *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AudioEncoderConfigurationOption
#define soap_write_PointerTott__AudioEncoderConfigurationOption(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AudioEncoderConfigurationOption(soap, data), 0) || soap_put_PointerTott__AudioEncoderConfigurationOption(soap, data, "tt:AudioEncoderConfigurationOption", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioEncoderConfigurationOption ** SOAP_FMAC4 soap_get_PointerTott__AudioEncoderConfigurationOption(struct soap*, tt__AudioEncoderConfigurationOption **, const char*, const char*);

#ifndef soap_read_PointerTott__AudioEncoderConfigurationOption
#define soap_read_PointerTott__AudioEncoderConfigurationOption(soap, data) ( ((data) ? (soap_default_PointerTott__AudioEncoderConfigurationOption(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__AudioEncoderConfigurationOption(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AudioSourceOptionsExtension
#define SOAP_TYPE_PointerTott__AudioSourceOptionsExtension (1138)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AudioSourceOptionsExtension(struct soap*, tt__AudioSourceOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AudioSourceOptionsExtension(struct soap*, const char *, int, tt__AudioSourceOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__AudioSourceOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__AudioSourceOptionsExtension(struct soap*, const char*, tt__AudioSourceOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AudioSourceOptionsExtension(struct soap*, tt__AudioSourceOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AudioSourceOptionsExtension
#define soap_write_PointerTott__AudioSourceOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AudioSourceOptionsExtension(soap, data), 0) || soap_put_PointerTott__AudioSourceOptionsExtension(soap, data, "tt:AudioSourceOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioSourceOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__AudioSourceOptionsExtension(struct soap*, tt__AudioSourceOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__AudioSourceOptionsExtension
#define soap_read_PointerTott__AudioSourceOptionsExtension(soap, data) ( ((data) ? (soap_default_PointerTott__AudioSourceOptionsExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__AudioSourceOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FloatAttrList
#define SOAP_TYPE_PointerTott__FloatAttrList (1137)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FloatAttrList(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FloatAttrList(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTott__FloatAttrList(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FloatAttrList(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FloatAttrList
#define soap_write_PointerTott__FloatAttrList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FloatAttrList(soap, data), 0) || soap_put_PointerTott__FloatAttrList(soap, data, "tt:FloatAttrList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTott__FloatAttrList(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTott__FloatAttrList
#define soap_read_PointerTott__FloatAttrList(soap, data) ( ((data) ? (soap_default_PointerTott__FloatAttrList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__FloatAttrList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IntAttrList
#define SOAP_TYPE_PointerTott__IntAttrList (1136)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IntAttrList(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IntAttrList(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTott__IntAttrList(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IntAttrList(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IntAttrList
#define soap_write_PointerTott__IntAttrList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IntAttrList(soap, data), 0) || soap_put_PointerTott__IntAttrList(soap, data, "tt:IntAttrList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTott__IntAttrList(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTott__IntAttrList
#define soap_read_PointerTott__IntAttrList(soap, data) ( ((data) ? (soap_default_PointerTott__IntAttrList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__IntAttrList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoResolution2
#define SOAP_TYPE_PointerTott__VideoResolution2 (1134)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoResolution2(struct soap*, tt__VideoResolution2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoResolution2(struct soap*, const char *, int, tt__VideoResolution2 *const*, const char *);
SOAP_FMAC3 tt__VideoResolution2 ** SOAP_FMAC4 soap_in_PointerTott__VideoResolution2(struct soap*, const char*, tt__VideoResolution2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoResolution2(struct soap*, tt__VideoResolution2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoResolution2
#define soap_write_PointerTott__VideoResolution2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoResolution2(soap, data), 0) || soap_put_PointerTott__VideoResolution2(soap, data, "tt:VideoResolution2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoResolution2 ** SOAP_FMAC4 soap_get_PointerTott__VideoResolution2(struct soap*, tt__VideoResolution2 **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoResolution2
#define soap_read_PointerTott__VideoResolution2(soap, data) ( ((data) ? (soap_default_PointerTott__VideoResolution2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__VideoResolution2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FloatRange
#define SOAP_TYPE_PointerTott__FloatRange (1133)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FloatRange(struct soap*, tt__FloatRange *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FloatRange(struct soap*, const char *, int, tt__FloatRange *const*, const char *);
SOAP_FMAC3 tt__FloatRange ** SOAP_FMAC4 soap_in_PointerTott__FloatRange(struct soap*, const char*, tt__FloatRange **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FloatRange(struct soap*, tt__FloatRange *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FloatRange
#define soap_write_PointerTott__FloatRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FloatRange(soap, data), 0) || soap_put_PointerTott__FloatRange(soap, data, "tt:FloatRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FloatRange ** SOAP_FMAC4 soap_get_PointerTott__FloatRange(struct soap*, tt__FloatRange **, const char*, const char*);

#ifndef soap_read_PointerTott__FloatRange
#define soap_read_PointerTott__FloatRange(soap, data) ( ((data) ? (soap_default_PointerTott__FloatRange(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__FloatRange(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoResolution
#define SOAP_TYPE_PointerTott__VideoResolution (1129)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoResolution(struct soap*, tt__VideoResolution *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoResolution(struct soap*, const char *, int, tt__VideoResolution *const*, const char *);
SOAP_FMAC3 tt__VideoResolution ** SOAP_FMAC4 soap_in_PointerTott__VideoResolution(struct soap*, const char*, tt__VideoResolution **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoResolution(struct soap*, tt__VideoResolution *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoResolution
#define soap_write_PointerTott__VideoResolution(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoResolution(soap, data), 0) || soap_put_PointerTott__VideoResolution(soap, data, "tt:VideoResolution", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoResolution ** SOAP_FMAC4 soap_get_PointerTott__VideoResolution(struct soap*, tt__VideoResolution **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoResolution
#define soap_read_PointerTott__VideoResolution(soap, data) ( ((data) ? (soap_default_PointerTott__VideoResolution(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__VideoResolution(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoEncoderOptionsExtension2
#define SOAP_TYPE_PointerTott__VideoEncoderOptionsExtension2 (1128)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoEncoderOptionsExtension2(struct soap*, tt__VideoEncoderOptionsExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoEncoderOptionsExtension2(struct soap*, const char *, int, tt__VideoEncoderOptionsExtension2 *const*, const char *);
SOAP_FMAC3 tt__VideoEncoderOptionsExtension2 ** SOAP_FMAC4 soap_in_PointerTott__VideoEncoderOptionsExtension2(struct soap*, const char*, tt__VideoEncoderOptionsExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoEncoderOptionsExtension2(struct soap*, tt__VideoEncoderOptionsExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoEncoderOptionsExtension2
#define soap_write_PointerTott__VideoEncoderOptionsExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoEncoderOptionsExtension2(soap, data), 0) || soap_put_PointerTott__VideoEncoderOptionsExtension2(soap, data, "tt:VideoEncoderOptionsExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoEncoderOptionsExtension2 ** SOAP_FMAC4 soap_get_PointerTott__VideoEncoderOptionsExtension2(struct soap*, tt__VideoEncoderOptionsExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoEncoderOptionsExtension2
#define soap_read_PointerTott__VideoEncoderOptionsExtension2(soap, data) ( ((data) ? (soap_default_PointerTott__VideoEncoderOptionsExtension2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__VideoEncoderOptionsExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__H264Options2
#define SOAP_TYPE_PointerTott__H264Options2 (1127)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__H264Options2(struct soap*, tt__H264Options2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__H264Options2(struct soap*, const char *, int, tt__H264Options2 *const*, const char *);
SOAP_FMAC3 tt__H264Options2 ** SOAP_FMAC4 soap_in_PointerTott__H264Options2(struct soap*, const char*, tt__H264Options2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__H264Options2(struct soap*, tt__H264Options2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__H264Options2
#define soap_write_PointerTott__H264Options2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__H264Options2(soap, data), 0) || soap_put_PointerTott__H264Options2(soap, data, "tt:H264Options2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__H264Options2 ** SOAP_FMAC4 soap_get_PointerTott__H264Options2(struct soap*, tt__H264Options2 **, const char*, const char*);

#ifndef soap_read_PointerTott__H264Options2
#define soap_read_PointerTott__H264Options2(soap, data) ( ((data) ? (soap_default_PointerTott__H264Options2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__H264Options2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Mpeg4Options2
#define SOAP_TYPE_PointerTott__Mpeg4Options2 (1126)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Mpeg4Options2(struct soap*, tt__Mpeg4Options2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Mpeg4Options2(struct soap*, const char *, int, tt__Mpeg4Options2 *const*, const char *);
SOAP_FMAC3 tt__Mpeg4Options2 ** SOAP_FMAC4 soap_in_PointerTott__Mpeg4Options2(struct soap*, const char*, tt__Mpeg4Options2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Mpeg4Options2(struct soap*, tt__Mpeg4Options2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Mpeg4Options2
#define soap_write_PointerTott__Mpeg4Options2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Mpeg4Options2(soap, data), 0) || soap_put_PointerTott__Mpeg4Options2(soap, data, "tt:Mpeg4Options2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Mpeg4Options2 ** SOAP_FMAC4 soap_get_PointerTott__Mpeg4Options2(struct soap*, tt__Mpeg4Options2 **, const char*, const char*);

#ifndef soap_read_PointerTott__Mpeg4Options2
#define soap_read_PointerTott__Mpeg4Options2(soap, data) ( ((data) ? (soap_default_PointerTott__Mpeg4Options2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Mpeg4Options2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__JpegOptions2
#define SOAP_TYPE_PointerTott__JpegOptions2 (1125)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__JpegOptions2(struct soap*, tt__JpegOptions2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__JpegOptions2(struct soap*, const char *, int, tt__JpegOptions2 *const*, const char *);
SOAP_FMAC3 tt__JpegOptions2 ** SOAP_FMAC4 soap_in_PointerTott__JpegOptions2(struct soap*, const char*, tt__JpegOptions2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__JpegOptions2(struct soap*, tt__JpegOptions2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__JpegOptions2
#define soap_write_PointerTott__JpegOptions2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__JpegOptions2(soap, data), 0) || soap_put_PointerTott__JpegOptions2(soap, data, "tt:JpegOptions2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__JpegOptions2 ** SOAP_FMAC4 soap_get_PointerTott__JpegOptions2(struct soap*, tt__JpegOptions2 **, const char*, const char*);

#ifndef soap_read_PointerTott__JpegOptions2
#define soap_read_PointerTott__JpegOptions2(soap, data) ( ((data) ? (soap_default_PointerTott__JpegOptions2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__JpegOptions2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoEncoderOptionsExtension
#define SOAP_TYPE_PointerTott__VideoEncoderOptionsExtension (1124)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoEncoderOptionsExtension(struct soap*, tt__VideoEncoderOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoEncoderOptionsExtension(struct soap*, const char *, int, tt__VideoEncoderOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__VideoEncoderOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__VideoEncoderOptionsExtension(struct soap*, const char*, tt__VideoEncoderOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoEncoderOptionsExtension(struct soap*, tt__VideoEncoderOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoEncoderOptionsExtension
#define soap_write_PointerTott__VideoEncoderOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoEncoderOptionsExtension(soap, data), 0) || soap_put_PointerTott__VideoEncoderOptionsExtension(soap, data, "tt:VideoEncoderOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoEncoderOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__VideoEncoderOptionsExtension(struct soap*, tt__VideoEncoderOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoEncoderOptionsExtension
#define soap_read_PointerTott__VideoEncoderOptionsExtension(soap, data) ( ((data) ? (soap_default_PointerTott__VideoEncoderOptionsExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__VideoEncoderOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__H264Options
#define SOAP_TYPE_PointerTott__H264Options (1123)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__H264Options(struct soap*, tt__H264Options *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__H264Options(struct soap*, const char *, int, tt__H264Options *const*, const char *);
SOAP_FMAC3 tt__H264Options ** SOAP_FMAC4 soap_in_PointerTott__H264Options(struct soap*, const char*, tt__H264Options **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__H264Options(struct soap*, tt__H264Options *const*, const char*, const char*);

#ifndef soap_write_PointerTott__H264Options
#define soap_write_PointerTott__H264Options(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__H264Options(soap, data), 0) || soap_put_PointerTott__H264Options(soap, data, "tt:H264Options", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__H264Options ** SOAP_FMAC4 soap_get_PointerTott__H264Options(struct soap*, tt__H264Options **, const char*, const char*);

#ifndef soap_read_PointerTott__H264Options
#define soap_read_PointerTott__H264Options(soap, data) ( ((data) ? (soap_default_PointerTott__H264Options(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__H264Options(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Mpeg4Options
#define SOAP_TYPE_PointerTott__Mpeg4Options (1122)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Mpeg4Options(struct soap*, tt__Mpeg4Options *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Mpeg4Options(struct soap*, const char *, int, tt__Mpeg4Options *const*, const char *);
SOAP_FMAC3 tt__Mpeg4Options ** SOAP_FMAC4 soap_in_PointerTott__Mpeg4Options(struct soap*, const char*, tt__Mpeg4Options **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Mpeg4Options(struct soap*, tt__Mpeg4Options *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Mpeg4Options
#define soap_write_PointerTott__Mpeg4Options(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Mpeg4Options(soap, data), 0) || soap_put_PointerTott__Mpeg4Options(soap, data, "tt:Mpeg4Options", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Mpeg4Options ** SOAP_FMAC4 soap_get_PointerTott__Mpeg4Options(struct soap*, tt__Mpeg4Options **, const char*, const char*);

#ifndef soap_read_PointerTott__Mpeg4Options
#define soap_read_PointerTott__Mpeg4Options(soap, data) ( ((data) ? (soap_default_PointerTott__Mpeg4Options(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Mpeg4Options(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__JpegOptions
#define SOAP_TYPE_PointerTott__JpegOptions (1121)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__JpegOptions(struct soap*, tt__JpegOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__JpegOptions(struct soap*, const char *, int, tt__JpegOptions *const*, const char *);
SOAP_FMAC3 tt__JpegOptions ** SOAP_FMAC4 soap_in_PointerTott__JpegOptions(struct soap*, const char*, tt__JpegOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__JpegOptions(struct soap*, tt__JpegOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__JpegOptions
#define soap_write_PointerTott__JpegOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__JpegOptions(soap, data), 0) || soap_put_PointerTott__JpegOptions(soap, data, "tt:JpegOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__JpegOptions ** SOAP_FMAC4 soap_get_PointerTott__JpegOptions(struct soap*, tt__JpegOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__JpegOptions
#define soap_read_PointerTott__JpegOptions(soap, data) ( ((data) ? (soap_default_PointerTott__JpegOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__JpegOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RotateOptionsExtension
#define SOAP_TYPE_PointerTott__RotateOptionsExtension (1120)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RotateOptionsExtension(struct soap*, tt__RotateOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RotateOptionsExtension(struct soap*, const char *, int, tt__RotateOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__RotateOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__RotateOptionsExtension(struct soap*, const char*, tt__RotateOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RotateOptionsExtension(struct soap*, tt__RotateOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RotateOptionsExtension
#define soap_write_PointerTott__RotateOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RotateOptionsExtension(soap, data), 0) || soap_put_PointerTott__RotateOptionsExtension(soap, data, "tt:RotateOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RotateOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__RotateOptionsExtension(struct soap*, tt__RotateOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__RotateOptionsExtension
#define soap_read_PointerTott__RotateOptionsExtension(soap, data) ( ((data) ? (soap_default_PointerTott__RotateOptionsExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__RotateOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoSourceConfigurationOptionsExtension2
#define SOAP_TYPE_PointerTott__VideoSourceConfigurationOptionsExtension2 (1117)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoSourceConfigurationOptionsExtension2(struct soap*, tt__VideoSourceConfigurationOptionsExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoSourceConfigurationOptionsExtension2(struct soap*, const char *, int, tt__VideoSourceConfigurationOptionsExtension2 *const*, const char *);
SOAP_FMAC3 tt__VideoSourceConfigurationOptionsExtension2 ** SOAP_FMAC4 soap_in_PointerTott__VideoSourceConfigurationOptionsExtension2(struct soap*, const char*, tt__VideoSourceConfigurationOptionsExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoSourceConfigurationOptionsExtension2(struct soap*, tt__VideoSourceConfigurationOptionsExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoSourceConfigurationOptionsExtension2
#define soap_write_PointerTott__VideoSourceConfigurationOptionsExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoSourceConfigurationOptionsExtension2(soap, data), 0) || soap_put_PointerTott__VideoSourceConfigurationOptionsExtension2(soap, data, "tt:VideoSourceConfigurationOptionsExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceConfigurationOptionsExtension2 ** SOAP_FMAC4 soap_get_PointerTott__VideoSourceConfigurationOptionsExtension2(struct soap*, tt__VideoSourceConfigurationOptionsExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoSourceConfigurationOptionsExtension2
#define soap_read_PointerTott__VideoSourceConfigurationOptionsExtension2(soap, data) ( ((data) ? (soap_default_PointerTott__VideoSourceConfigurationOptionsExtension2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__VideoSourceConfigurationOptionsExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RotateOptions
#define SOAP_TYPE_PointerTott__RotateOptions (1116)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RotateOptions(struct soap*, tt__RotateOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RotateOptions(struct soap*, const char *, int, tt__RotateOptions *const*, const char *);
SOAP_FMAC3 tt__RotateOptions ** SOAP_FMAC4 soap_in_PointerTott__RotateOptions(struct soap*, const char*, tt__RotateOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RotateOptions(struct soap*, tt__RotateOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RotateOptions
#define soap_write_PointerTott__RotateOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RotateOptions(soap, data), 0) || soap_put_PointerTott__RotateOptions(soap, data, "tt:RotateOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RotateOptions ** SOAP_FMAC4 soap_get_PointerTott__RotateOptions(struct soap*, tt__RotateOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__RotateOptions
#define soap_read_PointerTott__RotateOptions(soap, data) ( ((data) ? (soap_default_PointerTott__RotateOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__RotateOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoSourceConfigurationOptionsExtension
#define SOAP_TYPE_PointerTott__VideoSourceConfigurationOptionsExtension (1115)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoSourceConfigurationOptionsExtension(struct soap*, tt__VideoSourceConfigurationOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoSourceConfigurationOptionsExtension(struct soap*, const char *, int, tt__VideoSourceConfigurationOptionsExtension *const*, const char *);
SOAP_FMAC3 tt__VideoSourceConfigurationOptionsExtension ** SOAP_FMAC4 soap_in_PointerTott__VideoSourceConfigurationOptionsExtension(struct soap*, const char*, tt__VideoSourceConfigurationOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoSourceConfigurationOptionsExtension(struct soap*, tt__VideoSourceConfigurationOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoSourceConfigurationOptionsExtension
#define soap_write_PointerTott__VideoSourceConfigurationOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoSourceConfigurationOptionsExtension(soap, data), 0) || soap_put_PointerTott__VideoSourceConfigurationOptionsExtension(soap, data, "tt:VideoSourceConfigurationOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceConfigurationOptionsExtension ** SOAP_FMAC4 soap_get_PointerTott__VideoSourceConfigurationOptionsExtension(struct soap*, tt__VideoSourceConfigurationOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoSourceConfigurationOptionsExtension
#define soap_read_PointerTott__VideoSourceConfigurationOptionsExtension(soap, data) ( ((data) ? (soap_default_PointerTott__VideoSourceConfigurationOptionsExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__VideoSourceConfigurationOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IntRectangleRange
#define SOAP_TYPE_PointerTott__IntRectangleRange (1114)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IntRectangleRange(struct soap*, tt__IntRectangleRange *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IntRectangleRange(struct soap*, const char *, int, tt__IntRectangleRange *const*, const char *);
SOAP_FMAC3 tt__IntRectangleRange ** SOAP_FMAC4 soap_in_PointerTott__IntRectangleRange(struct soap*, const char*, tt__IntRectangleRange **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IntRectangleRange(struct soap*, tt__IntRectangleRange *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IntRectangleRange
#define soap_write_PointerTott__IntRectangleRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IntRectangleRange(soap, data), 0) || soap_put_PointerTott__IntRectangleRange(soap, data, "tt:IntRectangleRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IntRectangleRange ** SOAP_FMAC4 soap_get_PointerTott__IntRectangleRange(struct soap*, tt__IntRectangleRange **, const char*, const char*);

#ifndef soap_read_PointerTott__IntRectangleRange
#define soap_read_PointerTott__IntRectangleRange(soap, data) ( ((data) ? (soap_default_PointerTott__IntRectangleRange(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__IntRectangleRange(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__LensProjection
#define SOAP_TYPE_PointerTott__LensProjection (1112)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__LensProjection(struct soap*, tt__LensProjection *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__LensProjection(struct soap*, const char *, int, tt__LensProjection *const*, const char *);
SOAP_FMAC3 tt__LensProjection ** SOAP_FMAC4 soap_in_PointerTott__LensProjection(struct soap*, const char*, tt__LensProjection **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__LensProjection(struct soap*, tt__LensProjection *const*, const char*, const char*);

#ifndef soap_write_PointerTott__LensProjection
#define soap_write_PointerTott__LensProjection(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__LensProjection(soap, data), 0) || soap_put_PointerTott__LensProjection(soap, data, "tt:LensProjection", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__LensProjection ** SOAP_FMAC4 soap_get_PointerTott__LensProjection(struct soap*, tt__LensProjection **, const char*, const char*);

#ifndef soap_read_PointerTott__LensProjection
#define soap_read_PointerTott__LensProjection(soap, data) ( ((data) ? (soap_default_PointerTott__LensProjection(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__LensProjection(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__LensOffset
#define SOAP_TYPE_PointerTott__LensOffset (1111)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__LensOffset(struct soap*, tt__LensOffset *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__LensOffset(struct soap*, const char *, int, tt__LensOffset *const*, const char *);
SOAP_FMAC3 tt__LensOffset ** SOAP_FMAC4 soap_in_PointerTott__LensOffset(struct soap*, const char*, tt__LensOffset **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__LensOffset(struct soap*, tt__LensOffset *const*, const char*, const char*);

#ifndef soap_write_PointerTott__LensOffset
#define soap_write_PointerTott__LensOffset(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__LensOffset(soap, data), 0) || soap_put_PointerTott__LensOffset(soap, data, "tt:LensOffset", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__LensOffset ** SOAP_FMAC4 soap_get_PointerTott__LensOffset(struct soap*, tt__LensOffset **, const char*, const char*);

#ifndef soap_read_PointerTott__LensOffset
#define soap_read_PointerTott__LensOffset(soap, data) ( ((data) ? (soap_default_PointerTott__LensOffset(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__LensOffset(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTofloat
#define SOAP_TYPE_PointerTofloat (1110)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTofloat(struct soap*, float *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTofloat(struct soap*, const char *, int, float *const*, const char *);
SOAP_FMAC3 float ** SOAP_FMAC4 soap_in_PointerTofloat(struct soap*, const char*, float **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTofloat(struct soap*, float *const*, const char*, const char*);

#ifndef soap_write_PointerTofloat
#define soap_write_PointerTofloat(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTofloat(soap, data), 0) || soap_put_PointerTofloat(soap, data, "float", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 float ** SOAP_FMAC4 soap_get_PointerTofloat(struct soap*, float **, const char*, const char*);

#ifndef soap_read_PointerTofloat
#define soap_read_PointerTofloat(soap, data) ( ((data) ? (soap_default_PointerTofloat(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTofloat(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RotateExtension
#define SOAP_TYPE_PointerTott__RotateExtension (1109)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RotateExtension(struct soap*, tt__RotateExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RotateExtension(struct soap*, const char *, int, tt__RotateExtension *const*, const char *);
SOAP_FMAC3 tt__RotateExtension ** SOAP_FMAC4 soap_in_PointerTott__RotateExtension(struct soap*, const char*, tt__RotateExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RotateExtension(struct soap*, tt__RotateExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RotateExtension
#define soap_write_PointerTott__RotateExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RotateExtension(soap, data), 0) || soap_put_PointerTott__RotateExtension(soap, data, "tt:RotateExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RotateExtension ** SOAP_FMAC4 soap_get_PointerTott__RotateExtension(struct soap*, tt__RotateExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__RotateExtension
#define soap_read_PointerTott__RotateExtension(soap, data) ( ((data) ? (soap_default_PointerTott__RotateExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__RotateExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SceneOrientation
#define SOAP_TYPE_PointerTott__SceneOrientation (1108)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SceneOrientation(struct soap*, tt__SceneOrientation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SceneOrientation(struct soap*, const char *, int, tt__SceneOrientation *const*, const char *);
SOAP_FMAC3 tt__SceneOrientation ** SOAP_FMAC4 soap_in_PointerTott__SceneOrientation(struct soap*, const char*, tt__SceneOrientation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SceneOrientation(struct soap*, tt__SceneOrientation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SceneOrientation
#define soap_write_PointerTott__SceneOrientation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SceneOrientation(soap, data), 0) || soap_put_PointerTott__SceneOrientation(soap, data, "tt:SceneOrientation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SceneOrientation ** SOAP_FMAC4 soap_get_PointerTott__SceneOrientation(struct soap*, tt__SceneOrientation **, const char*, const char*);

#ifndef soap_read_PointerTott__SceneOrientation
#define soap_read_PointerTott__SceneOrientation(soap, data) ( ((data) ? (soap_default_PointerTott__SceneOrientation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__SceneOrientation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__LensDescription
#define SOAP_TYPE_PointerTott__LensDescription (1106)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__LensDescription(struct soap*, tt__LensDescription *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__LensDescription(struct soap*, const char *, int, tt__LensDescription *const*, const char *);
SOAP_FMAC3 tt__LensDescription ** SOAP_FMAC4 soap_in_PointerTott__LensDescription(struct soap*, const char*, tt__LensDescription **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__LensDescription(struct soap*, tt__LensDescription *const*, const char*, const char*);

#ifndef soap_write_PointerTott__LensDescription
#define soap_write_PointerTott__LensDescription(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__LensDescription(soap, data), 0) || soap_put_PointerTott__LensDescription(soap, data, "tt:LensDescription", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__LensDescription ** SOAP_FMAC4 soap_get_PointerTott__LensDescription(struct soap*, tt__LensDescription **, const char*, const char*);

#ifndef soap_read_PointerTott__LensDescription
#define soap_read_PointerTott__LensDescription(soap, data) ( ((data) ? (soap_default_PointerTott__LensDescription(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__LensDescription(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoSourceConfigurationExtension2
#define SOAP_TYPE_PointerTott__VideoSourceConfigurationExtension2 (1105)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoSourceConfigurationExtension2(struct soap*, tt__VideoSourceConfigurationExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoSourceConfigurationExtension2(struct soap*, const char *, int, tt__VideoSourceConfigurationExtension2 *const*, const char *);
SOAP_FMAC3 tt__VideoSourceConfigurationExtension2 ** SOAP_FMAC4 soap_in_PointerTott__VideoSourceConfigurationExtension2(struct soap*, const char*, tt__VideoSourceConfigurationExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoSourceConfigurationExtension2(struct soap*, tt__VideoSourceConfigurationExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoSourceConfigurationExtension2
#define soap_write_PointerTott__VideoSourceConfigurationExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoSourceConfigurationExtension2(soap, data), 0) || soap_put_PointerTott__VideoSourceConfigurationExtension2(soap, data, "tt:VideoSourceConfigurationExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceConfigurationExtension2 ** SOAP_FMAC4 soap_get_PointerTott__VideoSourceConfigurationExtension2(struct soap*, tt__VideoSourceConfigurationExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoSourceConfigurationExtension2
#define soap_read_PointerTott__VideoSourceConfigurationExtension2(soap, data) ( ((data) ? (soap_default_PointerTott__VideoSourceConfigurationExtension2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__VideoSourceConfigurationExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Rotate
#define SOAP_TYPE_PointerTott__Rotate (1104)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Rotate(struct soap*, tt__Rotate *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Rotate(struct soap*, const char *, int, tt__Rotate *const*, const char *);
SOAP_FMAC3 tt__Rotate ** SOAP_FMAC4 soap_in_PointerTott__Rotate(struct soap*, const char*, tt__Rotate **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Rotate(struct soap*, tt__Rotate *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Rotate
#define soap_write_PointerTott__Rotate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Rotate(soap, data), 0) || soap_put_PointerTott__Rotate(soap, data, "tt:Rotate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Rotate ** SOAP_FMAC4 soap_get_PointerTott__Rotate(struct soap*, tt__Rotate **, const char*, const char*);

#ifndef soap_read_PointerTott__Rotate
#define soap_read_PointerTott__Rotate(soap, data) ( ((data) ? (soap_default_PointerTott__Rotate(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Rotate(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ProfileExtension2
#define SOAP_TYPE_PointerTott__ProfileExtension2 (1103)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ProfileExtension2(struct soap*, tt__ProfileExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ProfileExtension2(struct soap*, const char *, int, tt__ProfileExtension2 *const*, const char *);
SOAP_FMAC3 tt__ProfileExtension2 ** SOAP_FMAC4 soap_in_PointerTott__ProfileExtension2(struct soap*, const char*, tt__ProfileExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ProfileExtension2(struct soap*, tt__ProfileExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ProfileExtension2
#define soap_write_PointerTott__ProfileExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ProfileExtension2(soap, data), 0) || soap_put_PointerTott__ProfileExtension2(soap, data, "tt:ProfileExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ProfileExtension2 ** SOAP_FMAC4 soap_get_PointerTott__ProfileExtension2(struct soap*, tt__ProfileExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__ProfileExtension2
#define soap_read_PointerTott__ProfileExtension2(soap, data) ( ((data) ? (soap_default_PointerTott__ProfileExtension2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ProfileExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AudioDecoderConfiguration
#define SOAP_TYPE_PointerTott__AudioDecoderConfiguration (1102)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AudioDecoderConfiguration(struct soap*, tt__AudioDecoderConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AudioDecoderConfiguration(struct soap*, const char *, int, tt__AudioDecoderConfiguration *const*, const char *);
SOAP_FMAC3 tt__AudioDecoderConfiguration ** SOAP_FMAC4 soap_in_PointerTott__AudioDecoderConfiguration(struct soap*, const char*, tt__AudioDecoderConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AudioDecoderConfiguration(struct soap*, tt__AudioDecoderConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AudioDecoderConfiguration
#define soap_write_PointerTott__AudioDecoderConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AudioDecoderConfiguration(soap, data), 0) || soap_put_PointerTott__AudioDecoderConfiguration(soap, data, "tt:AudioDecoderConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioDecoderConfiguration ** SOAP_FMAC4 soap_get_PointerTott__AudioDecoderConfiguration(struct soap*, tt__AudioDecoderConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__AudioDecoderConfiguration
#define soap_read_PointerTott__AudioDecoderConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__AudioDecoderConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__AudioDecoderConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ProfileExtension
#define SOAP_TYPE_PointerTott__ProfileExtension (1101)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ProfileExtension(struct soap*, tt__ProfileExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ProfileExtension(struct soap*, const char *, int, tt__ProfileExtension *const*, const char *);
SOAP_FMAC3 tt__ProfileExtension ** SOAP_FMAC4 soap_in_PointerTott__ProfileExtension(struct soap*, const char*, tt__ProfileExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ProfileExtension(struct soap*, tt__ProfileExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ProfileExtension
#define soap_write_PointerTott__ProfileExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ProfileExtension(soap, data), 0) || soap_put_PointerTott__ProfileExtension(soap, data, "tt:ProfileExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ProfileExtension ** SOAP_FMAC4 soap_get_PointerTott__ProfileExtension(struct soap*, tt__ProfileExtension **, const char*, const char*);

#ifndef soap_read_PointerTott__ProfileExtension
#define soap_read_PointerTott__ProfileExtension(soap, data) ( ((data) ? (soap_default_PointerTott__ProfileExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ProfileExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__MetadataConfiguration
#define SOAP_TYPE_PointerTott__MetadataConfiguration (1100)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__MetadataConfiguration(struct soap*, tt__MetadataConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__MetadataConfiguration(struct soap*, const char *, int, tt__MetadataConfiguration *const*, const char *);
SOAP_FMAC3 tt__MetadataConfiguration ** SOAP_FMAC4 soap_in_PointerTott__MetadataConfiguration(struct soap*, const char*, tt__MetadataConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__MetadataConfiguration(struct soap*, tt__MetadataConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__MetadataConfiguration
#define soap_write_PointerTott__MetadataConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__MetadataConfiguration(soap, data), 0) || soap_put_PointerTott__MetadataConfiguration(soap, data, "tt:MetadataConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__MetadataConfiguration ** SOAP_FMAC4 soap_get_PointerTott__MetadataConfiguration(struct soap*, tt__MetadataConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__MetadataConfiguration
#define soap_read_PointerTott__MetadataConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__MetadataConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__MetadataConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__PTZConfiguration
#define SOAP_TYPE_PointerTott__PTZConfiguration (1099)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__PTZConfiguration(struct soap*, tt__PTZConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__PTZConfiguration(struct soap*, const char *, int, tt__PTZConfiguration *const*, const char *);
SOAP_FMAC3 tt__PTZConfiguration ** SOAP_FMAC4 soap_in_PointerTott__PTZConfiguration(struct soap*, const char*, tt__PTZConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__PTZConfiguration(struct soap*, tt__PTZConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__PTZConfiguration
#define soap_write_PointerTott__PTZConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__PTZConfiguration(soap, data), 0) || soap_put_PointerTott__PTZConfiguration(soap, data, "tt:PTZConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__PTZConfiguration ** SOAP_FMAC4 soap_get_PointerTott__PTZConfiguration(struct soap*, tt__PTZConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__PTZConfiguration
#define soap_read_PointerTott__PTZConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__PTZConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__PTZConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoAnalyticsConfiguration
#define SOAP_TYPE_PointerTott__VideoAnalyticsConfiguration (1098)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoAnalyticsConfiguration(struct soap*, tt__VideoAnalyticsConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoAnalyticsConfiguration(struct soap*, const char *, int, tt__VideoAnalyticsConfiguration *const*, const char *);
SOAP_FMAC3 tt__VideoAnalyticsConfiguration ** SOAP_FMAC4 soap_in_PointerTott__VideoAnalyticsConfiguration(struct soap*, const char*, tt__VideoAnalyticsConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoAnalyticsConfiguration(struct soap*, tt__VideoAnalyticsConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoAnalyticsConfiguration
#define soap_write_PointerTott__VideoAnalyticsConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoAnalyticsConfiguration(soap, data), 0) || soap_put_PointerTott__VideoAnalyticsConfiguration(soap, data, "tt:VideoAnalyticsConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoAnalyticsConfiguration ** SOAP_FMAC4 soap_get_PointerTott__VideoAnalyticsConfiguration(struct soap*, tt__VideoAnalyticsConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoAnalyticsConfiguration
#define soap_read_PointerTott__VideoAnalyticsConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__VideoAnalyticsConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__VideoAnalyticsConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AudioEncoderConfiguration
#define SOAP_TYPE_PointerTott__AudioEncoderConfiguration (1097)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AudioEncoderConfiguration(struct soap*, tt__AudioEncoderConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AudioEncoderConfiguration(struct soap*, const char *, int, tt__AudioEncoderConfiguration *const*, const char *);
SOAP_FMAC3 tt__AudioEncoderConfiguration ** SOAP_FMAC4 soap_in_PointerTott__AudioEncoderConfiguration(struct soap*, const char*, tt__AudioEncoderConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AudioEncoderConfiguration(struct soap*, tt__AudioEncoderConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AudioEncoderConfiguration
#define soap_write_PointerTott__AudioEncoderConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AudioEncoderConfiguration(soap, data), 0) || soap_put_PointerTott__AudioEncoderConfiguration(soap, data, "tt:AudioEncoderConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioEncoderConfiguration ** SOAP_FMAC4 soap_get_PointerTott__AudioEncoderConfiguration(struct soap*, tt__AudioEncoderConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__AudioEncoderConfiguration
#define soap_read_PointerTott__AudioEncoderConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__AudioEncoderConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__AudioEncoderConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoEncoderConfiguration
#define SOAP_TYPE_PointerTott__VideoEncoderConfiguration (1096)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoEncoderConfiguration(struct soap*, tt__VideoEncoderConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoEncoderConfiguration(struct soap*, const char *, int, tt__VideoEncoderConfiguration *const*, const char *);
SOAP_FMAC3 tt__VideoEncoderConfiguration ** SOAP_FMAC4 soap_in_PointerTott__VideoEncoderConfiguration(struct soap*, const char*, tt__VideoEncoderConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoEncoderConfiguration(struct soap*, tt__VideoEncoderConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoEncoderConfiguration
#define soap_write_PointerTott__VideoEncoderConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoEncoderConfiguration(soap, data), 0) || soap_put_PointerTott__VideoEncoderConfiguration(soap, data, "tt:VideoEncoderConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoEncoderConfiguration ** SOAP_FMAC4 soap_get_PointerTott__VideoEncoderConfiguration(struct soap*, tt__VideoEncoderConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoEncoderConfiguration
#define soap_read_PointerTott__VideoEncoderConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__VideoEncoderConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__VideoEncoderConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoSourceExtension2
#define SOAP_TYPE_PointerTott__VideoSourceExtension2 (1095)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoSourceExtension2(struct soap*, tt__VideoSourceExtension2 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoSourceExtension2(struct soap*, const char *, int, tt__VideoSourceExtension2 *const*, const char *);
SOAP_FMAC3 tt__VideoSourceExtension2 ** SOAP_FMAC4 soap_in_PointerTott__VideoSourceExtension2(struct soap*, const char*, tt__VideoSourceExtension2 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoSourceExtension2(struct soap*, tt__VideoSourceExtension2 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoSourceExtension2
#define soap_write_PointerTott__VideoSourceExtension2(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoSourceExtension2(soap, data), 0) || soap_put_PointerTott__VideoSourceExtension2(soap, data, "tt:VideoSourceExtension2", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceExtension2 ** SOAP_FMAC4 soap_get_PointerTott__VideoSourceExtension2(struct soap*, tt__VideoSourceExtension2 **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoSourceExtension2
#define soap_read_PointerTott__VideoSourceExtension2(soap, data) ( ((data) ? (soap_default_PointerTott__VideoSourceExtension2(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__VideoSourceExtension2(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ImagingSettings20
#define SOAP_TYPE_PointerTott__ImagingSettings20 (1094)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ImagingSettings20(struct soap*, tt__ImagingSettings20 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ImagingSettings20(struct soap*, const char *, int, tt__ImagingSettings20 *const*, const char *);
SOAP_FMAC3 tt__ImagingSettings20 ** SOAP_FMAC4 soap_in_PointerTott__ImagingSettings20(struct soap*, const char*, tt__ImagingSettings20 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ImagingSettings20(struct soap*, tt__ImagingSettings20 *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ImagingSettings20
#define soap_write_PointerTott__ImagingSettings20(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ImagingSettings20(soap, data), 0) || soap_put_PointerTott__ImagingSettings20(soap, data, "tt:ImagingSettings20", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__ImagingSettings20 ** SOAP_FMAC4 soap_get_PointerTott__ImagingSettings20(struct soap*, tt__ImagingSettings20 **, const char*, const char*);

#ifndef soap_read_PointerTott__ImagingSettings20
#define soap_read_PointerTott__ImagingSettings20(soap, data) ( ((data) ? (soap_default_PointerTott__ImagingSettings20(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ImagingSettings20(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IntRange
#define SOAP_TYPE_PointerTott__IntRange (1091)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IntRange(struct soap*, tt__IntRange *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IntRange(struct soap*, const char *, int, tt__IntRange *const*, const char *);
SOAP_FMAC3 tt__IntRange ** SOAP_FMAC4 soap_in_PointerTott__IntRange(struct soap*, const char*, tt__IntRange **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IntRange(struct soap*, tt__IntRange *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IntRange
#define soap_write_PointerTott__IntRange(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IntRange(soap, data), 0) || soap_put_PointerTott__IntRange(soap, data, "tt:IntRange", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IntRange ** SOAP_FMAC4 soap_get_PointerTott__IntRange(struct soap*, tt__IntRange **, const char*, const char*);

#ifndef soap_read_PointerTott__IntRange
#define soap_read_PointerTott__IntRange(soap, data) ( ((data) ? (soap_default_PointerTott__IntRange(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__IntRange(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__LocationEntity
#define SOAP_TYPE_PointerTott__LocationEntity (1089)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__LocationEntity(struct soap*, tt__LocationEntity *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__LocationEntity(struct soap*, const char *, int, tt__LocationEntity *const*, const char *);
SOAP_FMAC3 tt__LocationEntity ** SOAP_FMAC4 soap_in_PointerTott__LocationEntity(struct soap*, const char*, tt__LocationEntity **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__LocationEntity(struct soap*, tt__LocationEntity *const*, const char*, const char*);

#ifndef soap_write_PointerTott__LocationEntity
#define soap_write_PointerTott__LocationEntity(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__LocationEntity(soap, data), 0) || soap_put_PointerTott__LocationEntity(soap, data, "tt:LocationEntity", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__LocationEntity ** SOAP_FMAC4 soap_get_PointerTott__LocationEntity(struct soap*, tt__LocationEntity **, const char*, const char*);

#ifndef soap_read_PointerTott__LocationEntity
#define soap_read_PointerTott__LocationEntity(soap, data) ( ((data) ? (soap_default_PointerTott__LocationEntity(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__LocationEntity(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotds__StorageConfigurationData
#define SOAP_TYPE_PointerTotds__StorageConfigurationData (1088)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotds__StorageConfigurationData(struct soap*, tds__StorageConfigurationData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotds__StorageConfigurationData(struct soap*, const char *, int, tds__StorageConfigurationData *const*, const char *);
SOAP_FMAC3 tds__StorageConfigurationData ** SOAP_FMAC4 soap_in_PointerTotds__StorageConfigurationData(struct soap*, const char*, tds__StorageConfigurationData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotds__StorageConfigurationData(struct soap*, tds__StorageConfigurationData *const*, const char*, const char*);

#ifndef soap_write_PointerTotds__StorageConfigurationData
#define soap_write_PointerTotds__StorageConfigurationData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotds__StorageConfigurationData(soap, data), 0) || soap_put_PointerTotds__StorageConfigurationData(soap, data, "tds:StorageConfigurationData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__StorageConfigurationData ** SOAP_FMAC4 soap_get_PointerTotds__StorageConfigurationData(struct soap*, tds__StorageConfigurationData **, const char*, const char*);

#ifndef soap_read_PointerTotds__StorageConfigurationData
#define soap_read_PointerTotds__StorageConfigurationData(soap, data) ( ((data) ? (soap_default_PointerTotds__StorageConfigurationData(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTotds__StorageConfigurationData(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotds__StorageConfiguration
#define SOAP_TYPE_PointerTotds__StorageConfiguration (1086)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotds__StorageConfiguration(struct soap*, tds__StorageConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotds__StorageConfiguration(struct soap*, const char *, int, tds__StorageConfiguration *const*, const char *);
SOAP_FMAC3 tds__StorageConfiguration ** SOAP_FMAC4 soap_in_PointerTotds__StorageConfiguration(struct soap*, const char*, tds__StorageConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotds__StorageConfiguration(struct soap*, tds__StorageConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTotds__StorageConfiguration
#define soap_write_PointerTotds__StorageConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotds__StorageConfiguration(soap, data), 0) || soap_put_PointerTotds__StorageConfiguration(soap, data, "tds:StorageConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__StorageConfiguration ** SOAP_FMAC4 soap_get_PointerTotds__StorageConfiguration(struct soap*, tds__StorageConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTotds__StorageConfiguration
#define soap_read_PointerTotds__StorageConfiguration(soap, data) ( ((data) ? (soap_default_PointerTotds__StorageConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTotds__StorageConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__GetSystemUrisResponse_Extension
#define SOAP_TYPE_PointerTo_tds__GetSystemUrisResponse_Extension (1085)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__GetSystemUrisResponse_Extension(struct soap*, _tds__GetSystemUrisResponse_Extension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__GetSystemUrisResponse_Extension(struct soap*, const char *, int, _tds__GetSystemUrisResponse_Extension *const*, const char *);
SOAP_FMAC3 _tds__GetSystemUrisResponse_Extension ** SOAP_FMAC4 soap_in_PointerTo_tds__GetSystemUrisResponse_Extension(struct soap*, const char*, _tds__GetSystemUrisResponse_Extension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__GetSystemUrisResponse_Extension(struct soap*, _tds__GetSystemUrisResponse_Extension *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__GetSystemUrisResponse_Extension
#define soap_write_PointerTo_tds__GetSystemUrisResponse_Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__GetSystemUrisResponse_Extension(soap, data), 0) || soap_put_PointerTo_tds__GetSystemUrisResponse_Extension(soap, data, "tds:GetSystemUrisResponse-Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__GetSystemUrisResponse_Extension ** SOAP_FMAC4 soap_get_PointerTo_tds__GetSystemUrisResponse_Extension(struct soap*, _tds__GetSystemUrisResponse_Extension **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__GetSystemUrisResponse_Extension
#define soap_read_PointerTo_tds__GetSystemUrisResponse_Extension(soap, data) ( ((data) ? (soap_default_PointerTo_tds__GetSystemUrisResponse_Extension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__GetSystemUrisResponse_Extension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SystemLogUriList
#define SOAP_TYPE_PointerTott__SystemLogUriList (1083)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SystemLogUriList(struct soap*, tt__SystemLogUriList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SystemLogUriList(struct soap*, const char *, int, tt__SystemLogUriList *const*, const char *);
SOAP_FMAC3 tt__SystemLogUriList ** SOAP_FMAC4 soap_in_PointerTott__SystemLogUriList(struct soap*, const char*, tt__SystemLogUriList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SystemLogUriList(struct soap*, tt__SystemLogUriList *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SystemLogUriList
#define soap_write_PointerTott__SystemLogUriList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SystemLogUriList(soap, data), 0) || soap_put_PointerTott__SystemLogUriList(soap, data, "tt:SystemLogUriList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemLogUriList ** SOAP_FMAC4 soap_get_PointerTott__SystemLogUriList(struct soap*, tt__SystemLogUriList **, const char*, const char*);

#ifndef soap_read_PointerTott__SystemLogUriList
#define soap_read_PointerTott__SystemLogUriList(soap, data) ( ((data) ? (soap_default_PointerTott__SystemLogUriList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__SystemLogUriList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot11AvailableNetworks
#define SOAP_TYPE_PointerTott__Dot11AvailableNetworks (1081)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot11AvailableNetworks(struct soap*, tt__Dot11AvailableNetworks *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot11AvailableNetworks(struct soap*, const char *, int, tt__Dot11AvailableNetworks *const*, const char *);
SOAP_FMAC3 tt__Dot11AvailableNetworks ** SOAP_FMAC4 soap_in_PointerTott__Dot11AvailableNetworks(struct soap*, const char*, tt__Dot11AvailableNetworks **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot11AvailableNetworks(struct soap*, tt__Dot11AvailableNetworks *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot11AvailableNetworks
#define soap_write_PointerTott__Dot11AvailableNetworks(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot11AvailableNetworks(soap, data), 0) || soap_put_PointerTott__Dot11AvailableNetworks(soap, data, "tt:Dot11AvailableNetworks", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11AvailableNetworks ** SOAP_FMAC4 soap_get_PointerTott__Dot11AvailableNetworks(struct soap*, tt__Dot11AvailableNetworks **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot11AvailableNetworks
#define soap_read_PointerTott__Dot11AvailableNetworks(soap, data) ( ((data) ? (soap_default_PointerTott__Dot11AvailableNetworks(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Dot11AvailableNetworks(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot11Status
#define SOAP_TYPE_PointerTott__Dot11Status (1080)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot11Status(struct soap*, tt__Dot11Status *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot11Status(struct soap*, const char *, int, tt__Dot11Status *const*, const char *);
SOAP_FMAC3 tt__Dot11Status ** SOAP_FMAC4 soap_in_PointerTott__Dot11Status(struct soap*, const char*, tt__Dot11Status **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot11Status(struct soap*, tt__Dot11Status *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot11Status
#define soap_write_PointerTott__Dot11Status(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot11Status(soap, data), 0) || soap_put_PointerTott__Dot11Status(soap, data, "tt:Dot11Status", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11Status ** SOAP_FMAC4 soap_get_PointerTott__Dot11Status(struct soap*, tt__Dot11Status **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot11Status
#define soap_read_PointerTott__Dot11Status(soap, data) ( ((data) ? (soap_default_PointerTott__Dot11Status(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Dot11Status(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot11Capabilities
#define SOAP_TYPE_PointerTott__Dot11Capabilities (1079)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot11Capabilities(struct soap*, tt__Dot11Capabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot11Capabilities(struct soap*, const char *, int, tt__Dot11Capabilities *const*, const char *);
SOAP_FMAC3 tt__Dot11Capabilities ** SOAP_FMAC4 soap_in_PointerTott__Dot11Capabilities(struct soap*, const char*, tt__Dot11Capabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot11Capabilities(struct soap*, tt__Dot11Capabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot11Capabilities
#define soap_write_PointerTott__Dot11Capabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot11Capabilities(soap, data), 0) || soap_put_PointerTott__Dot11Capabilities(soap, data, "tt:Dot11Capabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot11Capabilities ** SOAP_FMAC4 soap_get_PointerTott__Dot11Capabilities(struct soap*, tt__Dot11Capabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot11Capabilities
#define soap_read_PointerTott__Dot11Capabilities(soap, data) ( ((data) ? (soap_default_PointerTott__Dot11Capabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Dot11Capabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AuxiliaryData
#define SOAP_TYPE_PointerTott__AuxiliaryData (1078)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AuxiliaryData(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AuxiliaryData(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTott__AuxiliaryData(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AuxiliaryData(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AuxiliaryData
#define soap_write_PointerTott__AuxiliaryData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AuxiliaryData(soap, data), 0) || soap_put_PointerTott__AuxiliaryData(soap, data, "tt:AuxiliaryData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTott__AuxiliaryData(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTott__AuxiliaryData
#define soap_read_PointerTott__AuxiliaryData(soap, data) ( ((data) ? (soap_default_PointerTott__AuxiliaryData(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__AuxiliaryData(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RelayOutputSettings
#define SOAP_TYPE_PointerTott__RelayOutputSettings (1077)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RelayOutputSettings(struct soap*, tt__RelayOutputSettings *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RelayOutputSettings(struct soap*, const char *, int, tt__RelayOutputSettings *const*, const char *);
SOAP_FMAC3 tt__RelayOutputSettings ** SOAP_FMAC4 soap_in_PointerTott__RelayOutputSettings(struct soap*, const char*, tt__RelayOutputSettings **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RelayOutputSettings(struct soap*, tt__RelayOutputSettings *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RelayOutputSettings
#define soap_write_PointerTott__RelayOutputSettings(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RelayOutputSettings(soap, data), 0) || soap_put_PointerTott__RelayOutputSettings(soap, data, "tt:RelayOutputSettings", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RelayOutputSettings ** SOAP_FMAC4 soap_get_PointerTott__RelayOutputSettings(struct soap*, tt__RelayOutputSettings **, const char*, const char*);

#ifndef soap_read_PointerTott__RelayOutputSettings
#define soap_read_PointerTott__RelayOutputSettings(soap, data) ( ((data) ? (soap_default_PointerTott__RelayOutputSettings(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__RelayOutputSettings(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Dot1XConfiguration
#define SOAP_TYPE_PointerTott__Dot1XConfiguration (1074)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Dot1XConfiguration(struct soap*, tt__Dot1XConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Dot1XConfiguration(struct soap*, const char *, int, tt__Dot1XConfiguration *const*, const char *);
SOAP_FMAC3 tt__Dot1XConfiguration ** SOAP_FMAC4 soap_in_PointerTott__Dot1XConfiguration(struct soap*, const char*, tt__Dot1XConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Dot1XConfiguration(struct soap*, tt__Dot1XConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Dot1XConfiguration
#define soap_write_PointerTott__Dot1XConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Dot1XConfiguration(soap, data), 0) || soap_put_PointerTott__Dot1XConfiguration(soap, data, "tt:Dot1XConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Dot1XConfiguration ** SOAP_FMAC4 soap_get_PointerTott__Dot1XConfiguration(struct soap*, tt__Dot1XConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__Dot1XConfiguration
#define soap_read_PointerTott__Dot1XConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__Dot1XConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Dot1XConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__CertificateInformation
#define SOAP_TYPE_PointerTott__CertificateInformation (1073)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__CertificateInformation(struct soap*, tt__CertificateInformation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__CertificateInformation(struct soap*, const char *, int, tt__CertificateInformation *const*, const char *);
SOAP_FMAC3 tt__CertificateInformation ** SOAP_FMAC4 soap_in_PointerTott__CertificateInformation(struct soap*, const char*, tt__CertificateInformation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__CertificateInformation(struct soap*, tt__CertificateInformation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__CertificateInformation
#define soap_write_PointerTott__CertificateInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__CertificateInformation(soap, data), 0) || soap_put_PointerTott__CertificateInformation(soap, data, "tt:CertificateInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CertificateInformation ** SOAP_FMAC4 soap_get_PointerTott__CertificateInformation(struct soap*, tt__CertificateInformation **, const char*, const char*);

#ifndef soap_read_PointerTott__CertificateInformation
#define soap_read_PointerTott__CertificateInformation(soap, data) ( ((data) ? (soap_default_PointerTott__CertificateInformation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__CertificateInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__CertificateWithPrivateKey
#define SOAP_TYPE_PointerTott__CertificateWithPrivateKey (1071)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__CertificateWithPrivateKey(struct soap*, tt__CertificateWithPrivateKey *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__CertificateWithPrivateKey(struct soap*, const char *, int, tt__CertificateWithPrivateKey *const*, const char *);
SOAP_FMAC3 tt__CertificateWithPrivateKey ** SOAP_FMAC4 soap_in_PointerTott__CertificateWithPrivateKey(struct soap*, const char*, tt__CertificateWithPrivateKey **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__CertificateWithPrivateKey(struct soap*, tt__CertificateWithPrivateKey *const*, const char*, const char*);

#ifndef soap_write_PointerTott__CertificateWithPrivateKey
#define soap_write_PointerTott__CertificateWithPrivateKey(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__CertificateWithPrivateKey(soap, data), 0) || soap_put_PointerTott__CertificateWithPrivateKey(soap, data, "tt:CertificateWithPrivateKey", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CertificateWithPrivateKey ** SOAP_FMAC4 soap_get_PointerTott__CertificateWithPrivateKey(struct soap*, tt__CertificateWithPrivateKey **, const char*, const char*);

#ifndef soap_read_PointerTott__CertificateWithPrivateKey
#define soap_read_PointerTott__CertificateWithPrivateKey(soap, data) ( ((data) ? (soap_default_PointerTott__CertificateWithPrivateKey(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__CertificateWithPrivateKey(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__CertificateStatus
#define SOAP_TYPE_PointerTott__CertificateStatus (1069)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__CertificateStatus(struct soap*, tt__CertificateStatus *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__CertificateStatus(struct soap*, const char *, int, tt__CertificateStatus *const*, const char *);
SOAP_FMAC3 tt__CertificateStatus ** SOAP_FMAC4 soap_in_PointerTott__CertificateStatus(struct soap*, const char*, tt__CertificateStatus **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__CertificateStatus(struct soap*, tt__CertificateStatus *const*, const char*, const char*);

#ifndef soap_write_PointerTott__CertificateStatus
#define soap_write_PointerTott__CertificateStatus(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__CertificateStatus(soap, data), 0) || soap_put_PointerTott__CertificateStatus(soap, data, "tt:CertificateStatus", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__CertificateStatus ** SOAP_FMAC4 soap_get_PointerTott__CertificateStatus(struct soap*, tt__CertificateStatus **, const char*, const char*);

#ifndef soap_read_PointerTott__CertificateStatus
#define soap_read_PointerTott__CertificateStatus(soap, data) ( ((data) ? (soap_default_PointerTott__CertificateStatus(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__CertificateStatus(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Certificate
#define SOAP_TYPE_PointerTott__Certificate (1067)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Certificate(struct soap*, tt__Certificate *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Certificate(struct soap*, const char *, int, tt__Certificate *const*, const char *);
SOAP_FMAC3 tt__Certificate ** SOAP_FMAC4 soap_in_PointerTott__Certificate(struct soap*, const char*, tt__Certificate **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Certificate(struct soap*, tt__Certificate *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Certificate
#define soap_write_PointerTott__Certificate(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Certificate(soap, data), 0) || soap_put_PointerTott__Certificate(soap, data, "tt:Certificate", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Certificate ** SOAP_FMAC4 soap_get_PointerTott__Certificate(struct soap*, tt__Certificate **, const char*, const char*);

#ifndef soap_read_PointerTott__Certificate
#define soap_read_PointerTott__Certificate(soap, data) ( ((data) ? (soap_default_PointerTott__Certificate(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Certificate(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTodateTime
#define SOAP_TYPE_PointerTodateTime (1066)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTodateTime(struct soap*, time_t *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTodateTime(struct soap*, const char *, int, time_t *const*, const char *);
SOAP_FMAC3 time_t ** SOAP_FMAC4 soap_in_PointerTodateTime(struct soap*, const char*, time_t **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTodateTime(struct soap*, time_t *const*, const char*, const char*);

#ifndef soap_write_PointerTodateTime
#define soap_write_PointerTodateTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTodateTime(soap, data), 0) || soap_put_PointerTodateTime(soap, data, "dateTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 time_t ** SOAP_FMAC4 soap_get_PointerTodateTime(struct soap*, time_t **, const char*, const char*);

#ifndef soap_read_PointerTodateTime
#define soap_read_PointerTodateTime(soap, data) ( ((data) ? (soap_default_PointerTodateTime(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTodateTime(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToxsd__token
#define SOAP_TYPE_PointerToxsd__token (1064)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__token(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__token(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToxsd__token(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__token(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerToxsd__token
#define soap_write_PointerToxsd__token(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToxsd__token(soap, data), 0) || soap_put_PointerToxsd__token(soap, data, "xsd:token", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToxsd__token(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerToxsd__token
#define soap_read_PointerToxsd__token(soap, data) ( ((data) ? (soap_default_PointerToxsd__token(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerToxsd__token(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__BinaryData
#define SOAP_TYPE_PointerTott__BinaryData (1063)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__BinaryData(struct soap*, tt__BinaryData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__BinaryData(struct soap*, const char *, int, tt__BinaryData *const*, const char *);
SOAP_FMAC3 tt__BinaryData ** SOAP_FMAC4 soap_in_PointerTott__BinaryData(struct soap*, const char*, tt__BinaryData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__BinaryData(struct soap*, tt__BinaryData *const*, const char*, const char*);

#ifndef soap_write_PointerTott__BinaryData
#define soap_write_PointerTott__BinaryData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__BinaryData(soap, data), 0) || soap_put_PointerTott__BinaryData(soap, data, "tt:BinaryData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__BinaryData ** SOAP_FMAC4 soap_get_PointerTott__BinaryData(struct soap*, tt__BinaryData **, const char*, const char*);

#ifndef soap_read_PointerTott__BinaryData
#define soap_read_PointerTott__BinaryData(soap, data) ( ((data) ? (soap_default_PointerTott__BinaryData(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__BinaryData(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IPAddressFilter
#define SOAP_TYPE_PointerTott__IPAddressFilter (1062)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IPAddressFilter(struct soap*, tt__IPAddressFilter *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IPAddressFilter(struct soap*, const char *, int, tt__IPAddressFilter *const*, const char *);
SOAP_FMAC3 tt__IPAddressFilter ** SOAP_FMAC4 soap_in_PointerTott__IPAddressFilter(struct soap*, const char*, tt__IPAddressFilter **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IPAddressFilter(struct soap*, tt__IPAddressFilter *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IPAddressFilter
#define soap_write_PointerTott__IPAddressFilter(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IPAddressFilter(soap, data), 0) || soap_put_PointerTott__IPAddressFilter(soap, data, "tt:IPAddressFilter", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPAddressFilter ** SOAP_FMAC4 soap_get_PointerTott__IPAddressFilter(struct soap*, tt__IPAddressFilter **, const char*, const char*);

#ifndef soap_read_PointerTott__IPAddressFilter
#define soap_read_PointerTott__IPAddressFilter(soap, data) ( ((data) ? (soap_default_PointerTott__IPAddressFilter(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__IPAddressFilter(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkZeroConfiguration
#define SOAP_TYPE_PointerTott__NetworkZeroConfiguration (1061)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkZeroConfiguration(struct soap*, tt__NetworkZeroConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkZeroConfiguration(struct soap*, const char *, int, tt__NetworkZeroConfiguration *const*, const char *);
SOAP_FMAC3 tt__NetworkZeroConfiguration ** SOAP_FMAC4 soap_in_PointerTott__NetworkZeroConfiguration(struct soap*, const char*, tt__NetworkZeroConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkZeroConfiguration(struct soap*, tt__NetworkZeroConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkZeroConfiguration
#define soap_write_PointerTott__NetworkZeroConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkZeroConfiguration(soap, data), 0) || soap_put_PointerTott__NetworkZeroConfiguration(soap, data, "tt:NetworkZeroConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkZeroConfiguration ** SOAP_FMAC4 soap_get_PointerTott__NetworkZeroConfiguration(struct soap*, tt__NetworkZeroConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkZeroConfiguration
#define soap_read_PointerTott__NetworkZeroConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__NetworkZeroConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__NetworkZeroConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkGateway
#define SOAP_TYPE_PointerTott__NetworkGateway (1058)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkGateway(struct soap*, tt__NetworkGateway *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkGateway(struct soap*, const char *, int, tt__NetworkGateway *const*, const char *);
SOAP_FMAC3 tt__NetworkGateway ** SOAP_FMAC4 soap_in_PointerTott__NetworkGateway(struct soap*, const char*, tt__NetworkGateway **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkGateway(struct soap*, tt__NetworkGateway *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkGateway
#define soap_write_PointerTott__NetworkGateway(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkGateway(soap, data), 0) || soap_put_PointerTott__NetworkGateway(soap, data, "tt:NetworkGateway", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkGateway ** SOAP_FMAC4 soap_get_PointerTott__NetworkGateway(struct soap*, tt__NetworkGateway **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkGateway
#define soap_read_PointerTott__NetworkGateway(soap, data) ( ((data) ? (soap_default_PointerTott__NetworkGateway(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__NetworkGateway(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkProtocol
#define SOAP_TYPE_PointerTott__NetworkProtocol (1056)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkProtocol(struct soap*, tt__NetworkProtocol *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkProtocol(struct soap*, const char *, int, tt__NetworkProtocol *const*, const char *);
SOAP_FMAC3 tt__NetworkProtocol ** SOAP_FMAC4 soap_in_PointerTott__NetworkProtocol(struct soap*, const char*, tt__NetworkProtocol **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkProtocol(struct soap*, tt__NetworkProtocol *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkProtocol
#define soap_write_PointerTott__NetworkProtocol(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkProtocol(soap, data), 0) || soap_put_PointerTott__NetworkProtocol(soap, data, "tt:NetworkProtocol", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkProtocol ** SOAP_FMAC4 soap_get_PointerTott__NetworkProtocol(struct soap*, tt__NetworkProtocol **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkProtocol
#define soap_read_PointerTott__NetworkProtocol(soap, data) ( ((data) ? (soap_default_PointerTott__NetworkProtocol(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__NetworkProtocol(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkInterfaceSetConfiguration
#define SOAP_TYPE_PointerTott__NetworkInterfaceSetConfiguration (1055)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkInterfaceSetConfiguration(struct soap*, tt__NetworkInterfaceSetConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkInterfaceSetConfiguration(struct soap*, const char *, int, tt__NetworkInterfaceSetConfiguration *const*, const char *);
SOAP_FMAC3 tt__NetworkInterfaceSetConfiguration ** SOAP_FMAC4 soap_in_PointerTott__NetworkInterfaceSetConfiguration(struct soap*, const char*, tt__NetworkInterfaceSetConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkInterfaceSetConfiguration(struct soap*, tt__NetworkInterfaceSetConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkInterfaceSetConfiguration
#define soap_write_PointerTott__NetworkInterfaceSetConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkInterfaceSetConfiguration(soap, data), 0) || soap_put_PointerTott__NetworkInterfaceSetConfiguration(soap, data, "tt:NetworkInterfaceSetConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterfaceSetConfiguration ** SOAP_FMAC4 soap_get_PointerTott__NetworkInterfaceSetConfiguration(struct soap*, tt__NetworkInterfaceSetConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkInterfaceSetConfiguration
#define soap_read_PointerTott__NetworkInterfaceSetConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__NetworkInterfaceSetConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__NetworkInterfaceSetConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkInterface
#define SOAP_TYPE_PointerTott__NetworkInterface (1053)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkInterface(struct soap*, tt__NetworkInterface *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkInterface(struct soap*, const char *, int, tt__NetworkInterface *const*, const char *);
SOAP_FMAC3 tt__NetworkInterface ** SOAP_FMAC4 soap_in_PointerTott__NetworkInterface(struct soap*, const char*, tt__NetworkInterface **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkInterface(struct soap*, tt__NetworkInterface *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkInterface
#define soap_write_PointerTott__NetworkInterface(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkInterface(soap, data), 0) || soap_put_PointerTott__NetworkInterface(soap, data, "tt:NetworkInterface", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkInterface ** SOAP_FMAC4 soap_get_PointerTott__NetworkInterface(struct soap*, tt__NetworkInterface **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkInterface
#define soap_read_PointerTott__NetworkInterface(soap, data) ( ((data) ? (soap_default_PointerTott__NetworkInterface(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__NetworkInterface(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__DNSName
#define SOAP_TYPE_PointerTott__DNSName (1052)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__DNSName(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__DNSName(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTott__DNSName(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__DNSName(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTott__DNSName
#define soap_write_PointerTott__DNSName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__DNSName(soap, data), 0) || soap_put_PointerTott__DNSName(soap, data, "tt:DNSName", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTott__DNSName(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTott__DNSName
#define soap_read_PointerTott__DNSName(soap, data) ( ((data) ? (soap_default_PointerTott__DNSName(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__DNSName(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__DynamicDNSInformation
#define SOAP_TYPE_PointerTott__DynamicDNSInformation (1051)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__DynamicDNSInformation(struct soap*, tt__DynamicDNSInformation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__DynamicDNSInformation(struct soap*, const char *, int, tt__DynamicDNSInformation *const*, const char *);
SOAP_FMAC3 tt__DynamicDNSInformation ** SOAP_FMAC4 soap_in_PointerTott__DynamicDNSInformation(struct soap*, const char*, tt__DynamicDNSInformation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__DynamicDNSInformation(struct soap*, tt__DynamicDNSInformation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__DynamicDNSInformation
#define soap_write_PointerTott__DynamicDNSInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__DynamicDNSInformation(soap, data), 0) || soap_put_PointerTott__DynamicDNSInformation(soap, data, "tt:DynamicDNSInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DynamicDNSInformation ** SOAP_FMAC4 soap_get_PointerTott__DynamicDNSInformation(struct soap*, tt__DynamicDNSInformation **, const char*, const char*);

#ifndef soap_read_PointerTott__DynamicDNSInformation
#define soap_read_PointerTott__DynamicDNSInformation(soap, data) ( ((data) ? (soap_default_PointerTott__DynamicDNSInformation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__DynamicDNSInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NTPInformation
#define SOAP_TYPE_PointerTott__NTPInformation (1050)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NTPInformation(struct soap*, tt__NTPInformation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NTPInformation(struct soap*, const char *, int, tt__NTPInformation *const*, const char *);
SOAP_FMAC3 tt__NTPInformation ** SOAP_FMAC4 soap_in_PointerTott__NTPInformation(struct soap*, const char*, tt__NTPInformation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NTPInformation(struct soap*, tt__NTPInformation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NTPInformation
#define soap_write_PointerTott__NTPInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NTPInformation(soap, data), 0) || soap_put_PointerTott__NTPInformation(soap, data, "tt:NTPInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NTPInformation ** SOAP_FMAC4 soap_get_PointerTott__NTPInformation(struct soap*, tt__NTPInformation **, const char*, const char*);

#ifndef soap_read_PointerTott__NTPInformation
#define soap_read_PointerTott__NTPInformation(soap, data) ( ((data) ? (soap_default_PointerTott__NTPInformation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__NTPInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IPAddress
#define SOAP_TYPE_PointerTott__IPAddress (1048)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IPAddress(struct soap*, tt__IPAddress *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IPAddress(struct soap*, const char *, int, tt__IPAddress *const*, const char *);
SOAP_FMAC3 tt__IPAddress ** SOAP_FMAC4 soap_in_PointerTott__IPAddress(struct soap*, const char*, tt__IPAddress **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IPAddress(struct soap*, tt__IPAddress *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IPAddress
#define soap_write_PointerTott__IPAddress(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IPAddress(soap, data), 0) || soap_put_PointerTott__IPAddress(soap, data, "tt:IPAddress", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IPAddress ** SOAP_FMAC4 soap_get_PointerTott__IPAddress(struct soap*, tt__IPAddress **, const char*, const char*);

#ifndef soap_read_PointerTott__IPAddress
#define soap_read_PointerTott__IPAddress(soap, data) ( ((data) ? (soap_default_PointerTott__IPAddress(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__IPAddress(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__DNSInformation
#define SOAP_TYPE_PointerTott__DNSInformation (1046)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__DNSInformation(struct soap*, tt__DNSInformation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__DNSInformation(struct soap*, const char *, int, tt__DNSInformation *const*, const char *);
SOAP_FMAC3 tt__DNSInformation ** SOAP_FMAC4 soap_in_PointerTott__DNSInformation(struct soap*, const char*, tt__DNSInformation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__DNSInformation(struct soap*, tt__DNSInformation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__DNSInformation
#define soap_write_PointerTott__DNSInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__DNSInformation(soap, data), 0) || soap_put_PointerTott__DNSInformation(soap, data, "tt:DNSInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DNSInformation ** SOAP_FMAC4 soap_get_PointerTott__DNSInformation(struct soap*, tt__DNSInformation **, const char*, const char*);

#ifndef soap_read_PointerTott__DNSInformation
#define soap_read_PointerTott__DNSInformation(soap, data) ( ((data) ? (soap_default_PointerTott__DNSInformation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__DNSInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__HostnameInformation
#define SOAP_TYPE_PointerTott__HostnameInformation (1045)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__HostnameInformation(struct soap*, tt__HostnameInformation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__HostnameInformation(struct soap*, const char *, int, tt__HostnameInformation *const*, const char *);
SOAP_FMAC3 tt__HostnameInformation ** SOAP_FMAC4 soap_in_PointerTott__HostnameInformation(struct soap*, const char*, tt__HostnameInformation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__HostnameInformation(struct soap*, tt__HostnameInformation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__HostnameInformation
#define soap_write_PointerTott__HostnameInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__HostnameInformation(soap, data), 0) || soap_put_PointerTott__HostnameInformation(soap, data, "tt:HostnameInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__HostnameInformation ** SOAP_FMAC4 soap_get_PointerTott__HostnameInformation(struct soap*, tt__HostnameInformation **, const char*, const char*);

#ifndef soap_read_PointerTott__HostnameInformation
#define soap_read_PointerTott__HostnameInformation(soap, data) ( ((data) ? (soap_default_PointerTott__HostnameInformation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__HostnameInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Capabilities
#define SOAP_TYPE_PointerTott__Capabilities (1044)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Capabilities(struct soap*, tt__Capabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Capabilities(struct soap*, const char *, int, tt__Capabilities *const*, const char *);
SOAP_FMAC3 tt__Capabilities ** SOAP_FMAC4 soap_in_PointerTott__Capabilities(struct soap*, const char*, tt__Capabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Capabilities(struct soap*, tt__Capabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Capabilities
#define soap_write_PointerTott__Capabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Capabilities(soap, data), 0) || soap_put_PointerTott__Capabilities(soap, data, "tt:Capabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Capabilities ** SOAP_FMAC4 soap_get_PointerTott__Capabilities(struct soap*, tt__Capabilities **, const char*, const char*);

#ifndef soap_read_PointerTott__Capabilities
#define soap_read_PointerTott__Capabilities(soap, data) ( ((data) ? (soap_default_PointerTott__Capabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Capabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__User
#define SOAP_TYPE_PointerTott__User (1040)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__User(struct soap*, tt__User *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__User(struct soap*, const char *, int, tt__User *const*, const char *);
SOAP_FMAC3 tt__User ** SOAP_FMAC4 soap_in_PointerTott__User(struct soap*, const char*, tt__User **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__User(struct soap*, tt__User *const*, const char*, const char*);

#ifndef soap_write_PointerTott__User
#define soap_write_PointerTott__User(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__User(soap, data), 0) || soap_put_PointerTott__User(soap, data, "tt:User", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__User ** SOAP_FMAC4 soap_get_PointerTott__User(struct soap*, tt__User **, const char*, const char*);

#ifndef soap_read_PointerTott__User
#define soap_read_PointerTott__User(soap, data) ( ((data) ? (soap_default_PointerTott__User(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__User(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RemoteUser
#define SOAP_TYPE_PointerTott__RemoteUser (1039)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RemoteUser(struct soap*, tt__RemoteUser *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RemoteUser(struct soap*, const char *, int, tt__RemoteUser *const*, const char *);
SOAP_FMAC3 tt__RemoteUser ** SOAP_FMAC4 soap_in_PointerTott__RemoteUser(struct soap*, const char*, tt__RemoteUser **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RemoteUser(struct soap*, tt__RemoteUser *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RemoteUser
#define soap_write_PointerTott__RemoteUser(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RemoteUser(soap, data), 0) || soap_put_PointerTott__RemoteUser(soap, data, "tt:RemoteUser", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RemoteUser ** SOAP_FMAC4 soap_get_PointerTott__RemoteUser(struct soap*, tt__RemoteUser **, const char*, const char*);

#ifndef soap_read_PointerTott__RemoteUser
#define soap_read_PointerTott__RemoteUser(soap, data) ( ((data) ? (soap_default_PointerTott__RemoteUser(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__RemoteUser(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__NetworkHost
#define SOAP_TYPE_PointerTott__NetworkHost (1037)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__NetworkHost(struct soap*, tt__NetworkHost *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__NetworkHost(struct soap*, const char *, int, tt__NetworkHost *const*, const char *);
SOAP_FMAC3 tt__NetworkHost ** SOAP_FMAC4 soap_in_PointerTott__NetworkHost(struct soap*, const char*, tt__NetworkHost **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__NetworkHost(struct soap*, tt__NetworkHost *const*, const char*, const char*);

#ifndef soap_write_PointerTott__NetworkHost
#define soap_write_PointerTott__NetworkHost(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__NetworkHost(soap, data), 0) || soap_put_PointerTott__NetworkHost(soap, data, "tt:NetworkHost", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__NetworkHost ** SOAP_FMAC4 soap_get_PointerTott__NetworkHost(struct soap*, tt__NetworkHost **, const char*, const char*);

#ifndef soap_read_PointerTott__NetworkHost
#define soap_read_PointerTott__NetworkHost(soap, data) ( ((data) ? (soap_default_PointerTott__NetworkHost(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__NetworkHost(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__Scope
#define SOAP_TYPE_PointerTott__Scope (1034)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__Scope(struct soap*, tt__Scope *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__Scope(struct soap*, const char *, int, tt__Scope *const*, const char *);
SOAP_FMAC3 tt__Scope ** SOAP_FMAC4 soap_in_PointerTott__Scope(struct soap*, const char*, tt__Scope **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__Scope(struct soap*, tt__Scope *const*, const char*, const char*);

#ifndef soap_write_PointerTott__Scope
#define soap_write_PointerTott__Scope(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__Scope(soap, data), 0) || soap_put_PointerTott__Scope(soap, data, "tt:Scope", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__Scope ** SOAP_FMAC4 soap_get_PointerTott__Scope(struct soap*, tt__Scope **, const char*, const char*);

#ifndef soap_read_PointerTott__Scope
#define soap_read_PointerTott__Scope(soap, data) ( ((data) ? (soap_default_PointerTott__Scope(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__Scope(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SystemLog
#define SOAP_TYPE_PointerTott__SystemLog (1033)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SystemLog(struct soap*, tt__SystemLog *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SystemLog(struct soap*, const char *, int, tt__SystemLog *const*, const char *);
SOAP_FMAC3 tt__SystemLog ** SOAP_FMAC4 soap_in_PointerTott__SystemLog(struct soap*, const char*, tt__SystemLog **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SystemLog(struct soap*, tt__SystemLog *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SystemLog
#define soap_write_PointerTott__SystemLog(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SystemLog(soap, data), 0) || soap_put_PointerTott__SystemLog(soap, data, "tt:SystemLog", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemLog ** SOAP_FMAC4 soap_get_PointerTott__SystemLog(struct soap*, tt__SystemLog **, const char*, const char*);

#ifndef soap_read_PointerTott__SystemLog
#define soap_read_PointerTott__SystemLog(soap, data) ( ((data) ? (soap_default_PointerTott__SystemLog(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__SystemLog(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SupportInformation
#define SOAP_TYPE_PointerTott__SupportInformation (1032)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SupportInformation(struct soap*, tt__SupportInformation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SupportInformation(struct soap*, const char *, int, tt__SupportInformation *const*, const char *);
SOAP_FMAC3 tt__SupportInformation ** SOAP_FMAC4 soap_in_PointerTott__SupportInformation(struct soap*, const char*, tt__SupportInformation **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SupportInformation(struct soap*, tt__SupportInformation *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SupportInformation
#define soap_write_PointerTott__SupportInformation(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SupportInformation(soap, data), 0) || soap_put_PointerTott__SupportInformation(soap, data, "tt:SupportInformation", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SupportInformation ** SOAP_FMAC4 soap_get_PointerTott__SupportInformation(struct soap*, tt__SupportInformation **, const char*, const char*);

#ifndef soap_read_PointerTott__SupportInformation
#define soap_read_PointerTott__SupportInformation(soap, data) ( ((data) ? (soap_default_PointerTott__SupportInformation(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__SupportInformation(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__BackupFile
#define SOAP_TYPE_PointerTott__BackupFile (1030)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__BackupFile(struct soap*, tt__BackupFile *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__BackupFile(struct soap*, const char *, int, tt__BackupFile *const*, const char *);
SOAP_FMAC3 tt__BackupFile ** SOAP_FMAC4 soap_in_PointerTott__BackupFile(struct soap*, const char*, tt__BackupFile **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__BackupFile(struct soap*, tt__BackupFile *const*, const char*, const char*);

#ifndef soap_write_PointerTott__BackupFile
#define soap_write_PointerTott__BackupFile(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__BackupFile(soap, data), 0) || soap_put_PointerTott__BackupFile(soap, data, "tt:BackupFile", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__BackupFile ** SOAP_FMAC4 soap_get_PointerTott__BackupFile(struct soap*, tt__BackupFile **, const char*, const char*);

#ifndef soap_read_PointerTott__BackupFile
#define soap_read_PointerTott__BackupFile(soap, data) ( ((data) ? (soap_default_PointerTott__BackupFile(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__BackupFile(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AttachmentData
#define SOAP_TYPE_PointerTott__AttachmentData (1029)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AttachmentData(struct soap*, tt__AttachmentData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AttachmentData(struct soap*, const char *, int, tt__AttachmentData *const*, const char *);
SOAP_FMAC3 tt__AttachmentData ** SOAP_FMAC4 soap_in_PointerTott__AttachmentData(struct soap*, const char*, tt__AttachmentData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AttachmentData(struct soap*, tt__AttachmentData *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AttachmentData
#define soap_write_PointerTott__AttachmentData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AttachmentData(soap, data), 0) || soap_put_PointerTott__AttachmentData(soap, data, "tt:AttachmentData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AttachmentData ** SOAP_FMAC4 soap_get_PointerTott__AttachmentData(struct soap*, tt__AttachmentData **, const char*, const char*);

#ifndef soap_read_PointerTott__AttachmentData
#define soap_read_PointerTott__AttachmentData(soap, data) ( ((data) ? (soap_default_PointerTott__AttachmentData(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__AttachmentData(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__SystemDateTime
#define SOAP_TYPE_PointerTott__SystemDateTime (1028)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__SystemDateTime(struct soap*, tt__SystemDateTime *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__SystemDateTime(struct soap*, const char *, int, tt__SystemDateTime *const*, const char *);
SOAP_FMAC3 tt__SystemDateTime ** SOAP_FMAC4 soap_in_PointerTott__SystemDateTime(struct soap*, const char*, tt__SystemDateTime **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__SystemDateTime(struct soap*, tt__SystemDateTime *const*, const char*, const char*);

#ifndef soap_write_PointerTott__SystemDateTime
#define soap_write_PointerTott__SystemDateTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__SystemDateTime(soap, data), 0) || soap_put_PointerTott__SystemDateTime(soap, data, "tt:SystemDateTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__SystemDateTime ** SOAP_FMAC4 soap_get_PointerTott__SystemDateTime(struct soap*, tt__SystemDateTime **, const char*, const char*);

#ifndef soap_read_PointerTott__SystemDateTime
#define soap_read_PointerTott__SystemDateTime(soap, data) ( ((data) ? (soap_default_PointerTott__SystemDateTime(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__SystemDateTime(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__DateTime
#define SOAP_TYPE_PointerTott__DateTime (1027)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__DateTime(struct soap*, tt__DateTime *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__DateTime(struct soap*, const char *, int, tt__DateTime *const*, const char *);
SOAP_FMAC3 tt__DateTime ** SOAP_FMAC4 soap_in_PointerTott__DateTime(struct soap*, const char*, tt__DateTime **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__DateTime(struct soap*, tt__DateTime *const*, const char*, const char*);

#ifndef soap_write_PointerTott__DateTime
#define soap_write_PointerTott__DateTime(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__DateTime(soap, data), 0) || soap_put_PointerTott__DateTime(soap, data, "tt:DateTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DateTime ** SOAP_FMAC4 soap_get_PointerTott__DateTime(struct soap*, tt__DateTime **, const char*, const char*);

#ifndef soap_read_PointerTott__DateTime
#define soap_read_PointerTott__DateTime(soap, data) ( ((data) ? (soap_default_PointerTott__DateTime(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__DateTime(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__TimeZone
#define SOAP_TYPE_PointerTott__TimeZone (1026)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__TimeZone(struct soap*, tt__TimeZone *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__TimeZone(struct soap*, const char *, int, tt__TimeZone *const*, const char *);
SOAP_FMAC3 tt__TimeZone ** SOAP_FMAC4 soap_in_PointerTott__TimeZone(struct soap*, const char*, tt__TimeZone **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__TimeZone(struct soap*, tt__TimeZone *const*, const char*, const char*);

#ifndef soap_write_PointerTott__TimeZone
#define soap_write_PointerTott__TimeZone(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__TimeZone(soap, data), 0) || soap_put_PointerTott__TimeZone(soap, data, "tt:TimeZone", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__TimeZone ** SOAP_FMAC4 soap_get_PointerTott__TimeZone(struct soap*, tt__TimeZone **, const char*, const char*);

#ifndef soap_read_PointerTott__TimeZone
#define soap_read_PointerTott__TimeZone(soap, data) ( ((data) ? (soap_default_PointerTott__TimeZone(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__TimeZone(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotds__DeviceServiceCapabilities
#define SOAP_TYPE_PointerTotds__DeviceServiceCapabilities (1025)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotds__DeviceServiceCapabilities(struct soap*, tds__DeviceServiceCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotds__DeviceServiceCapabilities(struct soap*, const char *, int, tds__DeviceServiceCapabilities *const*, const char *);
SOAP_FMAC3 tds__DeviceServiceCapabilities ** SOAP_FMAC4 soap_in_PointerTotds__DeviceServiceCapabilities(struct soap*, const char*, tds__DeviceServiceCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotds__DeviceServiceCapabilities(struct soap*, tds__DeviceServiceCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTotds__DeviceServiceCapabilities
#define soap_write_PointerTotds__DeviceServiceCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotds__DeviceServiceCapabilities(soap, data), 0) || soap_put_PointerTotds__DeviceServiceCapabilities(soap, data, "tds:DeviceServiceCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__DeviceServiceCapabilities ** SOAP_FMAC4 soap_get_PointerTotds__DeviceServiceCapabilities(struct soap*, tds__DeviceServiceCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTotds__DeviceServiceCapabilities
#define soap_read_PointerTotds__DeviceServiceCapabilities(soap, data) ( ((data) ? (soap_default_PointerTotds__DeviceServiceCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTotds__DeviceServiceCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotds__Service
#define SOAP_TYPE_PointerTotds__Service (1023)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotds__Service(struct soap*, tds__Service *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotds__Service(struct soap*, const char *, int, tds__Service *const*, const char *);
SOAP_FMAC3 tds__Service ** SOAP_FMAC4 soap_in_PointerTotds__Service(struct soap*, const char*, tds__Service **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotds__Service(struct soap*, tds__Service *const*, const char*, const char*);

#ifndef soap_write_PointerTotds__Service
#define soap_write_PointerTotds__Service(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotds__Service(soap, data), 0) || soap_put_PointerTotds__Service(soap, data, "tds:Service", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__Service ** SOAP_FMAC4 soap_get_PointerTotds__Service(struct soap*, tds__Service **, const char*, const char*);

#ifndef soap_read_PointerTotds__Service
#define soap_read_PointerTotds__Service(soap, data) ( ((data) ? (soap_default_PointerTotds__Service(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTotds__Service(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__StorageConfigurationData_Extension
#define SOAP_TYPE_PointerTo_tds__StorageConfigurationData_Extension (1022)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__StorageConfigurationData_Extension(struct soap*, _tds__StorageConfigurationData_Extension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__StorageConfigurationData_Extension(struct soap*, const char *, int, _tds__StorageConfigurationData_Extension *const*, const char *);
SOAP_FMAC3 _tds__StorageConfigurationData_Extension ** SOAP_FMAC4 soap_in_PointerTo_tds__StorageConfigurationData_Extension(struct soap*, const char*, _tds__StorageConfigurationData_Extension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__StorageConfigurationData_Extension(struct soap*, _tds__StorageConfigurationData_Extension *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__StorageConfigurationData_Extension
#define soap_write_PointerTo_tds__StorageConfigurationData_Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__StorageConfigurationData_Extension(soap, data), 0) || soap_put_PointerTo_tds__StorageConfigurationData_Extension(soap, data, "tds:StorageConfigurationData-Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__StorageConfigurationData_Extension ** SOAP_FMAC4 soap_get_PointerTo_tds__StorageConfigurationData_Extension(struct soap*, _tds__StorageConfigurationData_Extension **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__StorageConfigurationData_Extension
#define soap_read_PointerTo_tds__StorageConfigurationData_Extension(soap, data) ( ((data) ? (soap_default_PointerTo_tds__StorageConfigurationData_Extension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__StorageConfigurationData_Extension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotds__UserCredential
#define SOAP_TYPE_PointerTotds__UserCredential (1020)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotds__UserCredential(struct soap*, tds__UserCredential *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotds__UserCredential(struct soap*, const char *, int, tds__UserCredential *const*, const char *);
SOAP_FMAC3 tds__UserCredential ** SOAP_FMAC4 soap_in_PointerTotds__UserCredential(struct soap*, const char*, tds__UserCredential **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotds__UserCredential(struct soap*, tds__UserCredential *const*, const char*, const char*);

#ifndef soap_write_PointerTotds__UserCredential
#define soap_write_PointerTotds__UserCredential(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotds__UserCredential(soap, data), 0) || soap_put_PointerTotds__UserCredential(soap, data, "tds:UserCredential", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__UserCredential ** SOAP_FMAC4 soap_get_PointerTotds__UserCredential(struct soap*, tds__UserCredential **, const char*, const char*);

#ifndef soap_read_PointerTotds__UserCredential
#define soap_read_PointerTotds__UserCredential(soap, data) ( ((data) ? (soap_default_PointerTotds__UserCredential(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTotds__UserCredential(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToxsd__anyURI
#define SOAP_TYPE_PointerToxsd__anyURI (1019)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__anyURI(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__anyURI(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToxsd__anyURI(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__anyURI(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerToxsd__anyURI
#define soap_write_PointerToxsd__anyURI(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToxsd__anyURI(soap, data), 0) || soap_put_PointerToxsd__anyURI(soap, data, "xsd:anyURI", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToxsd__anyURI(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerToxsd__anyURI
#define soap_read_PointerToxsd__anyURI(soap, data) ( ((data) ? (soap_default_PointerToxsd__anyURI(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerToxsd__anyURI(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__UserCredential_Extension
#define SOAP_TYPE_PointerTo_tds__UserCredential_Extension (1018)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__UserCredential_Extension(struct soap*, _tds__UserCredential_Extension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__UserCredential_Extension(struct soap*, const char *, int, _tds__UserCredential_Extension *const*, const char *);
SOAP_FMAC3 _tds__UserCredential_Extension ** SOAP_FMAC4 soap_in_PointerTo_tds__UserCredential_Extension(struct soap*, const char*, _tds__UserCredential_Extension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__UserCredential_Extension(struct soap*, _tds__UserCredential_Extension *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__UserCredential_Extension
#define soap_write_PointerTo_tds__UserCredential_Extension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__UserCredential_Extension(soap, data), 0) || soap_put_PointerTo_tds__UserCredential_Extension(soap, data, "tds:UserCredential-Extension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__UserCredential_Extension ** SOAP_FMAC4 soap_get_PointerTo_tds__UserCredential_Extension(struct soap*, _tds__UserCredential_Extension **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__UserCredential_Extension
#define soap_read_PointerTo_tds__UserCredential_Extension(soap, data) ( ((data) ? (soap_default_PointerTo_tds__UserCredential_Extension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__UserCredential_Extension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__StringAttrList
#define SOAP_TYPE_PointerTott__StringAttrList (1016)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__StringAttrList(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__StringAttrList(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTott__StringAttrList(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__StringAttrList(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTott__StringAttrList
#define soap_write_PointerTott__StringAttrList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__StringAttrList(soap, data), 0) || soap_put_PointerTott__StringAttrList(soap, data, "tt:StringAttrList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTott__StringAttrList(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTott__StringAttrList
#define soap_read_PointerTott__StringAttrList(soap, data) ( ((data) ? (soap_default_PointerTott__StringAttrList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__StringAttrList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotds__EAPMethodTypes
#define SOAP_TYPE_PointerTotds__EAPMethodTypes (1015)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotds__EAPMethodTypes(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotds__EAPMethodTypes(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTotds__EAPMethodTypes(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotds__EAPMethodTypes(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTotds__EAPMethodTypes
#define soap_write_PointerTotds__EAPMethodTypes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotds__EAPMethodTypes(soap, data), 0) || soap_put_PointerTotds__EAPMethodTypes(soap, data, "tds:EAPMethodTypes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTotds__EAPMethodTypes(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTotds__EAPMethodTypes
#define soap_read_PointerTotds__EAPMethodTypes(soap, data) ( ((data) ? (soap_default_PointerTotds__EAPMethodTypes(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTotds__EAPMethodTypes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotds__MiscCapabilities
#define SOAP_TYPE_PointerTotds__MiscCapabilities (1014)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotds__MiscCapabilities(struct soap*, tds__MiscCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotds__MiscCapabilities(struct soap*, const char *, int, tds__MiscCapabilities *const*, const char *);
SOAP_FMAC3 tds__MiscCapabilities ** SOAP_FMAC4 soap_in_PointerTotds__MiscCapabilities(struct soap*, const char*, tds__MiscCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotds__MiscCapabilities(struct soap*, tds__MiscCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTotds__MiscCapabilities
#define soap_write_PointerTotds__MiscCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotds__MiscCapabilities(soap, data), 0) || soap_put_PointerTotds__MiscCapabilities(soap, data, "tds:MiscCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__MiscCapabilities ** SOAP_FMAC4 soap_get_PointerTotds__MiscCapabilities(struct soap*, tds__MiscCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTotds__MiscCapabilities
#define soap_read_PointerTotds__MiscCapabilities(soap, data) ( ((data) ? (soap_default_PointerTotds__MiscCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTotds__MiscCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotds__SystemCapabilities
#define SOAP_TYPE_PointerTotds__SystemCapabilities (1013)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotds__SystemCapabilities(struct soap*, tds__SystemCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotds__SystemCapabilities(struct soap*, const char *, int, tds__SystemCapabilities *const*, const char *);
SOAP_FMAC3 tds__SystemCapabilities ** SOAP_FMAC4 soap_in_PointerTotds__SystemCapabilities(struct soap*, const char*, tds__SystemCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotds__SystemCapabilities(struct soap*, tds__SystemCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTotds__SystemCapabilities
#define soap_write_PointerTotds__SystemCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotds__SystemCapabilities(soap, data), 0) || soap_put_PointerTotds__SystemCapabilities(soap, data, "tds:SystemCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__SystemCapabilities ** SOAP_FMAC4 soap_get_PointerTotds__SystemCapabilities(struct soap*, tds__SystemCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTotds__SystemCapabilities
#define soap_read_PointerTotds__SystemCapabilities(soap, data) ( ((data) ? (soap_default_PointerTotds__SystemCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTotds__SystemCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotds__SecurityCapabilities
#define SOAP_TYPE_PointerTotds__SecurityCapabilities (1012)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotds__SecurityCapabilities(struct soap*, tds__SecurityCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotds__SecurityCapabilities(struct soap*, const char *, int, tds__SecurityCapabilities *const*, const char *);
SOAP_FMAC3 tds__SecurityCapabilities ** SOAP_FMAC4 soap_in_PointerTotds__SecurityCapabilities(struct soap*, const char*, tds__SecurityCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotds__SecurityCapabilities(struct soap*, tds__SecurityCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTotds__SecurityCapabilities
#define soap_write_PointerTotds__SecurityCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotds__SecurityCapabilities(soap, data), 0) || soap_put_PointerTotds__SecurityCapabilities(soap, data, "tds:SecurityCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__SecurityCapabilities ** SOAP_FMAC4 soap_get_PointerTotds__SecurityCapabilities(struct soap*, tds__SecurityCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTotds__SecurityCapabilities
#define soap_read_PointerTotds__SecurityCapabilities(soap, data) ( ((data) ? (soap_default_PointerTotds__SecurityCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTotds__SecurityCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotds__NetworkCapabilities
#define SOAP_TYPE_PointerTotds__NetworkCapabilities (1011)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotds__NetworkCapabilities(struct soap*, tds__NetworkCapabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotds__NetworkCapabilities(struct soap*, const char *, int, tds__NetworkCapabilities *const*, const char *);
SOAP_FMAC3 tds__NetworkCapabilities ** SOAP_FMAC4 soap_in_PointerTotds__NetworkCapabilities(struct soap*, const char*, tds__NetworkCapabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotds__NetworkCapabilities(struct soap*, tds__NetworkCapabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTotds__NetworkCapabilities
#define soap_write_PointerTotds__NetworkCapabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotds__NetworkCapabilities(soap, data), 0) || soap_put_PointerTotds__NetworkCapabilities(soap, data, "tds:NetworkCapabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tds__NetworkCapabilities ** SOAP_FMAC4 soap_get_PointerTotds__NetworkCapabilities(struct soap*, tds__NetworkCapabilities **, const char*, const char*);

#ifndef soap_read_PointerTotds__NetworkCapabilities
#define soap_read_PointerTotds__NetworkCapabilities(soap, data) ( ((data) ? (soap_default_PointerTotds__NetworkCapabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTotds__NetworkCapabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__OnvifVersion
#define SOAP_TYPE_PointerTott__OnvifVersion (1010)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__OnvifVersion(struct soap*, tt__OnvifVersion *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__OnvifVersion(struct soap*, const char *, int, tt__OnvifVersion *const*, const char *);
SOAP_FMAC3 tt__OnvifVersion ** SOAP_FMAC4 soap_in_PointerTott__OnvifVersion(struct soap*, const char*, tt__OnvifVersion **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__OnvifVersion(struct soap*, tt__OnvifVersion *const*, const char*, const char*);

#ifndef soap_write_PointerTott__OnvifVersion
#define soap_write_PointerTott__OnvifVersion(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__OnvifVersion(soap, data), 0) || soap_put_PointerTott__OnvifVersion(soap, data, "tt:OnvifVersion", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__OnvifVersion ** SOAP_FMAC4 soap_get_PointerTott__OnvifVersion(struct soap*, tt__OnvifVersion **, const char*, const char*);

#ifndef soap_read_PointerTott__OnvifVersion
#define soap_read_PointerTott__OnvifVersion(soap, data) ( ((data) ? (soap_default_PointerTott__OnvifVersion(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__OnvifVersion(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_tds__Service_Capabilities
#define SOAP_TYPE_PointerTo_tds__Service_Capabilities (1009)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_tds__Service_Capabilities(struct soap*, _tds__Service_Capabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_tds__Service_Capabilities(struct soap*, const char *, int, _tds__Service_Capabilities *const*, const char *);
SOAP_FMAC3 _tds__Service_Capabilities ** SOAP_FMAC4 soap_in_PointerTo_tds__Service_Capabilities(struct soap*, const char*, _tds__Service_Capabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_tds__Service_Capabilities(struct soap*, _tds__Service_Capabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTo_tds__Service_Capabilities
#define soap_write_PointerTo_tds__Service_Capabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_tds__Service_Capabilities(soap, data), 0) || soap_put_PointerTo_tds__Service_Capabilities(soap, data, "tds:Service-Capabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 _tds__Service_Capabilities ** SOAP_FMAC4 soap_get_PointerTo_tds__Service_Capabilities(struct soap*, _tds__Service_Capabilities **, const char*, const char*);

#ifndef soap_read_PointerTo_tds__Service_Capabilities
#define soap_read_PointerTo_tds__Service_Capabilities(soap, data) ( ((data) ? (soap_default_PointerTo_tds__Service_Capabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_tds__Service_Capabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToxsd__integer
#define SOAP_TYPE_PointerToxsd__integer (1007)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__integer(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__integer(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerToxsd__integer(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__integer(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerToxsd__integer
#define soap_write_PointerToxsd__integer(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToxsd__integer(soap, data), 0) || soap_put_PointerToxsd__integer(soap, data, "xsd:integer", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerToxsd__integer(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerToxsd__integer
#define soap_read_PointerToxsd__integer(soap, data) ( ((data) ? (soap_default_PointerToxsd__integer(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerToxsd__integer(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToxsd__duration
#define SOAP_TYPE_PointerToxsd__duration (1006)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__duration(struct soap*, LONG64 *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__duration(struct soap*, const char *, int, LONG64 *const*, const char *);
SOAP_FMAC3 LONG64 ** SOAP_FMAC4 soap_in_PointerToxsd__duration(struct soap*, const char*, LONG64 **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__duration(struct soap*, LONG64 *const*, const char*, const char*);

#ifndef soap_write_PointerToxsd__duration
#define soap_write_PointerToxsd__duration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToxsd__duration(soap, data), 0) || soap_put_PointerToxsd__duration(soap, data, "xsd:duration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 LONG64 ** SOAP_FMAC4 soap_get_PointerToxsd__duration(struct soap*, LONG64 **, const char*, const char*);

#ifndef soap_read_PointerToxsd__duration
#define soap_read_PointerToxsd__duration(soap, data) ( ((data) ? (soap_default_PointerToxsd__duration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerToxsd__duration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotmd__SerialData
#define SOAP_TYPE_PointerTotmd__SerialData (1005)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotmd__SerialData(struct soap*, tmd__SerialData *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotmd__SerialData(struct soap*, const char *, int, tmd__SerialData *const*, const char *);
SOAP_FMAC3 tmd__SerialData ** SOAP_FMAC4 soap_in_PointerTotmd__SerialData(struct soap*, const char*, tmd__SerialData **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotmd__SerialData(struct soap*, tmd__SerialData *const*, const char*, const char*);

#ifndef soap_write_PointerTotmd__SerialData
#define soap_write_PointerTotmd__SerialData(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotmd__SerialData(soap, data), 0) || soap_put_PointerTotmd__SerialData(soap, data, "tmd:SerialData", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tmd__SerialData ** SOAP_FMAC4 soap_get_PointerTotmd__SerialData(struct soap*, tmd__SerialData **, const char*, const char*);

#ifndef soap_read_PointerTotmd__SerialData
#define soap_read_PointerTotmd__SerialData(soap, data) ( ((data) ? (soap_default_PointerTotmd__SerialData(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTotmd__SerialData(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotmd__SerialPortConfigurationOptions
#define SOAP_TYPE_PointerTotmd__SerialPortConfigurationOptions (1004)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotmd__SerialPortConfigurationOptions(struct soap*, tmd__SerialPortConfigurationOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotmd__SerialPortConfigurationOptions(struct soap*, const char *, int, tmd__SerialPortConfigurationOptions *const*, const char *);
SOAP_FMAC3 tmd__SerialPortConfigurationOptions ** SOAP_FMAC4 soap_in_PointerTotmd__SerialPortConfigurationOptions(struct soap*, const char*, tmd__SerialPortConfigurationOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotmd__SerialPortConfigurationOptions(struct soap*, tmd__SerialPortConfigurationOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTotmd__SerialPortConfigurationOptions
#define soap_write_PointerTotmd__SerialPortConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotmd__SerialPortConfigurationOptions(soap, data), 0) || soap_put_PointerTotmd__SerialPortConfigurationOptions(soap, data, "tmd:SerialPortConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tmd__SerialPortConfigurationOptions ** SOAP_FMAC4 soap_get_PointerTotmd__SerialPortConfigurationOptions(struct soap*, tmd__SerialPortConfigurationOptions **, const char*, const char*);

#ifndef soap_read_PointerTotmd__SerialPortConfigurationOptions
#define soap_read_PointerTotmd__SerialPortConfigurationOptions(soap, data) ( ((data) ? (soap_default_PointerTotmd__SerialPortConfigurationOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTotmd__SerialPortConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotmd__SerialPortConfiguration
#define SOAP_TYPE_PointerTotmd__SerialPortConfiguration (1003)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotmd__SerialPortConfiguration(struct soap*, tmd__SerialPortConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotmd__SerialPortConfiguration(struct soap*, const char *, int, tmd__SerialPortConfiguration *const*, const char *);
SOAP_FMAC3 tmd__SerialPortConfiguration ** SOAP_FMAC4 soap_in_PointerTotmd__SerialPortConfiguration(struct soap*, const char*, tmd__SerialPortConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotmd__SerialPortConfiguration(struct soap*, tmd__SerialPortConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTotmd__SerialPortConfiguration
#define soap_write_PointerTotmd__SerialPortConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotmd__SerialPortConfiguration(soap, data), 0) || soap_put_PointerTotmd__SerialPortConfiguration(soap, data, "tmd:SerialPortConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tmd__SerialPortConfiguration ** SOAP_FMAC4 soap_get_PointerTotmd__SerialPortConfiguration(struct soap*, tmd__SerialPortConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTotmd__SerialPortConfiguration
#define soap_read_PointerTotmd__SerialPortConfiguration(soap, data) ( ((data) ? (soap_default_PointerTotmd__SerialPortConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTotmd__SerialPortConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotmd__SerialPort
#define SOAP_TYPE_PointerTotmd__SerialPort (1001)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotmd__SerialPort(struct soap*, tmd__SerialPort *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotmd__SerialPort(struct soap*, const char *, int, tmd__SerialPort *const*, const char *);
SOAP_FMAC3 tmd__SerialPort ** SOAP_FMAC4 soap_in_PointerTotmd__SerialPort(struct soap*, const char*, tmd__SerialPort **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotmd__SerialPort(struct soap*, tmd__SerialPort *const*, const char*, const char*);

#ifndef soap_write_PointerTotmd__SerialPort
#define soap_write_PointerTotmd__SerialPort(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotmd__SerialPort(soap, data), 0) || soap_put_PointerTotmd__SerialPort(soap, data, "tmd:SerialPort", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tmd__SerialPort ** SOAP_FMAC4 soap_get_PointerTotmd__SerialPort(struct soap*, tmd__SerialPort **, const char*, const char*);

#ifndef soap_read_PointerTotmd__SerialPort
#define soap_read_PointerTotmd__SerialPort(soap, data) ( ((data) ? (soap_default_PointerTotmd__SerialPort(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTotmd__SerialPort(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotmd__DigitalInputConfigurationOptions
#define SOAP_TYPE_PointerTotmd__DigitalInputConfigurationOptions (1000)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotmd__DigitalInputConfigurationOptions(struct soap*, tmd__DigitalInputConfigurationOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotmd__DigitalInputConfigurationOptions(struct soap*, const char *, int, tmd__DigitalInputConfigurationOptions *const*, const char *);
SOAP_FMAC3 tmd__DigitalInputConfigurationOptions ** SOAP_FMAC4 soap_in_PointerTotmd__DigitalInputConfigurationOptions(struct soap*, const char*, tmd__DigitalInputConfigurationOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotmd__DigitalInputConfigurationOptions(struct soap*, tmd__DigitalInputConfigurationOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTotmd__DigitalInputConfigurationOptions
#define soap_write_PointerTotmd__DigitalInputConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotmd__DigitalInputConfigurationOptions(soap, data), 0) || soap_put_PointerTotmd__DigitalInputConfigurationOptions(soap, data, "tmd:DigitalInputConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tmd__DigitalInputConfigurationOptions ** SOAP_FMAC4 soap_get_PointerTotmd__DigitalInputConfigurationOptions(struct soap*, tmd__DigitalInputConfigurationOptions **, const char*, const char*);

#ifndef soap_read_PointerTotmd__DigitalInputConfigurationOptions
#define soap_read_PointerTotmd__DigitalInputConfigurationOptions(soap, data) ( ((data) ? (soap_default_PointerTotmd__DigitalInputConfigurationOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTotmd__DigitalInputConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__DigitalInput
#define SOAP_TYPE_PointerTott__DigitalInput (998)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__DigitalInput(struct soap*, tt__DigitalInput *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__DigitalInput(struct soap*, const char *, int, tt__DigitalInput *const*, const char *);
SOAP_FMAC3 tt__DigitalInput ** SOAP_FMAC4 soap_in_PointerTott__DigitalInput(struct soap*, const char*, tt__DigitalInput **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__DigitalInput(struct soap*, tt__DigitalInput *const*, const char*, const char*);

#ifndef soap_write_PointerTott__DigitalInput
#define soap_write_PointerTott__DigitalInput(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__DigitalInput(soap, data), 0) || soap_put_PointerTott__DigitalInput(soap, data, "tt:DigitalInput", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__DigitalInput ** SOAP_FMAC4 soap_get_PointerTott__DigitalInput(struct soap*, tt__DigitalInput **, const char*, const char*);

#ifndef soap_read_PointerTott__DigitalInput
#define soap_read_PointerTott__DigitalInput(soap, data) ( ((data) ? (soap_default_PointerTott__DigitalInput(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__DigitalInput(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__RelayOutput
#define SOAP_TYPE_PointerTott__RelayOutput (997)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__RelayOutput(struct soap*, tt__RelayOutput *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__RelayOutput(struct soap*, const char *, int, tt__RelayOutput *const*, const char *);
SOAP_FMAC3 tt__RelayOutput ** SOAP_FMAC4 soap_in_PointerTott__RelayOutput(struct soap*, const char*, tt__RelayOutput **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__RelayOutput(struct soap*, tt__RelayOutput *const*, const char*, const char*);

#ifndef soap_write_PointerTott__RelayOutput
#define soap_write_PointerTott__RelayOutput(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__RelayOutput(soap, data), 0) || soap_put_PointerTott__RelayOutput(soap, data, "tt:RelayOutput", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__RelayOutput ** SOAP_FMAC4 soap_get_PointerTott__RelayOutput(struct soap*, tt__RelayOutput **, const char*, const char*);

#ifndef soap_read_PointerTott__RelayOutput
#define soap_read_PointerTott__RelayOutput(soap, data) ( ((data) ? (soap_default_PointerTott__RelayOutput(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__RelayOutput(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AudioOutputConfigurationOptions
#define SOAP_TYPE_PointerTott__AudioOutputConfigurationOptions (996)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AudioOutputConfigurationOptions(struct soap*, tt__AudioOutputConfigurationOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AudioOutputConfigurationOptions(struct soap*, const char *, int, tt__AudioOutputConfigurationOptions *const*, const char *);
SOAP_FMAC3 tt__AudioOutputConfigurationOptions ** SOAP_FMAC4 soap_in_PointerTott__AudioOutputConfigurationOptions(struct soap*, const char*, tt__AudioOutputConfigurationOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AudioOutputConfigurationOptions(struct soap*, tt__AudioOutputConfigurationOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AudioOutputConfigurationOptions
#define soap_write_PointerTott__AudioOutputConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AudioOutputConfigurationOptions(soap, data), 0) || soap_put_PointerTott__AudioOutputConfigurationOptions(soap, data, "tt:AudioOutputConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioOutputConfigurationOptions ** SOAP_FMAC4 soap_get_PointerTott__AudioOutputConfigurationOptions(struct soap*, tt__AudioOutputConfigurationOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__AudioOutputConfigurationOptions
#define soap_read_PointerTott__AudioOutputConfigurationOptions(soap, data) ( ((data) ? (soap_default_PointerTott__AudioOutputConfigurationOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__AudioOutputConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AudioSourceConfigurationOptions
#define SOAP_TYPE_PointerTott__AudioSourceConfigurationOptions (995)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AudioSourceConfigurationOptions(struct soap*, tt__AudioSourceConfigurationOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AudioSourceConfigurationOptions(struct soap*, const char *, int, tt__AudioSourceConfigurationOptions *const*, const char *);
SOAP_FMAC3 tt__AudioSourceConfigurationOptions ** SOAP_FMAC4 soap_in_PointerTott__AudioSourceConfigurationOptions(struct soap*, const char*, tt__AudioSourceConfigurationOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AudioSourceConfigurationOptions(struct soap*, tt__AudioSourceConfigurationOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AudioSourceConfigurationOptions
#define soap_write_PointerTott__AudioSourceConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AudioSourceConfigurationOptions(soap, data), 0) || soap_put_PointerTott__AudioSourceConfigurationOptions(soap, data, "tt:AudioSourceConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioSourceConfigurationOptions ** SOAP_FMAC4 soap_get_PointerTott__AudioSourceConfigurationOptions(struct soap*, tt__AudioSourceConfigurationOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__AudioSourceConfigurationOptions
#define soap_read_PointerTott__AudioSourceConfigurationOptions(soap, data) ( ((data) ? (soap_default_PointerTott__AudioSourceConfigurationOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__AudioSourceConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoOutputConfigurationOptions
#define SOAP_TYPE_PointerTott__VideoOutputConfigurationOptions (994)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoOutputConfigurationOptions(struct soap*, tt__VideoOutputConfigurationOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoOutputConfigurationOptions(struct soap*, const char *, int, tt__VideoOutputConfigurationOptions *const*, const char *);
SOAP_FMAC3 tt__VideoOutputConfigurationOptions ** SOAP_FMAC4 soap_in_PointerTott__VideoOutputConfigurationOptions(struct soap*, const char*, tt__VideoOutputConfigurationOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoOutputConfigurationOptions(struct soap*, tt__VideoOutputConfigurationOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoOutputConfigurationOptions
#define soap_write_PointerTott__VideoOutputConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoOutputConfigurationOptions(soap, data), 0) || soap_put_PointerTott__VideoOutputConfigurationOptions(soap, data, "tt:VideoOutputConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoOutputConfigurationOptions ** SOAP_FMAC4 soap_get_PointerTott__VideoOutputConfigurationOptions(struct soap*, tt__VideoOutputConfigurationOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoOutputConfigurationOptions
#define soap_read_PointerTott__VideoOutputConfigurationOptions(soap, data) ( ((data) ? (soap_default_PointerTott__VideoOutputConfigurationOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__VideoOutputConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoSourceConfigurationOptions
#define SOAP_TYPE_PointerTott__VideoSourceConfigurationOptions (993)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoSourceConfigurationOptions(struct soap*, tt__VideoSourceConfigurationOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoSourceConfigurationOptions(struct soap*, const char *, int, tt__VideoSourceConfigurationOptions *const*, const char *);
SOAP_FMAC3 tt__VideoSourceConfigurationOptions ** SOAP_FMAC4 soap_in_PointerTott__VideoSourceConfigurationOptions(struct soap*, const char*, tt__VideoSourceConfigurationOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoSourceConfigurationOptions(struct soap*, tt__VideoSourceConfigurationOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoSourceConfigurationOptions
#define soap_write_PointerTott__VideoSourceConfigurationOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoSourceConfigurationOptions(soap, data), 0) || soap_put_PointerTott__VideoSourceConfigurationOptions(soap, data, "tt:VideoSourceConfigurationOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceConfigurationOptions ** SOAP_FMAC4 soap_get_PointerTott__VideoSourceConfigurationOptions(struct soap*, tt__VideoSourceConfigurationOptions **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoSourceConfigurationOptions
#define soap_read_PointerTott__VideoSourceConfigurationOptions(soap, data) ( ((data) ? (soap_default_PointerTott__VideoSourceConfigurationOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__VideoSourceConfigurationOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoOutputConfiguration
#define SOAP_TYPE_PointerTott__VideoOutputConfiguration (992)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoOutputConfiguration(struct soap*, tt__VideoOutputConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoOutputConfiguration(struct soap*, const char *, int, tt__VideoOutputConfiguration *const*, const char *);
SOAP_FMAC3 tt__VideoOutputConfiguration ** SOAP_FMAC4 soap_in_PointerTott__VideoOutputConfiguration(struct soap*, const char*, tt__VideoOutputConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoOutputConfiguration(struct soap*, tt__VideoOutputConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoOutputConfiguration
#define soap_write_PointerTott__VideoOutputConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoOutputConfiguration(soap, data), 0) || soap_put_PointerTott__VideoOutputConfiguration(soap, data, "tt:VideoOutputConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoOutputConfiguration ** SOAP_FMAC4 soap_get_PointerTott__VideoOutputConfiguration(struct soap*, tt__VideoOutputConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoOutputConfiguration
#define soap_read_PointerTott__VideoOutputConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__VideoOutputConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__VideoOutputConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoSourceConfiguration
#define SOAP_TYPE_PointerTott__VideoSourceConfiguration (991)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoSourceConfiguration(struct soap*, tt__VideoSourceConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoSourceConfiguration(struct soap*, const char *, int, tt__VideoSourceConfiguration *const*, const char *);
SOAP_FMAC3 tt__VideoSourceConfiguration ** SOAP_FMAC4 soap_in_PointerTott__VideoSourceConfiguration(struct soap*, const char*, tt__VideoSourceConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoSourceConfiguration(struct soap*, tt__VideoSourceConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoSourceConfiguration
#define soap_write_PointerTott__VideoSourceConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoSourceConfiguration(soap, data), 0) || soap_put_PointerTott__VideoSourceConfiguration(soap, data, "tt:VideoSourceConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoSourceConfiguration ** SOAP_FMAC4 soap_get_PointerTott__VideoSourceConfiguration(struct soap*, tt__VideoSourceConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoSourceConfiguration
#define soap_read_PointerTott__VideoSourceConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__VideoSourceConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__VideoSourceConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AudioOutputConfiguration
#define SOAP_TYPE_PointerTott__AudioOutputConfiguration (990)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AudioOutputConfiguration(struct soap*, tt__AudioOutputConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AudioOutputConfiguration(struct soap*, const char *, int, tt__AudioOutputConfiguration *const*, const char *);
SOAP_FMAC3 tt__AudioOutputConfiguration ** SOAP_FMAC4 soap_in_PointerTott__AudioOutputConfiguration(struct soap*, const char*, tt__AudioOutputConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AudioOutputConfiguration(struct soap*, tt__AudioOutputConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AudioOutputConfiguration
#define soap_write_PointerTott__AudioOutputConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AudioOutputConfiguration(soap, data), 0) || soap_put_PointerTott__AudioOutputConfiguration(soap, data, "tt:AudioOutputConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioOutputConfiguration ** SOAP_FMAC4 soap_get_PointerTott__AudioOutputConfiguration(struct soap*, tt__AudioOutputConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__AudioOutputConfiguration
#define soap_read_PointerTott__AudioOutputConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__AudioOutputConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__AudioOutputConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__AudioSourceConfiguration
#define SOAP_TYPE_PointerTott__AudioSourceConfiguration (989)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__AudioSourceConfiguration(struct soap*, tt__AudioSourceConfiguration *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__AudioSourceConfiguration(struct soap*, const char *, int, tt__AudioSourceConfiguration *const*, const char *);
SOAP_FMAC3 tt__AudioSourceConfiguration ** SOAP_FMAC4 soap_in_PointerTott__AudioSourceConfiguration(struct soap*, const char*, tt__AudioSourceConfiguration **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__AudioSourceConfiguration(struct soap*, tt__AudioSourceConfiguration *const*, const char*, const char*);

#ifndef soap_write_PointerTott__AudioSourceConfiguration
#define soap_write_PointerTott__AudioSourceConfiguration(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__AudioSourceConfiguration(soap, data), 0) || soap_put_PointerTott__AudioSourceConfiguration(soap, data, "tt:AudioSourceConfiguration", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__AudioSourceConfiguration ** SOAP_FMAC4 soap_get_PointerTott__AudioSourceConfiguration(struct soap*, tt__AudioSourceConfiguration **, const char*, const char*);

#ifndef soap_read_PointerTott__AudioSourceConfiguration
#define soap_read_PointerTott__AudioSourceConfiguration(soap, data) ( ((data) ? (soap_default_PointerTott__AudioSourceConfiguration(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__AudioSourceConfiguration(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__VideoOutput
#define SOAP_TYPE_PointerTott__VideoOutput (987)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__VideoOutput(struct soap*, tt__VideoOutput *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__VideoOutput(struct soap*, const char *, int, tt__VideoOutput *const*, const char *);
SOAP_FMAC3 tt__VideoOutput ** SOAP_FMAC4 soap_in_PointerTott__VideoOutput(struct soap*, const char*, tt__VideoOutput **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__VideoOutput(struct soap*, tt__VideoOutput *const*, const char*, const char*);

#ifndef soap_write_PointerTott__VideoOutput
#define soap_write_PointerTott__VideoOutput(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__VideoOutput(soap, data), 0) || soap_put_PointerTott__VideoOutput(soap, data, "tt:VideoOutput", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__VideoOutput ** SOAP_FMAC4 soap_get_PointerTott__VideoOutput(struct soap*, tt__VideoOutput **, const char*, const char*);

#ifndef soap_read_PointerTott__VideoOutput
#define soap_read_PointerTott__VideoOutput(soap, data) ( ((data) ? (soap_default_PointerTott__VideoOutput(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__VideoOutput(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotmd__RelayOutputOptions
#define SOAP_TYPE_PointerTotmd__RelayOutputOptions (985)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotmd__RelayOutputOptions(struct soap*, tmd__RelayOutputOptions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotmd__RelayOutputOptions(struct soap*, const char *, int, tmd__RelayOutputOptions *const*, const char *);
SOAP_FMAC3 tmd__RelayOutputOptions ** SOAP_FMAC4 soap_in_PointerTotmd__RelayOutputOptions(struct soap*, const char*, tmd__RelayOutputOptions **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotmd__RelayOutputOptions(struct soap*, tmd__RelayOutputOptions *const*, const char*, const char*);

#ifndef soap_write_PointerTotmd__RelayOutputOptions
#define soap_write_PointerTotmd__RelayOutputOptions(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotmd__RelayOutputOptions(soap, data), 0) || soap_put_PointerTotmd__RelayOutputOptions(soap, data, "tmd:RelayOutputOptions", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tmd__RelayOutputOptions ** SOAP_FMAC4 soap_get_PointerTotmd__RelayOutputOptions(struct soap*, tmd__RelayOutputOptions **, const char*, const char*);

#ifndef soap_read_PointerTotmd__RelayOutputOptions
#define soap_read_PointerTotmd__RelayOutputOptions(soap, data) ( ((data) ? (soap_default_PointerTotmd__RelayOutputOptions(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTotmd__RelayOutputOptions(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__ReferenceToken
#define SOAP_TYPE_PointerTott__ReferenceToken (984)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__ReferenceToken(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__ReferenceToken(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTott__ReferenceToken(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__ReferenceToken(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTott__ReferenceToken
#define soap_write_PointerTott__ReferenceToken(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__ReferenceToken(soap, data), 0) || soap_put_PointerTott__ReferenceToken(soap, data, "tt:ReferenceToken", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTott__ReferenceToken(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTott__ReferenceToken
#define soap_read_PointerTott__ReferenceToken(soap, data) ( ((data) ? (soap_default_PointerTott__ReferenceToken(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__ReferenceToken(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotmd__Capabilities
#define SOAP_TYPE_PointerTotmd__Capabilities (983)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotmd__Capabilities(struct soap*, tmd__Capabilities *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotmd__Capabilities(struct soap*, const char *, int, tmd__Capabilities *const*, const char *);
SOAP_FMAC3 tmd__Capabilities ** SOAP_FMAC4 soap_in_PointerTotmd__Capabilities(struct soap*, const char*, tmd__Capabilities **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotmd__Capabilities(struct soap*, tmd__Capabilities *const*, const char*, const char*);

#ifndef soap_write_PointerTotmd__Capabilities
#define soap_write_PointerTotmd__Capabilities(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotmd__Capabilities(soap, data), 0) || soap_put_PointerTotmd__Capabilities(soap, data, "tmd:Capabilities", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tmd__Capabilities ** SOAP_FMAC4 soap_get_PointerTotmd__Capabilities(struct soap*, tmd__Capabilities **, const char*, const char*);

#ifndef soap_read_PointerTotmd__Capabilities
#define soap_read_PointerTotmd__Capabilities(soap, data) ( ((data) ? (soap_default_PointerTotmd__Capabilities(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTotmd__Capabilities(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__FloatList
#define SOAP_TYPE_PointerTott__FloatList (981)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__FloatList(struct soap*, tt__FloatList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__FloatList(struct soap*, const char *, int, tt__FloatList *const*, const char *);
SOAP_FMAC3 tt__FloatList ** SOAP_FMAC4 soap_in_PointerTott__FloatList(struct soap*, const char*, tt__FloatList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__FloatList(struct soap*, tt__FloatList *const*, const char*, const char*);

#ifndef soap_write_PointerTott__FloatList
#define soap_write_PointerTott__FloatList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__FloatList(soap, data), 0) || soap_put_PointerTott__FloatList(soap, data, "tt:FloatList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__FloatList ** SOAP_FMAC4 soap_get_PointerTott__FloatList(struct soap*, tt__FloatList **, const char*, const char*);

#ifndef soap_read_PointerTott__FloatList
#define soap_read_PointerTott__FloatList(soap, data) ( ((data) ? (soap_default_PointerTott__FloatList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__FloatList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotmd__ParityBitList
#define SOAP_TYPE_PointerTotmd__ParityBitList (980)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotmd__ParityBitList(struct soap*, tmd__ParityBitList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotmd__ParityBitList(struct soap*, const char *, int, tmd__ParityBitList *const*, const char *);
SOAP_FMAC3 tmd__ParityBitList ** SOAP_FMAC4 soap_in_PointerTotmd__ParityBitList(struct soap*, const char*, tmd__ParityBitList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotmd__ParityBitList(struct soap*, tmd__ParityBitList *const*, const char*, const char*);

#ifndef soap_write_PointerTotmd__ParityBitList
#define soap_write_PointerTotmd__ParityBitList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotmd__ParityBitList(soap, data), 0) || soap_put_PointerTotmd__ParityBitList(soap, data, "tmd:ParityBitList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tmd__ParityBitList ** SOAP_FMAC4 soap_get_PointerTotmd__ParityBitList(struct soap*, tmd__ParityBitList **, const char*, const char*);

#ifndef soap_read_PointerTotmd__ParityBitList
#define soap_read_PointerTotmd__ParityBitList(soap, data) ( ((data) ? (soap_default_PointerTotmd__ParityBitList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTotmd__ParityBitList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTott__IntList
#define SOAP_TYPE_PointerTott__IntList (979)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTott__IntList(struct soap*, tt__IntList *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTott__IntList(struct soap*, const char *, int, tt__IntList *const*, const char *);
SOAP_FMAC3 tt__IntList ** SOAP_FMAC4 soap_in_PointerTott__IntList(struct soap*, const char*, tt__IntList **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTott__IntList(struct soap*, tt__IntList *const*, const char*, const char*);

#ifndef soap_write_PointerTott__IntList
#define soap_write_PointerTott__IntList(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTott__IntList(soap, data), 0) || soap_put_PointerTott__IntList(soap, data, "tt:IntList", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tt__IntList ** SOAP_FMAC4 soap_get_PointerTott__IntList(struct soap*, tt__IntList **, const char*, const char*);

#ifndef soap_read_PointerTott__IntList
#define soap_read_PointerTott__IntList(soap, data) ( ((data) ? (soap_default_PointerTott__IntList(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTott__IntList(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__string
#define SOAP_TYPE_PointerTostd__string (976)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__string(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__string(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTostd__string(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__string(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTostd__string
#define soap_write_PointerTostd__string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTostd__string(soap, data), 0) || soap_put_PointerTostd__string(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTostd__string(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTostd__string
#define soap_read_PointerTostd__string(soap, data) ( ((data) ? (soap_default_PointerTostd__string(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTostd__string(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToxsd__base64Binary
#define SOAP_TYPE_PointerToxsd__base64Binary (975)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxsd__base64Binary(struct soap*, xsd__base64Binary *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxsd__base64Binary(struct soap*, const char *, int, xsd__base64Binary *const*, const char *);
SOAP_FMAC3 xsd__base64Binary ** SOAP_FMAC4 soap_in_PointerToxsd__base64Binary(struct soap*, const char*, xsd__base64Binary **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxsd__base64Binary(struct soap*, xsd__base64Binary *const*, const char*, const char*);

#ifndef soap_write_PointerToxsd__base64Binary
#define soap_write_PointerToxsd__base64Binary(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToxsd__base64Binary(soap, data), 0) || soap_put_PointerToxsd__base64Binary(soap, data, "xsd:base64Binary", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 xsd__base64Binary ** SOAP_FMAC4 soap_get_PointerToxsd__base64Binary(struct soap*, xsd__base64Binary **, const char*, const char*);

#ifndef soap_read_PointerToxsd__base64Binary
#define soap_read_PointerToxsd__base64Binary(soap, data) ( ((data) ? (soap_default_PointerToxsd__base64Binary(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerToxsd__base64Binary(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotmd__RelayOutputOptionsExtension
#define SOAP_TYPE_PointerTotmd__RelayOutputOptionsExtension (972)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotmd__RelayOutputOptionsExtension(struct soap*, tmd__RelayOutputOptionsExtension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotmd__RelayOutputOptionsExtension(struct soap*, const char *, int, tmd__RelayOutputOptionsExtension *const*, const char *);
SOAP_FMAC3 tmd__RelayOutputOptionsExtension ** SOAP_FMAC4 soap_in_PointerTotmd__RelayOutputOptionsExtension(struct soap*, const char*, tmd__RelayOutputOptionsExtension **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotmd__RelayOutputOptionsExtension(struct soap*, tmd__RelayOutputOptionsExtension *const*, const char*, const char*);

#ifndef soap_write_PointerTotmd__RelayOutputOptionsExtension
#define soap_write_PointerTotmd__RelayOutputOptionsExtension(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotmd__RelayOutputOptionsExtension(soap, data), 0) || soap_put_PointerTotmd__RelayOutputOptionsExtension(soap, data, "tmd:RelayOutputOptionsExtension", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 tmd__RelayOutputOptionsExtension ** SOAP_FMAC4 soap_get_PointerTotmd__RelayOutputOptionsExtension(struct soap*, tmd__RelayOutputOptionsExtension **, const char*, const char*);

#ifndef soap_read_PointerTotmd__RelayOutputOptionsExtension
#define soap_read_PointerTotmd__RelayOutputOptionsExtension(soap, data) ( ((data) ? (soap_default_PointerTotmd__RelayOutputOptionsExtension(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTotmd__RelayOutputOptionsExtension(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTobool
#define SOAP_TYPE_PointerTobool (971)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTobool(struct soap*, bool *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTobool(struct soap*, const char *, int, bool *const*, const char *);
SOAP_FMAC3 bool ** SOAP_FMAC4 soap_in_PointerTobool(struct soap*, const char*, bool **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTobool(struct soap*, bool *const*, const char*, const char*);

#ifndef soap_write_PointerTobool
#define soap_write_PointerTobool(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTobool(soap, data), 0) || soap_put_PointerTobool(soap, data, "boolean", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 bool ** SOAP_FMAC4 soap_get_PointerTobool(struct soap*, bool **, const char*, const char*);

#ifndef soap_read_PointerTobool
#define soap_read_PointerTobool(soap, data) ( ((data) ? (soap_default_PointerTobool(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTobool(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTotmd__DelayTimes
#define SOAP_TYPE_PointerTotmd__DelayTimes (970)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTotmd__DelayTimes(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTotmd__DelayTimes(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTotmd__DelayTimes(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTotmd__DelayTimes(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTotmd__DelayTimes
#define soap_write_PointerTotmd__DelayTimes(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTotmd__DelayTimes(soap, data), 0) || soap_put_PointerTotmd__DelayTimes(soap, data, "tmd:DelayTimes", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTotmd__DelayTimes(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTotmd__DelayTimes
#define soap_read_PointerTotmd__DelayTimes(soap, data) ( ((data) ? (soap_default_PointerTotmd__DelayTimes(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTotmd__DelayTimes(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Header
#define SOAP_TYPE_PointerToSOAP_ENV__Header (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Header(struct soap*, const char *, int, struct SOAP_ENV__Header *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Header ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Header
#define soap_write_PointerToSOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Header(soap, data), 0) || soap_put_PointerToSOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Header
#define soap_read_PointerToSOAP_ENV__Header(soap, data) ( ((data) ? (soap_default_PointerToSOAP_ENV__Header(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Header(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( ((data) ? (soap_default_PointerToSOAP_ENV__Reason(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( ((data) ? (soap_default_PointerToSOAP_ENV__Code(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( ((data) ? (soap_default_PointerToSOAP_ENV__Detail(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTochan__ChannelInstanceType
#define SOAP_TYPE_PointerTochan__ChannelInstanceType (50)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTochan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTochan__ChannelInstanceType(struct soap*, const char *, int, struct chan__ChannelInstanceType *const*, const char *);
SOAP_FMAC3 struct chan__ChannelInstanceType ** SOAP_FMAC4 soap_in_PointerTochan__ChannelInstanceType(struct soap*, const char*, struct chan__ChannelInstanceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTochan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType *const*, const char*, const char*);

#ifndef soap_write_PointerTochan__ChannelInstanceType
#define soap_write_PointerTochan__ChannelInstanceType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTochan__ChannelInstanceType(soap, data), 0) || soap_put_PointerTochan__ChannelInstanceType(soap, data, "chan:ChannelInstanceType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct chan__ChannelInstanceType ** SOAP_FMAC4 soap_get_PointerTochan__ChannelInstanceType(struct soap*, struct chan__ChannelInstanceType **, const char*, const char*);

#ifndef soap_read_PointerTochan__ChannelInstanceType
#define soap_read_PointerTochan__ChannelInstanceType(soap, data) ( ((data) ? (soap_default_PointerTochan__ChannelInstanceType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTochan__ChannelInstanceType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsa5__FaultTo
#define SOAP_TYPE_PointerTo_wsa5__FaultTo (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa5__FaultTo(struct soap*, struct wsa5__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa5__FaultTo(struct soap*, const char *, int, struct wsa5__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTo_wsa5__FaultTo(struct soap*, const char*, struct wsa5__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa5__FaultTo(struct soap*, struct wsa5__EndpointReferenceType *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsa5__FaultTo
#define soap_write_PointerTo_wsa5__FaultTo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_wsa5__FaultTo(soap, data), 0) || soap_put_PointerTo_wsa5__FaultTo(soap, data, "wsa5:FaultTo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTo_wsa5__FaultTo(struct soap*, struct wsa5__EndpointReferenceType **, const char*, const char*);

#ifndef soap_read_PointerTo_wsa5__FaultTo
#define soap_read_PointerTo_wsa5__FaultTo(soap, data) ( ((data) ? (soap_default_PointerTo_wsa5__FaultTo(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_wsa5__FaultTo(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsa5__ReplyTo
#define SOAP_TYPE_PointerTo_wsa5__ReplyTo (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa5__ReplyTo(struct soap*, struct wsa5__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa5__ReplyTo(struct soap*, const char *, int, struct wsa5__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTo_wsa5__ReplyTo(struct soap*, const char*, struct wsa5__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa5__ReplyTo(struct soap*, struct wsa5__EndpointReferenceType *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsa5__ReplyTo
#define soap_write_PointerTo_wsa5__ReplyTo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_wsa5__ReplyTo(soap, data), 0) || soap_put_PointerTo_wsa5__ReplyTo(soap, data, "wsa5:ReplyTo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTo_wsa5__ReplyTo(struct soap*, struct wsa5__EndpointReferenceType **, const char*, const char*);

#ifndef soap_read_PointerTo_wsa5__ReplyTo
#define soap_read_PointerTo_wsa5__ReplyTo(soap, data) ( ((data) ? (soap_default_PointerTo_wsa5__ReplyTo(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_wsa5__ReplyTo(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsa5__From
#define SOAP_TYPE_PointerTo_wsa5__From (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa5__From(struct soap*, struct wsa5__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa5__From(struct soap*, const char *, int, struct wsa5__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTo_wsa5__From(struct soap*, const char*, struct wsa5__EndpointReferenceType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa5__From(struct soap*, struct wsa5__EndpointReferenceType *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsa5__From
#define soap_write_PointerTo_wsa5__From(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_wsa5__From(soap, data), 0) || soap_put_PointerTo_wsa5__From(soap, data, "wsa5:From", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTo_wsa5__From(struct soap*, struct wsa5__EndpointReferenceType **, const char*, const char*);

#ifndef soap_read_PointerTo_wsa5__From
#define soap_read_PointerTo_wsa5__From(soap, data) ( ((data) ? (soap_default_PointerTo_wsa5__From(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_wsa5__From(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTo_wsa5__RelatesTo
#define SOAP_TYPE_PointerTo_wsa5__RelatesTo (46)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTo_wsa5__RelatesTo(struct soap*, struct wsa5__RelatesToType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTo_wsa5__RelatesTo(struct soap*, const char *, int, struct wsa5__RelatesToType *const*, const char *);
SOAP_FMAC3 struct wsa5__RelatesToType ** SOAP_FMAC4 soap_in_PointerTo_wsa5__RelatesTo(struct soap*, const char*, struct wsa5__RelatesToType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTo_wsa5__RelatesTo(struct soap*, struct wsa5__RelatesToType *const*, const char*, const char*);

#ifndef soap_write_PointerTo_wsa5__RelatesTo
#define soap_write_PointerTo_wsa5__RelatesTo(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTo_wsa5__RelatesTo(soap, data), 0) || soap_put_PointerTo_wsa5__RelatesTo(soap, data, "wsa5:RelatesTo", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__RelatesToType ** SOAP_FMAC4 soap_get_PointerTo_wsa5__RelatesTo(struct soap*, struct wsa5__RelatesToType **, const char*, const char*);

#ifndef soap_read_PointerTo_wsa5__RelatesTo
#define soap_read_PointerTo_wsa5__RelatesTo(soap, data) ( ((data) ? (soap_default_PointerTo_wsa5__RelatesTo(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTo_wsa5__RelatesTo(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif

/* _wsa5__ProblemIRI is a typedef synonym for string */

#ifndef SOAP_TYPE__wsa5__ProblemIRI
#define SOAP_TYPE__wsa5__ProblemIRI (41)
#endif

#define soap_default__wsa5__ProblemIRI(soap, a) soap_default_string(soap, a)


#define soap_serialize__wsa5__ProblemIRI soap_serialize_string


#define soap__wsa5__ProblemIRI2s soap_string2s


#define soap_out__wsa5__ProblemIRI soap_out_string


#define soap_s2_wsa5__ProblemIRI soap_s2string


#define soap_in__wsa5__ProblemIRI soap_in_string


#define soap_put__wsa5__ProblemIRI soap_put_string


#define soap_write__wsa5__ProblemIRI soap_write_string


#define soap_get__wsa5__ProblemIRI soap_get_string


#define soap_read__wsa5__ProblemIRI soap_read_string

/* _wsa5__ProblemHeaderQName is a typedef synonym for _QName */

#ifndef SOAP_TYPE__wsa5__ProblemHeaderQName
#define SOAP_TYPE__wsa5__ProblemHeaderQName (40)
#endif

#define soap_default__wsa5__ProblemHeaderQName(soap, a) soap_default__QName(soap, a)


#define soap_serialize__wsa5__ProblemHeaderQName soap_serialize__QName


#define soap_out__wsa5__ProblemHeaderQName soap_out__QName


#define soap_in__wsa5__ProblemHeaderQName soap_in__QName


#define soap_put__wsa5__ProblemHeaderQName soap_put__QName


#define soap_write__wsa5__ProblemHeaderQName soap_write__QName


#define soap_get__wsa5__ProblemHeaderQName soap_get__QName


#define soap_read__wsa5__ProblemHeaderQName soap_read__QName

/* _wsa5__Action is a typedef synonym for string */

#ifndef SOAP_TYPE__wsa5__Action
#define SOAP_TYPE__wsa5__Action (37)
#endif

#define soap_default__wsa5__Action(soap, a) soap_default_string(soap, a)


#define soap_serialize__wsa5__Action soap_serialize_string


#define soap__wsa5__Action2s soap_string2s


#define soap_out__wsa5__Action soap_out_string


#define soap_s2_wsa5__Action soap_s2string


#define soap_in__wsa5__Action soap_in_string


#define soap_put__wsa5__Action soap_put_string


#define soap_write__wsa5__Action soap_write_string


#define soap_get__wsa5__Action soap_get_string


#define soap_read__wsa5__Action soap_read_string

/* _wsa5__To is a typedef synonym for string */

#ifndef SOAP_TYPE__wsa5__To
#define SOAP_TYPE__wsa5__To (36)
#endif

#define soap_default__wsa5__To(soap, a) soap_default_string(soap, a)


#define soap_serialize__wsa5__To soap_serialize_string


#define soap__wsa5__To2s soap_string2s


#define soap_out__wsa5__To soap_out_string


#define soap_s2_wsa5__To soap_s2string


#define soap_in__wsa5__To soap_in_string


#define soap_put__wsa5__To soap_put_string


#define soap_write__wsa5__To soap_write_string


#define soap_get__wsa5__To soap_get_string


#define soap_read__wsa5__To soap_read_string

/* _wsa5__MessageID is a typedef synonym for string */

#ifndef SOAP_TYPE__wsa5__MessageID
#define SOAP_TYPE__wsa5__MessageID (31)
#endif

#define soap_default__wsa5__MessageID(soap, a) soap_default_string(soap, a)


#define soap_serialize__wsa5__MessageID soap_serialize_string


#define soap__wsa5__MessageID2s soap_string2s


#define soap_out__wsa5__MessageID soap_out_string


#define soap_s2_wsa5__MessageID soap_s2string


#define soap_in__wsa5__MessageID soap_in_string


#define soap_put__wsa5__MessageID soap_put_string


#define soap_write__wsa5__MessageID soap_write_string


#define soap_get__wsa5__MessageID soap_get_string


#define soap_read__wsa5__MessageID soap_read_string


#ifndef SOAP_TYPE_PointerToint
#define SOAP_TYPE_PointerToint (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToint(struct soap*, int *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToint(struct soap*, const char *, int, int *const*, const char *);
SOAP_FMAC3 int ** SOAP_FMAC4 soap_in_PointerToint(struct soap*, const char*, int **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToint(struct soap*, int *const*, const char*, const char*);

#ifndef soap_write_PointerToint
#define soap_write_PointerToint(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToint(soap, data), 0) || soap_put_PointerToint(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int ** SOAP_FMAC4 soap_get_PointerToint(struct soap*, int **, const char*, const char*);

#ifndef soap_read_PointerToint
#define soap_read_PointerToint(soap, data) ( ((data) ? (soap_default_PointerToint(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerToint(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowsa5__MetadataType
#define SOAP_TYPE_PointerTowsa5__MetadataType (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsa5__MetadataType(struct soap*, struct wsa5__MetadataType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsa5__MetadataType(struct soap*, const char *, int, struct wsa5__MetadataType *const*, const char *);
SOAP_FMAC3 struct wsa5__MetadataType ** SOAP_FMAC4 soap_in_PointerTowsa5__MetadataType(struct soap*, const char*, struct wsa5__MetadataType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsa5__MetadataType(struct soap*, struct wsa5__MetadataType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsa5__MetadataType
#define soap_write_PointerTowsa5__MetadataType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsa5__MetadataType(soap, data), 0) || soap_put_PointerTowsa5__MetadataType(soap, data, "wsa5:MetadataType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__MetadataType ** SOAP_FMAC4 soap_get_PointerTowsa5__MetadataType(struct soap*, struct wsa5__MetadataType **, const char*, const char*);

#ifndef soap_read_PointerTowsa5__MetadataType
#define soap_read_PointerTowsa5__MetadataType(soap, data) ( ((data) ? (soap_default_PointerTowsa5__MetadataType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTowsa5__MetadataType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTowsa5__ReferenceParametersType
#define SOAP_TYPE_PointerTowsa5__ReferenceParametersType (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsa5__ReferenceParametersType(struct soap*, const char *, int, struct wsa5__ReferenceParametersType *const*, const char *);
SOAP_FMAC3 struct wsa5__ReferenceParametersType ** SOAP_FMAC4 soap_in_PointerTowsa5__ReferenceParametersType(struct soap*, const char*, struct wsa5__ReferenceParametersType **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType *const*, const char*, const char*);

#ifndef soap_write_PointerTowsa5__ReferenceParametersType
#define soap_write_PointerTowsa5__ReferenceParametersType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTowsa5__ReferenceParametersType(soap, data), 0) || soap_put_PointerTowsa5__ReferenceParametersType(soap, data, "wsa5:ReferenceParametersType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct wsa5__ReferenceParametersType ** SOAP_FMAC4 soap_get_PointerTowsa5__ReferenceParametersType(struct soap*, struct wsa5__ReferenceParametersType **, const char*, const char*);

#ifndef soap_read_PointerTowsa5__ReferenceParametersType
#define soap_read_PointerTowsa5__ReferenceParametersType(soap, data) ( ((data) ? (soap_default_PointerTowsa5__ReferenceParametersType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTowsa5__ReferenceParametersType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsa5__FaultCodesOpenEnumType
#define SOAP_TYPE_wsa5__FaultCodesOpenEnumType (21)
#endif

#define soap_default_wsa5__FaultCodesOpenEnumType(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__FaultCodesOpenEnumType(struct soap*, char *const*);

#define soap_wsa5__FaultCodesOpenEnumType2s soap_string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__FaultCodesOpenEnumType(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2wsa5__FaultCodesOpenEnumType soap_s2string

SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wsa5__FaultCodesOpenEnumType(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__FaultCodesOpenEnumType(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_wsa5__FaultCodesOpenEnumType
#define soap_write_wsa5__FaultCodesOpenEnumType(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__FaultCodesOpenEnumType(soap, data), 0) || soap_put_wsa5__FaultCodesOpenEnumType(soap, data, "wsa5:FaultCodesOpenEnumType", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wsa5__FaultCodesOpenEnumType(struct soap*, char **, const char*, const char*);

#ifndef soap_read_wsa5__FaultCodesOpenEnumType
#define soap_read_wsa5__FaultCodesOpenEnumType(soap, data) ( ((data) ? (soap_default_wsa5__FaultCodesOpenEnumType(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsa5__FaultCodesOpenEnumType(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wsa5__RelationshipTypeOpenEnum
#define SOAP_TYPE_wsa5__RelationshipTypeOpenEnum (20)
#endif

#define soap_default_wsa5__RelationshipTypeOpenEnum(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wsa5__RelationshipTypeOpenEnum(struct soap*, char *const*);

#define soap_wsa5__RelationshipTypeOpenEnum2s soap_string2s

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa5__RelationshipTypeOpenEnum(struct soap*, const char*, int, char*const*, const char*);

#define soap_s2wsa5__RelationshipTypeOpenEnum soap_s2string

SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_wsa5__RelationshipTypeOpenEnum(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wsa5__RelationshipTypeOpenEnum(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_wsa5__RelationshipTypeOpenEnum
#define soap_write_wsa5__RelationshipTypeOpenEnum(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wsa5__RelationshipTypeOpenEnum(soap, data), 0) || soap_put_wsa5__RelationshipTypeOpenEnum(soap, data, "wsa5:RelationshipTypeOpenEnum", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_wsa5__RelationshipTypeOpenEnum(struct soap*, char **, const char*, const char*);

#ifndef soap_read_wsa5__RelationshipTypeOpenEnum
#define soap_read_wsa5__RelationshipTypeOpenEnum(soap, data) ( ((data) ? (soap_default_wsa5__RelationshipTypeOpenEnum(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_wsa5__RelationshipTypeOpenEnum(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTounsignedByte
#define SOAP_TYPE_PointerTounsignedByte (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTounsignedByte(struct soap*, unsigned char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTounsignedByte(struct soap*, const char *, int, unsigned char *const*, const char *);
SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_in_PointerTounsignedByte(struct soap*, const char*, unsigned char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTounsignedByte(struct soap*, unsigned char *const*, const char*, const char*);

#ifndef soap_write_PointerTounsignedByte
#define soap_write_PointerTounsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTounsignedByte(soap, data), 0) || soap_put_PointerTounsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_get_PointerTounsignedByte(struct soap*, unsigned char **, const char*, const char*);

#ifndef soap_read_PointerTounsignedByte
#define soap_read_PointerTounsignedByte(soap, data) ( ((data) ? (soap_default_PointerTounsignedByte(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_PointerTounsignedByte(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, "QName", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( ((data) ? (soap_default__QName(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get__QName(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, "string", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( ((data) ? (soap_default_string(soap, (data)), 0) : 0) || soap_begin_recv(soap) || !soap_get_string(soap, (data), NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_std__vectorTemplateOf_wstop__TopicNamespaceType_Topic
#define SOAP_TYPE_std__vectorTemplateOf_wstop__TopicNamespaceType_Topic (1578)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOf_wstop__TopicNamespaceType_Topic(struct soap*, std::vector<_wstop__TopicNamespaceType_Topic> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOf_wstop__TopicNamespaceType_Topic(struct soap*, const std::vector<_wstop__TopicNamespaceType_Topic> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOf_wstop__TopicNamespaceType_Topic(struct soap*, const char*, int, const std::vector<_wstop__TopicNamespaceType_Topic> *, const char*);
SOAP_FMAC3 std::vector<_wstop__TopicNamespaceType_Topic> * SOAP_FMAC4 soap_in_std__vectorTemplateOf_wstop__TopicNamespaceType_Topic(struct soap*, const char*, std::vector<_wstop__TopicNamespaceType_Topic> *, const char*);
SOAP_FMAC1 std::vector<_wstop__TopicNamespaceType_Topic>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOf_wstop__TopicNamespaceType_Topic(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<_wstop__TopicNamespaceType_Topic>  * soap_new_std__vectorTemplateOf_wstop__TopicNamespaceType_Topic(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOf_wstop__TopicNamespaceType_Topic(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTowstop__TopicType
#define SOAP_TYPE_std__vectorTemplateOfPointerTowstop__TopicType (1575)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTowstop__TopicType(struct soap*, std::vector<wstop__TopicType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTowstop__TopicType(struct soap*, const std::vector<wstop__TopicType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTowstop__TopicType(struct soap*, const char*, int, const std::vector<wstop__TopicType *> *, const char*);
SOAP_FMAC3 std::vector<wstop__TopicType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTowstop__TopicType(struct soap*, const char*, std::vector<wstop__TopicType *> *, const char*);
SOAP_FMAC1 std::vector<wstop__TopicType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTowstop__TopicType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<wstop__TopicType *>  * soap_new_std__vectorTemplateOfPointerTowstop__TopicType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTowstop__TopicType(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfxsd__QName
#define SOAP_TYPE_std__vectorTemplateOfxsd__QName (1571)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfxsd__QName(struct soap*, std::vector<std::string> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfxsd__QName(struct soap*, const std::vector<std::string> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfxsd__QName(struct soap*, const char*, int, const std::vector<std::string> *, const char*);
SOAP_FMAC3 std::vector<std::string> * SOAP_FMAC4 soap_in_std__vectorTemplateOfxsd__QName(struct soap*, const char*, std::vector<std::string> *, const char*);
SOAP_FMAC1 std::vector<std::string>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfxsd__QName(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<std::string>  * soap_new_std__vectorTemplateOfxsd__QName(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfxsd__QName(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__PaneConfiguration
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__PaneConfiguration (1537)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__PaneConfiguration(struct soap*, std::vector<tt__PaneConfiguration *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__PaneConfiguration(struct soap*, const std::vector<tt__PaneConfiguration *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__PaneConfiguration(struct soap*, const char*, int, const std::vector<tt__PaneConfiguration *> *, const char*);
SOAP_FMAC3 std::vector<tt__PaneConfiguration *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__PaneConfiguration(struct soap*, const char*, std::vector<tt__PaneConfiguration *> *, const char*);
SOAP_FMAC1 std::vector<tt__PaneConfiguration *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__PaneConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__PaneConfiguration *>  * soap_new_std__vectorTemplateOfPointerTott__PaneConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__PaneConfiguration(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOf_wsrfbf__BaseFaultType_Description
#define SOAP_TYPE_std__vectorTemplateOf_wsrfbf__BaseFaultType_Description (1527)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOf_wsrfbf__BaseFaultType_Description(struct soap*, std::vector<_wsrfbf__BaseFaultType_Description> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOf_wsrfbf__BaseFaultType_Description(struct soap*, const std::vector<_wsrfbf__BaseFaultType_Description> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOf_wsrfbf__BaseFaultType_Description(struct soap*, const char*, int, const std::vector<_wsrfbf__BaseFaultType_Description> *, const char*);
SOAP_FMAC3 std::vector<_wsrfbf__BaseFaultType_Description> * SOAP_FMAC4 soap_in_std__vectorTemplateOf_wsrfbf__BaseFaultType_Description(struct soap*, const char*, std::vector<_wsrfbf__BaseFaultType_Description> *, const char*);
SOAP_FMAC1 std::vector<_wsrfbf__BaseFaultType_Description>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOf_wsrfbf__BaseFaultType_Description(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<_wsrfbf__BaseFaultType_Description>  * soap_new_std__vectorTemplateOf_wsrfbf__BaseFaultType_Description(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOf_wsrfbf__BaseFaultType_Description(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTowsnt__NotificationMessageHolderType
#define SOAP_TYPE_std__vectorTemplateOfPointerTowsnt__NotificationMessageHolderType (1518)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTowsnt__NotificationMessageHolderType(struct soap*, std::vector<wsnt__NotificationMessageHolderType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTowsnt__NotificationMessageHolderType(struct soap*, const std::vector<wsnt__NotificationMessageHolderType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTowsnt__NotificationMessageHolderType(struct soap*, const char*, int, const std::vector<wsnt__NotificationMessageHolderType *> *, const char*);
SOAP_FMAC3 std::vector<wsnt__NotificationMessageHolderType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTowsnt__NotificationMessageHolderType(struct soap*, const char*, std::vector<wsnt__NotificationMessageHolderType *> *, const char*);
SOAP_FMAC1 std::vector<wsnt__NotificationMessageHolderType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTowsnt__NotificationMessageHolderType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<wsnt__NotificationMessageHolderType *>  * soap_new_std__vectorTemplateOfPointerTowsnt__NotificationMessageHolderType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTowsnt__NotificationMessageHolderType(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTowsnt__TopicExpressionType
#define SOAP_TYPE_std__vectorTemplateOfPointerTowsnt__TopicExpressionType (1515)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTowsnt__TopicExpressionType(struct soap*, std::vector<wsnt__TopicExpressionType *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTowsnt__TopicExpressionType(struct soap*, const std::vector<wsnt__TopicExpressionType *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTowsnt__TopicExpressionType(struct soap*, const char*, int, const std::vector<wsnt__TopicExpressionType *> *, const char*);
SOAP_FMAC3 std::vector<wsnt__TopicExpressionType *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTowsnt__TopicExpressionType(struct soap*, const char*, std::vector<wsnt__TopicExpressionType *> *, const char*);
SOAP_FMAC1 std::vector<wsnt__TopicExpressionType *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTowsnt__TopicExpressionType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<wsnt__TopicExpressionType *>  * soap_new_std__vectorTemplateOfPointerTowsnt__TopicExpressionType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTowsnt__TopicExpressionType(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__FileProgress
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__FileProgress (1504)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__FileProgress(struct soap*, std::vector<tt__FileProgress *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__FileProgress(struct soap*, const std::vector<tt__FileProgress *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__FileProgress(struct soap*, const char*, int, const std::vector<tt__FileProgress *> *, const char*);
SOAP_FMAC3 std::vector<tt__FileProgress *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__FileProgress(struct soap*, const char*, std::vector<tt__FileProgress *> *, const char*);
SOAP_FMAC1 std::vector<tt__FileProgress *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__FileProgress(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__FileProgress *>  * soap_new_std__vectorTemplateOfPointerTott__FileProgress(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__FileProgress(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOftt__OSDType
#define SOAP_TYPE_std__vectorTemplateOftt__OSDType (1499)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__OSDType(struct soap*, std::vector<enum tt__OSDType> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__OSDType(struct soap*, const std::vector<enum tt__OSDType> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__OSDType(struct soap*, const char*, int, const std::vector<enum tt__OSDType> *, const char*);
SOAP_FMAC3 std::vector<enum tt__OSDType> * SOAP_FMAC4 soap_in_std__vectorTemplateOftt__OSDType(struct soap*, const char*, std::vector<enum tt__OSDType> *, const char*);
SOAP_FMAC1 std::vector<enum tt__OSDType>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__OSDType(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__OSDType>  * soap_new_std__vectorTemplateOftt__OSDType(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__OSDType(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__ColorspaceRange
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__ColorspaceRange (1490)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__ColorspaceRange(struct soap*, std::vector<tt__ColorspaceRange *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__ColorspaceRange(struct soap*, const std::vector<tt__ColorspaceRange *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__ColorspaceRange(struct soap*, const char*, int, const std::vector<tt__ColorspaceRange *> *, const char*);
SOAP_FMAC3 std::vector<tt__ColorspaceRange *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__ColorspaceRange(struct soap*, const char*, std::vector<tt__ColorspaceRange *> *, const char*);
SOAP_FMAC1 std::vector<tt__ColorspaceRange *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__ColorspaceRange(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__ColorspaceRange *>  * soap_new_std__vectorTemplateOfPointerTott__ColorspaceRange(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__ColorspaceRange(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Color
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Color (1487)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Color(struct soap*, std::vector<tt__Color *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Color(struct soap*, const std::vector<tt__Color *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Color(struct soap*, const char*, int, const std::vector<tt__Color *> *, const char*);
SOAP_FMAC3 std::vector<tt__Color *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Color(struct soap*, const char*, std::vector<tt__Color *> *, const char*);
SOAP_FMAC1 std::vector<tt__Color *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Color(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Color *>  * soap_new_std__vectorTemplateOfPointerTott__Color(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Color(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__ActiveConnection
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__ActiveConnection (1480)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__ActiveConnection(struct soap*, std::vector<tt__ActiveConnection *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__ActiveConnection(struct soap*, const std::vector<tt__ActiveConnection *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__ActiveConnection(struct soap*, const char*, int, const std::vector<tt__ActiveConnection *> *, const char*);
SOAP_FMAC3 std::vector<tt__ActiveConnection *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__ActiveConnection(struct soap*, const char*, std::vector<tt__ActiveConnection *> *, const char*);
SOAP_FMAC1 std::vector<tt__ActiveConnection *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__ActiveConnection(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__ActiveConnection *>  * soap_new_std__vectorTemplateOfPointerTott__ActiveConnection(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__ActiveConnection(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__AudioClassCandidate
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__AudioClassCandidate (1477)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__AudioClassCandidate(struct soap*, std::vector<tt__AudioClassCandidate *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__AudioClassCandidate(struct soap*, const std::vector<tt__AudioClassCandidate *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__AudioClassCandidate(struct soap*, const char*, int, const std::vector<tt__AudioClassCandidate *> *, const char*);
SOAP_FMAC3 std::vector<tt__AudioClassCandidate *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__AudioClassCandidate(struct soap*, const char*, std::vector<tt__AudioClassCandidate *> *, const char*);
SOAP_FMAC1 std::vector<tt__AudioClassCandidate *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__AudioClassCandidate(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__AudioClassCandidate *>  * soap_new_std__vectorTemplateOfPointerTott__AudioClassCandidate(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__AudioClassCandidate(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__EngineConfiguration
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__EngineConfiguration (1466)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__EngineConfiguration(struct soap*, std::vector<tt__EngineConfiguration *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__EngineConfiguration(struct soap*, const std::vector<tt__EngineConfiguration *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__EngineConfiguration(struct soap*, const char*, int, const std::vector<tt__EngineConfiguration *> *, const char*);
SOAP_FMAC3 std::vector<tt__EngineConfiguration *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__EngineConfiguration(struct soap*, const char*, std::vector<tt__EngineConfiguration *> *, const char*);
SOAP_FMAC1 std::vector<tt__EngineConfiguration *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__EngineConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__EngineConfiguration *>  * soap_new_std__vectorTemplateOfPointerTott__EngineConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__EngineConfiguration(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__RecordingJobStateTrack
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__RecordingJobStateTrack (1463)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__RecordingJobStateTrack(struct soap*, std::vector<tt__RecordingJobStateTrack *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__RecordingJobStateTrack(struct soap*, const std::vector<tt__RecordingJobStateTrack *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__RecordingJobStateTrack(struct soap*, const char*, int, const std::vector<tt__RecordingJobStateTrack *> *, const char*);
SOAP_FMAC3 std::vector<tt__RecordingJobStateTrack *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__RecordingJobStateTrack(struct soap*, const char*, std::vector<tt__RecordingJobStateTrack *> *, const char*);
SOAP_FMAC1 std::vector<tt__RecordingJobStateTrack *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__RecordingJobStateTrack(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__RecordingJobStateTrack *>  * soap_new_std__vectorTemplateOfPointerTott__RecordingJobStateTrack(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__RecordingJobStateTrack(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__RecordingJobStateSource
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__RecordingJobStateSource (1459)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__RecordingJobStateSource(struct soap*, std::vector<tt__RecordingJobStateSource *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__RecordingJobStateSource(struct soap*, const std::vector<tt__RecordingJobStateSource *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__RecordingJobStateSource(struct soap*, const char*, int, const std::vector<tt__RecordingJobStateSource *> *, const char*);
SOAP_FMAC3 std::vector<tt__RecordingJobStateSource *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__RecordingJobStateSource(struct soap*, const char*, std::vector<tt__RecordingJobStateSource *> *, const char*);
SOAP_FMAC1 std::vector<tt__RecordingJobStateSource *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__RecordingJobStateSource(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__RecordingJobStateSource *>  * soap_new_std__vectorTemplateOfPointerTott__RecordingJobStateSource(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__RecordingJobStateSource(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__RecordingJobTrack
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__RecordingJobTrack (1456)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__RecordingJobTrack(struct soap*, std::vector<tt__RecordingJobTrack *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__RecordingJobTrack(struct soap*, const std::vector<tt__RecordingJobTrack *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__RecordingJobTrack(struct soap*, const char*, int, const std::vector<tt__RecordingJobTrack *> *, const char*);
SOAP_FMAC3 std::vector<tt__RecordingJobTrack *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__RecordingJobTrack(struct soap*, const char*, std::vector<tt__RecordingJobTrack *> *, const char*);
SOAP_FMAC1 std::vector<tt__RecordingJobTrack *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__RecordingJobTrack(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__RecordingJobTrack *>  * soap_new_std__vectorTemplateOfPointerTott__RecordingJobTrack(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__RecordingJobTrack(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__RecordingJobSource
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__RecordingJobSource (1453)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__RecordingJobSource(struct soap*, std::vector<tt__RecordingJobSource *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__RecordingJobSource(struct soap*, const std::vector<tt__RecordingJobSource *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__RecordingJobSource(struct soap*, const char*, int, const std::vector<tt__RecordingJobSource *> *, const char*);
SOAP_FMAC3 std::vector<tt__RecordingJobSource *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__RecordingJobSource(struct soap*, const char*, std::vector<tt__RecordingJobSource *> *, const char*);
SOAP_FMAC1 std::vector<tt__RecordingJobSource *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__RecordingJobSource(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__RecordingJobSource *>  * soap_new_std__vectorTemplateOfPointerTott__RecordingJobSource(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__RecordingJobSource(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__GetTracksResponseItem
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__GetTracksResponseItem (1450)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__GetTracksResponseItem(struct soap*, std::vector<tt__GetTracksResponseItem *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__GetTracksResponseItem(struct soap*, const std::vector<tt__GetTracksResponseItem *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__GetTracksResponseItem(struct soap*, const char*, int, const std::vector<tt__GetTracksResponseItem *> *, const char*);
SOAP_FMAC3 std::vector<tt__GetTracksResponseItem *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__GetTracksResponseItem(struct soap*, const char*, std::vector<tt__GetTracksResponseItem *> *, const char*);
SOAP_FMAC1 std::vector<tt__GetTracksResponseItem *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__GetTracksResponseItem(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__GetTracksResponseItem *>  * soap_new_std__vectorTemplateOfPointerTott__GetTracksResponseItem(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__GetTracksResponseItem(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__TrackAttributes
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__TrackAttributes (1442)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__TrackAttributes(struct soap*, std::vector<tt__TrackAttributes *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__TrackAttributes(struct soap*, const std::vector<tt__TrackAttributes *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__TrackAttributes(struct soap*, const char*, int, const std::vector<tt__TrackAttributes *> *, const char*);
SOAP_FMAC3 std::vector<tt__TrackAttributes *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__TrackAttributes(struct soap*, const char*, std::vector<tt__TrackAttributes *> *, const char*);
SOAP_FMAC1 std::vector<tt__TrackAttributes *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__TrackAttributes(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__TrackAttributes *>  * soap_new_std__vectorTemplateOfPointerTott__TrackAttributes(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__TrackAttributes(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__TrackInformation
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__TrackInformation (1440)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__TrackInformation(struct soap*, std::vector<tt__TrackInformation *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__TrackInformation(struct soap*, const std::vector<tt__TrackInformation *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__TrackInformation(struct soap*, const char*, int, const std::vector<tt__TrackInformation *> *, const char*);
SOAP_FMAC3 std::vector<tt__TrackInformation *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__TrackInformation(struct soap*, const char*, std::vector<tt__TrackInformation *> *, const char*);
SOAP_FMAC1 std::vector<tt__TrackInformation *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__TrackInformation(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__TrackInformation *>  * soap_new_std__vectorTemplateOfPointerTott__TrackInformation(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__TrackInformation(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__FindMetadataResult
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__FindMetadataResult (1437)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__FindMetadataResult(struct soap*, std::vector<tt__FindMetadataResult *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__FindMetadataResult(struct soap*, const std::vector<tt__FindMetadataResult *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__FindMetadataResult(struct soap*, const char*, int, const std::vector<tt__FindMetadataResult *> *, const char*);
SOAP_FMAC3 std::vector<tt__FindMetadataResult *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__FindMetadataResult(struct soap*, const char*, std::vector<tt__FindMetadataResult *> *, const char*);
SOAP_FMAC1 std::vector<tt__FindMetadataResult *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__FindMetadataResult(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__FindMetadataResult *>  * soap_new_std__vectorTemplateOfPointerTott__FindMetadataResult(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__FindMetadataResult(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__FindPTZPositionResult
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__FindPTZPositionResult (1435)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__FindPTZPositionResult(struct soap*, std::vector<tt__FindPTZPositionResult *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__FindPTZPositionResult(struct soap*, const std::vector<tt__FindPTZPositionResult *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__FindPTZPositionResult(struct soap*, const char*, int, const std::vector<tt__FindPTZPositionResult *> *, const char*);
SOAP_FMAC3 std::vector<tt__FindPTZPositionResult *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__FindPTZPositionResult(struct soap*, const char*, std::vector<tt__FindPTZPositionResult *> *, const char*);
SOAP_FMAC1 std::vector<tt__FindPTZPositionResult *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__FindPTZPositionResult(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__FindPTZPositionResult *>  * soap_new_std__vectorTemplateOfPointerTott__FindPTZPositionResult(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__FindPTZPositionResult(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__FindEventResult
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__FindEventResult (1432)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__FindEventResult(struct soap*, std::vector<tt__FindEventResult *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__FindEventResult(struct soap*, const std::vector<tt__FindEventResult *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__FindEventResult(struct soap*, const char*, int, const std::vector<tt__FindEventResult *> *, const char*);
SOAP_FMAC3 std::vector<tt__FindEventResult *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__FindEventResult(struct soap*, const char*, std::vector<tt__FindEventResult *> *, const char*);
SOAP_FMAC1 std::vector<tt__FindEventResult *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__FindEventResult(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__FindEventResult *>  * soap_new_std__vectorTemplateOfPointerTott__FindEventResult(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__FindEventResult(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__RecordingInformation
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__RecordingInformation (1430)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__RecordingInformation(struct soap*, std::vector<tt__RecordingInformation *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__RecordingInformation(struct soap*, const std::vector<tt__RecordingInformation *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__RecordingInformation(struct soap*, const char*, int, const std::vector<tt__RecordingInformation *> *, const char*);
SOAP_FMAC3 std::vector<tt__RecordingInformation *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__RecordingInformation(struct soap*, const char*, std::vector<tt__RecordingInformation *> *, const char*);
SOAP_FMAC1 std::vector<tt__RecordingInformation *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__RecordingInformation(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__RecordingInformation *>  * soap_new_std__vectorTemplateOfPointerTott__RecordingInformation(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__RecordingInformation(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOftt__RecordingReference
#define SOAP_TYPE_std__vectorTemplateOftt__RecordingReference (1426)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__RecordingReference(struct soap*, std::vector<std::string> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__RecordingReference(struct soap*, const std::vector<std::string> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__RecordingReference(struct soap*, const char*, int, const std::vector<std::string> *, const char*);
SOAP_FMAC3 std::vector<std::string> * SOAP_FMAC4 soap_in_std__vectorTemplateOftt__RecordingReference(struct soap*, const char*, std::vector<std::string> *, const char*);
SOAP_FMAC1 std::vector<std::string>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__RecordingReference(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<std::string>  * soap_new_std__vectorTemplateOftt__RecordingReference(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__RecordingReference(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__SourceReference
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__SourceReference (1425)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__SourceReference(struct soap*, std::vector<tt__SourceReference *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__SourceReference(struct soap*, const std::vector<tt__SourceReference *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__SourceReference(struct soap*, const char*, int, const std::vector<tt__SourceReference *> *, const char*);
SOAP_FMAC3 std::vector<tt__SourceReference *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__SourceReference(struct soap*, const char*, std::vector<tt__SourceReference *> *, const char*);
SOAP_FMAC1 std::vector<tt__SourceReference *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__SourceReference(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__SourceReference *>  * soap_new_std__vectorTemplateOfPointerTott__SourceReference(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__SourceReference(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Rectangle
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Rectangle (1420)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Rectangle(struct soap*, std::vector<tt__Rectangle *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Rectangle(struct soap*, const std::vector<tt__Rectangle *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Rectangle(struct soap*, const char*, int, const std::vector<tt__Rectangle *> *, const char*);
SOAP_FMAC3 std::vector<tt__Rectangle *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Rectangle(struct soap*, const char*, std::vector<tt__Rectangle *> *, const char*);
SOAP_FMAC1 std::vector<tt__Rectangle *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Rectangle(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Rectangle *>  * soap_new_std__vectorTemplateOfPointerTott__Rectangle(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Rectangle(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__PaneLayoutOptions
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__PaneLayoutOptions (1418)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__PaneLayoutOptions(struct soap*, std::vector<tt__PaneLayoutOptions *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__PaneLayoutOptions(struct soap*, const std::vector<tt__PaneLayoutOptions *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__PaneLayoutOptions(struct soap*, const char*, int, const std::vector<tt__PaneLayoutOptions *> *, const char*);
SOAP_FMAC3 std::vector<tt__PaneLayoutOptions *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__PaneLayoutOptions(struct soap*, const char*, std::vector<tt__PaneLayoutOptions *> *, const char*);
SOAP_FMAC1 std::vector<tt__PaneLayoutOptions *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__PaneLayoutOptions(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__PaneLayoutOptions *>  * soap_new_std__vectorTemplateOfPointerTott__PaneLayoutOptions(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__PaneLayoutOptions(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__PaneLayout
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__PaneLayout (1412)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__PaneLayout(struct soap*, std::vector<tt__PaneLayout *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__PaneLayout(struct soap*, const std::vector<tt__PaneLayout *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__PaneLayout(struct soap*, const char*, int, const std::vector<tt__PaneLayout *> *, const char*);
SOAP_FMAC3 std::vector<tt__PaneLayout *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__PaneLayout(struct soap*, const char*, std::vector<tt__PaneLayout *> *, const char*);
SOAP_FMAC1 std::vector<tt__PaneLayout *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__PaneLayout(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__PaneLayout *>  * soap_new_std__vectorTemplateOfPointerTott__PaneLayout(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__PaneLayout(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Polyline
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Polyline (1406)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Polyline(struct soap*, std::vector<tt__Polyline *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Polyline(struct soap*, const std::vector<tt__Polyline *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Polyline(struct soap*, const char*, int, const std::vector<tt__Polyline *> *, const char*);
SOAP_FMAC3 std::vector<tt__Polyline *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Polyline(struct soap*, const char*, std::vector<tt__Polyline *> *, const char*);
SOAP_FMAC1 std::vector<tt__Polyline *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Polyline(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Polyline *>  * soap_new_std__vectorTemplateOfPointerTott__Polyline(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Polyline(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__ConfigDescription
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__ConfigDescription (1401)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__ConfigDescription(struct soap*, std::vector<tt__ConfigDescription *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__ConfigDescription(struct soap*, const std::vector<tt__ConfigDescription *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__ConfigDescription(struct soap*, const char*, int, const std::vector<tt__ConfigDescription *> *, const char*);
SOAP_FMAC3 std::vector<tt__ConfigDescription *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__ConfigDescription(struct soap*, const char*, std::vector<tt__ConfigDescription *> *, const char*);
SOAP_FMAC1 std::vector<tt__ConfigDescription *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__ConfigDescription(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__ConfigDescription *>  * soap_new_std__vectorTemplateOfPointerTott__ConfigDescription(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__ConfigDescription(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOf_tt__ConfigDescription_Messages
#define SOAP_TYPE_std__vectorTemplateOf_tt__ConfigDescription_Messages (1397)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOf_tt__ConfigDescription_Messages(struct soap*, std::vector<_tt__ConfigDescription_Messages> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOf_tt__ConfigDescription_Messages(struct soap*, const std::vector<_tt__ConfigDescription_Messages> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOf_tt__ConfigDescription_Messages(struct soap*, const char*, int, const std::vector<_tt__ConfigDescription_Messages> *, const char*);
SOAP_FMAC3 std::vector<_tt__ConfigDescription_Messages> * SOAP_FMAC4 soap_in_std__vectorTemplateOf_tt__ConfigDescription_Messages(struct soap*, const char*, std::vector<_tt__ConfigDescription_Messages> *, const char*);
SOAP_FMAC1 std::vector<_tt__ConfigDescription_Messages>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOf_tt__ConfigDescription_Messages(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<_tt__ConfigDescription_Messages>  * soap_new_std__vectorTemplateOf_tt__ConfigDescription_Messages(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOf_tt__ConfigDescription_Messages(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Config
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Config (1392)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Config(struct soap*, std::vector<tt__Config *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Config(struct soap*, const std::vector<tt__Config *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Config(struct soap*, const char*, int, const std::vector<tt__Config *> *, const char*);
SOAP_FMAC3 std::vector<tt__Config *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Config(struct soap*, const char*, std::vector<tt__Config *> *, const char*);
SOAP_FMAC1 std::vector<tt__Config *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Config(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Config *>  * soap_new_std__vectorTemplateOfPointerTott__Config(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Config(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Vector
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Vector (1390)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Vector(struct soap*, std::vector<tt__Vector *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Vector(struct soap*, const std::vector<tt__Vector *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Vector(struct soap*, const char*, int, const std::vector<tt__Vector *> *, const char*);
SOAP_FMAC3 std::vector<tt__Vector *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Vector(struct soap*, const char*, std::vector<tt__Vector *> *, const char*);
SOAP_FMAC1 std::vector<tt__Vector *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Vector(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Vector *>  * soap_new_std__vectorTemplateOfPointerTott__Vector(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Vector(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription
#define SOAP_TYPE_std__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription (1386)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(struct soap*, std::vector<_tt__ItemListDescription_ElementItemDescription> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(struct soap*, const std::vector<_tt__ItemListDescription_ElementItemDescription> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(struct soap*, const char*, int, const std::vector<_tt__ItemListDescription_ElementItemDescription> *, const char*);
SOAP_FMAC3 std::vector<_tt__ItemListDescription_ElementItemDescription> * SOAP_FMAC4 soap_in_std__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(struct soap*, const char*, std::vector<_tt__ItemListDescription_ElementItemDescription> *, const char*);
SOAP_FMAC1 std::vector<_tt__ItemListDescription_ElementItemDescription>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<_tt__ItemListDescription_ElementItemDescription>  * soap_new_std__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOf_tt__ItemListDescription_ElementItemDescription(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription
#define SOAP_TYPE_std__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription (1383)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(struct soap*, std::vector<_tt__ItemListDescription_SimpleItemDescription> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(struct soap*, const std::vector<_tt__ItemListDescription_SimpleItemDescription> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(struct soap*, const char*, int, const std::vector<_tt__ItemListDescription_SimpleItemDescription> *, const char*);
SOAP_FMAC3 std::vector<_tt__ItemListDescription_SimpleItemDescription> * SOAP_FMAC4 soap_in_std__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(struct soap*, const char*, std::vector<_tt__ItemListDescription_SimpleItemDescription> *, const char*);
SOAP_FMAC1 std::vector<_tt__ItemListDescription_SimpleItemDescription>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<_tt__ItemListDescription_SimpleItemDescription>  * soap_new_std__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOf_tt__ItemListDescription_SimpleItemDescription(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOf_tt__ItemList_ElementItem
#define SOAP_TYPE_std__vectorTemplateOf_tt__ItemList_ElementItem (1377)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOf_tt__ItemList_ElementItem(struct soap*, std::vector<_tt__ItemList_ElementItem> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOf_tt__ItemList_ElementItem(struct soap*, const std::vector<_tt__ItemList_ElementItem> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOf_tt__ItemList_ElementItem(struct soap*, const char*, int, const std::vector<_tt__ItemList_ElementItem> *, const char*);
SOAP_FMAC3 std::vector<_tt__ItemList_ElementItem> * SOAP_FMAC4 soap_in_std__vectorTemplateOf_tt__ItemList_ElementItem(struct soap*, const char*, std::vector<_tt__ItemList_ElementItem> *, const char*);
SOAP_FMAC1 std::vector<_tt__ItemList_ElementItem>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOf_tt__ItemList_ElementItem(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<_tt__ItemList_ElementItem>  * soap_new_std__vectorTemplateOf_tt__ItemList_ElementItem(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOf_tt__ItemList_ElementItem(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOf_tt__ItemList_SimpleItem
#define SOAP_TYPE_std__vectorTemplateOf_tt__ItemList_SimpleItem (1374)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOf_tt__ItemList_SimpleItem(struct soap*, std::vector<_tt__ItemList_SimpleItem> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOf_tt__ItemList_SimpleItem(struct soap*, const std::vector<_tt__ItemList_SimpleItem> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOf_tt__ItemList_SimpleItem(struct soap*, const char*, int, const std::vector<_tt__ItemList_SimpleItem> *, const char*);
SOAP_FMAC3 std::vector<_tt__ItemList_SimpleItem> * SOAP_FMAC4 soap_in_std__vectorTemplateOf_tt__ItemList_SimpleItem(struct soap*, const char*, std::vector<_tt__ItemList_SimpleItem> *, const char*);
SOAP_FMAC1 std::vector<_tt__ItemList_SimpleItem>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOf_tt__ItemList_SimpleItem(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<_tt__ItemList_SimpleItem>  * soap_new_std__vectorTemplateOf_tt__ItemList_SimpleItem(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOf_tt__ItemList_SimpleItem(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOftt__BacklightCompensationMode
#define SOAP_TYPE_std__vectorTemplateOftt__BacklightCompensationMode (1367)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__BacklightCompensationMode(struct soap*, std::vector<enum tt__BacklightCompensationMode> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__BacklightCompensationMode(struct soap*, const std::vector<enum tt__BacklightCompensationMode> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__BacklightCompensationMode(struct soap*, const char*, int, const std::vector<enum tt__BacklightCompensationMode> *, const char*);
SOAP_FMAC3 std::vector<enum tt__BacklightCompensationMode> * SOAP_FMAC4 soap_in_std__vectorTemplateOftt__BacklightCompensationMode(struct soap*, const char*, std::vector<enum tt__BacklightCompensationMode> *, const char*);
SOAP_FMAC1 std::vector<enum tt__BacklightCompensationMode>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__BacklightCompensationMode(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__BacklightCompensationMode>  * soap_new_std__vectorTemplateOftt__BacklightCompensationMode(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__BacklightCompensationMode(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOftt__ImageStabilizationMode
#define SOAP_TYPE_std__vectorTemplateOftt__ImageStabilizationMode (1364)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__ImageStabilizationMode(struct soap*, std::vector<enum tt__ImageStabilizationMode> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__ImageStabilizationMode(struct soap*, const std::vector<enum tt__ImageStabilizationMode> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__ImageStabilizationMode(struct soap*, const char*, int, const std::vector<enum tt__ImageStabilizationMode> *, const char*);
SOAP_FMAC3 std::vector<enum tt__ImageStabilizationMode> * SOAP_FMAC4 soap_in_std__vectorTemplateOftt__ImageStabilizationMode(struct soap*, const char*, std::vector<enum tt__ImageStabilizationMode> *, const char*);
SOAP_FMAC1 std::vector<enum tt__ImageStabilizationMode>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__ImageStabilizationMode(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__ImageStabilizationMode>  * soap_new_std__vectorTemplateOftt__ImageStabilizationMode(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__ImageStabilizationMode(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__IrCutFilterAutoAdjustment
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__IrCutFilterAutoAdjustment (1339)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__IrCutFilterAutoAdjustment(struct soap*, std::vector<tt__IrCutFilterAutoAdjustment *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__IrCutFilterAutoAdjustment(struct soap*, const std::vector<tt__IrCutFilterAutoAdjustment *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__IrCutFilterAutoAdjustment(struct soap*, const char*, int, const std::vector<tt__IrCutFilterAutoAdjustment *> *, const char*);
SOAP_FMAC3 std::vector<tt__IrCutFilterAutoAdjustment *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__IrCutFilterAutoAdjustment(struct soap*, const char*, std::vector<tt__IrCutFilterAutoAdjustment *> *, const char*);
SOAP_FMAC1 std::vector<tt__IrCutFilterAutoAdjustment *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__IrCutFilterAutoAdjustment(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__IrCutFilterAutoAdjustment *>  * soap_new_std__vectorTemplateOfPointerTott__IrCutFilterAutoAdjustment(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__IrCutFilterAutoAdjustment(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOftt__WhiteBalanceMode
#define SOAP_TYPE_std__vectorTemplateOftt__WhiteBalanceMode (1320)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__WhiteBalanceMode(struct soap*, std::vector<enum tt__WhiteBalanceMode> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__WhiteBalanceMode(struct soap*, const std::vector<enum tt__WhiteBalanceMode> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__WhiteBalanceMode(struct soap*, const char*, int, const std::vector<enum tt__WhiteBalanceMode> *, const char*);
SOAP_FMAC3 std::vector<enum tt__WhiteBalanceMode> * SOAP_FMAC4 soap_in_std__vectorTemplateOftt__WhiteBalanceMode(struct soap*, const char*, std::vector<enum tt__WhiteBalanceMode> *, const char*);
SOAP_FMAC1 std::vector<enum tt__WhiteBalanceMode>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__WhiteBalanceMode(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__WhiteBalanceMode>  * soap_new_std__vectorTemplateOftt__WhiteBalanceMode(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__WhiteBalanceMode(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOftt__ExposurePriority
#define SOAP_TYPE_std__vectorTemplateOftt__ExposurePriority (1319)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__ExposurePriority(struct soap*, std::vector<enum tt__ExposurePriority> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__ExposurePriority(struct soap*, const std::vector<enum tt__ExposurePriority> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__ExposurePriority(struct soap*, const char*, int, const std::vector<enum tt__ExposurePriority> *, const char*);
SOAP_FMAC3 std::vector<enum tt__ExposurePriority> * SOAP_FMAC4 soap_in_std__vectorTemplateOftt__ExposurePriority(struct soap*, const char*, std::vector<enum tt__ExposurePriority> *, const char*);
SOAP_FMAC1 std::vector<enum tt__ExposurePriority>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__ExposurePriority(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__ExposurePriority>  * soap_new_std__vectorTemplateOftt__ExposurePriority(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__ExposurePriority(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOftt__ExposureMode
#define SOAP_TYPE_std__vectorTemplateOftt__ExposureMode (1318)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__ExposureMode(struct soap*, std::vector<enum tt__ExposureMode> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__ExposureMode(struct soap*, const std::vector<enum tt__ExposureMode> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__ExposureMode(struct soap*, const char*, int, const std::vector<enum tt__ExposureMode> *, const char*);
SOAP_FMAC3 std::vector<enum tt__ExposureMode> * SOAP_FMAC4 soap_in_std__vectorTemplateOftt__ExposureMode(struct soap*, const char*, std::vector<enum tt__ExposureMode> *, const char*);
SOAP_FMAC1 std::vector<enum tt__ExposureMode>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__ExposureMode(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__ExposureMode>  * soap_new_std__vectorTemplateOftt__ExposureMode(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__ExposureMode(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOftt__AutoFocusMode
#define SOAP_TYPE_std__vectorTemplateOftt__AutoFocusMode (1317)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__AutoFocusMode(struct soap*, std::vector<enum tt__AutoFocusMode> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__AutoFocusMode(struct soap*, const std::vector<enum tt__AutoFocusMode> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__AutoFocusMode(struct soap*, const char*, int, const std::vector<enum tt__AutoFocusMode> *, const char*);
SOAP_FMAC3 std::vector<enum tt__AutoFocusMode> * SOAP_FMAC4 soap_in_std__vectorTemplateOftt__AutoFocusMode(struct soap*, const char*, std::vector<enum tt__AutoFocusMode> *, const char*);
SOAP_FMAC1 std::vector<enum tt__AutoFocusMode>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__AutoFocusMode(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__AutoFocusMode>  * soap_new_std__vectorTemplateOftt__AutoFocusMode(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__AutoFocusMode(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOftt__WideDynamicMode
#define SOAP_TYPE_std__vectorTemplateOftt__WideDynamicMode (1316)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__WideDynamicMode(struct soap*, std::vector<enum tt__WideDynamicMode> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__WideDynamicMode(struct soap*, const std::vector<enum tt__WideDynamicMode> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__WideDynamicMode(struct soap*, const char*, int, const std::vector<enum tt__WideDynamicMode> *, const char*);
SOAP_FMAC3 std::vector<enum tt__WideDynamicMode> * SOAP_FMAC4 soap_in_std__vectorTemplateOftt__WideDynamicMode(struct soap*, const char*, std::vector<enum tt__WideDynamicMode> *, const char*);
SOAP_FMAC1 std::vector<enum tt__WideDynamicMode>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__WideDynamicMode(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__WideDynamicMode>  * soap_new_std__vectorTemplateOftt__WideDynamicMode(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__WideDynamicMode(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOftt__IrCutFilterMode
#define SOAP_TYPE_std__vectorTemplateOftt__IrCutFilterMode (1313)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__IrCutFilterMode(struct soap*, std::vector<enum tt__IrCutFilterMode> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__IrCutFilterMode(struct soap*, const std::vector<enum tt__IrCutFilterMode> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__IrCutFilterMode(struct soap*, const char*, int, const std::vector<enum tt__IrCutFilterMode> *, const char*);
SOAP_FMAC3 std::vector<enum tt__IrCutFilterMode> * SOAP_FMAC4 soap_in_std__vectorTemplateOftt__IrCutFilterMode(struct soap*, const char*, std::vector<enum tt__IrCutFilterMode> *, const char*);
SOAP_FMAC1 std::vector<enum tt__IrCutFilterMode>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__IrCutFilterMode(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__IrCutFilterMode>  * soap_new_std__vectorTemplateOftt__IrCutFilterMode(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__IrCutFilterMode(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOftt__PTZPresetTourDirection
#define SOAP_TYPE_std__vectorTemplateOftt__PTZPresetTourDirection (1299)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__PTZPresetTourDirection(struct soap*, std::vector<enum tt__PTZPresetTourDirection> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__PTZPresetTourDirection(struct soap*, const std::vector<enum tt__PTZPresetTourDirection> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__PTZPresetTourDirection(struct soap*, const char*, int, const std::vector<enum tt__PTZPresetTourDirection> *, const char*);
SOAP_FMAC3 std::vector<enum tt__PTZPresetTourDirection> * SOAP_FMAC4 soap_in_std__vectorTemplateOftt__PTZPresetTourDirection(struct soap*, const char*, std::vector<enum tt__PTZPresetTourDirection> *, const char*);
SOAP_FMAC1 std::vector<enum tt__PTZPresetTourDirection>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__PTZPresetTourDirection(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__PTZPresetTourDirection>  * soap_new_std__vectorTemplateOftt__PTZPresetTourDirection(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__PTZPresetTourDirection(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__PTZPresetTourSpot
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__PTZPresetTourSpot (1285)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__PTZPresetTourSpot(struct soap*, std::vector<tt__PTZPresetTourSpot *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__PTZPresetTourSpot(struct soap*, const std::vector<tt__PTZPresetTourSpot *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__PTZPresetTourSpot(struct soap*, const char*, int, const std::vector<tt__PTZPresetTourSpot *> *, const char*);
SOAP_FMAC3 std::vector<tt__PTZPresetTourSpot *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__PTZPresetTourSpot(struct soap*, const char*, std::vector<tt__PTZPresetTourSpot *> *, const char*);
SOAP_FMAC1 std::vector<tt__PTZPresetTourSpot *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__PTZPresetTourSpot(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__PTZPresetTourSpot *>  * soap_new_std__vectorTemplateOfPointerTott__PTZPresetTourSpot(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__PTZPresetTourSpot(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Space1DDescription
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Space1DDescription (1276)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Space1DDescription(struct soap*, std::vector<tt__Space1DDescription *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Space1DDescription(struct soap*, const std::vector<tt__Space1DDescription *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Space1DDescription(struct soap*, const char*, int, const std::vector<tt__Space1DDescription *> *, const char*);
SOAP_FMAC3 std::vector<tt__Space1DDescription *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Space1DDescription(struct soap*, const char*, std::vector<tt__Space1DDescription *> *, const char*);
SOAP_FMAC1 std::vector<tt__Space1DDescription *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Space1DDescription(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Space1DDescription *>  * soap_new_std__vectorTemplateOfPointerTott__Space1DDescription(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Space1DDescription(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Space2DDescription
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Space2DDescription (1275)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Space2DDescription(struct soap*, std::vector<tt__Space2DDescription *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Space2DDescription(struct soap*, const std::vector<tt__Space2DDescription *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Space2DDescription(struct soap*, const char*, int, const std::vector<tt__Space2DDescription *> *, const char*);
SOAP_FMAC3 std::vector<tt__Space2DDescription *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Space2DDescription(struct soap*, const char*, std::vector<tt__Space2DDescription *> *, const char*);
SOAP_FMAC1 std::vector<tt__Space2DDescription *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Space2DDescription(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Space2DDescription *>  * soap_new_std__vectorTemplateOfPointerTott__Space2DDescription(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Space2DDescription(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOftt__ReverseMode
#define SOAP_TYPE_std__vectorTemplateOftt__ReverseMode (1271)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__ReverseMode(struct soap*, std::vector<enum tt__ReverseMode> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__ReverseMode(struct soap*, const std::vector<enum tt__ReverseMode> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__ReverseMode(struct soap*, const char*, int, const std::vector<enum tt__ReverseMode> *, const char*);
SOAP_FMAC3 std::vector<enum tt__ReverseMode> * SOAP_FMAC4 soap_in_std__vectorTemplateOftt__ReverseMode(struct soap*, const char*, std::vector<enum tt__ReverseMode> *, const char*);
SOAP_FMAC1 std::vector<enum tt__ReverseMode>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__ReverseMode(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__ReverseMode>  * soap_new_std__vectorTemplateOftt__ReverseMode(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__ReverseMode(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOftt__EFlipMode
#define SOAP_TYPE_std__vectorTemplateOftt__EFlipMode (1269)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__EFlipMode(struct soap*, std::vector<enum tt__EFlipMode> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__EFlipMode(struct soap*, const std::vector<enum tt__EFlipMode> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__EFlipMode(struct soap*, const char*, int, const std::vector<enum tt__EFlipMode> *, const char*);
SOAP_FMAC3 std::vector<enum tt__EFlipMode> * SOAP_FMAC4 soap_in_std__vectorTemplateOftt__EFlipMode(struct soap*, const char*, std::vector<enum tt__EFlipMode> *, const char*);
SOAP_FMAC1 std::vector<enum tt__EFlipMode>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__EFlipMode(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__EFlipMode>  * soap_new_std__vectorTemplateOftt__EFlipMode(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__EFlipMode(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOftt__PTZPresetTourOperation
#define SOAP_TYPE_std__vectorTemplateOftt__PTZPresetTourOperation (1255)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__PTZPresetTourOperation(struct soap*, std::vector<enum tt__PTZPresetTourOperation> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__PTZPresetTourOperation(struct soap*, const std::vector<enum tt__PTZPresetTourOperation> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__PTZPresetTourOperation(struct soap*, const char*, int, const std::vector<enum tt__PTZPresetTourOperation> *, const char*);
SOAP_FMAC3 std::vector<enum tt__PTZPresetTourOperation> * SOAP_FMAC4 soap_in_std__vectorTemplateOftt__PTZPresetTourOperation(struct soap*, const char*, std::vector<enum tt__PTZPresetTourOperation> *, const char*);
SOAP_FMAC1 std::vector<enum tt__PTZPresetTourOperation>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__PTZPresetTourOperation(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__PTZPresetTourOperation>  * soap_new_std__vectorTemplateOftt__PTZPresetTourOperation(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__PTZPresetTourOperation(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__SystemLogUri
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__SystemLogUri (1234)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__SystemLogUri(struct soap*, std::vector<tt__SystemLogUri *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__SystemLogUri(struct soap*, const std::vector<tt__SystemLogUri *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__SystemLogUri(struct soap*, const char*, int, const std::vector<tt__SystemLogUri *> *, const char*);
SOAP_FMAC3 std::vector<tt__SystemLogUri *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__SystemLogUri(struct soap*, const char*, std::vector<tt__SystemLogUri *> *, const char*);
SOAP_FMAC1 std::vector<tt__SystemLogUri *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__SystemLogUri(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__SystemLogUri *>  * soap_new_std__vectorTemplateOfPointerTott__SystemLogUri(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__SystemLogUri(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__OnvifVersion
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__OnvifVersion (1229)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__OnvifVersion(struct soap*, std::vector<tt__OnvifVersion *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__OnvifVersion(struct soap*, const std::vector<tt__OnvifVersion *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__OnvifVersion(struct soap*, const char*, int, const std::vector<tt__OnvifVersion *> *, const char*);
SOAP_FMAC3 std::vector<tt__OnvifVersion *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__OnvifVersion(struct soap*, const char*, std::vector<tt__OnvifVersion *> *, const char*);
SOAP_FMAC1 std::vector<tt__OnvifVersion *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__OnvifVersion(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__OnvifVersion *>  * soap_new_std__vectorTemplateOfPointerTott__OnvifVersion(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__OnvifVersion(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOftt__AuxiliaryData
#define SOAP_TYPE_std__vectorTemplateOftt__AuxiliaryData (1219)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__AuxiliaryData(struct soap*, std::vector<std::string> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__AuxiliaryData(struct soap*, const std::vector<std::string> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__AuxiliaryData(struct soap*, const char*, int, const std::vector<std::string> *, const char*);
SOAP_FMAC3 std::vector<std::string> * SOAP_FMAC4 soap_in_std__vectorTemplateOftt__AuxiliaryData(struct soap*, const char*, std::vector<std::string> *, const char*);
SOAP_FMAC1 std::vector<std::string>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__AuxiliaryData(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<std::string>  * soap_new_std__vectorTemplateOftt__AuxiliaryData(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__AuxiliaryData(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOftt__Dot11Cipher
#define SOAP_TYPE_std__vectorTemplateOftt__Dot11Cipher (1196)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__Dot11Cipher(struct soap*, std::vector<enum tt__Dot11Cipher> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__Dot11Cipher(struct soap*, const std::vector<enum tt__Dot11Cipher> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__Dot11Cipher(struct soap*, const char*, int, const std::vector<enum tt__Dot11Cipher> *, const char*);
SOAP_FMAC3 std::vector<enum tt__Dot11Cipher> * SOAP_FMAC4 soap_in_std__vectorTemplateOftt__Dot11Cipher(struct soap*, const char*, std::vector<enum tt__Dot11Cipher> *, const char*);
SOAP_FMAC1 std::vector<enum tt__Dot11Cipher>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__Dot11Cipher(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__Dot11Cipher>  * soap_new_std__vectorTemplateOftt__Dot11Cipher(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__Dot11Cipher(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOftt__Dot11AuthAndMangementSuite
#define SOAP_TYPE_std__vectorTemplateOftt__Dot11AuthAndMangementSuite (1195)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__Dot11AuthAndMangementSuite(struct soap*, std::vector<enum tt__Dot11AuthAndMangementSuite> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__Dot11AuthAndMangementSuite(struct soap*, const std::vector<enum tt__Dot11AuthAndMangementSuite> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__Dot11AuthAndMangementSuite(struct soap*, const char*, int, const std::vector<enum tt__Dot11AuthAndMangementSuite> *, const char*);
SOAP_FMAC3 std::vector<enum tt__Dot11AuthAndMangementSuite> * SOAP_FMAC4 soap_in_std__vectorTemplateOftt__Dot11AuthAndMangementSuite(struct soap*, const char*, std::vector<enum tt__Dot11AuthAndMangementSuite> *, const char*);
SOAP_FMAC1 std::vector<enum tt__Dot11AuthAndMangementSuite>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__Dot11AuthAndMangementSuite(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__Dot11AuthAndMangementSuite>  * soap_new_std__vectorTemplateOftt__Dot11AuthAndMangementSuite(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__Dot11AuthAndMangementSuite(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__NetworkZeroConfiguration
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__NetworkZeroConfiguration (1184)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__NetworkZeroConfiguration(struct soap*, std::vector<tt__NetworkZeroConfiguration *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__NetworkZeroConfiguration(struct soap*, const std::vector<tt__NetworkZeroConfiguration *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__NetworkZeroConfiguration(struct soap*, const char*, int, const std::vector<tt__NetworkZeroConfiguration *> *, const char*);
SOAP_FMAC3 std::vector<tt__NetworkZeroConfiguration *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__NetworkZeroConfiguration(struct soap*, const char*, std::vector<tt__NetworkZeroConfiguration *> *, const char*);
SOAP_FMAC1 std::vector<tt__NetworkZeroConfiguration *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__NetworkZeroConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__NetworkZeroConfiguration *>  * soap_new_std__vectorTemplateOfPointerTott__NetworkZeroConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__NetworkZeroConfiguration(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__PrefixedIPv6Address
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__PrefixedIPv6Address (1168)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__PrefixedIPv6Address(struct soap*, std::vector<tt__PrefixedIPv6Address *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__PrefixedIPv6Address(struct soap*, const std::vector<tt__PrefixedIPv6Address *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__PrefixedIPv6Address(struct soap*, const char*, int, const std::vector<tt__PrefixedIPv6Address *> *, const char*);
SOAP_FMAC3 std::vector<tt__PrefixedIPv6Address *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__PrefixedIPv6Address(struct soap*, const char*, std::vector<tt__PrefixedIPv6Address *> *, const char*);
SOAP_FMAC1 std::vector<tt__PrefixedIPv6Address *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__PrefixedIPv6Address(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__PrefixedIPv6Address *>  * soap_new_std__vectorTemplateOfPointerTott__PrefixedIPv6Address(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__PrefixedIPv6Address(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__PrefixedIPv4Address
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__PrefixedIPv4Address (1166)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__PrefixedIPv4Address(struct soap*, std::vector<tt__PrefixedIPv4Address *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__PrefixedIPv4Address(struct soap*, const std::vector<tt__PrefixedIPv4Address *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__PrefixedIPv4Address(struct soap*, const char*, int, const std::vector<tt__PrefixedIPv4Address *> *, const char*);
SOAP_FMAC3 std::vector<tt__PrefixedIPv4Address *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__PrefixedIPv4Address(struct soap*, const char*, std::vector<tt__PrefixedIPv4Address *> *, const char*);
SOAP_FMAC1 std::vector<tt__PrefixedIPv4Address *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__PrefixedIPv4Address(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__PrefixedIPv4Address *>  * soap_new_std__vectorTemplateOfPointerTott__PrefixedIPv4Address(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__PrefixedIPv4Address(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Dot11Configuration
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Dot11Configuration (1160)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Dot11Configuration(struct soap*, std::vector<tt__Dot11Configuration *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Dot11Configuration(struct soap*, const std::vector<tt__Dot11Configuration *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Dot11Configuration(struct soap*, const char*, int, const std::vector<tt__Dot11Configuration *> *, const char*);
SOAP_FMAC3 std::vector<tt__Dot11Configuration *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Dot11Configuration(struct soap*, const char*, std::vector<tt__Dot11Configuration *> *, const char*);
SOAP_FMAC1 std::vector<tt__Dot11Configuration *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Dot11Configuration(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Dot11Configuration *>  * soap_new_std__vectorTemplateOfPointerTott__Dot11Configuration(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Dot11Configuration(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Dot3Configuration
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Dot3Configuration (1158)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Dot3Configuration(struct soap*, std::vector<tt__Dot3Configuration *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Dot3Configuration(struct soap*, const std::vector<tt__Dot3Configuration *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Dot3Configuration(struct soap*, const char*, int, const std::vector<tt__Dot3Configuration *> *, const char*);
SOAP_FMAC3 std::vector<tt__Dot3Configuration *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Dot3Configuration(struct soap*, const char*, std::vector<tt__Dot3Configuration *> *, const char*);
SOAP_FMAC1 std::vector<tt__Dot3Configuration *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Dot3Configuration(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Dot3Configuration *>  * soap_new_std__vectorTemplateOfPointerTott__Dot3Configuration(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Dot3Configuration(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__AudioEncoderConfigurationOption
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__AudioEncoderConfigurationOption (1140)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__AudioEncoderConfigurationOption(struct soap*, std::vector<tt__AudioEncoderConfigurationOption *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__AudioEncoderConfigurationOption(struct soap*, const std::vector<tt__AudioEncoderConfigurationOption *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__AudioEncoderConfigurationOption(struct soap*, const char*, int, const std::vector<tt__AudioEncoderConfigurationOption *> *, const char*);
SOAP_FMAC3 std::vector<tt__AudioEncoderConfigurationOption *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__AudioEncoderConfigurationOption(struct soap*, const char*, std::vector<tt__AudioEncoderConfigurationOption *> *, const char*);
SOAP_FMAC1 std::vector<tt__AudioEncoderConfigurationOption *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__AudioEncoderConfigurationOption(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__AudioEncoderConfigurationOption *>  * soap_new_std__vectorTemplateOfPointerTott__AudioEncoderConfigurationOption(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__AudioEncoderConfigurationOption(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__VideoResolution2
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__VideoResolution2 (1135)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__VideoResolution2(struct soap*, std::vector<tt__VideoResolution2 *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__VideoResolution2(struct soap*, const std::vector<tt__VideoResolution2 *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__VideoResolution2(struct soap*, const char*, int, const std::vector<tt__VideoResolution2 *> *, const char*);
SOAP_FMAC3 std::vector<tt__VideoResolution2 *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__VideoResolution2(struct soap*, const char*, std::vector<tt__VideoResolution2 *> *, const char*);
SOAP_FMAC1 std::vector<tt__VideoResolution2 *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__VideoResolution2(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__VideoResolution2 *>  * soap_new_std__vectorTemplateOfPointerTott__VideoResolution2(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__VideoResolution2(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOftt__H264Profile
#define SOAP_TYPE_std__vectorTemplateOftt__H264Profile (1132)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__H264Profile(struct soap*, std::vector<enum tt__H264Profile> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__H264Profile(struct soap*, const std::vector<enum tt__H264Profile> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__H264Profile(struct soap*, const char*, int, const std::vector<enum tt__H264Profile> *, const char*);
SOAP_FMAC3 std::vector<enum tt__H264Profile> * SOAP_FMAC4 soap_in_std__vectorTemplateOftt__H264Profile(struct soap*, const char*, std::vector<enum tt__H264Profile> *, const char*);
SOAP_FMAC1 std::vector<enum tt__H264Profile>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__H264Profile(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__H264Profile>  * soap_new_std__vectorTemplateOftt__H264Profile(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__H264Profile(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOftt__Mpeg4Profile
#define SOAP_TYPE_std__vectorTemplateOftt__Mpeg4Profile (1131)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__Mpeg4Profile(struct soap*, std::vector<enum tt__Mpeg4Profile> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__Mpeg4Profile(struct soap*, const std::vector<enum tt__Mpeg4Profile> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__Mpeg4Profile(struct soap*, const char*, int, const std::vector<enum tt__Mpeg4Profile> *, const char*);
SOAP_FMAC3 std::vector<enum tt__Mpeg4Profile> * SOAP_FMAC4 soap_in_std__vectorTemplateOftt__Mpeg4Profile(struct soap*, const char*, std::vector<enum tt__Mpeg4Profile> *, const char*);
SOAP_FMAC1 std::vector<enum tt__Mpeg4Profile>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__Mpeg4Profile(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__Mpeg4Profile>  * soap_new_std__vectorTemplateOftt__Mpeg4Profile(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__Mpeg4Profile(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__VideoResolution
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__VideoResolution (1130)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__VideoResolution(struct soap*, std::vector<tt__VideoResolution *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__VideoResolution(struct soap*, const std::vector<tt__VideoResolution *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__VideoResolution(struct soap*, const char*, int, const std::vector<tt__VideoResolution *> *, const char*);
SOAP_FMAC3 std::vector<tt__VideoResolution *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__VideoResolution(struct soap*, const char*, std::vector<tt__VideoResolution *> *, const char*);
SOAP_FMAC1 std::vector<tt__VideoResolution *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__VideoResolution(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__VideoResolution *>  * soap_new_std__vectorTemplateOfPointerTott__VideoResolution(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__VideoResolution(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOftt__RotateMode
#define SOAP_TYPE_std__vectorTemplateOftt__RotateMode (1119)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__RotateMode(struct soap*, std::vector<enum tt__RotateMode> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__RotateMode(struct soap*, const std::vector<enum tt__RotateMode> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__RotateMode(struct soap*, const char*, int, const std::vector<enum tt__RotateMode> *, const char*);
SOAP_FMAC3 std::vector<enum tt__RotateMode> * SOAP_FMAC4 soap_in_std__vectorTemplateOftt__RotateMode(struct soap*, const char*, std::vector<enum tt__RotateMode> *, const char*);
SOAP_FMAC1 std::vector<enum tt__RotateMode>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__RotateMode(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__RotateMode>  * soap_new_std__vectorTemplateOftt__RotateMode(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__RotateMode(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOftt__SceneOrientationMode
#define SOAP_TYPE_std__vectorTemplateOftt__SceneOrientationMode (1118)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__SceneOrientationMode(struct soap*, std::vector<enum tt__SceneOrientationMode> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__SceneOrientationMode(struct soap*, const std::vector<enum tt__SceneOrientationMode> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__SceneOrientationMode(struct soap*, const char*, int, const std::vector<enum tt__SceneOrientationMode> *, const char*);
SOAP_FMAC3 std::vector<enum tt__SceneOrientationMode> * SOAP_FMAC4 soap_in_std__vectorTemplateOftt__SceneOrientationMode(struct soap*, const char*, std::vector<enum tt__SceneOrientationMode> *, const char*);
SOAP_FMAC1 std::vector<enum tt__SceneOrientationMode>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__SceneOrientationMode(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__SceneOrientationMode>  * soap_new_std__vectorTemplateOftt__SceneOrientationMode(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__SceneOrientationMode(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__LensProjection
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__LensProjection (1113)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__LensProjection(struct soap*, std::vector<tt__LensProjection *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__LensProjection(struct soap*, const std::vector<tt__LensProjection *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__LensProjection(struct soap*, const char*, int, const std::vector<tt__LensProjection *> *, const char*);
SOAP_FMAC3 std::vector<tt__LensProjection *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__LensProjection(struct soap*, const char*, std::vector<tt__LensProjection *> *, const char*);
SOAP_FMAC1 std::vector<tt__LensProjection *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__LensProjection(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__LensProjection *>  * soap_new_std__vectorTemplateOfPointerTott__LensProjection(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__LensProjection(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__LensDescription
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__LensDescription (1107)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__LensDescription(struct soap*, std::vector<tt__LensDescription *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__LensDescription(struct soap*, const std::vector<tt__LensDescription *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__LensDescription(struct soap*, const char*, int, const std::vector<tt__LensDescription *> *, const char*);
SOAP_FMAC3 std::vector<tt__LensDescription *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__LensDescription(struct soap*, const char*, std::vector<tt__LensDescription *> *, const char*);
SOAP_FMAC1 std::vector<tt__LensDescription *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__LensDescription(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__LensDescription *>  * soap_new_std__vectorTemplateOfPointerTott__LensDescription(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__LensDescription(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOffloat
#define SOAP_TYPE_std__vectorTemplateOffloat (1093)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOffloat(struct soap*, std::vector<float> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOffloat(struct soap*, const std::vector<float> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOffloat(struct soap*, const char*, int, const std::vector<float> *, const char*);
SOAP_FMAC3 std::vector<float> * SOAP_FMAC4 soap_in_std__vectorTemplateOffloat(struct soap*, const char*, std::vector<float> *, const char*);
SOAP_FMAC1 std::vector<float>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOffloat(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<float>  * soap_new_std__vectorTemplateOffloat(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOffloat(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfint
#define SOAP_TYPE_std__vectorTemplateOfint (1092)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfint(struct soap*, std::vector<int> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfint(struct soap*, const std::vector<int> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfint(struct soap*, const char*, int, const std::vector<int> *, const char*);
SOAP_FMAC3 std::vector<int> * SOAP_FMAC4 soap_in_std__vectorTemplateOfint(struct soap*, const char*, std::vector<int> *, const char*);
SOAP_FMAC1 std::vector<int>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfint(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<int>  * soap_new_std__vectorTemplateOfint(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfint(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__LocationEntity
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__LocationEntity (1090)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__LocationEntity(struct soap*, std::vector<tt__LocationEntity *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__LocationEntity(struct soap*, const std::vector<tt__LocationEntity *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__LocationEntity(struct soap*, const char*, int, const std::vector<tt__LocationEntity *> *, const char*);
SOAP_FMAC3 std::vector<tt__LocationEntity *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__LocationEntity(struct soap*, const char*, std::vector<tt__LocationEntity *> *, const char*);
SOAP_FMAC1 std::vector<tt__LocationEntity *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__LocationEntity(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__LocationEntity *>  * soap_new_std__vectorTemplateOfPointerTott__LocationEntity(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__LocationEntity(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTotds__StorageConfiguration
#define SOAP_TYPE_std__vectorTemplateOfPointerTotds__StorageConfiguration (1087)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTotds__StorageConfiguration(struct soap*, std::vector<tds__StorageConfiguration *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTotds__StorageConfiguration(struct soap*, const std::vector<tds__StorageConfiguration *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTotds__StorageConfiguration(struct soap*, const char*, int, const std::vector<tds__StorageConfiguration *> *, const char*);
SOAP_FMAC3 std::vector<tds__StorageConfiguration *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTotds__StorageConfiguration(struct soap*, const char*, std::vector<tds__StorageConfiguration *> *, const char*);
SOAP_FMAC1 std::vector<tds__StorageConfiguration *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTotds__StorageConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tds__StorageConfiguration *>  * soap_new_std__vectorTemplateOfPointerTotds__StorageConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTotds__StorageConfiguration(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Dot11AvailableNetworks
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Dot11AvailableNetworks (1082)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Dot11AvailableNetworks(struct soap*, std::vector<tt__Dot11AvailableNetworks *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Dot11AvailableNetworks(struct soap*, const std::vector<tt__Dot11AvailableNetworks *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Dot11AvailableNetworks(struct soap*, const char*, int, const std::vector<tt__Dot11AvailableNetworks *> *, const char*);
SOAP_FMAC3 std::vector<tt__Dot11AvailableNetworks *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Dot11AvailableNetworks(struct soap*, const char*, std::vector<tt__Dot11AvailableNetworks *> *, const char*);
SOAP_FMAC1 std::vector<tt__Dot11AvailableNetworks *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Dot11AvailableNetworks(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Dot11AvailableNetworks *>  * soap_new_std__vectorTemplateOfPointerTott__Dot11AvailableNetworks(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Dot11AvailableNetworks(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__RelayOutput
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__RelayOutput (1076)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__RelayOutput(struct soap*, std::vector<tt__RelayOutput *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__RelayOutput(struct soap*, const std::vector<tt__RelayOutput *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__RelayOutput(struct soap*, const char*, int, const std::vector<tt__RelayOutput *> *, const char*);
SOAP_FMAC3 std::vector<tt__RelayOutput *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__RelayOutput(struct soap*, const char*, std::vector<tt__RelayOutput *> *, const char*);
SOAP_FMAC1 std::vector<tt__RelayOutput *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__RelayOutput(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__RelayOutput *>  * soap_new_std__vectorTemplateOfPointerTott__RelayOutput(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__RelayOutput(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Dot1XConfiguration
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Dot1XConfiguration (1075)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Dot1XConfiguration(struct soap*, std::vector<tt__Dot1XConfiguration *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Dot1XConfiguration(struct soap*, const std::vector<tt__Dot1XConfiguration *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Dot1XConfiguration(struct soap*, const char*, int, const std::vector<tt__Dot1XConfiguration *> *, const char*);
SOAP_FMAC3 std::vector<tt__Dot1XConfiguration *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Dot1XConfiguration(struct soap*, const char*, std::vector<tt__Dot1XConfiguration *> *, const char*);
SOAP_FMAC1 std::vector<tt__Dot1XConfiguration *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Dot1XConfiguration(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Dot1XConfiguration *>  * soap_new_std__vectorTemplateOfPointerTott__Dot1XConfiguration(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Dot1XConfiguration(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__CertificateWithPrivateKey
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__CertificateWithPrivateKey (1072)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__CertificateWithPrivateKey(struct soap*, std::vector<tt__CertificateWithPrivateKey *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__CertificateWithPrivateKey(struct soap*, const std::vector<tt__CertificateWithPrivateKey *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__CertificateWithPrivateKey(struct soap*, const char*, int, const std::vector<tt__CertificateWithPrivateKey *> *, const char*);
SOAP_FMAC3 std::vector<tt__CertificateWithPrivateKey *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__CertificateWithPrivateKey(struct soap*, const char*, std::vector<tt__CertificateWithPrivateKey *> *, const char*);
SOAP_FMAC1 std::vector<tt__CertificateWithPrivateKey *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__CertificateWithPrivateKey(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__CertificateWithPrivateKey *>  * soap_new_std__vectorTemplateOfPointerTott__CertificateWithPrivateKey(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__CertificateWithPrivateKey(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__CertificateStatus
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__CertificateStatus (1070)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__CertificateStatus(struct soap*, std::vector<tt__CertificateStatus *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__CertificateStatus(struct soap*, const std::vector<tt__CertificateStatus *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__CertificateStatus(struct soap*, const char*, int, const std::vector<tt__CertificateStatus *> *, const char*);
SOAP_FMAC3 std::vector<tt__CertificateStatus *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__CertificateStatus(struct soap*, const char*, std::vector<tt__CertificateStatus *> *, const char*);
SOAP_FMAC1 std::vector<tt__CertificateStatus *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__CertificateStatus(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__CertificateStatus *>  * soap_new_std__vectorTemplateOfPointerTott__CertificateStatus(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__CertificateStatus(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Certificate
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Certificate (1068)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Certificate(struct soap*, std::vector<tt__Certificate *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Certificate(struct soap*, const std::vector<tt__Certificate *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Certificate(struct soap*, const char*, int, const std::vector<tt__Certificate *> *, const char*);
SOAP_FMAC3 std::vector<tt__Certificate *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Certificate(struct soap*, const char*, std::vector<tt__Certificate *> *, const char*);
SOAP_FMAC1 std::vector<tt__Certificate *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Certificate(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Certificate *>  * soap_new_std__vectorTemplateOfPointerTott__Certificate(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Certificate(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOftt__IPv6Address
#define SOAP_TYPE_std__vectorTemplateOftt__IPv6Address (1060)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__IPv6Address(struct soap*, std::vector<std::string> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__IPv6Address(struct soap*, const std::vector<std::string> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__IPv6Address(struct soap*, const char*, int, const std::vector<std::string> *, const char*);
SOAP_FMAC3 std::vector<std::string> * SOAP_FMAC4 soap_in_std__vectorTemplateOftt__IPv6Address(struct soap*, const char*, std::vector<std::string> *, const char*);
SOAP_FMAC1 std::vector<std::string>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__IPv6Address(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<std::string>  * soap_new_std__vectorTemplateOftt__IPv6Address(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__IPv6Address(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOftt__IPv4Address
#define SOAP_TYPE_std__vectorTemplateOftt__IPv4Address (1059)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__IPv4Address(struct soap*, std::vector<std::string> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__IPv4Address(struct soap*, const std::vector<std::string> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__IPv4Address(struct soap*, const char*, int, const std::vector<std::string> *, const char*);
SOAP_FMAC3 std::vector<std::string> * SOAP_FMAC4 soap_in_std__vectorTemplateOftt__IPv4Address(struct soap*, const char*, std::vector<std::string> *, const char*);
SOAP_FMAC1 std::vector<std::string>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__IPv4Address(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<std::string>  * soap_new_std__vectorTemplateOftt__IPv4Address(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__IPv4Address(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__NetworkProtocol
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__NetworkProtocol (1057)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__NetworkProtocol(struct soap*, std::vector<tt__NetworkProtocol *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__NetworkProtocol(struct soap*, const std::vector<tt__NetworkProtocol *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__NetworkProtocol(struct soap*, const char*, int, const std::vector<tt__NetworkProtocol *> *, const char*);
SOAP_FMAC3 std::vector<tt__NetworkProtocol *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__NetworkProtocol(struct soap*, const char*, std::vector<tt__NetworkProtocol *> *, const char*);
SOAP_FMAC1 std::vector<tt__NetworkProtocol *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__NetworkProtocol(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__NetworkProtocol *>  * soap_new_std__vectorTemplateOfPointerTott__NetworkProtocol(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__NetworkProtocol(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__NetworkInterface
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__NetworkInterface (1054)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__NetworkInterface(struct soap*, std::vector<tt__NetworkInterface *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__NetworkInterface(struct soap*, const std::vector<tt__NetworkInterface *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__NetworkInterface(struct soap*, const char*, int, const std::vector<tt__NetworkInterface *> *, const char*);
SOAP_FMAC3 std::vector<tt__NetworkInterface *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__NetworkInterface(struct soap*, const char*, std::vector<tt__NetworkInterface *> *, const char*);
SOAP_FMAC1 std::vector<tt__NetworkInterface *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__NetworkInterface(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__NetworkInterface *>  * soap_new_std__vectorTemplateOfPointerTott__NetworkInterface(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__NetworkInterface(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__IPAddress
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__IPAddress (1049)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__IPAddress(struct soap*, std::vector<tt__IPAddress *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__IPAddress(struct soap*, const std::vector<tt__IPAddress *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__IPAddress(struct soap*, const char*, int, const std::vector<tt__IPAddress *> *, const char*);
SOAP_FMAC3 std::vector<tt__IPAddress *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__IPAddress(struct soap*, const char*, std::vector<tt__IPAddress *> *, const char*);
SOAP_FMAC1 std::vector<tt__IPAddress *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__IPAddress(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__IPAddress *>  * soap_new_std__vectorTemplateOfPointerTott__IPAddress(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__IPAddress(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfxsd__token
#define SOAP_TYPE_std__vectorTemplateOfxsd__token (1047)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfxsd__token(struct soap*, std::vector<std::string> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfxsd__token(struct soap*, const std::vector<std::string> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfxsd__token(struct soap*, const char*, int, const std::vector<std::string> *, const char*);
SOAP_FMAC3 std::vector<std::string> * SOAP_FMAC4 soap_in_std__vectorTemplateOfxsd__token(struct soap*, const char*, std::vector<std::string> *, const char*);
SOAP_FMAC1 std::vector<std::string>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfxsd__token(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<std::string>  * soap_new_std__vectorTemplateOfxsd__token(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfxsd__token(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOftt__CapabilityCategory
#define SOAP_TYPE_std__vectorTemplateOftt__CapabilityCategory (1043)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__CapabilityCategory(struct soap*, std::vector<enum tt__CapabilityCategory> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__CapabilityCategory(struct soap*, const std::vector<enum tt__CapabilityCategory> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__CapabilityCategory(struct soap*, const char*, int, const std::vector<enum tt__CapabilityCategory> *, const char*);
SOAP_FMAC3 std::vector<enum tt__CapabilityCategory> * SOAP_FMAC4 soap_in_std__vectorTemplateOftt__CapabilityCategory(struct soap*, const char*, std::vector<enum tt__CapabilityCategory> *, const char*);
SOAP_FMAC1 std::vector<enum tt__CapabilityCategory>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__CapabilityCategory(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__CapabilityCategory>  * soap_new_std__vectorTemplateOftt__CapabilityCategory(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__CapabilityCategory(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfstd__string
#define SOAP_TYPE_std__vectorTemplateOfstd__string (1042)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfstd__string(struct soap*, std::vector<std::string> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfstd__string(struct soap*, const std::vector<std::string> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfstd__string(struct soap*, const char*, int, const std::vector<std::string> *, const char*);
SOAP_FMAC3 std::vector<std::string> * SOAP_FMAC4 soap_in_std__vectorTemplateOfstd__string(struct soap*, const char*, std::vector<std::string> *, const char*);
SOAP_FMAC1 std::vector<std::string>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfstd__string(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<std::string>  * soap_new_std__vectorTemplateOfstd__string(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfstd__string(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__User
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__User (1041)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__User(struct soap*, std::vector<tt__User *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__User(struct soap*, const std::vector<tt__User *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__User(struct soap*, const char*, int, const std::vector<tt__User *> *, const char*);
SOAP_FMAC3 std::vector<tt__User *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__User(struct soap*, const char*, std::vector<tt__User *> *, const char*);
SOAP_FMAC1 std::vector<tt__User *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__User(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__User *>  * soap_new_std__vectorTemplateOfPointerTott__User(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__User(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__NetworkHost
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__NetworkHost (1038)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__NetworkHost(struct soap*, std::vector<tt__NetworkHost *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__NetworkHost(struct soap*, const std::vector<tt__NetworkHost *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__NetworkHost(struct soap*, const char*, int, const std::vector<tt__NetworkHost *> *, const char*);
SOAP_FMAC3 std::vector<tt__NetworkHost *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__NetworkHost(struct soap*, const char*, std::vector<tt__NetworkHost *> *, const char*);
SOAP_FMAC1 std::vector<tt__NetworkHost *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__NetworkHost(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__NetworkHost *>  * soap_new_std__vectorTemplateOfPointerTott__NetworkHost(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__NetworkHost(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfxsd__anyURI
#define SOAP_TYPE_std__vectorTemplateOfxsd__anyURI (1036)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfxsd__anyURI(struct soap*, std::vector<std::string> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfxsd__anyURI(struct soap*, const std::vector<std::string> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfxsd__anyURI(struct soap*, const char*, int, const std::vector<std::string> *, const char*);
SOAP_FMAC3 std::vector<std::string> * SOAP_FMAC4 soap_in_std__vectorTemplateOfxsd__anyURI(struct soap*, const char*, std::vector<std::string> *, const char*);
SOAP_FMAC1 std::vector<std::string>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfxsd__anyURI(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<std::string>  * soap_new_std__vectorTemplateOfxsd__anyURI(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfxsd__anyURI(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__Scope
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__Scope (1035)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__Scope(struct soap*, std::vector<tt__Scope *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__Scope(struct soap*, const std::vector<tt__Scope *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__Scope(struct soap*, const char*, int, const std::vector<tt__Scope *> *, const char*);
SOAP_FMAC3 std::vector<tt__Scope *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__Scope(struct soap*, const char*, std::vector<tt__Scope *> *, const char*);
SOAP_FMAC1 std::vector<tt__Scope *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__Scope(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__Scope *>  * soap_new_std__vectorTemplateOfPointerTott__Scope(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__Scope(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__BackupFile
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__BackupFile (1031)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__BackupFile(struct soap*, std::vector<tt__BackupFile *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__BackupFile(struct soap*, const std::vector<tt__BackupFile *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__BackupFile(struct soap*, const char*, int, const std::vector<tt__BackupFile *> *, const char*);
SOAP_FMAC3 std::vector<tt__BackupFile *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__BackupFile(struct soap*, const char*, std::vector<tt__BackupFile *> *, const char*);
SOAP_FMAC1 std::vector<tt__BackupFile *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__BackupFile(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__BackupFile *>  * soap_new_std__vectorTemplateOfPointerTott__BackupFile(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__BackupFile(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTotds__Service
#define SOAP_TYPE_std__vectorTemplateOfPointerTotds__Service (1024)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTotds__Service(struct soap*, std::vector<tds__Service *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTotds__Service(struct soap*, const std::vector<tds__Service *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTotds__Service(struct soap*, const char*, int, const std::vector<tds__Service *> *, const char*);
SOAP_FMAC3 std::vector<tds__Service *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTotds__Service(struct soap*, const char*, std::vector<tds__Service *> *, const char*);
SOAP_FMAC1 std::vector<tds__Service *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTotds__Service(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tds__Service *>  * soap_new_std__vectorTemplateOfPointerTotds__Service(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTotds__Service(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTotmd__SerialPort
#define SOAP_TYPE_std__vectorTemplateOfPointerTotmd__SerialPort (1002)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTotmd__SerialPort(struct soap*, std::vector<tmd__SerialPort *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTotmd__SerialPort(struct soap*, const std::vector<tmd__SerialPort *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTotmd__SerialPort(struct soap*, const char*, int, const std::vector<tmd__SerialPort *> *, const char*);
SOAP_FMAC3 std::vector<tmd__SerialPort *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTotmd__SerialPort(struct soap*, const char*, std::vector<tmd__SerialPort *> *, const char*);
SOAP_FMAC1 std::vector<tmd__SerialPort *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTotmd__SerialPort(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tmd__SerialPort *>  * soap_new_std__vectorTemplateOfPointerTotmd__SerialPort(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTotmd__SerialPort(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__DigitalInput
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__DigitalInput (999)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__DigitalInput(struct soap*, std::vector<tt__DigitalInput *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__DigitalInput(struct soap*, const std::vector<tt__DigitalInput *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__DigitalInput(struct soap*, const char*, int, const std::vector<tt__DigitalInput *> *, const char*);
SOAP_FMAC3 std::vector<tt__DigitalInput *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__DigitalInput(struct soap*, const char*, std::vector<tt__DigitalInput *> *, const char*);
SOAP_FMAC1 std::vector<tt__DigitalInput *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__DigitalInput(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__DigitalInput *>  * soap_new_std__vectorTemplateOfPointerTott__DigitalInput(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__DigitalInput(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTott__VideoOutput
#define SOAP_TYPE_std__vectorTemplateOfPointerTott__VideoOutput (988)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTott__VideoOutput(struct soap*, std::vector<tt__VideoOutput *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTott__VideoOutput(struct soap*, const std::vector<tt__VideoOutput *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTott__VideoOutput(struct soap*, const char*, int, const std::vector<tt__VideoOutput *> *, const char*);
SOAP_FMAC3 std::vector<tt__VideoOutput *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTott__VideoOutput(struct soap*, const char*, std::vector<tt__VideoOutput *> *, const char*);
SOAP_FMAC1 std::vector<tt__VideoOutput *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTott__VideoOutput(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tt__VideoOutput *>  * soap_new_std__vectorTemplateOfPointerTott__VideoOutput(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTott__VideoOutput(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTotmd__RelayOutputOptions
#define SOAP_TYPE_std__vectorTemplateOfPointerTotmd__RelayOutputOptions (986)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTotmd__RelayOutputOptions(struct soap*, std::vector<tmd__RelayOutputOptions *> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTotmd__RelayOutputOptions(struct soap*, const std::vector<tmd__RelayOutputOptions *> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTotmd__RelayOutputOptions(struct soap*, const char*, int, const std::vector<tmd__RelayOutputOptions *> *, const char*);
SOAP_FMAC3 std::vector<tmd__RelayOutputOptions *> * SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTotmd__RelayOutputOptions(struct soap*, const char*, std::vector<tmd__RelayOutputOptions *> *, const char*);
SOAP_FMAC1 std::vector<tmd__RelayOutputOptions *>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTotmd__RelayOutputOptions(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<tmd__RelayOutputOptions *>  * soap_new_std__vectorTemplateOfPointerTotmd__RelayOutputOptions(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTotmd__RelayOutputOptions(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOftmd__ParityBit
#define SOAP_TYPE_std__vectorTemplateOftmd__ParityBit (982)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftmd__ParityBit(struct soap*, std::vector<enum tmd__ParityBit> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftmd__ParityBit(struct soap*, const std::vector<enum tmd__ParityBit> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftmd__ParityBit(struct soap*, const char*, int, const std::vector<enum tmd__ParityBit> *, const char*);
SOAP_FMAC3 std::vector<enum tmd__ParityBit> * SOAP_FMAC4 soap_in_std__vectorTemplateOftmd__ParityBit(struct soap*, const char*, std::vector<enum tmd__ParityBit> *, const char*);
SOAP_FMAC1 std::vector<enum tmd__ParityBit>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftmd__ParityBit(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tmd__ParityBit>  * soap_new_std__vectorTemplateOftmd__ParityBit(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftmd__ParityBit(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOftt__DigitalIdleState
#define SOAP_TYPE_std__vectorTemplateOftt__DigitalIdleState (974)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__DigitalIdleState(struct soap*, std::vector<enum tt__DigitalIdleState> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__DigitalIdleState(struct soap*, const std::vector<enum tt__DigitalIdleState> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__DigitalIdleState(struct soap*, const char*, int, const std::vector<enum tt__DigitalIdleState> *, const char*);
SOAP_FMAC3 std::vector<enum tt__DigitalIdleState> * SOAP_FMAC4 soap_in_std__vectorTemplateOftt__DigitalIdleState(struct soap*, const char*, std::vector<enum tt__DigitalIdleState> *, const char*);
SOAP_FMAC1 std::vector<enum tt__DigitalIdleState>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__DigitalIdleState(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__DigitalIdleState>  * soap_new_std__vectorTemplateOftt__DigitalIdleState(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__DigitalIdleState(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOftt__ReferenceToken
#define SOAP_TYPE_std__vectorTemplateOftt__ReferenceToken (973)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__ReferenceToken(struct soap*, std::vector<std::string> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__ReferenceToken(struct soap*, const std::vector<std::string> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__ReferenceToken(struct soap*, const char*, int, const std::vector<std::string> *, const char*);
SOAP_FMAC3 std::vector<std::string> * SOAP_FMAC4 soap_in_std__vectorTemplateOftt__ReferenceToken(struct soap*, const char*, std::vector<std::string> *, const char*);
SOAP_FMAC1 std::vector<std::string>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__ReferenceToken(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<std::string>  * soap_new_std__vectorTemplateOftt__ReferenceToken(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__ReferenceToken(soap, n, NULL, NULL, NULL); }

#ifndef SOAP_TYPE_std__vectorTemplateOftt__RelayMode
#define SOAP_TYPE_std__vectorTemplateOftt__RelayMode (969)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOftt__RelayMode(struct soap*, std::vector<enum tt__RelayMode> *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOftt__RelayMode(struct soap*, const std::vector<enum tt__RelayMode> *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOftt__RelayMode(struct soap*, const char*, int, const std::vector<enum tt__RelayMode> *, const char*);
SOAP_FMAC3 std::vector<enum tt__RelayMode> * SOAP_FMAC4 soap_in_std__vectorTemplateOftt__RelayMode(struct soap*, const char*, std::vector<enum tt__RelayMode> *, const char*);
SOAP_FMAC1 std::vector<enum tt__RelayMode>  * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOftt__RelayMode(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<enum tt__RelayMode>  * soap_new_std__vectorTemplateOftt__RelayMode(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOftt__RelayMode(soap, n, NULL, NULL, NULL); }

#endif

/* End of soapH.h */
